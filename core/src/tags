!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
ACTIVE	impl/Kokkos_Spinwait.hpp	/^  ACTIVE  \/\/ Used for tight loops to keep threads active longest$/;"	e	enum:Kokkos::Impl::WaitMode
ALIGN	Kokkos_ScratchSpace.hpp	/^  enum { ALIGN = 8 };$/;"	e	enum:Kokkos::ScratchMemorySpace::__anon170bcf000103
ALIGN_MASK	Threads/Kokkos_ThreadsExec.cpp	/^  enum { ALIGN_MASK = Kokkos::Impl::MEMORY_ALIGNMENT - 1 };$/;"	e	enum:Kokkos::Impl::ThreadsExec::resize_scratch::__anon54e346b10403	file:
ALL	Kokkos_View.hpp	/^constexpr Kokkos::Impl::ALL_t ALL = Kokkos::Impl::ALL_t();$/;"	v	namespace:Kokkos::__anon8559ec870810	typeref:typename:Kokkos::Impl::ALL_t
ALL_t	impl/Kokkos_ViewMapping.hpp	/^struct ALL_t {$/;"	s	namespace:Kokkos::Impl
APPLY	impl/KokkosExp_Host_IterateTile.hpp	/^#define APPLY(/;"	d
APPLY_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define APPLY_REDUX(/;"	d
ARRAY_LAYOUT_MAX_RANK	Kokkos_Layout.hpp	/^enum { ARRAY_LAYOUT_MAX_RANK = 8 };$/;"	e	enum:Kokkos::__anon2adfd90a0103
AUTO	Kokkos_Core_fwd.hpp	/^constexpr AUTO_t AUTO = Kokkos::AUTO_t();$/;"	v	namespace:Kokkos::__anon721bd4950110	typeref:typename:AUTO_t
AUTO_t	Kokkos_Core_fwd.hpp	/^struct AUTO_t {$/;"	s	namespace:Kokkos
AcquireTeamUniqueToken	Kokkos_AcquireUniqueTokenImpl.hpp	/^KOKKOS_FUNCTION AcquireTeamUniqueToken<TeamPolicy>::AcquireTeamUniqueToken($/;"	f	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:KOKKOS_FUNCTION
AcquireTeamUniqueToken	Kokkos_UniqueToken.hpp	/^class AcquireTeamUniqueToken {$/;"	c	namespace:Kokkos::Experimental
AcquireUniqueToken	Kokkos_UniqueToken.hpp	/^  KOKKOS_FUNCTION AcquireUniqueToken(token_type t)$/;"	f	class:Kokkos::Experimental::AcquireUniqueToken	typeref:typename:KOKKOS_FUNCTION
AcquireUniqueToken	Kokkos_UniqueToken.hpp	/^class AcquireUniqueToken {$/;"	c	namespace:Kokkos::Experimental
Active	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { Active = 0, Rendezvous = 1 };$/;"	e	enum:Kokkos::Impl::OpenMPTargetExecTeamMember::__anon265123eb0403
Active	Threads/Kokkos_ThreadsExec.hpp	/^    Active  \/\/\/<  Exists, performing work$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60403
ActiveExecutionMemorySpace	Kokkos_Core_fwd.hpp	/^using ActiveExecutionMemorySpace KOKKOS_DEPRECATED = Kokkos::CudaSpace;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::CudaSpace
ActiveExecutionMemorySpace	Kokkos_Core_fwd.hpp	/^using ActiveExecutionMemorySpace KOKKOS_DEPRECATED = Kokkos::HostSpace;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::HostSpace
ActiveExecutionMemorySpace	Kokkos_Core_fwd.hpp	/^using ActiveExecutionMemorySpace KOKKOS_DEPRECATED = void;$/;"	t	namespace:Kokkos::Impl	typeref:typename:void
ActiveExecutionMemorySpace	Kokkos_Core_fwd.hpp	/^using ActiveExecutionMemorySpace KOKKOS_DEPRECATED =$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::Experimental::HIPSpace
ActiveExecutionMemorySpace	Kokkos_Core_fwd.hpp	/^using ActiveExecutionMemorySpace KOKKOS_DEPRECATED =$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::Experimental::SYCLDeviceUSMSpace
AddOper	impl/Kokkos_Atomic_Generic.hpp	/^struct AddOper {$/;"	s	namespace:Kokkos::Impl
Aggregate	impl/Kokkos_TaskBase.hpp	/^  enum : int16_t { TaskTeam = 0, TaskSingle = 1, Aggregate = 2 };$/;"	e	enum:Kokkos::Impl::TaskBase::__anonf4e6889b0103
Aggregate	impl/Kokkos_TaskNode.hpp	/^  Aggregate   = 2,$/;"	e	enum:Kokkos::Impl::TaskType
AggregateTask	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr explicit AggregateTask($/;"	f	class:Kokkos::Impl::AggregateTask	typeref:typename:KOKKOS_INLINE_FUNCTION 
AggregateTask	impl/Kokkos_TaskNode.hpp	/^class alignas(16) AggregateTask final$/;"	c	namespace:Kokkos::Impl
Aligned	Kokkos_MemoryTraits.hpp	/^  Aligned      = 0x10$/;"	e	enum:Kokkos::MemoryTraitsFlags
AllocationMechanism	Kokkos_HBWSpace.hpp	/^  enum AllocationMechanism {$/;"	g	class:Kokkos::Experimental::HBWSpace
AllocationMechanism	Kokkos_HostSpace.hpp	/^  enum AllocationMechanism {$/;"	g	class:Kokkos::HostSpace
AllocationMechanism	impl/Kokkos_Error.hpp	/^  enum class AllocationMechanism {$/;"	g	class:Kokkos::Experimental::RawMemoryAllocationFailure
AllocationNotAligned	impl/Kokkos_Error.hpp	/^    AllocationNotAligned,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::FailureMode
AllocationSpace	SYCL/Kokkos_SYCL_Instance.hpp	/^    using AllocationSpace = std::conditional_t<$/;"	t	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem
AllowPadding	Kokkos_View.hpp	/^constexpr Kokkos::Impl::AllowPadding_t AllowPadding =$/;"	v	namespace:Kokkos::__anon8559ec870810	typeref:typename:Kokkos::Impl::AllowPadding_t
AllowPadding_t	impl/Kokkos_ViewCtor.hpp	/^struct AllowPadding_t {};$/;"	s	namespace:Kokkos::Impl
Analysis	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Analysis = Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::SCAN,$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Analysis = Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::SCAN,$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using Analysis =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_common	typeref:typename:Impl::FunctorAnalysis<Interface,typename ClosureType::Policy,FunctorType>
Analysis	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using Analysis =$/;"	t	function:Kokkos::Impl::cuda_single_inter_block_reduce_scan_shmem	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,RangePolicy<Cuda,ArgTag>,FunctorType>
Analysis	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using Analysis =$/;"	t	namespace:Kokkos::Impl	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,RangePolicy<Cuda,ArgTag>,FunctorType>
Analysis	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Analysis = Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::SCAN,$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using Analysis =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_common_reduce	typeref:typename:Impl::FunctorAnalysis<Interface,typename ClosureType::Policy,FunctorType>
Analysis	HIP/Kokkos_HIP_ReduceScan.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,$/;"	t	namespace:Kokkos::Impl	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,RangePolicy<Experimental::HIP,ArgTag>,FunctorType>
Analysis	HIP/Kokkos_HIP_ReduceScan.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,$/;"	t	function:Kokkos::Impl::hip_single_inter_block_reduce_scan_shmem	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,RangePolicy<Experimental::HIP,ArgTag>,FunctorType>
Analysis	Kokkos_HPX.hpp	/^  using Analysis       = FunctorAnalysis<FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,MDRangePolicy,ReducerTypeFwd>
Analysis	Kokkos_HPX.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	Kokkos_HPX.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	Kokkos_HPX.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Analysis = FunctorAnalysis<FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,MDRangePolicy,ReducerTypeFwd>
Analysis	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using Analysis   = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,TeamPolicy<Experimental::OpenMPTarget>,FunctorType>
Analysis	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,$/;"	t	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,PolicyType,ReducerTypeFwd>
Analysis	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^    using Analysis        = FunctorAnalysis<FunctorPatternInterface::REDUCE,$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_max_reduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,TeamPolicyInternal,FunctorType>
Analysis	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using Analysis = FunctorAnalysis<FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,MDRangePolicy,ReducerTypeFwd>
Analysis	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:FunctorAnalysis<FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using Analysis =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorAnalysis<FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,MDRangePolicy,ReducerTypeFwd>
Analysis	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Analysis  = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
Analysis	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,Policy,FunctorType>
Analysis	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using Analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,Policy,ReducerTypeFwd>
AnalyzeExecPolicy	impl/Kokkos_AnalyzePolicy.hpp	/^  AnalyzeExecPolicy(ExecPolicyTraitsWithDefaults<Other> const&) {}$/;"	f	struct:Kokkos::Impl::AnalyzeExecPolicy
AnalyzeExecPolicy	impl/Kokkos_AnalyzePolicy.hpp	/^struct AnalyzeExecPolicy$/;"	s	namespace:Kokkos::Impl
AnalyzeExecPolicy	impl/Kokkos_AnalyzePolicy.hpp	/^struct AnalyzeExecPolicy<void, void, Traits...>$/;"	s	namespace:Kokkos::Impl
AnalyzeExecPolicy	impl/Kokkos_AnalyzePolicy.hpp	/^struct AnalyzeExecPolicy<void>$/;"	s	namespace:Kokkos::Impl
AnalyzeExecPolicyBaseTraits	impl/Kokkos_AnalyzePolicy.hpp	/^    AnalyzeExecPolicyBaseTraits<type_list<TraitSpecifications...>>$/;"	v	namespace:Kokkos::Impl	typeref:struct:KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION
AnalyzeExecPolicyBaseTraits	impl/Kokkos_AnalyzePolicy.hpp	/^struct KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION AnalyzeExecPolicyBaseTraits;$/;"	v	namespace:Kokkos::Impl	typeref:struct:KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION
AnalyzeExecPolicyUseMatcher	impl/Kokkos_AnalyzePolicy.hpp	/^struct AnalyzeExecPolicyUseMatcher<$/;"	s	namespace:Kokkos::Impl
AndOper	impl/Kokkos_Atomic_Generic.hpp	/^struct AndOper {$/;"	s	namespace:Kokkos::Impl
AnonymousSpace	Kokkos_AnonymousSpace.hpp	/^class AnonymousSpace {$/;"	c	namespace:Kokkos
AppendExtent	Kokkos_Extents.hpp	/^struct AppendExtent<Extents<Exts...>, NewExtent> {$/;"	s	namespace:Kokkos::Experimental
ApplyExtent	Kokkos_Extents.hpp	/^struct ApplyExtent {$/;"	s	namespace:Kokkos::Impl
ApplyExtent	Kokkos_Extents.hpp	/^struct ApplyExtent<ValueType*, Ext> {$/;"	s	namespace:Kokkos::Impl
ApplyExtent	Kokkos_Extents.hpp	/^struct ApplyExtent<ValueType*, Kokkos::Experimental::dynamic_extent> {$/;"	s	namespace:Kokkos::Impl
ApplyExtent	Kokkos_Extents.hpp	/^struct ApplyExtent<ValueType, Kokkos::Experimental::dynamic_extent> {$/;"	s	namespace:Kokkos::Impl
ApplyExtent	Kokkos_Extents.hpp	/^struct ApplyExtent<ValueType[N], Ext> {$/;"	s	namespace:Kokkos::Impl
ApplyExtent	Kokkos_Extents.hpp	/^struct ApplyExtent<ValueType[N], Kokkos::Experimental::dynamic_extent> {$/;"	s	namespace:Kokkos::Impl
Arg1_is_space	Kokkos_Future.hpp	/^  enum { Arg1_is_space = Kokkos::is_space<Arg1>::value };$/;"	e	enum:Kokkos::Impl::ResolveFutureArgOrder::__anon54dea1070103
Arg1_is_value	Kokkos_Future.hpp	/^  enum { Arg1_is_value = !Arg1_is_space && !std::is_void<Arg1>::value };$/;"	e	enum:Kokkos::Impl::ResolveFutureArgOrder::__anon54dea1070303
Arg2_is_space	Kokkos_Future.hpp	/^  enum { Arg2_is_space = Kokkos::is_space<Arg2>::value };$/;"	e	enum:Kokkos::Impl::ResolveFutureArgOrder::__anon54dea1070203
Arg2_is_value	Kokkos_Future.hpp	/^  enum { Arg2_is_value = !Arg2_is_space && !std::is_void<Arg2>::value };$/;"	e	enum:Kokkos::Impl::ResolveFutureArgOrder::__anon54dea1070403
Args	impl/Kokkos_ViewMapping.hpp	/^  enum : size_t { value = variadic_size_t<I - 1, Args...>::value };$/;"	e	enum:Kokkos::Impl::variadic_size_t::__anon421557341503
Array	Kokkos_Array.hpp	/^struct Array {$/;"	s	namespace:Kokkos
Array	Kokkos_Array.hpp	/^struct Array<T, 0, Proxy> {$/;"	s	namespace:Kokkos
Array	Kokkos_Array.hpp	/^struct Array<void, KOKKOS_INVALID_INDEX, void> {$/;"	s	namespace:Kokkos
ArrayBoundsCheck	Kokkos_Array.hpp	/^  constexpr ArrayBoundsCheck(Integral i, size_t N) {$/;"	f	struct:Kokkos::Impl::ArrayBoundsCheck	typeref:typename:KOKKOS_INLINE_FUNCTION 
ArrayBoundsCheck	Kokkos_Array.hpp	/^struct ArrayBoundsCheck<Integral, false> {$/;"	s	namespace:Kokkos::Impl
ArrayBoundsCheck	Kokkos_Array.hpp	/^struct ArrayBoundsCheck<Integral, true> {$/;"	s	namespace:Kokkos::Impl
ArrayLayout	Kokkos_View.hpp	/^  using ArrayLayout =$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::array_layout> typename prop typename ExecutionSpace::array_layout>
ArrayType	Kokkos_Tuners.hpp	/^    using ArrayType = std::array<Kokkos::Tools::Experimental::VariableValue,$/;"	t	function:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem::get_point
Array_N	impl/Kokkos_ViewArray.hpp	/^  enum { Array_N = Traits::value_type::size() };$/;"	e	enum:Kokkos::Impl::__anon883e8ee70503
Array_S	impl/Kokkos_ViewArray.hpp	/^  enum { Array_S = is_contiguous_reference ? Array_N : 1 };$/;"	e	enum:Kokkos::Impl::__anon883e8ee70603
Atomic	Kokkos_MemoryTraits.hpp	/^  Atomic       = 0x04,$/;"	e	enum:Kokkos::MemoryTraitsFlags
AtomicDataElement	impl/Kokkos_Atomic_View.hpp	/^  AtomicDataElement(value_type* ptr_, AtomicViewConstTag) : ptr(ptr_) {}$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION
AtomicDataElement	impl/Kokkos_Atomic_View.hpp	/^class AtomicDataElement {$/;"	c	namespace:Kokkos::Impl
AtomicViewConstTag	impl/Kokkos_Atomic_View.hpp	/^struct AtomicViewConstTag {};$/;"	s	namespace:Kokkos::Impl
AtomicViewDataHandle	impl/Kokkos_Atomic_View.hpp	/^  AtomicViewDataHandle() : ptr(nullptr) {}$/;"	f	class:Kokkos::Impl::AtomicViewDataHandle	typeref:typename:KOKKOS_INLINE_FUNCTION
AtomicViewDataHandle	impl/Kokkos_Atomic_View.hpp	/^  AtomicViewDataHandle(typename ViewTraits::value_type* ptr_) : ptr(ptr_) {}$/;"	f	class:Kokkos::Impl::AtomicViewDataHandle	typeref:typename:KOKKOS_INLINE_FUNCTION
AtomicViewDataHandle	impl/Kokkos_Atomic_View.hpp	/^class AtomicViewDataHandle {$/;"	c	namespace:Kokkos::Impl
AvoidCompilerWarnings	dummy.cpp	/^namespace AvoidCompilerWarnings {$/;"	n	namespace:Kokkos	file:
BAnd	Kokkos_Parallel_Reduce.hpp	/^  BAnd(const result_view_type& value_)$/;"	f	struct:Kokkos::BAnd	typeref:typename:KOKKOS_INLINE_FUNCTION
BAnd	Kokkos_Parallel_Reduce.hpp	/^  BAnd(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::BAnd	typeref:typename:KOKKOS_INLINE_FUNCTION
BAnd	Kokkos_Parallel_Reduce.hpp	/^struct BAnd {$/;"	s	namespace:Kokkos
BEGIN_TOKEN	Kokkos_WorkGraphPolicy.hpp	/^    BEGIN_TOKEN     = -2,$/;"	e	enum:Kokkos::WorkGraphPolicy::__anoneaecfe710103
BOr	Kokkos_Parallel_Reduce.hpp	/^  BOr(const result_view_type& value_)$/;"	f	struct:Kokkos::BOr	typeref:typename:KOKKOS_INLINE_FUNCTION
BOr	Kokkos_Parallel_Reduce.hpp	/^  BOr(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::BOr	typeref:typename:KOKKOS_INLINE_FUNCTION
BOr	Kokkos_Parallel_Reduce.hpp	/^struct BOr {$/;"	s	namespace:Kokkos
BarePolicy	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    BarePolicy(const Policy& policy)$/;"	f	struct:Kokkos::Impl::ParallelFor::BarePolicy
BarePolicy	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  const struct BarePolicy {$/;"	s	class:Kokkos::Impl::ParallelFor
BarePolicy	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    BarePolicy(const Policy& policy)$/;"	f	struct:Kokkos::Impl::ParallelReduce::BarePolicy
BarePolicy	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  struct BarePolicy {$/;"	s	class:Kokkos::Impl::ParallelReduce
Base	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Base = ParallelScanHIPBase<FunctorType, Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:ParallelScanHIPBase<FunctorType,Traits...>
Base	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Base = ParallelScanHIPBase<FunctorType, Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ParallelScanHIPBase<FunctorType,Traits...>
Base	Kokkos_Serial.hpp	/^  using Base = ZeroMemset<DefaultHostExecutionSpace, DT, DP...>;$/;"	t	struct:Kokkos::Impl::DP	typeref:typename:ZeroMemset<DefaultHostExecutionSpace,DT,DP...>
Base	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using Base = ParallelScanSYCLBase<FunctorType, Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:ParallelScanSYCLBase<FunctorType,Traits...>
Base	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using Base = ParallelScanSYCLBase<FunctorType, Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ParallelScanSYCLBase<FunctorType,Traits...>
BasicFuture	Kokkos_Future.hpp	/^  BasicFuture() noexcept : m_task(nullptr) {}$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicFuture	Kokkos_Future.hpp	/^  BasicFuture(BasicFuture&& rhs) noexcept : m_task(rhs.m_task) {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicFuture	Kokkos_Future.hpp	/^  BasicFuture(const BasicFuture& rhs) : m_task(nullptr) {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicFuture	Kokkos_Future.hpp	/^  KOKKOS_INLINE_FUNCTION BasicFuture($/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicFuture	Kokkos_Future.hpp	/^  KOKKOS_INLINE_FUNCTION explicit BasicFuture(task_base* task)$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicFuture	Kokkos_Future.hpp	/^class BasicFuture {$/;"	c	namespace:Kokkos
BasicTaskScheduler	Kokkos_TaskScheduler.hpp	/^  BasicTaskScheduler() : m_track(), m_queue(nullptr) {}$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicTaskScheduler	Kokkos_TaskScheduler.hpp	/^  BasicTaskScheduler(BasicTaskScheduler const& rhs)$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicTaskScheduler	Kokkos_TaskScheduler.hpp	/^  BasicTaskScheduler(BasicTaskScheduler&& rhs) noexcept$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicTaskScheduler	Kokkos_TaskScheduler.hpp	/^  BasicTaskScheduler(memory_space const& arg_memory_space,$/;"	f	class:Kokkos::BasicTaskScheduler
BasicTaskScheduler	Kokkos_TaskScheduler.hpp	/^  BasicTaskScheduler(track_type arg_track, queue_type* arg_queue)$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION
BasicTaskScheduler	Kokkos_TaskScheduler.hpp	/^  explicit BasicTaskScheduler(memory_pool const& arg_memory_pool) noexcept$/;"	f	class:Kokkos::BasicTaskScheduler
BasicTaskScheduler	Kokkos_TaskScheduler.hpp	/^class BasicTaskScheduler : public Impl::TaskSchedulerBase {$/;"	c	namespace:Kokkos
Block	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  struct alignas(Align) Block {$/;"	s	class:Kokkos::Impl::FixedBlockSizeMemoryPool
BlockType	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^enum class BlockType { Max, Preferred };$/;"	g	namespace:Kokkos::Experimental::Impl
BlockType	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using BlockType = Kokkos::Experimental::Impl::BlockType;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Experimental::Impl::BlockType
CANDIDATE_ROOT_TYPE_COUNT	impl/Kokkos_hwloc.cpp	/^      CANDIDATE_ROOT_TYPE_COUNT =$/;"	e	enum:Kokkos::hwloc::__anonec54cfc50110::Sentinel::Sentinel::__anonec54cfc50303	file:
CB	Kokkos_MemoryPool.hpp	/^  using CB = Kokkos::Impl::concurrent_bitset;$/;"	t	class:Kokkos::MemoryPool	typeref:typename:Kokkos::Impl::concurrent_bitset
COMPLETED_TOKEN	Kokkos_WorkGraphPolicy.hpp	/^    COMPLETED_TOKEN = -3$/;"	e	enum:Kokkos::WorkGraphPolicy::__anoneaecfe710103
CUDA_SAFE_CALL	Cuda/Kokkos_Cuda_Error.hpp	/^#define CUDA_SAFE_CALL(/;"	d
CUDA_SPACE_ATOMIC_MASK	Cuda/Kokkos_Cuda_Locks.hpp	/^#define CUDA_SPACE_ATOMIC_MASK /;"	d
CandidateValueType	impl/Kokkos_Profiling_Interface.hpp	/^using CandidateValueType  = Kokkos_Tools_VariableInfo_CandidateValueType;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_VariableInfo_CandidateValueType
CategoricalTuner	Kokkos_Tuners.hpp	/^  CategoricalTuner(std::string name, choice_list m_choices)$/;"	f	struct:Kokkos::Tools::Experimental::CategoricalTuner
CategoricalTuner	Kokkos_Tuners.hpp	/^struct CategoricalTuner {$/;"	s	namespace:Kokkos::Tools::Experimental
ChaseLevDeque	impl/Kokkos_ChaseLev.hpp	/^  explicit ChaseLevDeque(CircularBufferT buffer) : m_array(std::move(buffer)) {}$/;"	f	struct:Kokkos::Impl::ChaseLevDeque
ChaseLevDeque	impl/Kokkos_ChaseLev.hpp	/^struct ChaseLevDeque {$/;"	s	namespace:Kokkos::Impl
ChaseLevTaskScheduler	Kokkos_TaskScheduler_fwd.hpp	/^using ChaseLevTaskScheduler = SimpleTaskScheduler<$/;"	t	namespace:Kokkos
ChunkSize	Kokkos_ExecPolicy.hpp	/^  ChunkSize(int value_) : value(value_) {}$/;"	f	struct:Kokkos::ChunkSize
ChunkSize	Kokkos_ExecPolicy.hpp	/^struct ChunkSize {$/;"	s	namespace:Kokkos
ClosureType	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^    using ClosureType = ParallelReduce<FunctorType, Policy, ReducerType,$/;"	t	function:Kokkos::Impl::ParallelReduce::execute	typeref:typename:ParallelReduce<FunctorType,Policy,ReducerType,Kokkos::Experimental::HIP>
ClosureType	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^    using ClosureType =$/;"	t	function:Kokkos::Impl::ParallelFor::execute	typeref:typename:ParallelFor<FunctorType,Policy,Kokkos::Experimental::HIP>
CmplxType	Kokkos_MathematicalSpecialFunctions.hpp	/^  using CmplxType = Kokkos::complex<RealType>;$/;"	t	function:Kokkos::Experimental::erf	typeref:typename:Kokkos::complex<RealType>
CmplxType	Kokkos_MathematicalSpecialFunctions.hpp	/^  using CmplxType = Kokkos::complex<RealType>;$/;"	t	function:Kokkos::Experimental::erfcx	typeref:typename:Kokkos::complex<RealType>
CombinedReducer	impl/Kokkos_Combined_Reducer.hpp	/^struct CombinedReducer$/;"	s	namespace:Kokkos::Impl
CombinedReducerImpl	impl/Kokkos_Combined_Reducer.hpp	/^  KOKKOS_FUNCTION constexpr explicit CombinedReducerImpl($/;"	f	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:KOKKOS_FUNCTION 
CombinedReducerImpl	impl/Kokkos_Combined_Reducer.hpp	/^struct CombinedReducerImpl<std::integer_sequence<size_t, Idxs...>, Space,$/;"	s	namespace:Kokkos::Impl
CombinedReducerStorageImpl	impl/Kokkos_Combined_Reducer.hpp	/^  explicit constexpr CombinedReducerStorageImpl(Reducer arg_reducer)$/;"	f	struct:Kokkos::Impl::CombinedReducerStorageImpl	typeref:typename:KOKKOS_INLINE_FUNCTION 
CombinedReducerStorageImpl	impl/Kokkos_Combined_Reducer.hpp	/^struct CombinedReducerStorageImpl {$/;"	s	namespace:Kokkos::Impl
CombinedReducerValueImpl	impl/Kokkos_Combined_Reducer.hpp	/^  explicit CombinedReducerValueImpl(ValueTypes... arg_values)$/;"	f	struct:Kokkos::Impl::CombinedReducerValueImpl	typeref:typename:KOKKOS_FUNCTION
CombinedReducerValueImpl	impl/Kokkos_Combined_Reducer.hpp	/^struct CombinedReducerValueImpl<std::integer_sequence<size_t, Idxs...>,$/;"	s	namespace:Kokkos::Impl
CombinedReducerValueItemImpl	impl/Kokkos_Combined_Reducer.hpp	/^  explicit KOKKOS_FUNCTION CombinedReducerValueItemImpl(value_type arg_value)$/;"	f	struct:Kokkos::Impl::CombinedReducerValueItemImpl	typeref:typename:KOKKOS_FUNCTION
CombinedReducerValueItemImpl	impl/Kokkos_Combined_Reducer.hpp	/^struct CombinedReducerValueItemImpl {$/;"	s	namespace:Kokkos::Impl
CombinedReductionFunctorWrapper	impl/Kokkos_Combined_Reducer.hpp	/^struct CombinedReductionFunctorWrapper$/;"	s	namespace:Kokkos::Impl
CombinedReductionFunctorWrapperImpl	impl/Kokkos_Combined_Reducer.hpp	/^  constexpr explicit CombinedReductionFunctorWrapperImpl(Functor arg_functor)$/;"	f	struct:Kokkos::Impl::CombinedReductionFunctorWrapperImpl	typeref:typename:KOKKOS_INLINE_FUNCTION 
CombinedReductionFunctorWrapperImpl	impl/Kokkos_Combined_Reducer.hpp	/^struct CombinedReductionFunctorWrapperImpl<$/;"	s	namespace:Kokkos::Impl
CommonSubview	Kokkos_CopyViews.hpp	/^  CommonSubview(const DstType& dst, const SrcType& src, const Arg0& arg0,$/;"	f	struct:Kokkos::Impl::CommonSubview
CommonSubview	Kokkos_CopyViews.hpp	/^struct CommonSubview<DstType, SrcType, 1, Arg0, Args...> {$/;"	s	namespace:Kokkos::Impl
CommonSubview	Kokkos_CopyViews.hpp	/^struct CommonSubview<DstType, SrcType, 2, Arg0, Arg1, Args...> {$/;"	s	namespace:Kokkos::Impl
CommonSubview	Kokkos_CopyViews.hpp	/^struct CommonSubview<DstType, SrcType, 3, Arg0, Arg1, Arg2, Args...> {$/;"	s	namespace:Kokkos::Impl
CommonSubview	Kokkos_CopyViews.hpp	/^struct CommonSubview<DstType, SrcType, 4, Arg0, Arg1, Arg2, Arg3, Args...> {$/;"	s	namespace:Kokkos::Impl
CommonSubview	Kokkos_CopyViews.hpp	/^struct CommonSubview<DstType, SrcType, 5, Arg0, Arg1, Arg2, Arg3, Arg4,$/;"	s	namespace:Kokkos::Impl
CommonSubview	Kokkos_CopyViews.hpp	/^struct CommonSubview<DstType, SrcType, 6, Arg0, Arg1, Arg2, Arg3, Arg4, Arg5,$/;"	s	namespace:Kokkos::Impl
CommonSubview	Kokkos_CopyViews.hpp	/^struct CommonSubview<DstType, SrcType, 7, Arg0, Arg1, Arg2, Arg3, Arg4, Arg5,$/;"	s	namespace:Kokkos::Impl
CommonSubview	Kokkos_CopyViews.hpp	/^struct CommonSubview<DstType, SrcType, 8, Arg0, Arg1, Arg2, Arg3, Arg4, Arg5,$/;"	s	namespace:Kokkos::Impl
CommonViewAllocProp	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION CommonViewAllocProp(const Views&...) {}$/;"	f	struct:Kokkos::Impl::CommonViewAllocProp	typeref:typename:KOKKOS_INLINE_FUNCTION
CommonViewAllocProp	Kokkos_View.hpp	/^struct CommonViewAllocProp<void, ValueType> {$/;"	s	namespace:Kokkos::Impl
CommonViewValueType	Kokkos_View.hpp	/^struct CommonViewValueType<void, A, B> {$/;"	s	namespace:Kokkos::Impl
ComplexReducerSizeCalculator	impl/Kokkos_Tools_Generic.hpp	/^struct ComplexReducerSizeCalculator {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl::Impl
ConservativeThreadsPerBlock	HIP/Kokkos_HIP_Instance.hpp	/^  static int constexpr ConservativeThreadsPerBlock =$/;"	m	struct:Kokkos::Experimental::Impl::HIPTraits	typeref:typename:int 
ConstantGlobalBufferType	Cuda/Kokkos_Cuda_Instance.hpp	/^  using ConstantGlobalBufferType =$/;"	t	struct:Kokkos::Impl::CudaTraits	typeref:typename:unsigned long[ConstantMemoryUsage/sizeof (unsigned long)]
ConstantMemory	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  ConstantMemory = 1,$/;"	e	enum:Kokkos::Experimental::Impl::HIPLaunchMechanism
ConstantMemory	Kokkos_Cuda.hpp	/^  ConstantMemory = 1,$/;"	e	enum:Kokkos::Impl::Experimental::CudaLaunchMechanism
ConstantMemoryCache	Cuda/Kokkos_Cuda_Instance.hpp	/^  static constexpr CudaSpace::size_type ConstantMemoryCache =$/;"	m	struct:Kokkos::Impl::CudaTraits	typeref:typename:CudaSpace::size_type
ConstantMemoryUsage	Cuda/Kokkos_Cuda_Instance.hpp	/^  static constexpr CudaSpace::size_type ConstantMemoryUsage =$/;"	m	struct:Kokkos::Impl::CudaTraits	typeref:typename:CudaSpace::size_type
ConstantMemoryUsage	HIP/Kokkos_HIP_Instance.hpp	/^  static int constexpr ConstantMemoryUsage        = 0x008000; \/* 32k bytes *\/$/;"	m	struct:Kokkos::Experimental::Impl::HIPTraits	typeref:typename:int 
ConstantMemoryUseThreshold	Cuda/Kokkos_Cuda_Instance.hpp	/^  static constexpr int ConstantMemoryUseThreshold = 0x000200 \/* 512 bytes *\/;$/;"	m	struct:Kokkos::Impl::CudaTraits	typeref:typename:int
ConstantMemoryUseThreshold	HIP/Kokkos_HIP_Instance.hpp	/^  static int constexpr ConstantMemoryUseThreshold = 0x000200; \/* 512 bytes *\/$/;"	m	struct:Kokkos::Experimental::Impl::HIPTraits	typeref:typename:int 
ConsumedTag	impl/Kokkos_LIFO.hpp	/^  static constexpr auto ConsumedTag = base_t::LockTag;$/;"	m	class:Kokkos::Impl::SingleConsumeOperationLIFO	typeref:typename:auto
Container	SYCL/Kokkos_SYCL.cpp	/^  explicit Container(const C& c) : container(c) {}$/;"	f	struct:__anon7e1ce1ec0110::Container	file:
Container	SYCL/Kokkos_SYCL.cpp	/^struct Container {$/;"	s	namespace:__anon7e1ce1ec0110	file:
Control	impl/Kokkos_HostSharedPtr.hpp	/^  struct Control {$/;"	s	class:Kokkos::Impl::HostSharedPtr
Count	Kokkos_Crs.hpp	/^  struct Count {};$/;"	s	struct:Kokkos::CountAndFillBase
CountAndFill	Kokkos_Crs.hpp	/^  CountAndFill(CrsType& crs, size_type nrows, Functor const& f)$/;"	f	struct:Kokkos::CountAndFill
CountAndFill	Kokkos_Crs.hpp	/^struct CountAndFill : public CountAndFillBase<CrsType, Functor> {$/;"	s	namespace:Kokkos
CountAndFillBase	Kokkos_Crs.hpp	/^  CountAndFillBase(CrsType& crs, Functor const& f) : m_crs(crs), m_functor(f) {}$/;"	f	struct:Kokkos::CountAndFillBase
CountAndFillBase	Kokkos_Crs.hpp	/^struct CountAndFillBase {$/;"	s	namespace:Kokkos
CountAndFillBase	Kokkos_Crs.hpp	/^struct CountAndFillBase<CrsType, Functor, EXEC_SPACE> {$/;"	s	namespace:Kokkos
Crs	Kokkos_Crs.hpp	/^  KOKKOS_INLINE_FUNCTION Crs(const RowMapType& row_map_,$/;"	f	class:Kokkos::Crs	typeref:typename:KOKKOS_INLINE_FUNCTION
Crs	Kokkos_Crs.hpp	/^class Crs {$/;"	c	namespace:Kokkos
CrsRowMapFromCounts	Kokkos_Crs.hpp	/^  CrsRowMapFromCounts(InCounts const& arg_in, OutRowMap const& arg_out)$/;"	f	class:Kokkos::Impl::CrsRowMapFromCounts
CrsRowMapFromCounts	Kokkos_Crs.hpp	/^class CrsRowMapFromCounts {$/;"	c	namespace:Kokkos::Impl
Cuda	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::Cuda()$/;"	f	class:Kokkos::Cuda
Cuda	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::Cuda(cudaStream_t stream, bool manage_stream)$/;"	f	class:Kokkos::Cuda
Cuda	Kokkos_Cuda.hpp	/^class Cuda {$/;"	c	namespace:Kokkos
Cuda	impl/Kokkos_Profiling_Interface.hpp	/^  Cuda,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
CudaDispatchProperties	Kokkos_Cuda.hpp	/^struct CudaDispatchProperties {$/;"	s	namespace:Kokkos::Impl::Experimental
CudaGraphNodeAggregateKernel	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^struct CudaGraphNodeAggregateKernel {$/;"	s	namespace:Kokkos::Impl
CudaHostAlloc	impl/Kokkos_Error.hpp	/^    CudaHostAlloc,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
CudaHostAllocator	Cuda/Kokkos_Cuda_Alloc.hpp	/^class CudaHostAllocator {$/;"	c	namespace:Kokkos::Impl
CudaHostPinnedSpace	Cuda/Kokkos_CudaSpace.cpp	/^CudaHostPinnedSpace::CudaHostPinnedSpace() {}$/;"	f	class:Kokkos::CudaHostPinnedSpace
CudaHostPinnedSpace	Kokkos_CudaSpace.hpp	/^class CudaHostPinnedSpace {$/;"	c	namespace:Kokkos
CudaInternal	Cuda/Kokkos_Cuda_Instance.hpp	/^  CudaInternal()$/;"	f	class:Kokkos::Impl::CudaInternal
CudaInternal	Cuda/Kokkos_Cuda_Instance.hpp	/^class CudaInternal {$/;"	c	namespace:Kokkos::Impl
CudaInternalDevices	Cuda/Kokkos_Cuda_Instance.cpp	/^CudaInternalDevices::CudaInternalDevices() {$/;"	f	class:Kokkos::Impl::__anon02417da40510::CudaInternalDevices
CudaInternalDevices	Cuda/Kokkos_Cuda_Instance.cpp	/^class CudaInternalDevices {$/;"	c	namespace:Kokkos::Impl::__anon02417da40510	file:
CudaJoinFunctor	Cuda/Kokkos_Cuda_Team.hpp	/^struct CudaJoinFunctor {$/;"	s	namespace:Kokkos::Impl
CudaLDGFetch	Cuda/Kokkos_Cuda_View.hpp	/^  CudaLDGFetch(CudaLDGFetch const rhs, size_t offset)$/;"	f	struct:Kokkos::Impl::CudaLDGFetch	typeref:typename:KOKKOS_INLINE_FUNCTION
CudaLDGFetch	Cuda/Kokkos_Cuda_View.hpp	/^  CudaLDGFetch(CudaLDGFetch&& rhs) : m_ptr(rhs.m_ptr) {}$/;"	f	struct:Kokkos::Impl::CudaLDGFetch	typeref:typename:KOKKOS_INLINE_FUNCTION
CudaLDGFetch	Cuda/Kokkos_Cuda_View.hpp	/^  CudaLDGFetch(const CudaLDGFetch& rhs) : m_ptr(rhs.m_ptr) {}$/;"	f	struct:Kokkos::Impl::CudaLDGFetch	typeref:typename:KOKKOS_INLINE_FUNCTION
CudaLDGFetch	Cuda/Kokkos_Cuda_View.hpp	/^  inline explicit CudaLDGFetch($/;"	f	struct:Kokkos::Impl::CudaLDGFetch
CudaLDGFetch	Cuda/Kokkos_Cuda_View.hpp	/^struct CudaLDGFetch {$/;"	s	namespace:Kokkos::Impl
CudaLaunchMechanism	Kokkos_Cuda.hpp	/^enum class CudaLaunchMechanism : unsigned {$/;"	g	namespace:Kokkos::Impl::Experimental	typeref:typename:unsigned
CudaLockArrays	Cuda/Kokkos_Cuda_Locks.hpp	/^struct CudaLockArrays {$/;"	s	namespace:Kokkos::Impl
CudaMalloc	impl/Kokkos_Error.hpp	/^    CudaMalloc,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
CudaMallocAllocator	Cuda/Kokkos_Cuda_Alloc.hpp	/^class CudaMallocAllocator {$/;"	c	namespace:Kokkos::Impl
CudaMallocManaged	impl/Kokkos_Error.hpp	/^    CudaMallocManaged,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
CudaParallelLaunch	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  CudaParallelLaunch(Args&&... args) {$/;"	f	struct:Kokkos::Impl::CudaParallelLaunch
CudaParallelLaunch	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^struct CudaParallelLaunch<DriverType, LaunchBounds, LaunchMechanism,$/;"	s	namespace:Kokkos::Impl
CudaParallelLaunchImpl	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^struct CudaParallelLaunchImpl<$/;"	s	namespace:Kokkos::Impl
CudaParallelLaunchKernelFunc	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^struct CudaParallelLaunchKernelFunc<$/;"	s	namespace:Kokkos::Impl
CudaParallelLaunchKernelInvoker	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^struct CudaParallelLaunchKernelInvoker<$/;"	s	namespace:Kokkos::Impl
CudaRawMemoryAllocationFailure	Cuda/Kokkos_Cuda_Error.hpp	/^  CudaRawMemoryAllocationFailure($/;"	f	class:Kokkos::Experimental::CudaRawMemoryAllocationFailure
CudaRawMemoryAllocationFailure	Cuda/Kokkos_Cuda_Error.hpp	/^  CudaRawMemoryAllocationFailure(size_t arg_attempted_size,$/;"	f	class:Kokkos::Experimental::CudaRawMemoryAllocationFailure
CudaRawMemoryAllocationFailure	Cuda/Kokkos_Cuda_Error.hpp	/^class CudaRawMemoryAllocationFailure : public RawMemoryAllocationFailure {$/;"	c	namespace:Kokkos::Experimental
CudaReductionsFunctor	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^struct CudaReductionsFunctor<FunctorType, false, false> {$/;"	s	namespace:Kokkos::Impl
CudaReductionsFunctor	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^struct CudaReductionsFunctor<FunctorType, false, true> {$/;"	s	namespace:Kokkos::Impl
CudaSpace	Cuda/Kokkos_CudaSpace.cpp	/^CudaSpace::CudaSpace() : m_device(Kokkos::Cuda().cuda_device()) {}$/;"	f	class:Kokkos::CudaSpace
CudaSpace	Kokkos_CudaSpace.hpp	/^class CudaSpace {$/;"	c	namespace:Kokkos
CudaTeamMember	Cuda/Kokkos_Cuda_Team.hpp	/^  CudaTeamMember(void* shared, const size_t shared_begin,$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION
CudaTeamMember	Cuda/Kokkos_Cuda_Team.hpp	/^class CudaTeamMember {$/;"	c	namespace:Kokkos::Impl
CudaTextureFetch	Cuda/Kokkos_Cuda_View.hpp	/^  CudaTextureFetch(CudaTextureFetch&& rhs)$/;"	f	struct:Kokkos::Impl::CudaTextureFetch	typeref:typename:KOKKOS_INLINE_FUNCTION
CudaTextureFetch	Cuda/Kokkos_Cuda_View.hpp	/^  CudaTextureFetch(const CudaTextureFetch& rhs)$/;"	f	struct:Kokkos::Impl::CudaTextureFetch	typeref:typename:KOKKOS_INLINE_FUNCTION
CudaTextureFetch	Cuda/Kokkos_Cuda_View.hpp	/^  CudaTextureFetch(const CudaTextureFetch& rhs, size_t offset)$/;"	f	struct:Kokkos::Impl::CudaTextureFetch	typeref:typename:KOKKOS_INLINE_FUNCTION
CudaTextureFetch	Cuda/Kokkos_Cuda_View.hpp	/^  inline explicit CudaTextureFetch($/;"	f	struct:Kokkos::Impl::CudaTextureFetch
CudaTextureFetch	Cuda/Kokkos_Cuda_View.hpp	/^struct CudaTextureFetch {$/;"	s	namespace:Kokkos::Impl
CudaTraits	Cuda/Kokkos_Cuda_Instance.hpp	/^struct CudaTraits {$/;"	s	namespace:Kokkos::Impl
CudaUVMAllocator	Cuda/Kokkos_Cuda_Alloc.hpp	/^class CudaUVMAllocator {$/;"	c	namespace:Kokkos::Impl
CudaUVMSpace	Cuda/Kokkos_CudaSpace.cpp	/^CudaUVMSpace::CudaUVMSpace() : m_device(Kokkos::Cuda().cuda_device()) {}$/;"	f	class:Kokkos::CudaUVMSpace
CudaUVMSpace	Kokkos_CudaSpace.hpp	/^class CudaUVMSpace {$/;"	c	namespace:Kokkos
CudaUnmanagedAllocator	Cuda/Kokkos_Cuda_Alloc.hpp	/^struct CudaUnmanagedAllocator {$/;"	s	namespace:Kokkos::Impl
CudaUnmanagedHostAllocator	Cuda/Kokkos_Cuda_Alloc.hpp	/^class CudaUnmanagedHostAllocator {$/;"	c	namespace:Kokkos::Impl
CudaUnmanagedUVMAllocator	Cuda/Kokkos_Cuda_Alloc.hpp	/^struct CudaUnmanagedUVMAllocator {$/;"	s	namespace:Kokkos::Impl
D0	impl/Kokkos_ViewMapping.hpp	/^  using D0 = ViewDimension0<variadic_size_t<0U, Vals...>::value,$/;"	t	struct:Kokkos::Impl::ViewDimension	typeref:typename:ViewDimension0<variadic_size_t<0U,Vals...>::value,rank_dynamic<Vals...>::value>
D1	impl/Kokkos_ViewMapping.hpp	/^  using D1 = ViewDimension1<variadic_size_t<1U, Vals...>::value,$/;"	t	struct:Kokkos::Impl::ViewDimension	typeref:typename:ViewDimension1<variadic_size_t<1U,Vals...>::value,rank_dynamic<Vals...>::value>
D2	impl/Kokkos_ViewMapping.hpp	/^  using D2 = ViewDimension2<variadic_size_t<2U, Vals...>::value,$/;"	t	struct:Kokkos::Impl::ViewDimension	typeref:typename:ViewDimension2<variadic_size_t<2U,Vals...>::value,rank_dynamic<Vals...>::value>
D3	impl/Kokkos_ViewMapping.hpp	/^  using D3 = ViewDimension3<variadic_size_t<3U, Vals...>::value,$/;"	t	struct:Kokkos::Impl::ViewDimension	typeref:typename:ViewDimension3<variadic_size_t<3U,Vals...>::value,rank_dynamic<Vals...>::value>
D4	impl/Kokkos_ViewMapping.hpp	/^  using D4 = ViewDimension4<variadic_size_t<4U, Vals...>::value,$/;"	t	struct:Kokkos::Impl::ViewDimension	typeref:typename:ViewDimension4<variadic_size_t<4U,Vals...>::value,rank_dynamic<Vals...>::value>
D5	impl/Kokkos_ViewMapping.hpp	/^  using D5 = ViewDimension5<variadic_size_t<5U, Vals...>::value,$/;"	t	struct:Kokkos::Impl::ViewDimension	typeref:typename:ViewDimension5<variadic_size_t<5U,Vals...>::value,rank_dynamic<Vals...>::value>
D6	impl/Kokkos_ViewMapping.hpp	/^  using D6 = ViewDimension6<variadic_size_t<6U, Vals...>::value,$/;"	t	struct:Kokkos::Impl::ViewDimension	typeref:typename:ViewDimension6<variadic_size_t<6U,Vals...>::value,rank_dynamic<Vals...>::value>
D7	impl/Kokkos_ViewMapping.hpp	/^  using D7 = ViewDimension7<variadic_size_t<7U, Vals...>::value,$/;"	t	struct:Kokkos::Impl::ViewDimension	typeref:typename:ViewDimension7<variadic_size_t<7U,Vals...>::value,rank_dynamic<Vals...>::value>
DEBUG_OUTPUT_CHECK	impl/Kokkos_ViewLayoutTiled.hpp	/^#define DEBUG_OUTPUT_CHECK /;"	d
DEBUG_PRINT	impl/Kokkos_hwloc.cpp	/^#define DEBUG_PRINT /;"	d	file:
DESUL_CUDA_ARCH_IS_PRE_VOLTA	Kokkos_Atomics_Desul_Config.hpp	/^#define DESUL_CUDA_ARCH_IS_PRE_VOLTA$/;"	d
DESUL_HAVE_OPENMP_ATOMICS	Kokkos_Atomics_Desul_Config.hpp	/^#define DESUL_HAVE_OPENMP_ATOMICS$/;"	d
DIGITS10_HELPER_INTEGRAL	Kokkos_NumericTraits.hpp	/^#define DIGITS10_HELPER_INTEGRAL(/;"	d
DO_NOT_DEREF_FLAG	impl/Kokkos_SharedAlloc.hpp	/^  enum : uintptr_t { DO_NOT_DEREF_FLAG = 0x01ul };$/;"	e	enum:Kokkos::Impl::SharedAllocationTracker::__anon4cadf70f0203
DO__atomic_compare_exchange_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_compare_exchange_simt_(/;"	d
DO__atomic_exchange_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_exchange_simt_(/;"	d
DO__atomic_fetch_add_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_fetch_add_simt_(/;"	d
DO__atomic_fetch_and_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_fetch_and_simt_(/;"	d
DO__atomic_fetch_or_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_fetch_or_simt_(/;"	d
DO__atomic_fetch_sub_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_fetch_sub_simt_(/;"	d
DO__atomic_fetch_xor_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_fetch_xor_simt_(/;"	d
DO__atomic_load_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_load_simt_(/;"	d
DO__atomic_store_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define DO__atomic_store_simt_(/;"	d
DP	Kokkos_Serial.hpp	/^    DT, DP...> : public ZeroMemset<DefaultHostExecutionSpace, DT, DP...> {$/;"	s	namespace:Kokkos::Impl
DeduceCommonViewAllocProp	Kokkos_View.hpp	/^struct DeduceCommonViewAllocProp<FirstView, NextViews...> {$/;"	s	namespace:Kokkos::Impl
DeduceCommonViewAllocProp	Kokkos_View.hpp	/^struct DeduceCommonViewAllocProp<FirstView> {$/;"	s	namespace:Kokkos::Impl
DeduceCudaLaunchMechanism	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^struct DeduceCudaLaunchMechanism {$/;"	s	namespace:Kokkos::Impl
DeduceFinalNoTag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct DeduceFinalNoTag {$/;"	s
DeduceHIPLaunchMechanism	HIP/Kokkos_HIP_KernelLaunch.hpp	/^struct DeduceHIPLaunchMechanism {$/;"	s	namespace:Kokkos::Experimental::Impl
DeduceInit	impl/Kokkos_FunctorAnalysis.hpp	/^  struct DeduceInit : public DeduceInitNoTag<F> {};$/;"	s
DeduceInit	impl/Kokkos_FunctorAnalysis.hpp	/^  struct DeduceInit<$/;"	s
DeduceInitNoTag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct DeduceInitNoTag {$/;"	s	namespace:Kokkos
DeduceJoin	impl/Kokkos_FunctorAnalysis.hpp	/^  struct DeduceJoin : public DeduceJoinNoTag<F> {};$/;"	s	namespace:Kokkos
DeduceJoin	impl/Kokkos_FunctorAnalysis.hpp	/^  struct DeduceJoin<$/;"	s	namespace:Kokkos
DeduceJoin	impl/Kokkos_FunctorAnalysis.hpp	/^  struct DeduceJoin<F, std::enable_if_t<!is_reducer<F>::value &&$/;"	s	namespace:Kokkos
DeduceJoinNoTag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct DeduceJoinNoTag {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
DeducedCommonPropsType	Kokkos_View.hpp	/^using DeducedCommonPropsType =$/;"	t	namespace:Kokkos	typeref:typename:Impl::DeduceCommonViewAllocProp<Views...>::prop_type
DeepCopy	Kokkos_HBWSpace.hpp	/^  DeepCopy(const DefaultHostExecutionSpace& exec, void* dst, const void* src,$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_HBWSpace.hpp	/^  DeepCopy(const ExecutionSpace& exec, void* dst, const void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_HBWSpace.hpp	/^  DeepCopy(void* dst, const void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_HBWSpace.hpp	/^struct DeepCopy<HostSpace, Kokkos::Experimental::HBWSpace, ExecutionSpace> {$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_HBWSpace.hpp	/^struct DeepCopy<HostSpace, Kokkos::Experimental::HBWSpace,$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_HBWSpace.hpp	/^struct DeepCopy<Kokkos::Experimental::HBWSpace, HostSpace, ExecutionSpace> {$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_HBWSpace.hpp	/^struct DeepCopy<Kokkos::Experimental::HBWSpace, HostSpace,$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_HBWSpace.hpp	/^struct DeepCopy<Kokkos::Experimental::HBWSpace, Kokkos::Experimental::HBWSpace,$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_HostSpace.hpp	/^  DeepCopy(const DefaultHostExecutionSpace& exec, void* dst, const void* src,$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_HostSpace.hpp	/^  DeepCopy(const ExecutionSpace& exec, void* dst, const void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_HostSpace.hpp	/^  DeepCopy(void* dst, const void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_HostSpace.hpp	/^struct DeepCopy<HostSpace, HostSpace, DefaultHostExecutionSpace> {$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_HostSpace.hpp	/^struct DeepCopy<HostSpace, HostSpace, ExecutionSpace> {$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_LogicalSpaces.hpp	/^  DeepCopy(const ExecutionSpace& exec, void* dst, void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_LogicalSpaces.hpp	/^  DeepCopy(void* dst, void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_LogicalSpaces.hpp	/^struct DeepCopy<Kokkos::Experimental::LogicalMemorySpace<$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_LogicalSpaces.hpp	/^struct DeepCopy<SourceSpace,$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_OpenMPTargetSpace.hpp	/^  DeepCopy(const ExecutionSpace& exec, void* dst, const void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_OpenMPTargetSpace.hpp	/^  DeepCopy(void* dst, const void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	Kokkos_OpenMPTargetSpace.hpp	/^struct DeepCopy<HostSpace, Kokkos::Experimental::OpenMPTargetSpace,$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_OpenMPTargetSpace.hpp	/^struct DeepCopy<Kokkos::Experimental::OpenMPTargetSpace, HostSpace,$/;"	s	namespace:Kokkos::Impl
DeepCopy	Kokkos_OpenMPTargetSpace.hpp	/^struct DeepCopy<Kokkos::Experimental::OpenMPTargetSpace,$/;"	s	namespace:Kokkos::Impl
DeepCopy	OpenACC/Kokkos_OpenACCSpace.hpp	/^  DeepCopy(const ExecutionSpace& exec, void* dst, const void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	OpenACC/Kokkos_OpenACCSpace.hpp	/^  DeepCopy(void* dst, const void* src, size_t n) {$/;"	f	struct:Kokkos::Impl::DeepCopy
DeepCopy	OpenACC/Kokkos_OpenACCSpace.hpp	/^struct Kokkos::Impl::DeepCopy<$/;"	s	class:Kokkos::Impl
DeepCopy	OpenACC/Kokkos_OpenACCSpace.hpp	/^struct Kokkos::Impl::DeepCopy<Kokkos::Experimental::OpenACCSpace,$/;"	s	class:Kokkos::Impl
DeepCopyAsyncCuda	Cuda/Kokkos_CudaSpace.cpp	/^void DeepCopyAsyncCuda(const Cuda &instance, void *dst, const void *src,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
DeepCopyAsyncCuda	Cuda/Kokkos_CudaSpace.cpp	/^void DeepCopyAsyncCuda(void *dst, const void *src, size_t n) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
DeepCopyAsyncHIP	HIP/Kokkos_HIP_Space.cpp	/^void DeepCopyAsyncHIP(const Kokkos::Experimental::HIP& instance, void* dst,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
DeepCopyAsyncHIP	HIP/Kokkos_HIP_Space.cpp	/^void DeepCopyAsyncHIP(void* dst, void const* src, size_t n) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
DeepCopyAsyncSYCL	SYCL/Kokkos_SYCL_Space.cpp	/^void DeepCopyAsyncSYCL(const Kokkos::Experimental::SYCL& instance, void* dst,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
DeepCopyAsyncSYCL	SYCL/Kokkos_SYCL_Space.cpp	/^void DeepCopyAsyncSYCL(void* dst, const void* src, size_t n) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
DeepCopyCuda	Cuda/Kokkos_CudaSpace.cpp	/^void DeepCopyCuda(void *dst, const void *src, size_t n) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
DeepCopyHIP	HIP/Kokkos_HIP_Space.cpp	/^void DeepCopyHIP(void* dst, void const* src, size_t n) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
DeepCopyResourceSynchronization	impl/Kokkos_Profiling_Interface.hpp	/^  DeepCopyResourceSynchronization = 2,$/;"	e	enum:Kokkos::Tools::Experimental::SpecialSynchronizationCases
DeepCopySYCL	SYCL/Kokkos_SYCL_Space.cpp	/^void DeepCopySYCL(void* dst, const void* src, size_t n) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
Default	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  Default        = 0,$/;"	e	enum:Kokkos::Experimental::Impl::HIPLaunchMechanism
Default	Kokkos_Cuda.hpp	/^  Default        = 0,$/;"	e	enum:Kokkos::Impl::Experimental::CudaLaunchMechanism
Default	Kokkos_Layout.hpp	/^  Default,$/;"	e	enum:Kokkos::Iterate
DefaultCtorNotOnDevice	impl/Kokkos_EBO.hpp	/^struct DefaultCtorNotOnDevice : std::false_type {};$/;"	s	namespace:Kokkos::Impl
DefaultCtorNotOnDevice	impl/Kokkos_EBO.hpp	/^struct DefaultCtorNotOnDevice<> : std::true_type {};$/;"	s	namespace:Kokkos::Impl
DefaultDestroy	impl/Kokkos_SimpleTaskScheduler.hpp	/^struct DefaultDestroy {$/;"	s	namespace:Kokkos::Impl
DefaultExecutionSpace	Kokkos_Core_fwd.hpp	/^using DefaultExecutionSpace KOKKOS_IMPL_DEFAULT_EXEC_SPACE_ANNOTATION = Cuda;$/;"	t	namespace:Kokkos	typeref:typename:Cuda
DefaultHostExecutionSpace	Kokkos_Core_fwd.hpp	/^using DefaultHostExecutionSpace KOKKOS_IMPL_DEFAULT_HOST_EXEC_SPACE_ANNOTATION =$/;"	t	namespace:Kokkos	typeref:typename:Kokkos::Experimental::HPX
DefaultHostExecutionSpace	Kokkos_Core_fwd.hpp	/^using DefaultHostExecutionSpace KOKKOS_IMPL_DEFAULT_HOST_EXEC_SPACE_ANNOTATION =$/;"	t	namespace:Kokkos	typeref:typename:OpenMP
DefaultHostExecutionSpace	Kokkos_Core_fwd.hpp	/^using DefaultHostExecutionSpace KOKKOS_IMPL_DEFAULT_HOST_EXEC_SPACE_ANNOTATION =$/;"	t	namespace:Kokkos	typeref:typename:Serial
DefaultHostExecutionSpace	Kokkos_Core_fwd.hpp	/^using DefaultHostExecutionSpace KOKKOS_IMPL_DEFAULT_HOST_EXEC_SPACE_ANNOTATION =$/;"	t	namespace:Kokkos	typeref:typename:Threads
DefaultMemorySpaceNamer	Kokkos_LogicalSpaces.hpp	/^struct DefaultMemorySpaceNamer {$/;"	s	namespace:Kokkos::Experimental
DefaultViewHooks	View/Hooks/Kokkos_ViewHooks.hpp	/^using DefaultViewHooks = EmptyViewHooks;$/;"	t	namespace:Kokkos::Experimental	typeref:typename:EmptyViewHooks
DeprecatedTaskScheduler	Kokkos_TaskScheduler_fwd.hpp	/^using DeprecatedTaskScheduler = BasicTaskScheduler<$/;"	t	namespace:Kokkos	typeref:typename:BasicTaskScheduler<Space,Impl::TaskQueue<Space,Impl::default_tasking_memory_space_for_execution_space_t<Space>>>
DeprecatedTaskSchedulerMultiple	Kokkos_TaskScheduler_fwd.hpp	/^using DeprecatedTaskSchedulerMultiple = BasicTaskScheduler<$/;"	t	namespace:Kokkos	typeref:typename:BasicTaskScheduler<Space,Impl::TaskQueueMultiple<Space,Impl::default_tasking_memory_space_for_execution_space_t<Space>>>
DesiredOccupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^  explicit DesiredOccupancy(MaximizeOccupancy const&) : DesiredOccupancy() {}$/;"	f	struct:Kokkos::Experimental::DesiredOccupancy
DesiredOccupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^  explicit constexpr DesiredOccupancy(int occ) : m_occ(occ) {$/;"	f	struct:Kokkos::Experimental::DesiredOccupancy
DesiredOccupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^struct DesiredOccupancy {$/;"	s	namespace:Kokkos::Experimental
Destroy	impl/Kokkos_TaskQueue.hpp	/^  struct Destroy {$/;"	s	class:Kokkos::Impl::TaskQueue
Destroy	impl/Kokkos_TaskQueueMultiple.hpp	/^  struct Destroy {$/;"	s	class:Kokkos::Impl::TaskQueueMultiple
Device	Kokkos_Concepts.hpp	/^struct Device {$/;"	s	namespace:Kokkos
DeviceIteratePattern	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using DeviceIteratePattern = typename Kokkos::Impl::Reduce::DeviceIterateTile<$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::Reduce::DeviceIterateTile<Policy::rank,Policy,FunctorType,typename Policy::work_tag,reference_type>
DeviceIteratePattern	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using DeviceIteratePattern = typename Kokkos::Impl::Reduce::DeviceIterateTile<$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::Reduce::DeviceIterateTile<Policy::rank,Policy,FunctorType,WorkTag,reference_type>
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^  KOKKOS_IMPL_DEVICE_FUNCTION DeviceIterateTile($/;"	f	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^  KOKKOS_IMPL_DEVICE_FUNCTION DeviceIterateTile($/;"	f	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^  KOKKOS_IMPL_DEVICE_FUNCTION DeviceIterateTile(const PolicyType& policy_,$/;"	f	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^  KOKKOS_IMPL_DEVICE_FUNCTION DeviceIterateTile(const PolicyType& policy_,$/;"	f	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^struct DeviceIterateTile {$/;"	s	namespace:Kokkos::Impl::Reduce
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^struct DeviceIterateTile<2, PolicyType, Functor, Tag> {$/;"	s	namespace:Kokkos::Impl
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^struct DeviceIterateTile<3, PolicyType, Functor, Tag> {$/;"	s	namespace:Kokkos::Impl
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^struct DeviceIterateTile<4, PolicyType, Functor, Tag> {$/;"	s	namespace:Kokkos::Impl
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^struct DeviceIterateTile<5, PolicyType, Functor, Tag> {$/;"	s	namespace:Kokkos::Impl
DeviceIterateTile	impl/KokkosExp_IterateTileGPU.hpp	/^struct DeviceIterateTile<6, PolicyType, Functor, Tag> {$/;"	s	namespace:Kokkos::Impl
DeviceType	impl/Kokkos_Profiling_Interface.hpp	/^enum struct DeviceType {$/;"	g	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	Kokkos_Cuda.hpp	/^struct DeviceTypeTraits<Cuda> {$/;"	s	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	Kokkos_HIP_Space.hpp	/^struct DeviceTypeTraits<Kokkos::Experimental::HIP> {$/;"	s	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	Kokkos_HPX.hpp	/^struct DeviceTypeTraits<Kokkos::Experimental::HPX> {$/;"	s	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	Kokkos_OpenMP.hpp	/^struct DeviceTypeTraits<OpenMP> {$/;"	s	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	Kokkos_OpenMPTarget.hpp	/^struct DeviceTypeTraits<::Kokkos::Experimental::OpenMPTarget> {$/;"	s	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	Kokkos_SYCL.hpp	/^struct DeviceTypeTraits<Kokkos::Experimental::SYCL> {$/;"	s	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	Kokkos_Serial.hpp	/^struct DeviceTypeTraits<Serial> {$/;"	s	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	Kokkos_Threads.hpp	/^struct DeviceTypeTraits<Threads> {$/;"	s	namespace:Kokkos::Tools::Experimental
DeviceTypeTraits	OpenACC/Kokkos_OpenACC.hpp	/^struct Kokkos::Tools::Experimental::DeviceTypeTraits<$/;"	s	class:Kokkos::Tools::Experimental
DirectFenceIDHandle	impl/Kokkos_Profiling.hpp	/^struct DirectFenceIDHandle {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
DivOper	impl/Kokkos_Atomic_Generic.hpp	/^struct DivOper {$/;"	s	namespace:Kokkos::Impl
DriverType	HIP/Kokkos_HIP_Parallel_Range.hpp	/^      using DriverType = ParallelReduce<FunctorType, Policy, ReducerType,$/;"	t	function:Kokkos::Impl::ParallelReduce::execute	typeref:typename:ParallelReduce<FunctorType,Policy,ReducerType,Kokkos::Experimental::HIP>
DriverType	HIP/Kokkos_HIP_Parallel_Range.hpp	/^      using DriverType = ParallelScanHIPBase<FunctorType, Traits...>;$/;"	t	function:Kokkos::Impl::ParallelScanHIPBase::impl_execute	typeref:typename:ParallelScanHIPBase<FunctorType,Traits...>
DriverType	HIP/Kokkos_HIP_Parallel_Range.hpp	/^    using DriverType = ParallelReduce<FunctorType, Policy, ReducerType,$/;"	t	function:Kokkos::Impl::ParallelReduce::local_block_size	typeref:typename:ParallelReduce<FunctorType,Policy,ReducerType,Kokkos::Experimental::HIP>
DriverType	HIP/Kokkos_HIP_Parallel_Range.hpp	/^    using DriverType = ParallelScan<FunctorType, typename Base::Policy,$/;"	t	function:Kokkos::Impl::ParallelScan::local_block_size	typeref:typename:ParallelScan<FunctorType,typename Base::Policy,Kokkos::Experimental::HIP>
DriverType	HIP/Kokkos_HIP_Parallel_Range.hpp	/^    using DriverType =$/;"	t	function:Kokkos::Impl::ParallelFor::execute	typeref:typename:ParallelFor<FunctorType,Policy,Kokkos::Experimental::HIP>
DriverType	HIP/Kokkos_HIP_Parallel_Range.hpp	/^    using DriverType =$/;"	t	function:Kokkos::Impl::ParallelScanWithTotal::local_block_size	typeref:typename:ParallelScanWithTotal<FunctorType,typename Base::Policy,ReturnType,Kokkos::Experimental::HIP>
DstExecCanAccessSrc	Kokkos_CopyViews.hpp	/^    DstExecCanAccessSrc =$/;"	e	enum:Kokkos::Impl::view_copy::__anon6f9042750303
DstExecCanAccessSrc	Kokkos_CopyViews.hpp	/^    DstExecCanAccessSrc =$/;"	e	enum:Kokkos::deep_copy::__anon6f9042750503
DstExecCanAccessSrc	Kokkos_CopyViews.hpp	/^    DstExecCanAccessSrc =$/;"	e	enum:Kokkos::deep_copy::__anon6f9042751803
DstTraits	Kokkos_View.hpp	/^  using DstTraits = typename Kokkos::View<ViewTDst...>::traits;$/;"	t	function:Kokkos::is_assignable	typeref:typename:Kokkos::View<ViewTDst...>::traits
DstType	Kokkos_View.hpp	/^    using DstType = typename Mapping::type;$/;"	t	function:Kokkos::View::View	typeref:typename:Mapping::type
Dynamic	Kokkos_Concepts.hpp	/^struct Dynamic {};$/;"	s	namespace:Kokkos
EBOBaseImpl	impl/Kokkos_EBO.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr explicit EBOBaseImpl($/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
EBOBaseImpl	impl/Kokkos_EBO.hpp	/^  inline constexpr explicit EBOBaseImpl(Args&&... args) noexcept($/;"	f	struct:Kokkos::Impl::EBOBaseImpl
EBOBaseImpl	impl/Kokkos_EBO.hpp	/^  inline constexpr explicit EBOBaseImpl(Args&&...) noexcept {}$/;"	f	struct:Kokkos::Impl::EBOBaseImpl
EBOBaseImpl	impl/Kokkos_EBO.hpp	/^struct EBOBaseImpl<T, false, CTorsNotOnDevice> {$/;"	s	namespace:Kokkos::Impl
EBOBaseImpl	impl/Kokkos_EBO.hpp	/^struct EBOBaseImpl<T, true, CtorNotOnDevice> {$/;"	s	namespace:Kokkos::Impl
END_TOKEN	Kokkos_WorkGraphPolicy.hpp	/^    END_TOKEN       = -1,$/;"	e	enum:Kokkos::WorkGraphPolicy::__anoneaecfe710103
EXEC_SPACE	Kokkos_Crs.hpp	/^#define EXEC_SPACE /;"	d
EmptyTaskSchedulingInfo	impl/Kokkos_MultipleTaskQueue.hpp	/^struct EmptyTaskSchedulingInfo {};$/;"	s	namespace:Kokkos::Impl
EmptyTaskSchedulingInfo	impl/Kokkos_SingleTaskQueue.hpp	/^  struct EmptyTaskSchedulingInfo {};$/;"	s	class:Kokkos::Impl::SingleTaskQueue
EmptyTeamSchedulerInfo	impl/Kokkos_SingleTaskQueue.hpp	/^  struct EmptyTeamSchedulerInfo {};$/;"	s	class:Kokkos::Impl::SingleTaskQueue
EmptyViewHooks	View/Hooks/Kokkos_ViewHooks.hpp	/^struct EmptyViewHooks {$/;"	s	namespace:Kokkos::Experimental
EmulateCUDADim3	impl/KokkosExp_IterateTileGPU.hpp	/^struct EmulateCUDADim3 {$/;"	s	namespace:Kokkos::Impl
EndTag	impl/Kokkos_LIFO.hpp	/^  static constexpr uintptr_t EndTag  = ~uintptr_t(1);$/;"	m	struct:Kokkos::Impl::LockBasedLIFOCommon	typeref:typename:uintptr_t
EndTag	impl/Kokkos_TaskBase.hpp	/^  enum : uintptr_t { LockTag = ~uintptr_t(0), EndTag = ~uintptr_t(1) };$/;"	e	enum:Kokkos::Impl::TaskBase::__anonf4e6889b0203
Error	impl/Kokkos_PhysicalLayout.hpp	/^  enum LayoutType { Left, Right, Scalar, Error };$/;"	e	enum:Kokkos::Impl::PhysicalLayout::LayoutType
EventSet	impl/Kokkos_Profiling_Interface.hpp	/^using EventSet = Kokkos_Profiling_EventSet;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Profiling_EventSet
Exec	OpenMP/Kokkos_OpenMP_Instance.hpp	/^    using Exec = Impl::OpenMPInternal;$/;"	t	function:Kokkos::OpenMP::partition_master	typeref:typename:Impl::OpenMPInternal
ExecCanAccessDst	Kokkos_CopyViews.hpp	/^    ExecCanAccessDst =$/;"	e	enum:Kokkos::Impl::view_copy::__anon6f9042750203
ExecCanAccessSrc	Kokkos_CopyViews.hpp	/^    ExecCanAccessSrc =$/;"	e	enum:Kokkos::Impl::view_copy::__anon6f9042750103
ExecCanAccessSrcDst	Kokkos_CopyViews.hpp	/^    ExecCanAccessSrcDst =$/;"	e	enum:Kokkos::deep_copy::__anon6f9042751703
ExecSpaceBase	impl/Kokkos_ExecSpaceManager.hpp	/^struct ExecSpaceBase {$/;"	s	namespace:Kokkos::Impl
ExecSpaceDerived	impl/Kokkos_ExecSpaceManager.hpp	/^struct ExecSpaceDerived : ExecSpaceBase {$/;"	s	namespace:Kokkos::Impl
ExecSpaceManager	impl/Kokkos_ExecSpaceManager.hpp	/^class ExecSpaceManager {$/;"	c	namespace:Kokkos::Impl
ExecutionSpace	Kokkos_CopyViews.hpp	/^    using ExecutionSpace = typename alloc_prop::execution_space;$/;"	t	function:Kokkos::create_mirror_view_and_copy	typeref:typename:alloc_prop::execution_space
ExecutionSpace	Kokkos_View.hpp	/^  using ExecutionSpace =$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::execution_space> typename prop Kokkos::DefaultExecutionSpace>
ExecutionSpaceIdentifier	impl/Kokkos_Profiling_Interface.hpp	/^struct ExecutionSpaceIdentifier {$/;"	s	namespace:Kokkos::Tools::Experimental
ExecutionSpaceInstanceStorage	impl/Kokkos_EBO.hpp	/^  constexpr explicit ExecutionSpaceInstanceStorage($/;"	f	class:Kokkos::Impl::ExecutionSpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION 
ExecutionSpaceInstanceStorage	impl/Kokkos_EBO.hpp	/^  constexpr explicit ExecutionSpaceInstanceStorage() : base_t() {}$/;"	f	class:Kokkos::Impl::ExecutionSpaceInstanceStorage
ExecutionSpaceInstanceStorage	impl/Kokkos_EBO.hpp	/^class ExecutionSpaceInstanceStorage$/;"	c	namespace:Kokkos::Impl
ExecutionSpaceTrait	traits/Kokkos_ExecutionSpaceTrait.hpp	/^struct ExecutionSpaceTrait : TraitSpecificationBase<ExecutionSpaceTrait> {$/;"	s	namespace:Kokkos::Impl
Experimental	Cuda/Kokkos_Cuda_Error.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Cuda/Kokkos_Cuda_Instance.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools	file:
Experimental	Cuda/Kokkos_Cuda_Instance.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	HIP/Kokkos_HIP_Error.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	HIP/Kokkos_HIP_Half_Conversion.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	HIP/Kokkos_HIP_Instance.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	HIP/Kokkos_HIP_Instance.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	HIP/Kokkos_HIP_KernelLaunch.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	HIP/Kokkos_HIP_Space.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	HIP/Kokkos_HIP_Space.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools	file:
Experimental	HIP/Kokkos_HIP_UniqueToken.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	HIP/Kokkos_HIP_Vectorization.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	HPX/Kokkos_HPX.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	HPX/Kokkos_HPX.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools	file:
Experimental	KokkosExp_InterOp.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	KokkosExp_MDRangePolicy.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_AcquireUniqueTokenImpl.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_Concepts.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_CopyViews.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_Core.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_Core_fwd.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_Cuda.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Impl
Experimental	Kokkos_Cuda.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_Extents.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_Graph.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_GraphNode.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_Graph_fwd.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_HBWSpace.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_HIP_Space.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_HIP_Space.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_HPX.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_HPX.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_Half.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_Layout.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_LogicalSpaces.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_MasterLock.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_MathematicalConstants.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_MathematicalSpecialFunctions.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_MinMaxClamp.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_NumericTraits.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_OpenMP.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_OpenMPTarget.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_OpenMPTarget.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_OpenMPTargetSpace.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_SYCL.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_SYCL.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_SYCL_Space.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Kokkos_Serial.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_Threads.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_Tuners.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	Kokkos_UniqueToken.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	OpenACC/Kokkos_OpenACC.hpp	/^namespace Kokkos::Experimental {$/;"	n	namespace:Kokkos
Experimental	OpenACC/Kokkos_OpenACC.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n	namespace:Kokkos
Experimental	OpenACC/Kokkos_OpenACCSpace.hpp	/^namespace Kokkos::Experimental {$/;"	n	namespace:Kokkos
Experimental	OpenACC/Kokkos_OpenACC_Instance.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n	namespace:Kokkos
Experimental	OpenACC/Kokkos_OpenACC_Traits.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n	namespace:Kokkos
Experimental	OpenMP/Kokkos_OpenMP_Instance.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools	file:
Experimental	OpenMP/Kokkos_OpenMP_Instance.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	SYCL/Kokkos_SYCL.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	SYCL/Kokkos_SYCL_Instance.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	SYCL/Kokkos_SYCL_Instance.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	SYCL/Kokkos_SYCL_Space.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Serial/Kokkos_Serial.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools	file:
Experimental	Serial/Kokkos_Serial_UniqueToken.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	Threads/Kokkos_ThreadsExec.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools	file:
Experimental	Threads/Kokkos_Threads_UniqueToken.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	View/Hooks/Kokkos_ViewHooks.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	fwd/Kokkos_Fwd_HBWSpace.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	fwd/Kokkos_Fwd_HIP.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	fwd/Kokkos_Fwd_HPX.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	fwd/Kokkos_Fwd_OPENACC.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	fwd/Kokkos_Fwd_OPENMPTARGET.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	fwd/Kokkos_Fwd_SYCL.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	impl/Kokkos_Error.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	impl/Kokkos_Error.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	impl/Kokkos_GraphImpl.hpp	/^namespace Experimental {  \/\/ but not for users, so...$/;"	n	namespace:Kokkos
Experimental	impl/Kokkos_HBWSpace.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	impl/Kokkos_NumericTraits.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos	file:
Experimental	impl/Kokkos_Profiling.cpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools	file:
Experimental	impl/Kokkos_Profiling.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Profiling
Experimental	impl/Kokkos_Profiling.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	impl/Kokkos_Profiling_Interface.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Profiling
Experimental	impl/Kokkos_Profiling_Interface.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	impl/Kokkos_QuadPrecisionMath.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	impl/Kokkos_Tools_Generic.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos::Tools
Experimental	traits/Kokkos_OccupancyControlTrait.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	traits/Kokkos_ScheduleTrait.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
Experimental	traits/Kokkos_WorkItemPropertyTrait.hpp	/^namespace Experimental {$/;"	n	namespace:Kokkos
ExtendableTunerMixin	Kokkos_Tuners.hpp	/^struct ExtendableTunerMixin {$/;"	s	namespace:Kokkos::Tools::Experimental
ExtendedProblemSpace	Kokkos_Tuners.hpp	/^  using ExtendedProblemSpace =$/;"	t	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:Impl::MapTypeConverter<extended_map<Key,Value>>::type
Extents	Kokkos_Extents.hpp	/^struct Extents {$/;"	s	namespace:Kokkos::Experimental
ExtractVectorLength	Kokkos_ExecPolicy.hpp	/^struct ExtractVectorLength {$/;"	s	namespace:Kokkos::Impl
FOR	impl/Kokkos_FunctorAnalysis.hpp	/^  struct FOR {};$/;"	s	struct:Kokkos::Impl::FunctorPatternInterface
FOR	impl/Kokkos_FunctorAnalysis.hpp	/^  using FOR    = FunctorPatternInterface::FOR;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:FunctorPatternInterface::FOR
FailedQueueInsertionLinkedListSchedulingInfo	impl/Kokkos_MultipleTaskQueue.hpp	/^struct FailedQueueInsertionLinkedListSchedulingInfo {$/;"	s	namespace:Kokkos::Impl
FailureMode	impl/Kokkos_Error.hpp	/^  enum class FailureMode {$/;"	g	class:Kokkos::Experimental::RawMemoryAllocationFailure
Fill	Kokkos_Crs.hpp	/^  struct Fill {};$/;"	s	struct:Kokkos::CountAndFillBase
FillCrsTransposeEntries	Kokkos_Crs.hpp	/^  FillCrsTransposeEntries(InCrs const& arg_in, OutCrs const& arg_out)$/;"	f	class:Kokkos::Impl::FillCrsTransposeEntries
FillCrsTransposeEntries	Kokkos_Crs.hpp	/^class FillCrsTransposeEntries {$/;"	c	namespace:Kokkos::Impl
FirstLoc	Kokkos_Parallel_Reduce.hpp	/^  FirstLoc(const result_view_type& value_)$/;"	f	struct:Kokkos::FirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
FirstLoc	Kokkos_Parallel_Reduce.hpp	/^  FirstLoc(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::FirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
FirstLoc	Kokkos_Parallel_Reduce.hpp	/^struct FirstLoc {$/;"	s	namespace:Kokkos
FirstLocScalar	Kokkos_Parallel_Reduce.hpp	/^struct FirstLocScalar {$/;"	s	namespace:Kokkos
FixedBlockSizeMemoryPool	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  FixedBlockSizeMemoryPool(memory_space const& mem_space, size_type num_blocks)$/;"	f	class:Kokkos::Impl::FixedBlockSizeMemoryPool
FixedBlockSizeMemoryPool	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  FixedBlockSizeMemoryPool(memory_space const& mem_space,$/;"	f	class:Kokkos::Impl::FixedBlockSizeMemoryPool
FixedBlockSizeMemoryPool	impl/Kokkos_FixedBufferMemoryPool.hpp	/^class FixedBlockSizeMemoryPool$/;"	c	namespace:Kokkos::Impl
FunctorAnalysis	Kokkos_Parallel_Reduce.hpp	/^  using FunctorAnalysis =$/;"	t	function:Kokkos::parallel_reduce	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,PolicyType,FunctorType>
FunctorAnalysis	Kokkos_Parallel_Reduce.hpp	/^  using FunctorAnalysis =$/;"	t	function:Kokkos::parallel_reduce	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,policy_type,FunctorType>
FunctorAnalysis	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^    using FunctorAnalysis =$/;"	t	function:Kokkos::Impl::ParallelReduceSpecialize::execute_init_join	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,PolicyType,FunctorType>
FunctorAnalysis	impl/Kokkos_FunctorAnalysis.hpp	/^struct FunctorAnalysis {$/;"	s	namespace:Kokkos::Impl
FunctorPatternInterface	impl/Kokkos_FunctorAnalysis.hpp	/^struct FunctorPatternInterface {$/;"	s	namespace:Kokkos::Impl
FunctorPolicyExecutionSpace	Kokkos_Parallel.hpp	/^struct FunctorPolicyExecutionSpace {$/;"	s	namespace:Kokkos::Impl
FunctorTeamShmemSize	Kokkos_Parallel.hpp	/^struct FunctorTeamShmemSize {$/;"	s	namespace:Kokkos::Impl
FunctorTeamShmemSize	Kokkos_Parallel.hpp	/^struct FunctorTeamShmemSize<FunctorType, false, true> {$/;"	s	namespace:Kokkos::Impl
FunctorTeamShmemSize	Kokkos_Parallel.hpp	/^struct FunctorTeamShmemSize<FunctorType, true, false> {$/;"	s	namespace:Kokkos::Impl
FunctorTeamShmemSize	Kokkos_Parallel.hpp	/^struct FunctorTeamShmemSize<FunctorType, true, true> {$/;"	s	namespace:Kokkos::Impl
FunctorType	Kokkos_Parallel_Reduce.hpp	/^    ReturnType, FunctorType> {$/;"	s	namespace:Kokkos::Impl
FunctorType	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^                              FunctorType>::has_join_member_function$/;"	e	enum:Kokkos::Impl::ParallelReduce::__anonc86c1b300103
FunctorWrapperRangePolicyParallelFor	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^struct FunctorWrapperRangePolicyParallelFor {$/;"	s	namespace:Kokkos::Impl
Future	Kokkos_Future.hpp	/^using Future = typename Impl::ResolveFutureArgOrder<Arg1, Arg2>::type;$/;"	t	namespace:Kokkos	typeref:typename:Impl::ResolveFutureArgOrder<Arg1,Arg2>::type
GetCrsTransposeCounts	Kokkos_Crs.hpp	/^  GetCrsTransposeCounts(InCrs const& arg_in, OutCounts const& arg_out)$/;"	f	class:Kokkos::Impl::GetCrsTransposeCounts
GetCrsTransposeCounts	Kokkos_Crs.hpp	/^class GetCrsTransposeCounts {$/;"	c	namespace:Kokkos::Impl
GetMultidimensionalPoint	Kokkos_Tuners.hpp	/^struct GetMultidimensionalPoint<ValueHierarchyNode<ValueType, Subtype>, double,$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
GetMultidimensionalPoint	Kokkos_Tuners.hpp	/^struct GetMultidimensionalPoint<ValueHierarchyNode<ValueType, void>, double> {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
Global	Kokkos_UniqueToken.hpp	/^enum class UniqueTokenScope : int { Instance, Global };$/;"	e	enum:Kokkos::Experimental::UniqueTokenScope
GlobalDeviceSynchronization	impl/Kokkos_Profiling_Interface.hpp	/^  GlobalDeviceSynchronization     = 1,$/;"	e	enum:Kokkos::Tools::Experimental::SpecialSynchronizationCases
GlobalMemory	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  GlobalMemory   = 2,$/;"	e	enum:Kokkos::Experimental::Impl::HIPLaunchMechanism
GlobalMemory	Kokkos_Cuda.hpp	/^  GlobalMemory   = 2,$/;"	e	enum:Kokkos::Impl::Experimental::CudaLaunchMechanism
Graph	Kokkos_Graph.hpp	/^  explicit Graph(std::shared_ptr<impl_t> arg_impl_ptr)$/;"	f	struct:Kokkos::Experimental::Graph
Graph	Kokkos_Graph.hpp	/^struct KOKKOS_ATTRIBUTE_NODISCARD Graph {$/;"	s	namespace:Kokkos::Experimental
GraphAccess	impl/Kokkos_GraphImpl.hpp	/^struct GraphAccess {$/;"	s	namespace:Kokkos::Impl
GraphImpl	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  explicit GraphImpl(Kokkos::Cuda arg_instance)$/;"	f	struct:Kokkos::Impl::GraphImpl
GraphImpl	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^struct GraphImpl<Kokkos::Cuda> {$/;"	s	namespace:Kokkos::Impl
GraphImpl	impl/Kokkos_Default_Graph_Impl.hpp	/^  explicit GraphImpl(ExecutionSpace arg_space)$/;"	f	struct:Kokkos::Impl::GraphImpl
GraphImpl	impl/Kokkos_Default_Graph_Impl.hpp	/^struct GraphImpl : private ExecutionSpaceInstanceStorage<ExecutionSpace> {$/;"	s	namespace:Kokkos::Impl
GraphKernelTrait	traits/Kokkos_GraphKernelTrait.hpp	/^struct GraphKernelTrait : TraitSpecificationBase<GraphKernelTrait> {$/;"	s	namespace:Kokkos::Impl
GraphNodeAggregateKernelDefaultImpl	impl/Kokkos_Default_GraphNodeKernel.hpp	/^struct GraphNodeAggregateKernelDefaultImpl$/;"	s	namespace:Kokkos::Impl
GraphNodeBackendDetailsBeforeTypeErasure	Cuda/Kokkos_Cuda_GraphNode_Impl.hpp	/^  GraphNodeBackendDetailsBeforeTypeErasure($/;"	f	struct:Kokkos::Impl::GraphNodeBackendDetailsBeforeTypeErasure
GraphNodeBackendDetailsBeforeTypeErasure	Cuda/Kokkos_Cuda_GraphNode_Impl.hpp	/^struct GraphNodeBackendDetailsBeforeTypeErasure<Kokkos::Cuda, Kernel,$/;"	s	namespace:Kokkos::Impl
GraphNodeBackendDetailsBeforeTypeErasure	impl/Kokkos_GraphNodeCustomization.hpp	/^  GraphNodeBackendDetailsBeforeTypeErasure($/;"	f	struct:Kokkos::Impl::GraphNodeBackendDetailsBeforeTypeErasure
GraphNodeBackendDetailsBeforeTypeErasure	impl/Kokkos_GraphNodeCustomization.hpp	/^struct GraphNodeBackendDetailsBeforeTypeErasure {$/;"	s	namespace:Kokkos::Impl
GraphNodeBackendSpecificDetails	Cuda/Kokkos_Cuda_GraphNode_Impl.hpp	/^  explicit GraphNodeBackendSpecificDetails($/;"	f	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails
GraphNodeBackendSpecificDetails	Cuda/Kokkos_Cuda_GraphNode_Impl.hpp	/^struct GraphNodeBackendSpecificDetails<Kokkos::Cuda> {$/;"	s	namespace:Kokkos::Impl
GraphNodeBackendSpecificDetails	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  explicit GraphNodeBackendSpecificDetails($/;"	f	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails
GraphNodeBackendSpecificDetails	impl/Kokkos_Default_GraphNode_Impl.hpp	/^struct GraphNodeBackendSpecificDetails {$/;"	s	namespace:Kokkos::Impl
GraphNodeImpl	impl/Kokkos_GraphNodeImpl.hpp	/^  GraphNodeImpl(ExecutionSpace const& ex, _graph_node_is_root_ctor_tag,$/;"	f	struct:Kokkos::Impl::GraphNodeImpl
GraphNodeImpl	impl/Kokkos_GraphNodeImpl.hpp	/^  GraphNodeImpl(ExecutionSpace const& ex, _graph_node_kernel_ctor_tag,$/;"	f	struct:Kokkos::Impl::GraphNodeImpl
GraphNodeImpl	impl/Kokkos_GraphNodeImpl.hpp	/^  explicit GraphNodeImpl(ExecutionSpace const& ex) noexcept$/;"	f	struct:Kokkos::Impl::GraphNodeImpl
GraphNodeImpl	impl/Kokkos_GraphNodeImpl.hpp	/^struct GraphNodeImpl$/;"	s	namespace:Kokkos::Impl
GraphNodeImpl	impl/Kokkos_GraphNodeImpl.hpp	/^struct GraphNodeImpl<ExecutionSpace, Kernel,$/;"	s	namespace:Kokkos::Impl
GraphNodeImpl	impl/Kokkos_GraphNodeImpl.hpp	/^struct GraphNodeImpl<ExecutionSpace, Kokkos::Experimental::TypeErasedTag,$/;"	s	namespace:Kokkos::Impl
GraphNodeKernelDefaultImpl	impl/Kokkos_Default_GraphNodeKernel.hpp	/^struct GraphNodeKernelDefaultImpl {$/;"	s	namespace:Kokkos::Impl
GraphNodeKernelImpl	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  GraphNodeKernelImpl(Kokkos::Cuda const& ex, Functor arg_functor,$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl
GraphNodeKernelImpl	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  GraphNodeKernelImpl(std::string, Kokkos::Cuda const&, Functor arg_functor,$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl
GraphNodeKernelImpl	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^class GraphNodeKernelImpl<Kokkos::Cuda, PolicyType, Functor, PatternTag,$/;"	c	namespace:Kokkos::Impl
GraphNodeKernelImpl	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  GraphNodeKernelImpl(ExecutionSpace const& ex, Functor arg_functor,$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl
GraphNodeKernelImpl	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  GraphNodeKernelImpl(std::string const&, ExecutionSpace const&,$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl
GraphNodeKernelImpl	impl/Kokkos_Default_GraphNodeKernel.hpp	/^class GraphNodeKernelImpl$/;"	c	namespace:Kokkos::Impl
GraphNodeRef	Kokkos_GraphNode.hpp	/^  GraphNodeRef(std::weak_ptr<graph_impl_t> arg_graph_impl,$/;"	f	class:Kokkos::Experimental::GraphNodeRef
GraphNodeRef	Kokkos_GraphNode.hpp	/^class GraphNodeRef {$/;"	c	namespace:Kokkos::Experimental
GridMaxComputeCapability_2x	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^      enum { GridMaxComputeCapability_2x = 0x0ffff };$/;"	e	enum:Kokkos::Impl::ParallelScanWithTotal::execute::__anond5eac2ad0103
HBWSpace	Kokkos_HBWSpace.hpp	/^class HBWSpace {$/;"	c	namespace:Kokkos::Experimental
HBWSpace	impl/Kokkos_HBWSpace.cpp	/^HBWSpace::HBWSpace() : m_alloc_mech(HBWSpace::STD_MALLOC) {$/;"	f	class:Kokkos::Experimental::HBWSpace
HBWSpace	impl/Kokkos_HBWSpace.cpp	/^HBWSpace::HBWSpace(const HBWSpace::AllocationMechanism &arg_alloc_mech)$/;"	f	class:Kokkos::Experimental::HBWSpace
HBW_SPACE_ATOMIC_LOCKS	impl/Kokkos_HBWSpace.cpp	/^static int HBW_SPACE_ATOMIC_LOCKS[HBW_SPACE_ATOMIC_MASK + 1];$/;"	v	namespace:Kokkos::Experimental::__anon74f35e950110	typeref:typename:int[]	file:
HBW_SPACE_ATOMIC_MASK	impl/Kokkos_HBWSpace.cpp	/^const unsigned HBW_SPACE_ATOMIC_MASK     = 0xFFFF;$/;"	v	namespace:Kokkos::Experimental::__anon74f35e950110	typeref:typename:const unsigned
HBW_SPACE_ATOMIC_XOR_MASK	impl/Kokkos_HBWSpace.cpp	/^const unsigned HBW_SPACE_ATOMIC_XOR_MASK = 0x5A39;$/;"	v	namespace:Kokkos::Experimental::__anon74f35e950110	typeref:typename:const unsigned
HEADERS	impl/CMakeLists.txt	/^SET(HEADERS "")$/;"	v
HINT_PER_BLOCK_SIZE	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { HINT_PER_BLOCK_SIZE = 2 };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0703
HIP	HIP/Kokkos_HIP_Space.cpp	/^HIP::HIP()$/;"	f	class:Kokkos::Experimental::HIP
HIP	HIP/Kokkos_HIP_Space.cpp	/^HIP::HIP(hipStream_t const stream, bool manage_stream)$/;"	f	class:Kokkos::Experimental::HIP
HIP	Kokkos_HIP_Space.hpp	/^class HIP {$/;"	c	namespace:Kokkos::Experimental
HIP	impl/Kokkos_Profiling_Interface.hpp	/^  HIP,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
HIPDispatchProperties	HIP/Kokkos_HIP_KernelLaunch.hpp	/^struct HIPDispatchProperties {$/;"	s	namespace:Kokkos::Experimental::Impl
HIPHostMalloc	impl/Kokkos_Error.hpp	/^    HIPHostMalloc,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
HIPHostPinnedSpace	HIP/Kokkos_HIP_Space.cpp	/^HIPHostPinnedSpace::HIPHostPinnedSpace() {}$/;"	f	class:Kokkos::Experimental::HIPHostPinnedSpace
HIPHostPinnedSpace	Kokkos_HIP_Space.hpp	/^class HIPHostPinnedSpace {$/;"	c	namespace:Kokkos::Experimental
HIPInternal	HIP/Kokkos_HIP_Instance.hpp	/^class HIPInternal {$/;"	c	namespace:Kokkos::Experimental::Impl
HIPInternalDevices	HIP/Kokkos_HIP_Instance.cpp	/^HIPInternalDevices::HIPInternalDevices() {$/;"	f	class:Kokkos::Experimental::__anon18c94a8c0110::HIPInternalDevices
HIPInternalDevices	HIP/Kokkos_HIP_Instance.cpp	/^class HIPInternalDevices {$/;"	c	namespace:Kokkos::Experimental::__anon18c94a8c0110	file:
HIPJoinFunctor	HIP/Kokkos_HIP_Team.hpp	/^struct HIPJoinFunctor {$/;"	s	namespace:Kokkos::Impl
HIPLaunchMechanism	HIP/Kokkos_HIP_KernelLaunch.hpp	/^enum class HIPLaunchMechanism : unsigned {$/;"	g	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
HIPLockArrays	HIP/Kokkos_HIP_Locks.hpp	/^struct HIPLockArrays {$/;"	s	namespace:Kokkos::Impl
HIPMalloc	impl/Kokkos_Error.hpp	/^    HIPMalloc,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
HIPMallocManaged	impl/Kokkos_Error.hpp	/^    HIPMallocManaged,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
HIPManagedSpace	HIP/Kokkos_HIP_Space.cpp	/^HIPManagedSpace::HIPManagedSpace() : m_device(HIP().hip_device()) {}$/;"	f	class:Kokkos::Experimental::HIPManagedSpace
HIPManagedSpace	Kokkos_HIP_Space.hpp	/^class HIPManagedSpace {$/;"	c	namespace:Kokkos::Experimental
HIPParallelLaunch	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  HIPParallelLaunch(const DriverType &driver, const dim3 &grid,$/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunch
HIPParallelLaunch	HIP/Kokkos_HIP_KernelLaunch.hpp	/^struct HIPParallelLaunch<$/;"	s	namespace:Kokkos::Experimental::Impl
HIPParallelLaunchKernelFunc	HIP/Kokkos_HIP_KernelLaunch.hpp	/^struct HIPParallelLaunchKernelFunc<$/;"	s	namespace:Kokkos::Experimental::Impl
HIPParallelLaunchKernelFunc	HIP/Kokkos_HIP_KernelLaunch.hpp	/^struct HIPParallelLaunchKernelFunc<DriverType, Kokkos::LaunchBounds<0, 0>,$/;"	s	namespace:Kokkos::Experimental::Impl
HIPParallelLaunchKernelFuncData	HIP/Kokkos_HIP_KernelLaunch.hpp	/^struct HIPParallelLaunchKernelFuncData {$/;"	s	namespace:Kokkos::Experimental::Impl
HIPParallelLaunchKernelInvoker	HIP/Kokkos_HIP_KernelLaunch.hpp	/^struct HIPParallelLaunchKernelInvoker<DriverType, LaunchBounds,$/;"	s	namespace:Kokkos::Experimental::Impl
HIPRawMemoryAllocationFailure	HIP/Kokkos_HIP_Error.hpp	/^  HIPRawMemoryAllocationFailure(size_t arg_attempted_size,$/;"	f	class:Kokkos::Experimental::HIPRawMemoryAllocationFailure
HIPRawMemoryAllocationFailure	HIP/Kokkos_HIP_Error.hpp	/^class HIPRawMemoryAllocationFailure : public RawMemoryAllocationFailure {$/;"	c	namespace:Kokkos::Experimental
HIPReductionsFunctor	HIP/Kokkos_HIP_ReduceScan.hpp	/^struct HIPReductionsFunctor<FunctorType, false> {$/;"	s	namespace:Kokkos::Impl
HIPReductionsFunctor	HIP/Kokkos_HIP_ReduceScan.hpp	/^struct HIPReductionsFunctor<FunctorType, true> {$/;"	s	namespace:Kokkos::Impl
HIPSpace	HIP/Kokkos_HIP_Space.cpp	/^HIPSpace::HIPSpace() : m_device(HIP().hip_device()) {}$/;"	f	class:Kokkos::Experimental::HIPSpace
HIPSpace	Kokkos_HIP_Space.hpp	/^class HIPSpace {$/;"	c	namespace:Kokkos::Experimental
HIPTeamMember	HIP/Kokkos_HIP_Team.hpp	/^  HIPTeamMember(void* shared, const size_t shared_begin,$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION
HIPTeamMember	HIP/Kokkos_HIP_Team.hpp	/^class HIPTeamMember {$/;"	c	namespace:Kokkos::Impl
HIPTraits	HIP/Kokkos_HIP_Instance.hpp	/^struct HIPTraits {$/;"	s	namespace:Kokkos::Experimental::Impl
HIP_ENABLE_PRINTF	setup/Kokkos_Setup_HIP.hpp	/^#define HIP_ENABLE_PRINTF$/;"	d
HIP_SAFE_CALL	HIP/Kokkos_HIP_Error.hpp	/^#define HIP_SAFE_CALL(/;"	d
HOST_SPACE_ATOMIC_LOCKS	impl/Kokkos_HostSpace.cpp	/^static int HOST_SPACE_ATOMIC_LOCKS[HOST_SPACE_ATOMIC_MASK + 1];$/;"	v	namespace:Kokkos::__anond49101b20110	typeref:typename:int[]	file:
HOST_SPACE_ATOMIC_MASK	impl/Kokkos_HostSpace.cpp	/^const unsigned HOST_SPACE_ATOMIC_MASK     = 0xFFFF;$/;"	v	namespace:Kokkos::__anond49101b20110	typeref:typename:const unsigned
HOST_SPACE_ATOMIC_XOR_MASK	impl/Kokkos_HostSpace.cpp	/^const unsigned HOST_SPACE_ATOMIC_XOR_MASK = 0x5A39;$/;"	v	namespace:Kokkos::__anond49101b20110	typeref:typename:const unsigned
HPX	Kokkos_HPX.hpp	/^  HPX() noexcept {}$/;"	f	class:Kokkos::Experimental::HPX
HPX	Kokkos_HPX.hpp	/^  HPX()$/;"	f	class:Kokkos::Experimental::HPX
HPX	Kokkos_HPX.hpp	/^  HPX(hpx::shared_future<void> future)$/;"	f	class:Kokkos::Experimental::HPX
HPX	Kokkos_HPX.hpp	/^  HPX(instance_mode mode)$/;"	f	class:Kokkos::Experimental::HPX
HPX	Kokkos_HPX.hpp	/^class HPX {$/;"	c	namespace:Kokkos::Experimental
HPX	impl/Kokkos_Profiling_Interface.hpp	/^  HPX,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
HPXTeamMember	Kokkos_HPX.hpp	/^  constexpr KOKKOS_INLINE_FUNCTION HPXTeamMember($/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION
HPXTeamMember	Kokkos_HPX.hpp	/^struct HPXTeamMember {$/;"	s	namespace:Kokkos::Impl
HWLOC_DEBUG_PRINT	impl/Kokkos_hwloc.cpp	/^#define HWLOC_DEBUG_PRINT /;"	d	file:
HasJoin	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  static constexpr int HasJoin =$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
HasJoin	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^    HasJoin =$/;"	e	enum:Kokkos::Impl::ParallelReduce::__anonc86c1b300103
Header	Kokkos_LogicalSpaces.hpp	/^    using Header     = SharedAllocationHeader;$/;"	t	function:Kokkos::Impl::SharedAllocationRecord::get_record	typeref:typename:SharedAllocationHeader
Header	impl/Kokkos_HBWSpace.cpp	/^  using Header = SharedAllocationHeader;$/;"	t	function:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace::get_record	typeref:typename:SharedAllocationHeader	file:
Header	impl/Kokkos_SharedAlloc_timpl.hpp	/^  using Header = SharedAllocationHeader;$/;"	t	function:Kokkos::Impl::SharedAllocationRecordCommon::get_record	typeref:typename:SharedAllocationHeader
HierarchyConstructor	Kokkos_Tuners.hpp	/^  using HierarchyConstructor =$/;"	t	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:Impl::ValueHierarchyConstructor<Container<TemplateArguments...>>
High	Kokkos_TaskScheduler_fwd.hpp	/^enum class TaskPriority : int { High = 0, Regular = 1, Low = 2 };$/;"	e	enum:Kokkos::TaskPriority
HintHeavyWeight	Kokkos_Concepts.hpp	/^  constexpr static const ImplWorkItemProperty<2> HintHeavyWeight =$/;"	m	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:const ImplWorkItemProperty<2>
HintHeavyWeight_t	Kokkos_Concepts.hpp	/^  using HintHeavyWeight_t = ImplWorkItemProperty<2>;$/;"	t	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:ImplWorkItemProperty<2>
HintIrregular	Kokkos_Concepts.hpp	/^  constexpr static const ImplWorkItemProperty<8> HintIrregular =$/;"	m	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:const ImplWorkItemProperty<8>
HintIrregular_t	Kokkos_Concepts.hpp	/^  using HintIrregular_t   = ImplWorkItemProperty<8>;$/;"	t	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:ImplWorkItemProperty<8>
HintLightWeight	Kokkos_Concepts.hpp	/^  constexpr static const ImplWorkItemProperty<1> HintLightWeight =$/;"	m	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:const ImplWorkItemProperty<1>
HintLightWeight_t	Kokkos_Concepts.hpp	/^  using HintLightWeight_t = ImplWorkItemProperty<1>;$/;"	t	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:ImplWorkItemProperty<1>
HintRegular	Kokkos_Concepts.hpp	/^  constexpr static const ImplWorkItemProperty<4> HintRegular =$/;"	m	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:const ImplWorkItemProperty<4>
HintRegular_t	Kokkos_Concepts.hpp	/^  using HintRegular_t     = ImplWorkItemProperty<4>;$/;"	t	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:ImplWorkItemProperty<4>
HooksPolicy	Kokkos_View.hpp	/^  using HooksPolicy =$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::hooks_policy> typename prop Kokkos::Experimental::DefaultViewHooks>
HostBarrier	impl/Kokkos_HostBarrier.hpp	/^  HostBarrier(int size, int* buffer)$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION
HostBarrier	impl/Kokkos_HostBarrier.hpp	/^class HostBarrier {$/;"	c	namespace:Kokkos::Impl
HostInaccessibleSharedAllocationRecordCommon	Cuda/Kokkos_CudaSpace.cpp	/^template class HostInaccessibleSharedAllocationRecordCommon<Kokkos::CudaSpace>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
HostInaccessibleSharedAllocationRecordCommon	HIP/Kokkos_HIP_Space.cpp	/^template class HostInaccessibleSharedAllocationRecordCommon<$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
HostInaccessibleSharedAllocationRecordCommon	OpenACC/Kokkos_OpenACCSpace.cpp	/^template class Kokkos::Impl::HostInaccessibleSharedAllocationRecordCommon<$/;"	m	class:Kokkos::Impl	typeref:typename:class
HostInaccessibleSharedAllocationRecordCommon	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^template class HostInaccessibleSharedAllocationRecordCommon<$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
HostInaccessibleSharedAllocationRecordCommon	SYCL/Kokkos_SYCL_Space.cpp	/^template class HostInaccessibleSharedAllocationRecordCommon<$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
HostInaccessibleSharedAllocationRecordCommon	impl/Kokkos_SharedAlloc.hpp	/^class HostInaccessibleSharedAllocationRecordCommon$/;"	c	namespace:Kokkos::Impl
HostIterateTile	impl/KokkosExp_Host_IterateTile.hpp	/^  inline HostIterateTile($/;"	f	struct:Kokkos::Impl::HostIterateTile
HostIterateTile	impl/KokkosExp_Host_IterateTile.hpp	/^  inline HostIterateTile(RP const& rp, Functor const& func, value_type& v)$/;"	f	struct:Kokkos::Impl::HostIterateTile
HostIterateTile	impl/KokkosExp_Host_IterateTile.hpp	/^struct HostIterateTile<RP, Functor, Tag, ValueType,$/;"	s	namespace:Kokkos::Impl
HostMirror	Kokkos_Crs.hpp	/^  using HostMirror =$/;"	t	class:Kokkos::Crs	typeref:typename:Crs<DataType,array_layout,typename traits::host_mirror_space,SizeType>
HostMirror	Kokkos_HostSpace.hpp	/^struct HostMirror {$/;"	s	namespace:Kokkos::Impl
HostMirror	Kokkos_View.hpp	/^  using HostMirror =$/;"	t	class:Kokkos::View	typeref:typename:View<typename traits::non_const_data_type,typename traits::array_layout,Device<DefaultHostExecutionSpace,typename traits::host_mirror_space::memory_space>,typename traits::hooks_policy>
HostMirrorSpace	Kokkos_View.hpp	/^  using HostMirrorSpace = std::conditional_t<$/;"	t	struct:Kokkos::ViewTraits
HostMirrorSpace	Kokkos_View.hpp	/^  using HostMirrorSpace = typename ViewTraits<void, Prop...>::HostMirrorSpace;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::HostMirrorSpace
HostMirrorSpace	Kokkos_View.hpp	/^  using HostMirrorSpace = void;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:void
HostMirrorSpace	Kokkos_View.hpp	/^  using HostMirrorSpace =$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:Kokkos::Impl::HostMirror<Space>::Space::memory_space
HostSharedPtr	impl/Kokkos_HostSharedPtr.hpp	/^  HostSharedPtr(T* element_ptr, const Deleter& deleter)$/;"	f	class:Kokkos::Impl::HostSharedPtr
HostSharedPtr	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION HostSharedPtr(HostSharedPtr&& other) noexcept$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION
HostSharedPtr	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION HostSharedPtr(const HostSharedPtr& other) noexcept$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION
HostSharedPtr	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION constexpr HostSharedPtr(std::nullptr_t) {}$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION 
HostSharedPtr	impl/Kokkos_HostSharedPtr.hpp	/^  explicit HostSharedPtr(T* element_ptr)$/;"	f	class:Kokkos::Impl::HostSharedPtr
HostSharedPtr	impl/Kokkos_HostSharedPtr.hpp	/^class HostSharedPtr {$/;"	c	namespace:Kokkos::Impl
HostSpace	Kokkos_HostSpace.hpp	/^class HostSpace {$/;"	c	namespace:Kokkos
HostSpace	Kokkos_View.hpp	/^  enum { is_hostspace = std::is_same<MemorySpace, HostSpace>::value };$/;"	e	enum:Kokkos::ViewTraits::__anon8559ec870503
HostSpace	impl/Kokkos_HostSpace.cpp	/^HostSpace::HostSpace()$/;"	f	class:Kokkos::HostSpace
HostSpace	impl/Kokkos_HostSpace.cpp	/^HostSpace::HostSpace(const HostSpace::AllocationMechanism &arg_alloc_mech)$/;"	f	class:Kokkos::HostSpace
HostThreadTeamData	impl/Kokkos_HostThreadTeam.hpp	/^      HostThreadTeamData() noexcept$/;"	f	class:Kokkos::Impl::HostThreadTeamData
HostThreadTeamData	impl/Kokkos_HostThreadTeam.hpp	/^class HostThreadTeamData {$/;"	c	namespace:Kokkos::Impl
HostThreadTeamDataSingleton	OpenMP/Kokkos_OpenMP_Task.cpp	/^HostThreadTeamDataSingleton::HostThreadTeamDataSingleton()$/;"	f	class:Kokkos::Impl::HostThreadTeamDataSingleton
HostThreadTeamDataSingleton	OpenMP/Kokkos_OpenMP_Task.hpp	/^class HostThreadTeamDataSingleton : private HostThreadTeamData {$/;"	c	namespace:Kokkos::Impl
HostThreadTeamMember	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr HostThreadTeamMember(HostThreadTeamData& arg_data) noexcept$/;"	f	class:Kokkos::Impl::HostThreadTeamMember
HostThreadTeamMember	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr HostThreadTeamMember(HostThreadTeamData& arg_data,$/;"	f	class:Kokkos::Impl::HostThreadTeamMember
HostThreadTeamMember	impl/Kokkos_HostThreadTeam.hpp	/^class HostThreadTeamMember {$/;"	c	namespace:Kokkos::Impl
INTEL_MM_ALLOC	Kokkos_HBWSpace.hpp	/^    INTEL_MM_ALLOC$/;"	e	enum:Kokkos::Experimental::HBWSpace::AllocationMechanism
INTEL_MM_ALLOC	Kokkos_HostSpace.hpp	/^    INTEL_MM_ALLOC$/;"	e	enum:Kokkos::HostSpace::AllocationMechanism
Impl	Cuda/Kokkos_CudaSpace.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	Cuda/Kokkos_Cuda_Alloc.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Error.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_GraphNode_Impl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Instance.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	Cuda/Kokkos_Cuda_Instance.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Instance.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Locks.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	Cuda/Kokkos_Cuda_Locks.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Task.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	Cuda/Kokkos_Cuda_Task.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_Vectorization.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_View.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Cuda/Kokkos_Cuda_abort.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Abort.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Atomic.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	HIP/Kokkos_HIP_Error.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Half_Impl_Type.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Instance.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	HIP/Kokkos_HIP_Instance.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental	file:
Impl	HIP/Kokkos_HIP_Instance.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	HIP/Kokkos_HIP_KernelLaunch.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	HIP/Kokkos_HIP_Locks.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	HIP/Kokkos_HIP_Locks.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Parallel_Range.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Parallel_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_ReduceScan.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Space.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	HIP/Kokkos_HIP_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_UniqueToken.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HIP/Kokkos_HIP_Vectorization.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HPX/Kokkos_HPX.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	HPX/Kokkos_HPX_Task.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	HPX/Kokkos_HPX_Task.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	KokkosExp_InterOp.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	KokkosExp_MDRangePolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_AnonymousSpace.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Array.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Atomic.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Atomics_Desul_Wrapper.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Concepts.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_CopyViews.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Core.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Core_fwd.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Crs.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Cuda.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_CudaSpace.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_DetectionIdiom.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_ExecPolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Extents.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Future.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_HBWSpace.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_HBWSpace.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	Kokkos_HIP_Space.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_HIP_Space.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	Kokkos_HPX.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Half.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Half.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	Kokkos_HostSpace.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_LogicalSpaces.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_MathematicalFunctions.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_MemoryPool.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_MemoryTraits.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_NumericTraits.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	Kokkos_OpenMP.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_OpenMPTarget.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_OpenMPTarget.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	Kokkos_OpenMPTargetSpace.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Pair.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Parallel.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Parallel_Reduce.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_SYCL.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	Kokkos_SYCL_Space.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Serial.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_TaskScheduler.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_TaskScheduler_fwd.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Threads.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_Tuners.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Tools::Experimental
Impl	Kokkos_View.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Kokkos_WorkGraphPolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenACC/Kokkos_OpenACC.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	OpenACC/Kokkos_OpenACC.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	OpenACC/Kokkos_OpenACC_Instance.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	OpenACC/Kokkos_OpenACC_Traits.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	OpenMP/Kokkos_OpenMP_Instance.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	OpenMP/Kokkos_OpenMP_Instance.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMP/Kokkos_OpenMP_Task.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	OpenMP/Kokkos_OpenMP_Task.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMP/Kokkos_OpenMP_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Abort.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Error.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental	file:
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental	file:
Impl	SYCL/Kokkos_SYCL_Abort.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_DeepCopy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_Half_Impl_Type.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_Instance.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental	file:
Impl	SYCL/Kokkos_SYCL_Instance.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^namespace Kokkos::Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_Space.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	SYCL/Kokkos_SYCL_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	Serial/Kokkos_Serial.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Serial/Kokkos_Serial_Parallel_Range.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Serial/Kokkos_Serial_Parallel_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Serial/Kokkos_Serial_Task.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	Serial/Kokkos_Serial_Task.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Threads/Kokkos_ThreadsExec.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	Threads/Kokkos_ThreadsExec.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Threads/Kokkos_ThreadsTeam.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Threads/Kokkos_Threads_Parallel_Range.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Threads/Kokkos_Threads_Parallel_Team.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	View/Hooks/Kokkos_ViewHooks.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental
Impl	fwd/Kokkos_Fwd_CUDA.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/KokkosExp_Host_IterateTile.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/KokkosExp_IterateTileGPU.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_AnalyzePolicy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Atomic_Assembly.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Atomic_Generic.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Atomic_Load.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Atomic_Memory_Order.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Atomic_Store.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Atomic_View.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Atomic_Windows.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_BitOps.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_CPUDiscovery.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_CPUDiscovery.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ChaseLev.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ClockTic.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Combined_Reducer.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Command_Line_Parsing.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ConcurrentBitset.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Core.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_Default_GraphNodeKernel.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Default_GraphNode_Impl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Default_Graph_Impl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Default_Graph_fwd.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_DeviceManagement.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_EBO.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Error.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_Error.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ExecPolicy.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_ExecSpaceManager.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_FixedBufferMemoryPool.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_FunctorAnalysis.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_GraphImpl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_GraphImpl_Utilities.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_GraphImpl_fwd.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_GraphNodeCustomization.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_GraphNodeImpl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_HBWSpace.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_HBWSpace.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental	file:
Impl	impl/Kokkos_HostBarrier.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_HostBarrier.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_HostSharedPtr.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_HostSpace.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_HostSpace_deepcopy.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_HostSpace_deepcopy.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_HostThreadTeam.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_HostThreadTeam.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_InitializationSettings.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_LIFO.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_LinkedListNode.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_MemoryPool.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_MemoryPoolAllocator.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_MemorySpace.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_MemorySpace.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_MultipleTaskQueue.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_NumericTraits.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Experimental	file:
Impl	impl/Kokkos_OptionalRef.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ParseCommandLineArgumentsAndEnvironmentVariables.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_PhysicalLayout.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Profiling.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Tools	file:
Impl	impl/Kokkos_Profiling.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Tools::Experimental	file:
Impl	impl/Kokkos_Profiling.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Tools
Impl	impl/Kokkos_Profiling.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Tools::Experimental
Impl	impl/Kokkos_QuadPrecisionMath.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_SharedAlloc.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_SharedAlloc.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_SharedAlloc_timpl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_SimpleTaskScheduler.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_SingleTaskQueue.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Spinwait.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_Spinwait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Stacktrace.cpp	/^namespace Impl {$/;"	n	namespace:Kokkos	file:
Impl	impl/Kokkos_Stacktrace.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_StringManipulation.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskBase.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskNode.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskPolicyData.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskQueue.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskQueueCommon.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskQueueMemoryManager.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskQueueMultiple.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskQueueMultiple_impl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskQueue_impl.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskResult.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_TaskTeamMember.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Timer.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Tools_Generic.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Tools
Impl	impl/Kokkos_Tools_Generic.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Tools::Experimental
Impl	impl/Kokkos_Tools_Generic.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos::Tools::Experimental::Impl
Impl	impl/Kokkos_Traits.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_Utilities.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_VLAEmulation.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ViewArray.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ViewCtor.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ViewLayoutTiled.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ViewMapping.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ViewTracker.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	impl/Kokkos_ViewUniformType.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_ExecutionSpaceTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_GraphKernelTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_IndexTypeTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_IterationPatternTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_LaunchBoundsTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_OccupancyControlTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_PolicyTraitAdaptor.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_PolicyTraitMatcher.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_ScheduleTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_Traits_fwd.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_WorkItemPropertyTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
Impl	traits/Kokkos_WorkTagTrait.hpp	/^namespace Impl {$/;"	n	namespace:Kokkos
ImplWorkItemProperty	Kokkos_Concepts.hpp	/^  struct ImplWorkItemProperty {$/;"	s	struct:Kokkos::Experimental::WorkItemProperty
InCrs	Kokkos_Crs.hpp	/^  using InCrs = Crs<DataType, Arg1Type, Arg2Type, SizeType>;$/;"	t	function:Kokkos::get_crs_transpose_counts	typeref:typename:Crs<DataType,Arg1Type,Arg2Type,SizeType>
InPlaceTag	impl/Kokkos_OptionalRef.hpp	/^struct InPlaceTag {};$/;"	s	namespace:Kokkos::Impl
Inactive	Threads/Kokkos_ThreadsExec.hpp	/^    Inactive  \/\/\/<  Exists, waiting for work$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60403
Index	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using Index   = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::index_type
Index	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using Index   = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::index_type
IndexInUse	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  enum : size_type { IndexInUse = ~size_type(0) };$/;"	e	enum:Kokkos::Impl::FixedBlockSizeMemoryPool::__anon19497b0a0203
IndexType	Kokkos_Concepts.hpp	/^struct IndexType {$/;"	s	namespace:Kokkos
IndexTypePolicyMixin	traits/Kokkos_IndexTypeTrait.hpp	/^struct IndexTypePolicyMixin : AnalyzeNextTrait {$/;"	s	namespace:Kokkos::Impl
IndexTypePolicyMixin	traits/Kokkos_IndexTypeTrait.hpp	/^struct IndexTypePolicyMixin<Kokkos::IndexType<IntegralIndexType>,$/;"	s	namespace:Kokkos::Impl
IndexTypeTrait	traits/Kokkos_IndexTypeTrait.hpp	/^struct IndexTypeTrait : TraitSpecificationBase<IndexTypeTrait> {$/;"	s	namespace:Kokkos::Impl
IndirectKernelMem	SYCL/Kokkos_SYCL_Instance.hpp	/^  using IndirectKernelMem = USMObjectMem<sycl::usm::alloc::host>;$/;"	t	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:USMObjectMem<sycl::usm::alloc::host>
IndirectKernelMem	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    using IndirectKernelMem =$/;"	t	function:Kokkos::Impl::ParallelReduce::execute	typeref:typename:Kokkos::Experimental::Impl::SYCLInternal::IndirectKernelMem
IndirectKernelMem	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^    using IndirectKernelMem =$/;"	t	function:Kokkos::Impl::ParallelReduce::execute	typeref:typename:Kokkos::Experimental::Impl::SYCLInternal::IndirectKernelMem
InitArguments	impl/Kokkos_InitializationSettings.hpp	/^  InitArguments(int nt = -1, int nn = -1, int dv = -1, bool dw = false,$/;"	f	struct:Kokkos::InitArguments
InitArguments	impl/Kokkos_InitializationSettings.hpp	/^struct InitArguments {$/;"	s	namespace:Kokkos
InitArguments	impl/Kokkos_Profiling.hpp	/^struct InitArguments {$/;"	s	namespace:Kokkos::Tools
InitializationResult	impl/Kokkos_Profiling.hpp	/^  enum InitializationResult {$/;"	g	struct:Kokkos::Tools::Impl::InitializationStatus
InitializationSettings	impl/Kokkos_InitializationSettings.hpp	/^  InitializationSettings(InitArguments const& old) {$/;"	f	class:Kokkos::InitializationSettings
InitializationSettings	impl/Kokkos_InitializationSettings.hpp	/^class InitializationSettings {$/;"	c	namespace:Kokkos
InitializationSettingsHelper	impl/Kokkos_InitializationSettings.hpp	/^struct InitializationSettingsHelper<bool> {$/;"	s	namespace:Kokkos::Impl
InitializationSettingsHelper	impl/Kokkos_InitializationSettings.hpp	/^struct InitializationSettingsHelper<int> {$/;"	s	namespace:Kokkos::Impl
InitializationSettingsHelper	impl/Kokkos_InitializationSettings.hpp	/^struct InitializationSettingsHelper<std::string> {$/;"	s	namespace:Kokkos::Impl
InitializationStatus	impl/Kokkos_Profiling.hpp	/^struct InitializationStatus {$/;"	s	namespace:Kokkos::Tools::Impl
Instance	Kokkos_UniqueToken.hpp	/^enum class UniqueTokenScope : int { Instance, Global };$/;"	e	enum:Kokkos::Experimental::UniqueTokenScope
IntelMMAlloc	impl/Kokkos_Error.hpp	/^    IntelMMAlloc,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
Interface	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using Interface =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_common	typeref:typename:Impl::DeduceFunctorPatternInterface<ClosureType>::type
Interface	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using Interface =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_common_reduce	typeref:typename:Impl::DeduceFunctorPatternInterface<ClosureType>::type
InternalRangeRank	impl/Kokkos_ViewMapping.hpp	/^  enum { InternalRangeRank = RangeRank ? RangeRank : +1u };$/;"	e	enum:Kokkos::Impl::SubviewExtents::__anon421557342303
InvalidAllocationSize	impl/Kokkos_Error.hpp	/^    InvalidAllocationSize,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::FailureMode
InvalidType	Kokkos_Core_fwd.hpp	/^struct InvalidType {};$/;"	s	namespace:Kokkos
IsArray	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  static constexpr int IsArray    = std::is_pointer<reference_type>::value;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
IsGraphKernelTag	impl/Kokkos_GraphImpl_fwd.hpp	/^struct IsGraphKernelTag {};$/;"	s	namespace:Kokkos::Impl
Iterate	KokkosExp_MDRangePolicy.hpp	/^using Iterate KOKKOS_DEPRECATED = Kokkos::Iterate;$/;"	t	namespace:Kokkos::Experimental	typeref:typename:Kokkos::Iterate
Iterate	Kokkos_Layout.hpp	/^enum class Iterate {$/;"	g	namespace:Kokkos
IterationPatternTrait	traits/Kokkos_IterationPatternTrait.hpp	/^struct IterationPatternTrait : TraitSpecificationBase<IterationPatternTrait> {$/;"	s	namespace:Kokkos::Impl
KOKKOSP_DEVICE_INFO_HPP	impl/Kokkos_Profiling_DeviceInfo.hpp	/^#define KOKKOSP_DEVICE_INFO_HPP$/;"	d
KOKKOSP_INTERFACE_HPP	impl/Kokkos_Profiling_Interface.hpp	/^#define KOKKOSP_INTERFACE_HPP$/;"	d
KOKKOSP_INTERFACE_VERSION	impl/Kokkos_Profiling_C_Interface.h	/^#define KOKKOSP_INTERFACE_VERSION /;"	d
KOKKOSP_PROFILE_SECTION_HPP	Kokkos_Profiling_ProfileSection.hpp	/^#define KOKKOSP_PROFILE_SECTION_HPP$/;"	d
KOKKOSTRAITS_HPP	impl/Kokkos_Traits.hpp	/^#define KOKKOSTRAITS_HPP$/;"	d
KOKKOS_ABORT_MESSAGE_BUFFER_SIZE	impl/Kokkos_Error.hpp	/^#define KOKKOS_ABORT_MESSAGE_BUFFER_SIZE /;"	d
KOKKOS_ACQUIRE_UNIQUE_TOKEN_IMPL_HPP	Kokkos_AcquireUniqueTokenImpl.hpp	/^#define KOKKOS_ACQUIRE_UNIQUE_TOKEN_IMPL_HPP$/;"	d
KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_CUDA	Kokkos_Macros.hpp	/^#define KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_CUDA$/;"	d
KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HIP_GPU	Kokkos_Macros.hpp	/^#define KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HIP_GPU$/;"	d
KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HOST	Kokkos_Macros.hpp	/^#define KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HOST$/;"	d
KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_SYCL	Kokkos_Macros.hpp	/^#define KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_SYCL$/;"	d
KOKKOS_ANONYMOUSSPACE_HPP	Kokkos_AnonymousSpace.hpp	/^#define KOKKOS_ANONYMOUSSPACE_HPP$/;"	d
KOKKOS_ARRAY_BOUNDS_CHECK	Kokkos_Array.hpp	/^#define KOKKOS_ARRAY_BOUNDS_CHECK(/;"	d
KOKKOS_ARRAY_HPP	Kokkos_Array.hpp	/^#define KOKKOS_ARRAY_HPP$/;"	d
KOKKOS_ASSERT	impl/Kokkos_Error.hpp	/^#define KOKKOS_ASSERT(/;"	d
KOKKOS_ATOMICS_DESUL_CONFIG_HPP	Kokkos_Atomics_Desul_Config.hpp	/^#define KOKKOS_ATOMICS_DESUL_CONFIG_HPP$/;"	d
KOKKOS_ATOMIC_ASSEMBLY_HPP	impl/Kokkos_Atomic_Assembly.hpp	/^#define KOKKOS_ATOMIC_ASSEMBLY_HPP$/;"	d
KOKKOS_ATOMIC_COMPARE_EXCHANGE_STRONG_HPP	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^#define KOKKOS_ATOMIC_COMPARE_EXCHANGE_STRONG_HPP$/;"	d
KOKKOS_ATOMIC_COMPARE_EXCHANGE_WEAK_HPP	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^#define KOKKOS_ATOMIC_COMPARE_EXCHANGE_WEAK_HPP$/;"	d
KOKKOS_ATOMIC_DECREMENT_HPP	impl/Kokkos_Atomic_Decrement.hpp	/^#define KOKKOS_ATOMIC_DECREMENT_HPP$/;"	d
KOKKOS_ATOMIC_EXCHANGE_HPP	impl/Kokkos_Atomic_Exchange.hpp	/^#define KOKKOS_ATOMIC_EXCHANGE_HPP$/;"	d
KOKKOS_ATOMIC_FETCH_ADD_HPP	impl/Kokkos_Atomic_Fetch_Add.hpp	/^#define KOKKOS_ATOMIC_FETCH_ADD_HPP$/;"	d
KOKKOS_ATOMIC_FETCH_AND_HPP	impl/Kokkos_Atomic_Fetch_And.hpp	/^#define KOKKOS_ATOMIC_FETCH_AND_HPP$/;"	d
KOKKOS_ATOMIC_FETCH_OR_HPP	impl/Kokkos_Atomic_Fetch_Or.hpp	/^#define KOKKOS_ATOMIC_FETCH_OR_HPP$/;"	d
KOKKOS_ATOMIC_FETCH_SUB_HPP	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^#define KOKKOS_ATOMIC_FETCH_SUB_HPP$/;"	d
KOKKOS_ATOMIC_GENERIC_HPP	impl/Kokkos_Atomic_Generic.hpp	/^#define KOKKOS_ATOMIC_GENERIC_HPP$/;"	d
KOKKOS_ATOMIC_GENERIC_SECONDARY_HPP	impl/Kokkos_Atomic_Generic_Secondary.hpp	/^#define KOKKOS_ATOMIC_GENERIC_SECONDARY_HPP$/;"	d
KOKKOS_ATOMIC_HPP	Kokkos_Atomic.hpp	/^#define KOKKOS_ATOMIC_HPP$/;"	d
KOKKOS_ATOMIC_INCREMENT_HPP	impl/Kokkos_Atomic_Increment.hpp	/^#define KOKKOS_ATOMIC_INCREMENT_HPP$/;"	d
KOKKOS_ATOMIC_MINMAX_HPP	impl/Kokkos_Atomic_MinMax.hpp	/^#define KOKKOS_ATOMIC_MINMAX_HPP$/;"	d
KOKKOS_ATOMIC_VIEW_HPP	impl/Kokkos_Atomic_View.hpp	/^#define KOKKOS_ATOMIC_VIEW_HPP$/;"	d
KOKKOS_ATOMIC_WINDOWS_HPP	impl/Kokkos_Atomic_Windows.hpp	/^#define KOKKOS_ATOMIC_WINDOWS_HPP$/;"	d
KOKKOS_ATTRIBUTE_NODISCARD	Kokkos_Macros.hpp	/^#define KOKKOS_ATTRIBUTE_NODISCARD /;"	d
KOKKOS_ATTRIBUTE_NODISCARD	Kokkos_Macros.hpp	/^#define KOKKOS_ATTRIBUTE_NODISCARD$/;"	d
KOKKOS_BHALF_T_IS_FLOAT	Kokkos_Half.hpp	/^#define KOKKOS_BHALF_T_IS_FLOAT /;"	d
KOKKOS_BITOPS_HPP	impl/Kokkos_BitOps.hpp	/^#define KOKKOS_BITOPS_HPP$/;"	d
KOKKOS_CLASS_LAMBDA	Kokkos_Macros.hpp	/^#define KOKKOS_CLASS_LAMBDA /;"	d
KOKKOS_CLASS_LAMBDA	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_CLASS_LAMBDA /;"	d
KOKKOS_CLASS_LAMBDA	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_CLASS_LAMBDA /;"	d
KOKKOS_CLOCKTIC_HPP	impl/Kokkos_ClockTic.hpp	/^#define KOKKOS_CLOCKTIC_HPP$/;"	d
KOKKOS_COMBINED_REDUCER_HPP	impl/Kokkos_Combined_Reducer.hpp	/^#define KOKKOS_COMBINED_REDUCER_HPP$/;"	d
KOKKOS_COMMAND_LINE_PARSING_HPP	impl/Kokkos_Command_Line_Parsing.hpp	/^#define KOKKOS_COMMAND_LINE_PARSING_HPP$/;"	d
KOKKOS_COMPILER_APPLECC	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_APPLECC /;"	d
KOKKOS_COMPILER_CLANG	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_CLANG /;"	d
KOKKOS_COMPILER_CRAYC	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_CRAYC /;"	d
KOKKOS_COMPILER_GNU	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_GNU /;"	d
KOKKOS_COMPILER_IBM	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_IBM /;"	d
KOKKOS_COMPILER_INTEL	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_INTEL /;"	d
KOKKOS_COMPILER_MSVC	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_MSVC /;"	d
KOKKOS_COMPILER_NVCC	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_NVCC /;"	d
KOKKOS_COMPILER_NVHPC	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_NVHPC /;"	d
KOKKOS_COMPILER_PGI	Kokkos_Macros.hpp	/^#define KOKKOS_COMPILER_PGI /;"	d
KOKKOS_COMPLEX_HPP	Kokkos_Complex.hpp	/^#define KOKKOS_COMPLEX_HPP$/;"	d
KOKKOS_CONCURRENTBITSET_HPP	impl/Kokkos_ConcurrentBitset.hpp	/^#define KOKKOS_CONCURRENTBITSET_HPP$/;"	d
KOKKOS_CONSTEXPR_14	Kokkos_Macros.hpp	/^#define KOKKOS_CONSTEXPR_14 /;"	d
KOKKOS_COPYVIEWS_HPP_	Kokkos_CopyViews.hpp	/^#define KOKKOS_COPYVIEWS_HPP_$/;"	d
KOKKOS_COPY_CUDA_LOCK_ARRAYS_TO_DEVICE	Cuda/Kokkos_Cuda_Locks.hpp	/^#define KOKKOS_COPY_CUDA_LOCK_ARRAYS_TO_DEVICE(/;"	d
KOKKOS_COPY_HIP_LOCK_ARRAYS_TO_DEVICE	HIP/Kokkos_HIP_Locks.hpp	/^#define KOKKOS_COPY_HIP_LOCK_ARRAYS_TO_DEVICE(/;"	d
KOKKOS_CORE_CONCEPTS_HPP	Kokkos_Concepts.hpp	/^#define KOKKOS_CORE_CONCEPTS_HPP$/;"	d
KOKKOS_CORE_EXP_INTEROP_HPP	KokkosExp_InterOp.hpp	/^#define KOKKOS_CORE_EXP_INTEROP_HPP$/;"	d
KOKKOS_CORE_EXP_MD_RANGE_POLICY_HPP	KokkosExp_MDRangePolicy.hpp	/^#define KOKKOS_CORE_EXP_MD_RANGE_POLICY_HPP$/;"	d
KOKKOS_CORE_FWD_HPP	Kokkos_Core_fwd.hpp	/^#define KOKKOS_CORE_FWD_HPP$/;"	d
KOKKOS_CORE_HEADERS	CMakeLists.txt	/^SET(KOKKOS_CORE_HEADERS)$/;"	v
KOKKOS_CORE_HPP	Kokkos_Core.hpp	/^#define KOKKOS_CORE_HPP$/;"	d
KOKKOS_CORE_IMPL_UTILITIES_HPP	impl/Kokkos_Utilities.hpp	/^#define KOKKOS_CORE_IMPL_UTILITIES_HPP$/;"	d
KOKKOS_CORE_SRCS	CMakeLists.txt	/^SET(KOKKOS_CORE_SRCS)$/;"	v
KOKKOS_CORE_SRC_CUDA_ABORT_PREVENT_LINK_ERROR	Cuda/Kokkos_Cuda_abort.hpp	/^void KOKKOS_CORE_SRC_CUDA_ABORT_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CORE_SRC_CUDA_CUDASPACE_PREVENT_LINK_ERROR	Cuda/Kokkos_CudaSpace.cpp	/^void KOKKOS_CORE_SRC_CUDA_CUDASPACE_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CORE_SRC_CUDA_CUDA_LOCKS_PREVENT_LINK_ERROR	Cuda/Kokkos_Cuda_Locks.cpp	/^void KOKKOS_CORE_SRC_CUDA_CUDA_LOCKS_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CORE_SRC_CUDA_IMPL_PREVENT_LINK_ERROR	Cuda/Kokkos_Cuda_Instance.cpp	/^void KOKKOS_CORE_SRC_CUDA_IMPL_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CORE_SRC_CUDA_KOKKOS_CUDA_TASK_PREVENT_LINK_ERROR	Cuda/Kokkos_Cuda_Task.cpp	/^void KOKKOS_CORE_SRC_CUDA_KOKKOS_CUDA_TASK_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CORE_SRC_IMPL_HPX_PREVENT_LINK_ERROR	HPX/Kokkos_HPX.cpp	/^void KOKKOS_CORE_SRC_IMPL_HPX_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CORE_SRC_IMPL_HPX_TASK_PREVENT_LINK_ERROR	HPX/Kokkos_HPX_Task.cpp	/^void KOKKOS_CORE_SRC_IMPL_HPX_TASK_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CORE_SRC_IMPL_SERIAL_TASK_PREVENT_LINK_ERROR	Serial/Kokkos_Serial_Task.cpp	/^void KOKKOS_CORE_SRC_IMPL_SERIAL_TASK_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CORE_SRC_OPENMP_KOKKOS_OPENMP_TASK_PREVENT_LINK_ERROR	OpenMP/Kokkos_OpenMP_Task.cpp	/^void KOKKOS_CORE_SRC_OPENMP_KOKKOS_OPENMP_TASK_PREVENT_LINK_ERROR() {}$/;"	f	typeref:typename:void
KOKKOS_CRS_HPP	Kokkos_Crs.hpp	/^#define KOKKOS_CRS_HPP$/;"	d
KOKKOS_CUDAEXEC_HPP	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^#define KOKKOS_CUDAEXEC_HPP$/;"	d
KOKKOS_CUDASPACE_HPP	Kokkos_CudaSpace.hpp	/^#define KOKKOS_CUDASPACE_HPP$/;"	d
KOKKOS_CUDA_ABORT_HPP	Cuda/Kokkos_Cuda_abort.hpp	/^#define KOKKOS_CUDA_ABORT_HPP$/;"	d
KOKKOS_CUDA_ALLOCATION_TRACKING_HPP	Cuda/Kokkos_Cuda_Alloc.hpp	/^#define KOKKOS_CUDA_ALLOCATION_TRACKING_HPP$/;"	d
KOKKOS_CUDA_ENABLE_GRAPHS	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_CUDA_ENABLE_GRAPHS$/;"	d
KOKKOS_CUDA_ERROR_HPP	Cuda/Kokkos_Cuda_Error.hpp	/^#define KOKKOS_CUDA_ERROR_HPP$/;"	d
KOKKOS_CUDA_FWD_HPP_	fwd/Kokkos_Fwd_CUDA.hpp	/^#define KOKKOS_CUDA_FWD_HPP_$/;"	d
KOKKOS_CUDA_HALF_HPP_	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^#define KOKKOS_CUDA_HALF_HPP_$/;"	d
KOKKOS_CUDA_HALF_IMPL_TYPE_HPP_	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^#define KOKKOS_CUDA_HALF_IMPL_TYPE_HPP_$/;"	d
KOKKOS_CUDA_HPP	Kokkos_Cuda.hpp	/^#define KOKKOS_CUDA_HPP$/;"	d
KOKKOS_CUDA_INSTANCE_HPP_	Cuda/Kokkos_Cuda_Instance.hpp	/^#define KOKKOS_CUDA_INSTANCE_HPP_$/;"	d
KOKKOS_CUDA_INTERNAL_HPP	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^#define KOKKOS_CUDA_INTERNAL_HPP$/;"	d
KOKKOS_CUDA_LOCKS_HPP	Cuda/Kokkos_Cuda_Locks.hpp	/^#define KOKKOS_CUDA_LOCKS_HPP$/;"	d
KOKKOS_CUDA_MDRANGEPOLICY_HPP_	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^#define KOKKOS_CUDA_MDRANGEPOLICY_HPP_$/;"	d
KOKKOS_CUDA_PARALLEL_MD_RANGE_HPP	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^#define KOKKOS_CUDA_PARALLEL_MD_RANGE_HPP$/;"	d
KOKKOS_CUDA_PARALLEL_RANGE_HPP	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^#define KOKKOS_CUDA_PARALLEL_RANGE_HPP$/;"	d
KOKKOS_CUDA_PARALLEL_TEAM_HPP	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^#define KOKKOS_CUDA_PARALLEL_TEAM_HPP$/;"	d
KOKKOS_CUDA_REDUCESCAN_HPP	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^#define KOKKOS_CUDA_REDUCESCAN_HPP$/;"	d
KOKKOS_CUDA_SETUP_HPP_	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_CUDA_SETUP_HPP_$/;"	d
KOKKOS_CUDA_TEAM_HPP	Cuda/Kokkos_Cuda_Team.hpp	/^#define KOKKOS_CUDA_TEAM_HPP$/;"	d
KOKKOS_CUDA_UNIQUE_TOKEN_HPP	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^#define KOKKOS_CUDA_UNIQUE_TOKEN_HPP$/;"	d
KOKKOS_CUDA_VECTORIZATION_HPP	Cuda/Kokkos_Cuda_Vectorization.hpp	/^#define KOKKOS_CUDA_VECTORIZATION_HPP$/;"	d
KOKKOS_CUDA_WORKGRAPHPOLICY_HPP	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^#define KOKKOS_CUDA_WORKGRAPHPOLICY_HPP$/;"	d
KOKKOS_DECLARE_CUDA_HPP	decl/Kokkos_Declare_CUDA.hpp	/^#define KOKKOS_DECLARE_CUDA_HPP$/;"	d
KOKKOS_DECLARE_HBWSPACE_HPP	decl/Kokkos_Declare_HBWSpace.hpp	/^#define KOKKOS_DECLARE_HBWSPACE_HPP$/;"	d
KOKKOS_DECLARE_HIP_HPP	decl/Kokkos_Declare_HIP.hpp	/^#define KOKKOS_DECLARE_HIP_HPP$/;"	d
KOKKOS_DECLARE_HPX_HPP	decl/Kokkos_Declare_HPX.hpp	/^#define KOKKOS_DECLARE_HPX_HPP$/;"	d
KOKKOS_DECLARE_OPENACC_HPP	decl/Kokkos_Declare_OPENACC.hpp	/^#define KOKKOS_DECLARE_OPENACC_HPP$/;"	d
KOKKOS_DECLARE_OPENMPTARGET_HPP	decl/Kokkos_Declare_OPENMPTARGET.hpp	/^#define KOKKOS_DECLARE_OPENMPTARGET_HPP$/;"	d
KOKKOS_DECLARE_OPENMP_HPP	decl/Kokkos_Declare_OPENMP.hpp	/^#define KOKKOS_DECLARE_OPENMP_HPP$/;"	d
KOKKOS_DECLARE_SERIAL_HPP	decl/Kokkos_Declare_SERIAL.hpp	/^#define KOKKOS_DECLARE_SERIAL_HPP$/;"	d
KOKKOS_DECLARE_SYCL_HPP	decl/Kokkos_Declare_SYCL.hpp	/^#define KOKKOS_DECLARE_SYCL_HPP$/;"	d
KOKKOS_DECLARE_THREADS_HPP	decl/Kokkos_Declare_THREADS.hpp	/^#define KOKKOS_DECLARE_THREADS_HPP$/;"	d
KOKKOS_DEFAULTED_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_DEFAULTED_FUNCTION /;"	d
KOKKOS_DEFAULTED_FUNCTION	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_DEFAULTED_FUNCTION /;"	d
KOKKOS_DEFAULTED_FUNCTION	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_DEFAULTED_FUNCTION /;"	d
KOKKOS_DEPRECATED	Kokkos_Macros.hpp	/^#define KOKKOS_DEPRECATED /;"	d
KOKKOS_DEPRECATED	Kokkos_Macros.hpp	/^#define KOKKOS_DEPRECATED$/;"	d
KOKKOS_DEPRECATED_TRAILING_ATTRIBUTE	Kokkos_Macros.hpp	/^#define KOKKOS_DEPRECATED_TRAILING_ATTRIBUTE$/;"	d
KOKKOS_DEPRECATED_WITH_COMMENT	Kokkos_Macros.hpp	/^#define KOKKOS_DEPRECATED_WITH_COMMENT(/;"	d
KOKKOS_DESUL_ATOMICS_VOLATILE_WRAPPER_HPP_	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^#define KOKKOS_DESUL_ATOMICS_VOLATILE_WRAPPER_HPP_$/;"	d
KOKKOS_DESUL_ATOMICS_WRAPPER_HPP_	Kokkos_Atomics_Desul_Wrapper.hpp	/^#define KOKKOS_DESUL_ATOMICS_WRAPPER_HPP_$/;"	d
KOKKOS_DESUL_MEM_SCOPE	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^#define KOKKOS_DESUL_MEM_SCOPE /;"	d
KOKKOS_DESUL_MEM_SCOPE	Kokkos_Atomics_Desul_Wrapper.hpp	/^#define KOKKOS_DESUL_MEM_SCOPE /;"	d
KOKKOS_DETECTION_IDIOM_HPP	Kokkos_DetectionIdiom.hpp	/^#define KOKKOS_DETECTION_IDIOM_HPP$/;"	d
KOKKOS_DEVICE_MANAGEMENT_HPP	impl/Kokkos_DeviceManagement.hpp	/^#define KOKKOS_DEVICE_MANAGEMENT_HPP$/;"	d
KOKKOS_EBO_HPP	impl/Kokkos_EBO.hpp	/^#define KOKKOS_EBO_HPP$/;"	d
KOKKOS_ENABLE_ASM	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_ASM /;"	d
KOKKOS_ENABLE_CUDA_ASM	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_ENABLE_CUDA_ASM$/;"	d
KOKKOS_ENABLE_CUDA_ASM_ATOMICS	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_ENABLE_CUDA_ASM_ATOMICS$/;"	d
KOKKOS_ENABLE_CUDA_ATOMICS	Kokkos_Atomic.hpp	/^#define KOKKOS_ENABLE_CUDA_ATOMICS$/;"	d
KOKKOS_ENABLE_CUDA_LDG_INTRINSIC	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_CUDA_LDG_INTRINSIC$/;"	d
KOKKOS_ENABLE_CXX11_DISPATCH_LAMBDA	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_CXX11_DISPATCH_LAMBDA$/;"	d
KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_CUDA	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_CUDA$/;"	d
KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_HIP	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_HIP$/;"	d
KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_HPX	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_HPX$/;"	d
KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_OPENMP	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_OPENMP$/;"	d
KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_OPENMPTARGET	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_OPENMPTARGET$/;"	d
KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_SERIAL	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_SERIAL$/;"	d
KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_SYCL	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_SYCL$/;"	d
KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_THREADS	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_DEFAULT_DEVICE_TYPE_THREADS$/;"	d
KOKKOS_ENABLE_GNU_ATOMICS	Kokkos_Atomic.hpp	/^#define KOKKOS_ENABLE_GNU_ATOMICS$/;"	d
KOKKOS_ENABLE_HIP_ATOMICS	Kokkos_Atomic.hpp	/^#define KOKKOS_ENABLE_HIP_ATOMICS$/;"	d
KOKKOS_ENABLE_INTEL_ATOMICS	Kokkos_Atomic.hpp	/^#define KOKKOS_ENABLE_INTEL_ATOMICS$/;"	d
KOKKOS_ENABLE_INTEL_MM_ALLOC	impl/Kokkos_HostSpace.cpp	/^#define KOKKOS_ENABLE_INTEL_MM_ALLOC$/;"	d	file:
KOKKOS_ENABLE_IVDEP_MDRANGE	impl/KokkosExp_Host_IterateTile.hpp	/^#define KOKKOS_ENABLE_IVDEP_MDRANGE /;"	d
KOKKOS_ENABLE_IVDEP_MDRANGE	impl/KokkosExp_Host_IterateTile.hpp	/^#define KOKKOS_ENABLE_IVDEP_MDRANGE$/;"	d
KOKKOS_ENABLE_NEW_LOOP_MACROS	impl/KokkosExp_Host_IterateTile.hpp	/^#define KOKKOS_ENABLE_NEW_LOOP_MACROS /;"	d
KOKKOS_ENABLE_OPENMP_ATOMICS	Kokkos_Atomic.hpp	/^#define KOKKOS_ENABLE_OPENMP_ATOMICS$/;"	d
KOKKOS_ENABLE_PRAGMA_IVDEP	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_PRAGMA_IVDEP /;"	d
KOKKOS_ENABLE_PRAGMA_LOOPCOUNT	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_PRAGMA_LOOPCOUNT /;"	d
KOKKOS_ENABLE_PRAGMA_SIMD	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_PRAGMA_SIMD /;"	d
KOKKOS_ENABLE_PRAGMA_UNROLL	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_PRAGMA_UNROLL /;"	d
KOKKOS_ENABLE_PRAGMA_VECTOR	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_PRAGMA_VECTOR /;"	d
KOKKOS_ENABLE_PRE_CUDA_10_DEPRECATION_API	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_ENABLE_PRE_CUDA_10_DEPRECATION_API$/;"	d
KOKKOS_ENABLE_RFO_PREFETCH	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_RFO_PREFETCH /;"	d
KOKKOS_ENABLE_SERIAL_ATOMICS	Kokkos_Atomic.hpp	/^#define KOKKOS_ENABLE_SERIAL_ATOMICS$/;"	d
KOKKOS_ENABLE_TASKDAG	Kokkos_Macros.hpp	/^#define KOKKOS_ENABLE_TASKDAG$/;"	d
KOKKOS_ENABLE_WINDOWS_ATOMICS	Kokkos_Atomic.hpp	/^#define KOKKOS_ENABLE_WINDOWS_ATOMICS$/;"	d
KOKKOS_ENSURES	impl/Kokkos_Error.hpp	/^#define KOKKOS_ENSURES(/;"	d
KOKKOS_ENSURE_CUDA_LOCK_ARRAYS_ON_DEVICE	Cuda/Kokkos_Cuda_Locks.hpp	/^#define KOKKOS_ENSURE_CUDA_LOCK_ARRAYS_ON_DEVICE(/;"	d
KOKKOS_ENSURE_HIP_LOCK_ARRAYS_ON_DEVICE	HIP/Kokkos_HIP_Locks.hpp	/^#define KOKKOS_ENSURE_HIP_LOCK_ARRAYS_ON_DEVICE(/;"	d
KOKKOS_EXECPOLICY_HPP	Kokkos_ExecPolicy.hpp	/^#define KOKKOS_EXECPOLICY_HPP$/;"	d
KOKKOS_EXEC_SPACE_MANAGER_HPP	impl/Kokkos_ExecSpaceManager.hpp	/^#define KOKKOS_EXEC_SPACE_MANAGER_HPP$/;"	d
KOKKOS_EXPECTS	impl/Kokkos_Error.hpp	/^#define KOKKOS_EXPECTS(/;"	d
KOKKOS_EXPERIMENTAL_CUDA_VIEW_HPP	Cuda/Kokkos_Cuda_View.hpp	/^#define KOKKOS_EXPERIMENTAL_CUDA_VIEW_HPP$/;"	d
KOKKOS_EXPERIMENTAL_IMPL_VIEW_CTOR_PROP_HPP	impl/Kokkos_ViewCtor.hpp	/^#define KOKKOS_EXPERIMENTAL_IMPL_VIEW_CTOR_PROP_HPP$/;"	d
KOKKOS_EXPERIMENTAL_VIEWHOOKS_HPP	View/Hooks/Kokkos_ViewHooks.hpp	/^#define KOKKOS_EXPERIMENTAL_VIEWHOOKS_HPP$/;"	d
KOKKOS_EXPERIMENTAL_VIEWLAYOUTTILE_HPP	impl/Kokkos_ViewLayoutTiled.hpp	/^#define KOKKOS_EXPERIMENTAL_VIEWLAYOUTTILE_HPP$/;"	d
KOKKOS_EXPERIMENTAL_VIEWUNIFORMTYPE_HPP	impl/Kokkos_ViewUniformType.hpp	/^#define KOKKOS_EXPERIMENTAL_VIEWUNIFORMTYPE_HPP$/;"	d
KOKKOS_EXPERIMENTAL_VIEW_ARRAY_MAPPING_HPP	impl/Kokkos_ViewArray.hpp	/^#define KOKKOS_EXPERIMENTAL_VIEW_ARRAY_MAPPING_HPP$/;"	d
KOKKOS_EXPERIMENTAL_VIEW_MAPPING_HPP	impl/Kokkos_ViewMapping.hpp	/^#define KOKKOS_EXPERIMENTAL_VIEW_MAPPING_HPP$/;"	d
KOKKOS_EXP_ITERATE_TILE_GPU_HPP	impl/KokkosExp_IterateTileGPU.hpp	/^#define KOKKOS_EXP_ITERATE_TILE_GPU_HPP$/;"	d
KOKKOS_FORCEINLINE_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_FORCEINLINE_FUNCTION /;"	d
KOKKOS_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_FUNCTION /;"	d
KOKKOS_FUNCTORANALYSIS_HPP	impl/Kokkos_FunctorAnalysis.hpp	/^#define KOKKOS_FUNCTORANALYSIS_HPP$/;"	d
KOKKOS_FUTURE_HPP	Kokkos_Future.hpp	/^#define KOKKOS_FUTURE_HPP$/;"	d
KOKKOS_GRAPH_HPP	Kokkos_Graph.hpp	/^#define KOKKOS_GRAPH_HPP$/;"	d
KOKKOS_HALF_HPP_	Kokkos_Half.hpp	/^#define KOKKOS_HALF_HPP_$/;"	d
KOKKOS_HALF_IS_FULL_TYPE_ON_ARCH	Kokkos_Half.hpp	/^#define KOKKOS_HALF_IS_FULL_TYPE_ON_ARCH$/;"	d
KOKKOS_HALF_T_IS_FLOAT	Kokkos_Half.hpp	/^#define KOKKOS_HALF_T_IS_FLOAT /;"	d
KOKKOS_HBWSPACE_FWD_HPP_	fwd/Kokkos_Fwd_HBWSpace.hpp	/^#define KOKKOS_HBWSPACE_FWD_HPP_$/;"	d
KOKKOS_HBWSPACE_HPP	Kokkos_HBWSpace.hpp	/^#define KOKKOS_HBWSPACE_HPP$/;"	d
KOKKOS_HIPSPACE_HPP	Kokkos_HIP_Space.hpp	/^#define KOKKOS_HIPSPACE_HPP$/;"	d
KOKKOS_HIP_ABORT_HPP	HIP/Kokkos_HIP_Abort.hpp	/^#define KOKKOS_HIP_ABORT_HPP$/;"	d
KOKKOS_HIP_ATOMIC_HPP	HIP/Kokkos_HIP_Atomic.hpp	/^#define KOKKOS_HIP_ATOMIC_HPP$/;"	d
KOKKOS_HIP_BLOCKSIZE_DEDUCTION_HPP	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^#define KOKKOS_HIP_BLOCKSIZE_DEDUCTION_HPP$/;"	d
KOKKOS_HIP_ERROR_HPP	HIP/Kokkos_HIP_Error.hpp	/^#define KOKKOS_HIP_ERROR_HPP$/;"	d
KOKKOS_HIP_FWD_HPP_	fwd/Kokkos_Fwd_HIP.hpp	/^#define KOKKOS_HIP_FWD_HPP_$/;"	d
KOKKOS_HIP_HALF_HPP_	HIP/Kokkos_HIP_Half_Conversion.hpp	/^#define KOKKOS_HIP_HALF_HPP_$/;"	d
KOKKOS_HIP_HALF_IMPL_TYPE_HPP_	HIP/Kokkos_HIP_Half_Impl_Type.hpp	/^#define KOKKOS_HIP_HALF_IMPL_TYPE_HPP_$/;"	d
KOKKOS_HIP_HPP	Kokkos_HIP.hpp	/^#define KOKKOS_HIP_HPP$/;"	d
KOKKOS_HIP_INSTANCE_HPP	HIP/Kokkos_HIP_Instance.hpp	/^#define KOKKOS_HIP_INSTANCE_HPP$/;"	d
KOKKOS_HIP_KERNEL_LAUNCH_HPP	HIP/Kokkos_HIP_KernelLaunch.hpp	/^#define KOKKOS_HIP_KERNEL_LAUNCH_HPP$/;"	d
KOKKOS_HIP_LOCKS_HPP	HIP/Kokkos_HIP_Locks.hpp	/^#define KOKKOS_HIP_LOCKS_HPP$/;"	d
KOKKOS_HIP_MDRANGEPOLICY_HPP_	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^#define KOKKOS_HIP_MDRANGEPOLICY_HPP_$/;"	d
KOKKOS_HIP_PARALLEL_MDRANGE_HPP	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^#define KOKKOS_HIP_PARALLEL_MDRANGE_HPP$/;"	d
KOKKOS_HIP_REDUCESCAN_HPP	HIP/Kokkos_HIP_ReduceScan.hpp	/^#define KOKKOS_HIP_REDUCESCAN_HPP$/;"	d
KOKKOS_HIP_SHUFFLE_REDUCE_HPP	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^#define KOKKOS_HIP_SHUFFLE_REDUCE_HPP$/;"	d
KOKKOS_HIP_TEAM_HPP	HIP/Kokkos_HIP_Team.hpp	/^#define KOKKOS_HIP_TEAM_HPP$/;"	d
KOKKOS_HIP_UNIQUE_TOKEN_HPP	HIP/Kokkos_HIP_UniqueToken.hpp	/^#define KOKKOS_HIP_UNIQUE_TOKEN_HPP$/;"	d
KOKKOS_HIP_VECTORIZATION_HPP	HIP/Kokkos_HIP_Vectorization.hpp	/^#define KOKKOS_HIP_VECTORIZATION_HPP$/;"	d
KOKKOS_HIP_WORKGRAPHPOLICY_HPP	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^#define KOKKOS_HIP_WORKGRAPHPOLICY_HPP$/;"	d
KOKKOS_HOSTSPACE_HPP	Kokkos_HostSpace.hpp	/^#define KOKKOS_HOSTSPACE_HPP$/;"	d
KOKKOS_HOST_BARRIER_HPP	impl/Kokkos_HostBarrier.hpp	/^#define KOKKOS_HOST_BARRIER_HPP$/;"	d
KOKKOS_HOST_EXP_ITERATE_TILE_HPP	impl/KokkosExp_Host_IterateTile.hpp	/^#define KOKKOS_HOST_EXP_ITERATE_TILE_HPP$/;"	d
KOKKOS_HOST_GRAPH_IMPL_HPP	impl/Kokkos_Default_Graph_Impl.hpp	/^#define KOKKOS_HOST_GRAPH_IMPL_HPP$/;"	d
KOKKOS_HPX_FWD_HPP_	fwd/Kokkos_Fwd_HPX.hpp	/^#define KOKKOS_HPX_FWD_HPP_$/;"	d
KOKKOS_HPX_HPP	Kokkos_HPX.hpp	/^#define KOKKOS_HPX_HPP$/;"	d
KOKKOS_HPX_IMPLEMENTATION	Kokkos_HPX.hpp	/^#define KOKKOS_HPX_IMPLEMENTATION /;"	d
KOKKOS_HPX_TASK_HPP	HPX/Kokkos_HPX_Task.hpp	/^#define KOKKOS_HPX_TASK_HPP$/;"	d
KOKKOS_HPX_WORKGRAPHPOLICY_HPP	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^#define KOKKOS_HPX_WORKGRAPHPOLICY_HPP$/;"	d
KOKKOS_HWLOC_HPP	Kokkos_hwloc.hpp	/^#define KOKKOS_HWLOC_HPP$/;"	d
KOKKOS_IF_ON_DEVICE	Kokkos_Macros.hpp	/^#define KOKKOS_IF_ON_DEVICE(/;"	d
KOKKOS_IF_ON_HOST	Kokkos_Macros.hpp	/^#define KOKKOS_IF_ON_HOST(/;"	d
KOKKOS_IMPLWALLTIME_HPP	impl/Kokkos_Timer.hpp	/^#define KOKKOS_IMPLWALLTIME_HPP$/;"	d
KOKKOS_IMPL_ABORT_NORETURN	impl/Kokkos_Error.hpp	/^#define KOKKOS_IMPL_ABORT_NORETURN /;"	d
KOKKOS_IMPL_ABORT_NORETURN	impl/Kokkos_Error.hpp	/^#define KOKKOS_IMPL_ABORT_NORETURN$/;"	d
KOKKOS_IMPL_ABORT_NORETURN_DEVICE	impl/Kokkos_Error.hpp	/^#define KOKKOS_IMPL_ABORT_NORETURN_DEVICE /;"	d
KOKKOS_IMPL_ABORT_NORETURN_DEVICE	impl/Kokkos_Error.hpp	/^#define KOKKOS_IMPL_ABORT_NORETURN_DEVICE$/;"	d
KOKKOS_IMPL_ALIGN_PTR	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_ALIGN_PTR(/;"	d
KOKKOS_IMPL_ANALYZE_POLICY_HPP	impl/Kokkos_AnalyzePolicy.hpp	/^#define KOKKOS_IMPL_ANALYZE_POLICY_HPP$/;"	d
KOKKOS_IMPL_BHALF_TYPE_DEFINED	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^#define KOKKOS_IMPL_BHALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_BHALF_TYPE_DEFINED	Kokkos_Half.hpp	/^#define KOKKOS_IMPL_BHALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_COMBINE_SETTING	impl/Kokkos_Core.cpp	/^#define KOKKOS_IMPL_COMBINE_SETTING(/;"	d	file:
KOKKOS_IMPL_CTOR_DEFAULT_ARG	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_CTOR_DEFAULT_ARG /;"	d
KOKKOS_IMPL_CUDA_HALF_TYPE_DEFINED	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^#define KOKKOS_IMPL_CUDA_HALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_CUDA_MAX_SHFL_SIZEOF	Cuda/Kokkos_Cuda_Vectorization.hpp	/^#define KOKKOS_IMPL_CUDA_MAX_SHFL_SIZEOF /;"	d
KOKKOS_IMPL_CUDA_SAFE_CALL	Cuda/Kokkos_Cuda_Error.hpp	/^#define KOKKOS_IMPL_CUDA_SAFE_CALL(/;"	d
KOKKOS_IMPL_CUDA_SYNCWARP_OR_RETURN	Cuda/Kokkos_Cuda_Task.hpp	/^#define KOKKOS_IMPL_CUDA_SYNCWARP_OR_RETURN(/;"	d
KOKKOS_IMPL_CUDA_TASK_HPP	Cuda/Kokkos_Cuda_Task.hpp	/^#define KOKKOS_IMPL_CUDA_TASK_HPP$/;"	d
KOKKOS_IMPL_DEBUG_TASKDAG_SCHEDULING	impl/Kokkos_TaskQueue_impl.hpp	/^#define KOKKOS_IMPL_DEBUG_TASKDAG_SCHEDULING /;"	d
KOKKOS_IMPL_DEBUG_TASKDAG_SCHEDULING_MULTIPLE	impl/Kokkos_TaskQueueMultiple_impl.hpp	/^#define KOKKOS_IMPL_DEBUG_TASKDAG_SCHEDULING_MULTIPLE /;"	d
KOKKOS_IMPL_DECLARE	impl/Kokkos_InitializationSettings.hpp	/^#define KOKKOS_IMPL_DECLARE(/;"	d
KOKKOS_IMPL_DEFAULT_EXEC_SPACE_ANNOTATION	Kokkos_Core_fwd.hpp	/^#define KOKKOS_IMPL_DEFAULT_EXEC_SPACE_ANNOTATION /;"	d
KOKKOS_IMPL_DEFAULT_EXEC_SPACE_ANNOTATION	Kokkos_Core_fwd.hpp	/^#define KOKKOS_IMPL_DEFAULT_EXEC_SPACE_ANNOTATION$/;"	d
KOKKOS_IMPL_DEFAULT_HOST_EXEC_SPACE_ANNOTATION	Kokkos_Core_fwd.hpp	/^#define KOKKOS_IMPL_DEFAULT_HOST_EXEC_SPACE_ANNOTATION /;"	d
KOKKOS_IMPL_DEFAULT_HOST_EXEC_SPACE_ANNOTATION	Kokkos_Core_fwd.hpp	/^#define KOKKOS_IMPL_DEFAULT_HOST_EXEC_SPACE_ANNOTATION$/;"	d
KOKKOS_IMPL_DEFINE_TRAIT	Kokkos_NumericTraits.hpp	/^#define KOKKOS_IMPL_DEFINE_TRAIT(/;"	d
KOKKOS_IMPL_DEVICE_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_DEVICE_FUNCTION$/;"	d
KOKKOS_IMPL_DEVICE_FUNCTION	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_IMPL_DEVICE_FUNCTION /;"	d
KOKKOS_IMPL_DEVICE_FUNCTION	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_IMPL_DEVICE_FUNCTION /;"	d
KOKKOS_IMPL_DO_NOT_USE_PRINTF	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_DO_NOT_USE_PRINTF(/;"	d
KOKKOS_IMPL_DO_NOT_USE_PRINTF	setup/Kokkos_Setup_SYCL.hpp	/^#define KOKKOS_IMPL_DO_NOT_USE_PRINTF(/;"	d
KOKKOS_IMPL_DO_PRAGMA	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_DO_PRAGMA(/;"	d
KOKKOS_IMPL_ENABLE_CXXABI	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_ENABLE_CXXABI$/;"	d
KOKKOS_IMPL_ENABLE_STACKTRACE	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_ENABLE_STACKTRACE$/;"	d
KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION /;"	d
KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION$/;"	d
KOKKOS_IMPL_ERROR_HPP	impl/Kokkos_Error.hpp	/^#define KOKKOS_IMPL_ERROR_HPP$/;"	d
KOKKOS_IMPL_ESC	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_ESC(/;"	d
KOKKOS_IMPL_ESC_	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_ESC_(/;"	d
KOKKOS_IMPL_FALLTHROUGH	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_FALLTHROUGH /;"	d
KOKKOS_IMPL_FALLTHROUGH	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_FALLTHROUGH$/;"	d
KOKKOS_IMPL_FOLD_COMMA_OPERATOR	impl/Kokkos_Utilities.hpp	/^#define KOKKOS_IMPL_FOLD_COMMA_OPERATOR(/;"	d
KOKKOS_IMPL_FORCEINLINE	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_FORCEINLINE /;"	d
KOKKOS_IMPL_FORCEINLINE	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_IMPL_FORCEINLINE /;"	d
KOKKOS_IMPL_FORCEINLINE_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_FORCEINLINE_FUNCTION /;"	d
KOKKOS_IMPL_FORCEINLINE_FUNCTION	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_IMPL_FORCEINLINE_FUNCTION /;"	d
KOKKOS_IMPL_FORCEINLINE_FUNCTION	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_IMPL_FORCEINLINE_FUNCTION /;"	d
KOKKOS_IMPL_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_FUNCTION /;"	d
KOKKOS_IMPL_FUNCTION	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_IMPL_FUNCTION /;"	d
KOKKOS_IMPL_FUNCTION	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_IMPL_FUNCTION /;"	d
KOKKOS_IMPL_GRAPHNODEIMPL_HPP	impl/Kokkos_GraphNodeImpl.hpp	/^#define KOKKOS_IMPL_GRAPHNODEIMPL_HPP$/;"	d
KOKKOS_IMPL_HALF_TYPE_DEFINED	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^#define KOKKOS_IMPL_HALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_HALF_TYPE_DEFINED	HIP/Kokkos_HIP_Half_Impl_Type.hpp	/^#define KOKKOS_IMPL_HALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_HALF_TYPE_DEFINED	Kokkos_Half.hpp	/^#define KOKKOS_IMPL_HALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_HALF_TYPE_DEFINED	SYCL/Kokkos_SYCL_Half_Impl_Type.hpp	/^#define KOKKOS_IMPL_HALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_HIERARCHICAL_REDUCERS_WORKAROUND	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^#define KOKKOS_IMPL_HIERARCHICAL_REDUCERS_WORKAROUND$/;"	d
KOKKOS_IMPL_HIP_ABORT_DOES_NOT_PRINT_MESSAGE	HIP/Kokkos_HIP_Abort.hpp	/^#define KOKKOS_IMPL_HIP_ABORT_DOES_NOT_PRINT_MESSAGE$/;"	d
KOKKOS_IMPL_HIP_CLANG_WORKAROUND	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_IMPL_HIP_CLANG_WORKAROUND$/;"	d
KOKKOS_IMPL_HIP_HALF_TYPE_DEFINED	HIP/Kokkos_HIP_Half_Impl_Type.hpp	/^#define KOKKOS_IMPL_HIP_HALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_HIP_SAFE_CALL	HIP/Kokkos_HIP_Error.hpp	/^#define KOKKOS_IMPL_HIP_SAFE_CALL(/;"	d
KOKKOS_IMPL_HIP_SPACE_ATOMIC_MASK	HIP/Kokkos_HIP_Locks.hpp	/^#define KOKKOS_IMPL_HIP_SPACE_ATOMIC_MASK /;"	d
KOKKOS_IMPL_HOSTSPACE_DEEPCOPY_HPP	impl/Kokkos_HostSpace_deepcopy.hpp	/^#define KOKKOS_IMPL_HOSTSPACE_DEEPCOPY_HPP$/;"	d
KOKKOS_IMPL_HOSTTHREADTEAM_HPP	impl/Kokkos_HostThreadTeam.hpp	/^#define KOKKOS_IMPL_HOSTTHREADTEAM_HPP$/;"	d
KOKKOS_IMPL_HOST_FORCEINLINE	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_HOST_FORCEINLINE /;"	d
KOKKOS_IMPL_HOST_FORCEINLINE_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_HOST_FORCEINLINE_FUNCTION /;"	d
KOKKOS_IMPL_HOST_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_HOST_FUNCTION$/;"	d
KOKKOS_IMPL_HOST_FUNCTION	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_IMPL_HOST_FUNCTION /;"	d
KOKKOS_IMPL_HOST_FUNCTION	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_IMPL_HOST_FUNCTION /;"	d
KOKKOS_IMPL_HOST_SHARED_PTR_HPP	impl/Kokkos_HostSharedPtr.hpp	/^#define KOKKOS_IMPL_HOST_SHARED_PTR_HPP$/;"	d
KOKKOS_IMPL_INIT_ARGS_DATA_MEMBER	impl/Kokkos_InitializationSettings.hpp	/^#define KOKKOS_IMPL_INIT_ARGS_DATA_MEMBER(/;"	d
KOKKOS_IMPL_INIT_ARGS_DATA_MEMBER_TYPE	impl/Kokkos_InitializationSettings.hpp	/^#define KOKKOS_IMPL_INIT_ARGS_DATA_MEMBER_TYPE(/;"	d
KOKKOS_IMPL_INLINE_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_INLINE_FUNCTION /;"	d
KOKKOS_IMPL_INLINE_FUNCTION	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_IMPL_INLINE_FUNCTION /;"	d
KOKKOS_IMPL_INLINE_FUNCTION	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_IMPL_INLINE_FUNCTION /;"	d
KOKKOS_IMPL_INTEL_WORKAROUND_NOEXCEPT_SPECIFICATION_VIRTUAL_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_INTEL_WORKAROUND_NOEXCEPT_SPECIFICATION_VIRTUAL_FUNCTION$/;"	d
KOKKOS_IMPL_ISH	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_ISH(/;"	d
KOKKOS_IMPL_IS_CONCEPT	Kokkos_Concepts.hpp	/^#define KOKKOS_IMPL_IS_CONCEPT(/;"	d
KOKKOS_IMPL_KOKKOS_ATOMIC_LOAD_HPP	impl/Kokkos_Atomic_Load.hpp	/^#define KOKKOS_IMPL_KOKKOS_ATOMIC_LOAD_HPP$/;"	d
KOKKOS_IMPL_KOKKOS_ATOMIC_STORE_HPP	impl/Kokkos_Atomic_Store.hpp	/^#define KOKKOS_IMPL_KOKKOS_ATOMIC_STORE_HPP$/;"	d
KOKKOS_IMPL_KOKKOS_FIXEDBUFFERMEMORYPOOL_HPP	impl/Kokkos_FixedBufferMemoryPool.hpp	/^#define KOKKOS_IMPL_KOKKOS_FIXEDBUFFERMEMORYPOOL_HPP$/;"	d
KOKKOS_IMPL_KOKKOS_GRAPHIMPL_FWD_HPP	impl/Kokkos_GraphImpl_fwd.hpp	/^#define KOKKOS_IMPL_KOKKOS_GRAPHIMPL_FWD_HPP$/;"	d
KOKKOS_IMPL_KOKKOS_GRAPHIMPL_HPP	impl/Kokkos_GraphImpl.hpp	/^#define KOKKOS_IMPL_KOKKOS_GRAPHIMPL_HPP$/;"	d
KOKKOS_IMPL_KOKKOS_GRAPHNODECUSTOMIZATION_HPP	impl/Kokkos_GraphNodeCustomization.hpp	/^#define KOKKOS_IMPL_KOKKOS_GRAPHNODECUSTOMIZATION_HPP$/;"	d
KOKKOS_IMPL_KOKKOS_PROFILING_HPP	impl/Kokkos_Profiling.hpp	/^#define KOKKOS_IMPL_KOKKOS_PROFILING_HPP$/;"	d
KOKKOS_IMPL_KOKKOS_TOOLS_GENERIC_HPP	impl/Kokkos_Tools_Generic.hpp	/^#define KOKKOS_IMPL_KOKKOS_TOOLS_GENERIC_HPP$/;"	d
KOKKOS_IMPL_KOKKOS_TOOLS_HPP	impl/Kokkos_Tools.hpp	/^#define KOKKOS_IMPL_KOKKOS_TOOLS_HPP$/;"	d
KOKKOS_IMPL_LIFO_HPP	impl/Kokkos_LIFO.hpp	/^#define KOKKOS_IMPL_LIFO_HPP$/;"	d
KOKKOS_IMPL_LINKEDLISTNODE_HPP	impl/Kokkos_LinkedListNode.hpp	/^#define KOKKOS_IMPL_LINKEDLISTNODE_HPP$/;"	d
KOKKOS_IMPL_LOCKFREEDEQUE_HPP	impl/Kokkos_ChaseLev.hpp	/^#define KOKKOS_IMPL_LOCKFREEDEQUE_HPP$/;"	d
KOKKOS_IMPL_MATH_BINARY_FUNCTION	Kokkos_MathematicalFunctions.hpp	/^#define KOKKOS_IMPL_MATH_BINARY_FUNCTION(/;"	d
KOKKOS_IMPL_MATH_CONSTANT	Kokkos_MathematicalConstants.hpp	/^#define KOKKOS_IMPL_MATH_CONSTANT(/;"	d
KOKKOS_IMPL_MATH_FUNCTIONS_DEFINED_IF_DEPRECATED_CODE_ENABLED	Kokkos_MathematicalFunctions.hpp	/^    USING_DECLARATIONS_IN_EXPERIMENTAL_NAMESPACE)                      \\$/;"	d
KOKKOS_IMPL_MATH_FUNCTIONS_NAMESPACE	Kokkos_MathematicalFunctions.hpp	/^#define KOKKOS_IMPL_MATH_FUNCTIONS_NAMESPACE /;"	d
KOKKOS_IMPL_MATH_FUNCTIONS_NAMESPACE	Kokkos_MathematicalFunctions.hpp	/^#define KOKKOS_IMPL_MATH_FUNCTIONS_NAMESPACE$/;"	d
KOKKOS_IMPL_MATH_UNARY_FUNCTION	Kokkos_MathematicalFunctions.hpp	/^#define KOKKOS_IMPL_MATH_UNARY_FUNCTION(/;"	d
KOKKOS_IMPL_MATH_UNARY_FUNCTION	Kokkos_MathematicalFunctions.hpp	/^KOKKOS_IMPL_MATH_UNARY_FUNCTION(fabs)$/;"	f	namespace:Kokkos	typeref:typename:namespace Experimental{ using ::Kokkos::abs; }
KOKKOS_IMPL_MATH_UNARY_PREDICATE	Kokkos_MathematicalFunctions.hpp	/^#define KOKKOS_IMPL_MATH_UNARY_PREDICATE(/;"	d
KOKKOS_IMPL_MAY_ALIAS	impl/Kokkos_Volatile_Load.hpp	/^#define KOKKOS_IMPL_MAY_ALIAS /;"	d
KOKKOS_IMPL_MAY_ALIAS	impl/Kokkos_Volatile_Load.hpp	/^#define KOKKOS_IMPL_MAY_ALIAS$/;"	d
KOKKOS_IMPL_MDRANGE_USE_NO_TILES	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^#define KOKKOS_IMPL_MDRANGE_USE_NO_TILES /;"	d
KOKKOS_IMPL_MEMORYPOOLALLOCATOR_HPP	impl/Kokkos_MemoryPoolAllocator.hpp	/^#define KOKKOS_IMPL_MEMORYPOOLALLOCATOR_HPP$/;"	d
KOKKOS_IMPL_MEMORYSPACE_HPP	impl/Kokkos_MemorySpace.hpp	/^#define KOKKOS_IMPL_MEMORYSPACE_HPP$/;"	d
KOKKOS_IMPL_MSVC_NVCC_EBO_WORKAROUND	traits/Kokkos_Traits_fwd.hpp	/^#define KOKKOS_IMPL_MSVC_NVCC_EBO_WORKAROUND /;"	d
KOKKOS_IMPL_MSVC_NVCC_EBO_WORKAROUND	traits/Kokkos_Traits_fwd.hpp	/^#define KOKKOS_IMPL_MSVC_NVCC_EBO_WORKAROUND$/;"	d
KOKKOS_IMPL_MULTIPLETASKQUEUE_HPP	impl/Kokkos_MultipleTaskQueue.hpp	/^#define KOKKOS_IMPL_MULTIPLETASKQUEUE_HPP$/;"	d
KOKKOS_IMPL_OPENMPTARGET_WORKAROUND	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^#define KOKKOS_IMPL_OPENMPTARGET_WORKAROUND$/;"	d	file:
KOKKOS_IMPL_OPENMP_TASK_HPP	OpenMP/Kokkos_OpenMP_Task.hpp	/^#define KOKKOS_IMPL_OPENMP_TASK_HPP$/;"	d
KOKKOS_IMPL_OPENMP_TASK_HPP	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^#define KOKKOS_IMPL_OPENMP_TASK_HPP$/;"	d
KOKKOS_IMPL_OPTIONALREF_HPP	impl/Kokkos_OptionalRef.hpp	/^#define KOKKOS_IMPL_OPTIONALREF_HPP$/;"	d
KOKKOS_IMPL_POINTEROWNERSHIP_HPP	Kokkos_PointerOwnership.hpp	/^#define KOKKOS_IMPL_POINTEROWNERSHIP_HPP$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Cuda/Kokkos_CudaSpace.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	Cuda/Kokkos_Cuda_Instance.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	Cuda/Kokkos_Cuda_Locks.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	Cuda/Kokkos_Cuda_Task.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	HIP/Kokkos_HIP_Instance.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	HIP/Kokkos_HIP_Locks.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	HIP/Kokkos_HIP_Space.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	HPX/Kokkos_HPX.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	HPX/Kokkos_HPX_Task.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	KokkosExp_InterOp.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Array.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Atomic.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Complex.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Core.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Core_fwd.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_DetectionIdiom.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Graph.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Graph_fwd.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Half.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_MathematicalConstants.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_MathematicalFunctions.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_MathematicalSpecialFunctions.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_NumericTraits.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Pair.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Profiling_ProfileSection.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	Kokkos_Timer.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenACC/Kokkos_OpenACC.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenACC/Kokkos_OpenACCSpace.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenACC/Kokkos_OpenACC_Instance.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenMP/Kokkos_OpenMP_Instance.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenMP/Kokkos_OpenMP_Task.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	SYCL/Kokkos_SYCL.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	SYCL/Kokkos_SYCL_Instance.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	SYCL/Kokkos_SYCL_Space.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	Serial/Kokkos_Serial.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	Serial/Kokkos_Serial_Task.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	Threads/Kokkos_ThreadsExec.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_CPUDiscovery.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_Command_Line_Parsing.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_Core.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_Error.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_ExecPolicy.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_HBWSpace.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_HostBarrier.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_HostSpace.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_HostSpace_deepcopy.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_HostThreadTeam.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_MemoryPool.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_MemorySpace.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_NumericTraits.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_Profiling.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_SharedAlloc.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_Spinwait.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_Stacktrace.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE	impl/Kokkos_hwloc.cpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE$/;"	d	file:
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_ARRAY	Kokkos_Array.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_ARRAY$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_ATOMIC	Kokkos_Atomic.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_ATOMIC$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_COMPLEX	Kokkos_Complex.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_COMPLEX$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_CORE	Kokkos_Core.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_CORE$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_CORE_FWD	Kokkos_Core_fwd.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_CORE_FWD$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_DETECTIONIDIOM	Kokkos_DetectionIdiom.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_DETECTIONIDIOM$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_GRAPH	Kokkos_Graph.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_GRAPH$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_GRAPH_FWD	Kokkos_Graph_fwd.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_GRAPH_FWD$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_HALF	Kokkos_Half.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_HALF$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_INTEROP	KokkosExp_InterOp.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_INTEROP$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_MATHCONSTANTS	Kokkos_MathematicalConstants.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_MATHCONSTANTS$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_MATHFUNCTIONS	Kokkos_MathematicalFunctions.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_MATHFUNCTIONS$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_MATHSPECFUNCTIONS	Kokkos_MathematicalSpecialFunctions.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_MATHSPECFUNCTIONS$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_NUMERICTRAITS	Kokkos_NumericTraits.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_NUMERICTRAITS$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_PAIR	Kokkos_Pair.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_PAIR$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_TIMER	Kokkos_Timer.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_NOTDEFINED_TIMER$/;"	d
KOKKOS_IMPL_PUBLIC_INCLUDE_PROFILING_PROFILESECTION	Kokkos_Profiling_ProfileSection.hpp	/^#define KOKKOS_IMPL_PUBLIC_INCLUDE_PROFILING_PROFILESECTION$/;"	d
KOKKOS_IMPL_ROCM_VERSION	HIP/Kokkos_HIP_Abort.hpp	/^#define KOKKOS_IMPL_ROCM_VERSION /;"	d
KOKKOS_IMPL_SERIAL_TASK_HPP	Serial/Kokkos_Serial_Task.hpp	/^#define KOKKOS_IMPL_SERIAL_TASK_HPP$/;"	d
KOKKOS_IMPL_SHAREDALLOC_TIMPL_HPP	impl/Kokkos_SharedAlloc_timpl.hpp	/^#define KOKKOS_IMPL_SHAREDALLOC_TIMPL_HPP$/;"	d
KOKKOS_IMPL_SHARED_ALLOCATION_CARRY_RECORD_BITS	impl/Kokkos_SharedAlloc.hpp	/^                                                        override_tracking) \\$/;"	d
KOKKOS_IMPL_SHARED_ALLOCATION_TRACKER_DECREMENT	impl/Kokkos_SharedAlloc.hpp	/^#define KOKKOS_IMPL_SHARED_ALLOCATION_TRACKER_DECREMENT /;"	d
KOKKOS_IMPL_SHARED_ALLOCATION_TRACKER_INCREMENT	impl/Kokkos_SharedAlloc.hpp	/^#define KOKKOS_IMPL_SHARED_ALLOCATION_TRACKER_INCREMENT /;"	d
KOKKOS_IMPL_SINGLETASKQUEUE_HPP	impl/Kokkos_SingleTaskQueue.hpp	/^#define KOKKOS_IMPL_SINGLETASKQUEUE_HPP$/;"	d
KOKKOS_IMPL_SPECIALIZE_NUMERIC_TRAIT	impl/Kokkos_QuadPrecisionMath.hpp	/^#define KOKKOS_IMPL_SPECIALIZE_NUMERIC_TRAIT(/;"	d
KOKKOS_IMPL_STRINGIFY	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_STRINGIFY(/;"	d
KOKKOS_IMPL_STRIP_PARENS	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_STRIP_PARENS(/;"	d
KOKKOS_IMPL_SYCL_HALF_TYPE_DEFINED	SYCL/Kokkos_SYCL_Half_Impl_Type.hpp	/^#define KOKKOS_IMPL_SYCL_HALF_TYPE_DEFINED$/;"	d
KOKKOS_IMPL_TASKBASE_HPP	impl/Kokkos_TaskBase.hpp	/^#define KOKKOS_IMPL_TASKBASE_HPP$/;"	d
KOKKOS_IMPL_TASKNODE_HPP	impl/Kokkos_TaskNode.hpp	/^#define KOKKOS_IMPL_TASKNODE_HPP$/;"	d
KOKKOS_IMPL_TASKPOLICYDATA_HPP	impl/Kokkos_TaskPolicyData.hpp	/^#define KOKKOS_IMPL_TASKPOLICYDATA_HPP$/;"	d
KOKKOS_IMPL_TASKQUEUECOMMON_HPP	impl/Kokkos_TaskQueueCommon.hpp	/^#define KOKKOS_IMPL_TASKQUEUECOMMON_HPP$/;"	d
KOKKOS_IMPL_TASKQUEUEMEMORYMANAGER_HPP	impl/Kokkos_TaskQueueMemoryManager.hpp	/^#define KOKKOS_IMPL_TASKQUEUEMEMORYMANAGER_HPP$/;"	d
KOKKOS_IMPL_TASKQUEUEMULTIPLE_HPP	impl/Kokkos_TaskQueueMultiple.hpp	/^#define KOKKOS_IMPL_TASKQUEUEMULTIPLE_HPP$/;"	d
KOKKOS_IMPL_TASKQUEUEMULTIPLE_IMPL_HPP	impl/Kokkos_TaskQueueMultiple_impl.hpp	/^#define KOKKOS_IMPL_TASKQUEUEMULTIPLE_IMPL_HPP$/;"	d
KOKKOS_IMPL_TASKQUEUE_HPP	impl/Kokkos_TaskQueue.hpp	/^#define KOKKOS_IMPL_TASKQUEUE_HPP$/;"	d
KOKKOS_IMPL_TASKQUEUE_IMPL_HPP	impl/Kokkos_TaskQueue_impl.hpp	/^#define KOKKOS_IMPL_TASKQUEUE_IMPL_HPP$/;"	d
KOKKOS_IMPL_TASKRESULT_HPP	impl/Kokkos_TaskResult.hpp	/^#define KOKKOS_IMPL_TASKRESULT_HPP$/;"	d
KOKKOS_IMPL_TEAM_SCAN_WORKAROUND	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^#define KOKKOS_IMPL_TEAM_SCAN_WORKAROUND$/;"	d
KOKKOS_IMPL_TOSTRING	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_TOSTRING(/;"	d
KOKKOS_IMPL_VAN_KOKKOS_IMPL_ISH	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_VAN_KOKKOS_IMPL_ISH$/;"	d
KOKKOS_IMPL_VIEW_DIMENSION	impl/Kokkos_ViewMapping.hpp	/^#define KOKKOS_IMPL_VIEW_DIMENSION(/;"	d
KOKKOS_IMPL_VIEW_OPERATOR_VERIFY	Kokkos_View.hpp	/^#define KOKKOS_IMPL_VIEW_OPERATOR_VERIFY(/;"	d
KOKKOS_IMPL_VLAEMULATION_HPP	impl/Kokkos_VLAEmulation.hpp	/^#define KOKKOS_IMPL_VLAEMULATION_HPP$/;"	d
KOKKOS_IMPL_WARNING	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_WARNING(/;"	d
KOKKOS_IMPL_WINDOWS_CUDA	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_IMPL_WINDOWS_CUDA$/;"	d
KOKKOS_IMPL_WORKAROUND_CONSTANT_EXPRESSION_COMPILER_BUG	Kokkos_NumericTraits.hpp	/^#define KOKKOS_IMPL_WORKAROUND_CONSTANT_EXPRESSION_COMPILER_BUG$/;"	d
KOKKOS_IMPL_WORKAROUND_ICE_IN_TRILINOS_WITH_OLD_INTEL_COMPILERS	Kokkos_Macros.hpp	/^#define KOKKOS_IMPL_WORKAROUND_ICE_IN_TRILINOS_WITH_OLD_INTEL_COMPILERS$/;"	d
KOKKOS_INITIALIZATION_SETTINGS_HPP	impl/Kokkos_InitializationSettings.hpp	/^#define KOKKOS_INITIALIZATION_SETTINGS_HPP$/;"	d
KOKKOS_INLINE_FUNCTION	Kokkos_Macros.hpp	/^#define KOKKOS_INLINE_FUNCTION /;"	d
KOKKOS_INLINE_FUNCTION_DELETED	Kokkos_Macros.hpp	/^#define KOKKOS_INLINE_FUNCTION_DELETED /;"	d
KOKKOS_INLINE_FUNCTION_DELETED	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_INLINE_FUNCTION_DELETED /;"	d
KOKKOS_INLINE_FUNCTION_DELETED	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_INLINE_FUNCTION_DELETED /;"	d
KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^#define KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH /;"	d
KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH	impl/Kokkos_Atomic_Load.hpp	/^#define KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH /;"	d
KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH	impl/Kokkos_Atomic_Store.hpp	/^#define KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH /;"	d
KOKKOS_INTERNAL_NOT_PARALLEL	Kokkos_Macros.hpp	/^#define KOKKOS_INTERNAL_NOT_PARALLEL$/;"	d
KOKKOS_INVALID_INDEX	Kokkos_Macros.hpp	/^#define KOKKOS_INVALID_INDEX /;"	d
KOKKOS_ITERATE_VIEW_OFFSET_ENABLE	impl/Kokkos_ViewLayoutTiled.hpp	/^#define KOKKOS_ITERATE_VIEW_OFFSET_ENABLE /;"	d
KOKKOS_KNL_USE_ASM_WORKAROUND	Kokkos_Macros.hpp	/^#define KOKKOS_KNL_USE_ASM_WORKAROUND /;"	d
KOKKOS_KOKKOS_ATOMIC_MEMORY_ORDER_HPP	impl/Kokkos_Atomic_Memory_Order.hpp	/^#define KOKKOS_KOKKOS_ATOMIC_MEMORY_ORDER_HPP$/;"	d
KOKKOS_KOKKOS_CUDA_GRAPHNODEKERNEL_IMPL_HPP	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^#define KOKKOS_KOKKOS_CUDA_GRAPHNODEKERNEL_IMPL_HPP$/;"	d
KOKKOS_KOKKOS_CUDA_GRAPHNODE_IMPL_HPP	Cuda/Kokkos_Cuda_GraphNode_Impl.hpp	/^#define KOKKOS_KOKKOS_CUDA_GRAPHNODE_IMPL_HPP$/;"	d
KOKKOS_KOKKOS_CUDA_GRAPH_IMPL_HPP	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^#define KOKKOS_KOKKOS_CUDA_GRAPH_IMPL_HPP$/;"	d
KOKKOS_KOKKOS_EXECUTIONSPACETRAIT_HPP	traits/Kokkos_ExecutionSpaceTrait.hpp	/^#define KOKKOS_KOKKOS_EXECUTIONSPACETRAIT_HPP$/;"	d
KOKKOS_KOKKOS_EXTENTS_HPP	Kokkos_Extents.hpp	/^#define KOKKOS_KOKKOS_EXTENTS_HPP$/;"	d
KOKKOS_KOKKOS_GRAPHIMPL_UTILITIES_HPP	impl/Kokkos_GraphImpl_Utilities.hpp	/^#define KOKKOS_KOKKOS_GRAPHIMPL_UTILITIES_HPP$/;"	d
KOKKOS_KOKKOS_GRAPHKERNELTRAIT_HPP	traits/Kokkos_GraphKernelTrait.hpp	/^#define KOKKOS_KOKKOS_GRAPHKERNELTRAIT_HPP$/;"	d
KOKKOS_KOKKOS_GRAPHNODE_HPP	Kokkos_GraphNode.hpp	/^#define KOKKOS_KOKKOS_GRAPHNODE_HPP$/;"	d
KOKKOS_KOKKOS_GRAPH_FWD_HPP	Kokkos_Graph_fwd.hpp	/^#define KOKKOS_KOKKOS_GRAPH_FWD_HPP$/;"	d
KOKKOS_KOKKOS_HOST_GRAPHNODEKERNEL_HPP	impl/Kokkos_Default_GraphNodeKernel.hpp	/^#define KOKKOS_KOKKOS_HOST_GRAPHNODEKERNEL_HPP$/;"	d
KOKKOS_KOKKOS_HOST_GRAPHNODE_IMPL_HPP	impl/Kokkos_Default_GraphNode_Impl.hpp	/^#define KOKKOS_KOKKOS_HOST_GRAPHNODE_IMPL_HPP$/;"	d
KOKKOS_KOKKOS_HOST_GRAPH_FWD_HPP	impl/Kokkos_Default_Graph_fwd.hpp	/^#define KOKKOS_KOKKOS_HOST_GRAPH_FWD_HPP$/;"	d
KOKKOS_KOKKOS_INDEXTYPETRAIT_HPP	traits/Kokkos_IndexTypeTrait.hpp	/^#define KOKKOS_KOKKOS_INDEXTYPETRAIT_HPP$/;"	d
KOKKOS_KOKKOS_ITERATIONPATTERNTRAIT_HPP	traits/Kokkos_IterationPatternTrait.hpp	/^#define KOKKOS_KOKKOS_ITERATIONPATTERNTRAIT_HPP$/;"	d
KOKKOS_KOKKOS_LAUNCHBOUNDSTRAIT_HPP	traits/Kokkos_LaunchBoundsTrait.hpp	/^#define KOKKOS_KOKKOS_LAUNCHBOUNDSTRAIT_HPP$/;"	d
KOKKOS_KOKKOS_OCCUPANCYCONTROLTRAIT_HPP	traits/Kokkos_OccupancyControlTrait.hpp	/^#define KOKKOS_KOKKOS_OCCUPANCYCONTROLTRAIT_HPP$/;"	d
KOKKOS_KOKKOS_POLICYTRAITADAPTOR_HPP	traits/Kokkos_PolicyTraitAdaptor.hpp	/^#define KOKKOS_KOKKOS_POLICYTRAITADAPTOR_HPP$/;"	d
KOKKOS_KOKKOS_POLICYTRAITMATCHER_HPP	traits/Kokkos_PolicyTraitMatcher.hpp	/^#define KOKKOS_KOKKOS_POLICYTRAITMATCHER_HPP$/;"	d
KOKKOS_KOKKOS_RANK_HPP	Kokkos_Rank.hpp	/^#define KOKKOS_KOKKOS_RANK_HPP$/;"	d
KOKKOS_KOKKOS_SCHEDULETRAIT_HPP	traits/Kokkos_ScheduleTrait.hpp	/^#define KOKKOS_KOKKOS_SCHEDULETRAIT_HPP$/;"	d
KOKKOS_KOKKOS_TRAITS_FWD_HPP	traits/Kokkos_Traits_fwd.hpp	/^#define KOKKOS_KOKKOS_TRAITS_FWD_HPP$/;"	d
KOKKOS_KOKKOS_TUNERS_HPP	Kokkos_Tuners.hpp	/^#define KOKKOS_KOKKOS_TUNERS_HPP$/;"	d
KOKKOS_KOKKOS_WORKITEMPROPERTYTRAIT_HPP	traits/Kokkos_WorkItemPropertyTrait.hpp	/^#define KOKKOS_KOKKOS_WORKITEMPROPERTYTRAIT_HPP$/;"	d
KOKKOS_KOKKOS_WORKTAGTRAIT_HPP	traits/Kokkos_WorkTagTrait.hpp	/^#define KOKKOS_KOKKOS_WORKTAGTRAIT_HPP$/;"	d
KOKKOS_LAMBDA	Kokkos_Macros.hpp	/^#define KOKKOS_LAMBDA /;"	d
KOKKOS_LAMBDA	setup/Kokkos_Setup_Cuda.hpp	/^#define KOKKOS_LAMBDA /;"	d
KOKKOS_LAMBDA	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_LAMBDA /;"	d
KOKKOS_LAYOUT_HPP	Kokkos_Layout.hpp	/^#define KOKKOS_LAYOUT_HPP$/;"	d
KOKKOS_LOGICALSPACES_HPP	Kokkos_LogicalSpaces.hpp	/^#define KOKKOS_LOGICALSPACES_HPP$/;"	d
KOKKOS_MACROS_HPP	Kokkos_Macros.hpp	/^#define KOKKOS_MACROS_HPP$/;"	d
KOKKOS_MASTER_LOCK_HPP	Kokkos_MasterLock.hpp	/^#define KOKKOS_MASTER_LOCK_HPP$/;"	d
KOKKOS_MATHEMATICAL_CONSTANTS_HPP	Kokkos_MathematicalConstants.hpp	/^#define KOKKOS_MATHEMATICAL_CONSTANTS_HPP$/;"	d
KOKKOS_MATHEMATICAL_FUNCTIONS_HPP	Kokkos_MathematicalFunctions.hpp	/^#define KOKKOS_MATHEMATICAL_FUNCTIONS_HPP$/;"	d
KOKKOS_MATHEMATICAL_SPECIAL_FUNCTIONS_HPP	Kokkos_MathematicalSpecialFunctions.hpp	/^#define KOKKOS_MATHEMATICAL_SPECIAL_FUNCTIONS_HPP$/;"	d
KOKKOS_MDRANGE_IVDEP	impl/KokkosExp_Host_IterateTile.hpp	/^#define KOKKOS_MDRANGE_IVDEP$/;"	d
KOKKOS_MEMORYPOOL_HPP	Kokkos_MemoryPool.hpp	/^#define KOKKOS_MEMORYPOOL_HPP$/;"	d
KOKKOS_MEMORYTRAITS_HPP	Kokkos_MemoryTraits.hpp	/^#define KOKKOS_MEMORYTRAITS_HPP$/;"	d
KOKKOS_MEMORY_ALIGNMENT	Kokkos_Macros.hpp	/^#define KOKKOS_MEMORY_ALIGNMENT /;"	d
KOKKOS_MEMORY_ALIGNMENT_THRESHOLD	Kokkos_Macros.hpp	/^#define KOKKOS_MEMORY_ALIGNMENT_THRESHOLD /;"	d
KOKKOS_MEMORY_FENCE_HPP	impl/Kokkos_Memory_Fence.hpp	/^#define KOKKOS_MEMORY_FENCE_HPP$/;"	d
KOKKOS_MIN_MAX_CLAMP_HPP	Kokkos_MinMaxClamp.hpp	/^#define KOKKOS_MIN_MAX_CLAMP_HPP$/;"	d
KOKKOS_NONTEMPORAL_PREFETCH_LOAD	Kokkos_Atomic.hpp	/^#define KOKKOS_NONTEMPORAL_PREFETCH_LOAD(/;"	d
KOKKOS_NONTEMPORAL_PREFETCH_LOAD	Kokkos_Atomics_Desul_Wrapper.hpp	/^#define KOKKOS_NONTEMPORAL_PREFETCH_LOAD(/;"	d
KOKKOS_NONTEMPORAL_PREFETCH_STORE	Kokkos_Atomic.hpp	/^#define KOKKOS_NONTEMPORAL_PREFETCH_STORE(/;"	d
KOKKOS_NONTEMPORAL_PREFETCH_STORE	Kokkos_Atomics_Desul_Wrapper.hpp	/^#define KOKKOS_NONTEMPORAL_PREFETCH_STORE(/;"	d
KOKKOS_NUMERIC_TRAITS_HPP	Kokkos_NumericTraits.hpp	/^#define KOKKOS_NUMERIC_TRAITS_HPP$/;"	d
KOKKOS_OPENACC_FWD_HPP_	fwd/Kokkos_Fwd_OPENACC.hpp	/^#define KOKKOS_OPENACC_FWD_HPP_$/;"	d
KOKKOS_OPENACC_HPP	OpenACC/Kokkos_OpenACC.hpp	/^#define KOKKOS_OPENACC_HPP$/;"	d
KOKKOS_OPENACC_INSTANCE_HPP	OpenACC/Kokkos_OpenACC_Instance.hpp	/^#define KOKKOS_OPENACC_INSTANCE_HPP$/;"	d
KOKKOS_OPENACC_SPACE_HPP	OpenACC/Kokkos_OpenACCSpace.hpp	/^#define KOKKOS_OPENACC_SPACE_HPP$/;"	d
KOKKOS_OPENACC_TRAITS_HPP	OpenACC/Kokkos_OpenACC_Traits.hpp	/^#define KOKKOS_OPENACC_TRAITS_HPP$/;"	d
KOKKOS_OPENMPTARGETEXEC_HPP	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^#define KOKKOS_OPENMPTARGETEXEC_HPP$/;"	d
KOKKOS_OPENMPTARGETSPACE_HPP	Kokkos_OpenMPTargetSpace.hpp	/^#define KOKKOS_OPENMPTARGETSPACE_HPP$/;"	d
KOKKOS_OPENMPTARGET_ABORT_HPP	OpenMPTarget/Kokkos_OpenMPTarget_Abort.hpp	/^#define KOKKOS_OPENMPTARGET_ABORT_HPP$/;"	d
KOKKOS_OPENMPTARGET_ERROR_HPP	OpenMPTarget/Kokkos_OpenMPTarget_Error.hpp	/^#define KOKKOS_OPENMPTARGET_ERROR_HPP$/;"	d
KOKKOS_OPENMPTARGET_FWD_HPP_	fwd/Kokkos_Fwd_OPENMPTARGET.hpp	/^#define KOKKOS_OPENMPTARGET_FWD_HPP_$/;"	d
KOKKOS_OPENMPTARGET_HPP	Kokkos_OpenMPTarget.hpp	/^#define KOKKOS_OPENMPTARGET_HPP$/;"	d
KOKKOS_OPENMPTARGET_INSTANCE_HPP	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^#define KOKKOS_OPENMPTARGET_INSTANCE_HPP$/;"	d
KOKKOS_OPENMPTARGET_PARALLEL_HPP	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^#define KOKKOS_OPENMPTARGET_PARALLEL_HPP$/;"	d
KOKKOS_OPENMPTARGET_PARALLEL_MDRANGE_HPP	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^#define KOKKOS_OPENMPTARGET_PARALLEL_MDRANGE_HPP$/;"	d
KOKKOS_OPENMPTARGET_UNIQUE_TOKEN_HPP	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^#define KOKKOS_OPENMPTARGET_UNIQUE_TOKEN_HPP$/;"	d
KOKKOS_OPENMP_FWD_HPP_	fwd/Kokkos_Fwd_OPENMP.hpp	/^#define KOKKOS_OPENMP_FWD_HPP_$/;"	d
KOKKOS_OPENMP_HPP	Kokkos_OpenMP.hpp	/^#define KOKKOS_OPENMP_HPP$/;"	d
KOKKOS_OPENMP_INSTANCE_HPP	OpenMP/Kokkos_OpenMP_Instance.hpp	/^#define KOKKOS_OPENMP_INSTANCE_HPP$/;"	d
KOKKOS_OPENMP_OPTIONAL_CHUNK_SIZE	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^#define KOKKOS_OPENMP_OPTIONAL_CHUNK_SIZE /;"	d
KOKKOS_OPENMP_OPTIONAL_CHUNK_SIZE	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^#define KOKKOS_OPENMP_OPTIONAL_CHUNK_SIZE$/;"	d
KOKKOS_OPENMP_PARALLEL_HPP	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^#define KOKKOS_OPENMP_PARALLEL_HPP$/;"	d
KOKKOS_OPENMP_TEAM_HPP	OpenMP/Kokkos_OpenMP_Team.hpp	/^#define KOKKOS_OPENMP_TEAM_HPP$/;"	d
KOKKOS_OPENMP_WORKGRAPHPOLICY_HPP	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^#define KOKKOS_OPENMP_WORKGRAPHPOLICY_HPP$/;"	d
KOKKOS_PAIR_HPP	Kokkos_Pair.hpp	/^#define KOKKOS_PAIR_HPP$/;"	d
KOKKOS_PARALLEL_HPP	Kokkos_Parallel.hpp	/^#define KOKKOS_PARALLEL_HPP$/;"	d
KOKKOS_PARALLEL_REDUCE_HPP	Kokkos_Parallel_Reduce.hpp	/^#define KOKKOS_PARALLEL_REDUCE_HPP$/;"	d
KOKKOS_PARSE_COMMAND_LINE_ARGUMENTS_AND_ENVIRONMENT_VARIABLES_HPP	impl/Kokkos_ParseCommandLineArgumentsAndEnvironmentVariables.hpp	/^#define KOKKOS_PARSE_COMMAND_LINE_ARGUMENTS_AND_ENVIRONMENT_VARIABLES_HPP$/;"	d
KOKKOS_PHYSICAL_LAYOUT_HPP	impl/Kokkos_PhysicalLayout.hpp	/^#define KOKKOS_PHYSICAL_LAYOUT_HPP$/;"	d
KOKKOS_PRAGMA_IVDEP_IF_ENABLED	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^#define KOKKOS_PRAGMA_IVDEP_IF_ENABLED /;"	d
KOKKOS_PRAGMA_IVDEP_IF_ENABLED	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^#define KOKKOS_PRAGMA_IVDEP_IF_ENABLED$/;"	d
KOKKOS_PROFILING_C_INTERFACE_HPP	impl/Kokkos_Profiling_C_Interface.h	/^#define KOKKOS_PROFILING_C_INTERFACE_HPP$/;"	d
KOKKOS_QUAD_PRECISION_MATH_HPP	impl/Kokkos_QuadPrecisionMath.hpp	/^#define KOKKOS_QUAD_PRECISION_MATH_HPP$/;"	d
KOKKOS_RESTRICT	Kokkos_Macros.hpp	/^#define KOKKOS_RESTRICT /;"	d
KOKKOS_RESTRICT	Kokkos_Macros.hpp	/^#define KOKKOS_RESTRICT$/;"	d
KOKKOS_RESTRICT_EXECUTION_TO_	Kokkos_Core_fwd.hpp	/^#define KOKKOS_RESTRICT_EXECUTION_TO_(/;"	d
KOKKOS_RESTRICT_EXECUTION_TO_DATA	Kokkos_Core_fwd.hpp	/^#define KOKKOS_RESTRICT_EXECUTION_TO_DATA(/;"	d
KOKKOS_SCRATCHSPACE_HPP	Kokkos_ScratchSpace.hpp	/^#define KOKKOS_SCRATCHSPACE_HPP$/;"	d
KOKKOS_SERIAL_FWD_HPP_	fwd/Kokkos_Fwd_SERIAL.hpp	/^#define KOKKOS_SERIAL_FWD_HPP_$/;"	d
KOKKOS_SERIAL_HPP	Kokkos_Serial.hpp	/^#define KOKKOS_SERIAL_HPP$/;"	d
KOKKOS_SERIAL_UNIQUE_TOKEN_HPP	Serial/Kokkos_Serial_UniqueToken.hpp	/^#define KOKKOS_SERIAL_UNIQUE_TOKEN_HPP$/;"	d
KOKKOS_SERIAL_WORKGRAPHPOLICY_HPP	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^#define KOKKOS_SERIAL_WORKGRAPHPOLICY_HPP$/;"	d
KOKKOS_SETUP_HIP_HPP_	setup/Kokkos_Setup_HIP.hpp	/^#define KOKKOS_SETUP_HIP_HPP_$/;"	d
KOKKOS_SETUP_SYCL_HPP_	setup/Kokkos_Setup_SYCL.hpp	/^#define KOKKOS_SETUP_SYCL_HPP_$/;"	d
KOKKOS_SHARED_ALLOC_HPP	impl/Kokkos_SharedAlloc.hpp	/^#define KOKKOS_SHARED_ALLOC_HPP$/;"	d
KOKKOS_SIMPLETASKSCHEDULER_HPP	impl/Kokkos_SimpleTaskScheduler.hpp	/^#define KOKKOS_SIMPLETASKSCHEDULER_HPP$/;"	d
KOKKOS_SIMT_ATOMIC_BUILTIN_REPLACEMENTS_DEFINED	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define KOKKOS_SIMT_ATOMIC_BUILTIN_REPLACEMENTS_DEFINED$/;"	d
KOKKOS_SPINWAIT_HPP	impl/Kokkos_Spinwait.hpp	/^#define KOKKOS_SPINWAIT_HPP$/;"	d
KOKKOS_STACKTRACE_HPP	impl/Kokkos_Stacktrace.hpp	/^#define KOKKOS_STACKTRACE_HPP$/;"	d
KOKKOS_STRING_MANIPULATION_HPP	impl/Kokkos_StringManipulation.hpp	/^#define KOKKOS_STRING_MANIPULATION_HPP$/;"	d
KOKKOS_SYCLDEEPCOPY_HPP	SYCL/Kokkos_SYCL_DeepCopy.hpp	/^#define KOKKOS_SYCLDEEPCOPY_HPP$/;"	d
KOKKOS_SYCLSPACE_HPP	Kokkos_SYCL_Space.hpp	/^#define KOKKOS_SYCLSPACE_HPP$/;"	d
KOKKOS_SYCL_ABORT_HPP	SYCL/Kokkos_SYCL_Abort.hpp	/^#define KOKKOS_SYCL_ABORT_HPP$/;"	d
KOKKOS_SYCL_FWD_HPP_	fwd/Kokkos_Fwd_SYCL.hpp	/^#define KOKKOS_SYCL_FWD_HPP_$/;"	d
KOKKOS_SYCL_HALF_HPP_	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^#define KOKKOS_SYCL_HALF_HPP_$/;"	d
KOKKOS_SYCL_HALF_IMPL_TYPE_HPP_	SYCL/Kokkos_SYCL_Half_Impl_Type.hpp	/^#define KOKKOS_SYCL_HALF_IMPL_TYPE_HPP_$/;"	d
KOKKOS_SYCL_HPP	Kokkos_SYCL.hpp	/^#define KOKKOS_SYCL_HPP$/;"	d
KOKKOS_SYCL_INSTANCE_HPP_	SYCL/Kokkos_SYCL_Instance.hpp	/^#define KOKKOS_SYCL_INSTANCE_HPP_$/;"	d
KOKKOS_SYCL_MDRANGEPOLICY_HPP_	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^#define KOKKOS_SYCL_MDRANGEPOLICY_HPP_$/;"	d
KOKKOS_SYCL_PARALLEL_RANGE_HPP_	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^#define KOKKOS_SYCL_PARALLEL_RANGE_HPP_$/;"	d
KOKKOS_SYCL_PARALLEL_REDUCE_HPP	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^#define KOKKOS_SYCL_PARALLEL_REDUCE_HPP$/;"	d
KOKKOS_SYCL_PARALLEL_TEAM_HPP	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^#define KOKKOS_SYCL_PARALLEL_TEAM_HPP$/;"	d
KOKKOS_SYCL_TEAM_HPP	SYCL/Kokkos_SYCL_Team.hpp	/^#define KOKKOS_SYCL_TEAM_HPP$/;"	d
KOKKOS_SYCL_UNIQUE_TOKEN_HPP	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^#define KOKKOS_SYCL_UNIQUE_TOKEN_HPP$/;"	d
KOKKOS_TASKSCHEDULER_FWD_HPP	Kokkos_TaskScheduler_fwd.hpp	/^#define KOKKOS_TASKSCHEDULER_FWD_HPP$/;"	d
KOKKOS_TASKSCHEDULER_HPP	Kokkos_TaskScheduler.hpp	/^#define KOKKOS_TASKSCHEDULER_HPP$/;"	d
KOKKOS_TASKTEAMMEMBER_HPP	impl/Kokkos_TaskTeamMember.hpp	/^#define KOKKOS_TASKTEAMMEMBER_HPP$/;"	d
KOKKOS_THREADSEXEC_HPP	Threads/Kokkos_ThreadsExec.hpp	/^#define KOKKOS_THREADSEXEC_HPP$/;"	d
KOKKOS_THREADSTEAM_HPP	Threads/Kokkos_ThreadsTeam.hpp	/^#define KOKKOS_THREADSTEAM_HPP$/;"	d
KOKKOS_THREADS_FWD_HPP_	fwd/Kokkos_Fwd_THREADS.hpp	/^#define KOKKOS_THREADS_FWD_HPP_$/;"	d
KOKKOS_THREADS_HPP	Kokkos_Threads.hpp	/^#define KOKKOS_THREADS_HPP$/;"	d
KOKKOS_THREADS_PARALLEL_MDRANGE_HPP	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^#define KOKKOS_THREADS_PARALLEL_MDRANGE_HPP$/;"	d
KOKKOS_THREADS_PARALLEL_RANGE_HPP	Threads/Kokkos_Threads_Parallel_Range.hpp	/^#define KOKKOS_THREADS_PARALLEL_RANGE_HPP$/;"	d
KOKKOS_THREADS_PARALLEL_TEAM_HPP	Threads/Kokkos_Threads_Parallel_Team.hpp	/^#define KOKKOS_THREADS_PARALLEL_TEAM_HPP$/;"	d
KOKKOS_THREADS_UNIQUETOKEN_HPP	Threads/Kokkos_Threads_UniqueToken.hpp	/^#define KOKKOS_THREADS_UNIQUETOKEN_HPP$/;"	d
KOKKOS_THREADS_WORKGRAPHPOLICY_HPP	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^#define KOKKOS_THREADS_WORKGRAPHPOLICY_HPP$/;"	d
KOKKOS_THREAD_LOCAL	Kokkos_Macros.hpp	/^#define KOKKOS_THREAD_LOCAL /;"	d
KOKKOS_TIMER_HPP	Kokkos_Timer.hpp	/^#define KOKKOS_TIMER_HPP$/;"	d
KOKKOS_TOOLS_ENABLE_LIBDL	impl/Kokkos_Profiling.cpp	/^#define KOKKOS_TOOLS_ENABLE_LIBDL$/;"	d	file:
KOKKOS_TOOLS_TUNING_STRING_LENGTH	impl/Kokkos_Profiling_C_Interface.h	/^#define KOKKOS_TOOLS_TUNING_STRING_LENGTH /;"	d
KOKKOS_UNIQUE_TOKEN_HPP	Kokkos_UniqueToken.hpp	/^#define KOKKOS_UNIQUE_TOKEN_HPP$/;"	d
KOKKOS_VECTORIZATION_HPP	Kokkos_Vectorization.hpp	/^#define KOKKOS_VECTORIZATION_HPP$/;"	d
KOKKOS_VIEW_HPP	Kokkos_View.hpp	/^#define KOKKOS_VIEW_HPP$/;"	d
KOKKOS_VIEW_TRACKER_HPP	impl/Kokkos_ViewTracker.hpp	/^#define KOKKOS_VIEW_TRACKER_HPP$/;"	d
KOKKOS_VOLATILE_LOAD_HPP	impl/Kokkos_Volatile_Load.hpp	/^#define KOKKOS_VOLATILE_LOAD_HPP$/;"	d
KOKKOS_WORKGRAPHPOLICY_HPP	Kokkos_WorkGraphPolicy.hpp	/^#define KOKKOS_WORKGRAPHPOLICY_HPP$/;"	d
KOKKO_HIP_PARALLEL_RANGE_HPP	HIP/Kokkos_HIP_Parallel_Range.hpp	/^#define KOKKO_HIP_PARALLEL_RANGE_HPP$/;"	d
KOKKO_HIP_PARALLEL_TEAM_HPP	HIP/Kokkos_HIP_Parallel_Team.hpp	/^#define KOKKO_HIP_PARALLEL_TEAM_HPP$/;"	d
KOKKO_SERIAL_PARALLEL_MDRANGE_HPP	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^#define KOKKO_SERIAL_PARALLEL_MDRANGE_HPP$/;"	d
KOKKO_SERIAL_PARALLEL_RANGE_HPP	Serial/Kokkos_Serial_Parallel_Range.hpp	/^#define KOKKO_SERIAL_PARALLEL_RANGE_HPP$/;"	d
KOKKO_SERIAL_PARALLEL_TEAM_HPP	Serial/Kokkos_Serial_Parallel_Team.hpp	/^#define KOKKO_SERIAL_PARALLEL_TEAM_HPP$/;"	d
KOKKO_SYCL_PARALLEL_SCAN_HPP	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^#define KOKKO_SYCL_PARALLEL_SCAN_HPP$/;"	d
KernelArgumentLimit	Cuda/Kokkos_Cuda_Instance.hpp	/^  static constexpr CudaSpace::size_type KernelArgumentLimit =$/;"	m	struct:Kokkos::Impl::CudaTraits	typeref:typename:CudaSpace::size_type
KernelArgumentLimit	HIP/Kokkos_HIP_Instance.hpp	/^  static int constexpr KernelArgumentLimit        = 0x001000; \/*  4k bytes *\/$/;"	m	struct:Kokkos::Experimental::Impl::HIPTraits	typeref:typename:int 
KernelInGraphProperty	impl/Kokkos_GraphImpl_fwd.hpp	/^struct KernelInGraphProperty {};$/;"	s	namespace:Kokkos::Impl
Kokkos	Cuda/Kokkos_CudaSpace.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	Cuda/Kokkos_Cuda_Alloc.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Error.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_GraphNode_Impl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Instance.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	Cuda/Kokkos_Cuda_Instance.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Locks.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	Cuda/Kokkos_Cuda_Locks.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Task.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	Cuda/Kokkos_Cuda_Task.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_Vectorization.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_View.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Cuda/Kokkos_Cuda_abort.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Abort.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Atomic.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Error.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Half_Conversion.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Half_Impl_Type.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Instance.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	HIP/Kokkos_HIP_Instance.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_KernelLaunch.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Locks.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	HIP/Kokkos_HIP_Locks.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Parallel_Range.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Parallel_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_ReduceScan.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Space.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	HIP/Kokkos_HIP_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_UniqueToken.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_Vectorization.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HPX/Kokkos_HPX.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	HPX/Kokkos_HPX_Task.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	HPX/Kokkos_HPX_Task.hpp	/^namespace Kokkos {$/;"	n
Kokkos	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	KokkosExp_InterOp.hpp	/^namespace Kokkos {$/;"	n
Kokkos	KokkosExp_MDRangePolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_AcquireUniqueTokenImpl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_AnonymousSpace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Array.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Atomic.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Atomics_Desul_Wrapper.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Complex.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Concepts.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_CopyViews.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Core.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Core_fwd.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Crs.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Cuda.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_CudaSpace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_DetectionIdiom.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_ExecPolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Extents.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Future.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Graph.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_GraphNode.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Graph_fwd.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_HBWSpace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_HIP_Space.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_HPX.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Half.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_HostSpace.hpp	/^        Kokkos::HostSpace>::accessible$/;"	e	enum:Kokkos::Impl::HostMirror::__anon2d16c4960103
Kokkos	Kokkos_HostSpace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Layout.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_LogicalSpaces.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_MasterLock.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_MathematicalConstants.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_MathematicalFunctions.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_MathematicalSpecialFunctions.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_MemoryPool.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_MemoryTraits.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_MinMaxClamp.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_NumericTraits.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_OpenMP.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_OpenMPTarget.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_OpenMPTargetSpace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Pair.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Parallel.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Parallel_Reduce.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_PointerOwnership.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Profiling_ProfileSection.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Rank.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_SYCL.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_SYCL_Space.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_ScratchSpace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Serial.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_TaskScheduler.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_TaskScheduler_fwd.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Threads.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Timer.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_Tuners.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_UniqueToken.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_View.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_WorkGraphPolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Kokkos_hwloc.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenACC/Kokkos_OpenACC.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	OpenACC/Kokkos_OpenACC.hpp	/^namespace Kokkos::Experimental {$/;"	n
Kokkos	OpenACC/Kokkos_OpenACC.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n
Kokkos	OpenACC/Kokkos_OpenACCSpace.hpp	/^namespace Kokkos::Experimental {$/;"	n
Kokkos	OpenACC/Kokkos_OpenACC_Instance.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	OpenACC/Kokkos_OpenACC_Instance.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n
Kokkos	OpenACC/Kokkos_OpenACC_Traits.hpp	/^namespace Kokkos::Experimental::Impl {$/;"	n
Kokkos	OpenMP/Kokkos_OpenMP_Instance.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	OpenMP/Kokkos_OpenMP_Instance.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^                                Kokkos::Dynamic>::value$/;"	e	enum:Kokkos::Impl::ParallelReduce::execute::__anona5536d250103
Kokkos	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^                                Kokkos::Dynamic>::value$/;"	e	enum:Kokkos::Impl::ParallelReduce::execute::__anona5536d250203
Kokkos	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    enum { is_dynamic = std::is_same<SchedTag, Kokkos::Dynamic>::value };$/;"	e	enum:Kokkos::Impl::ParallelFor::execute::__anona5536d250403
Kokkos	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    enum { is_dynamic = std::is_same<SchedTag, Kokkos::Dynamic>::value };$/;"	e	enum:Kokkos::Impl::ParallelReduce::execute::__anona5536d250603
Kokkos	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMP/Kokkos_OpenMP_Task.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	OpenMP/Kokkos_OpenMP_Task.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMP/Kokkos_OpenMP_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Abort.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Error.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^namespace Kokkos {$/;"	n
Kokkos	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	SYCL/Kokkos_SYCL_Abort.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_DeepCopy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_Half_Impl_Type.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_Instance.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	SYCL/Kokkos_SYCL_Instance.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^namespace Kokkos::Impl {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_Space.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	SYCL/Kokkos_SYCL_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Serial/Kokkos_Serial.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Serial/Kokkos_Serial_Parallel_Range.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Serial/Kokkos_Serial_Parallel_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Serial/Kokkos_Serial_Task.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	Serial/Kokkos_Serial_Task.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Serial/Kokkos_Serial_UniqueToken.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Threads/Kokkos_ThreadsExec.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	Threads/Kokkos_ThreadsExec.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Threads/Kokkos_ThreadsTeam.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Threads/Kokkos_Threads_Parallel_Range.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Threads/Kokkos_Threads_Parallel_Team.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Threads/Kokkos_Threads_UniqueToken.hpp	/^namespace Kokkos {$/;"	n
Kokkos	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	View/Hooks/Kokkos_ViewHooks.hpp	/^namespace Kokkos {$/;"	n
Kokkos	dummy.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	fwd/Kokkos_Fwd_CUDA.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_HBWSpace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_HIP.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_HPX.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_OPENACC.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_OPENMP.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_OPENMPTARGET.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_SERIAL.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_SYCL.hpp	/^namespace Kokkos {$/;"	n
Kokkos	fwd/Kokkos_Fwd_THREADS.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/KokkosExp_Host_IterateTile.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/KokkosExp_IterateTileGPU.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_AnalyzePolicy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Assembly.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Decrement.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Exchange.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Fetch_Add.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Fetch_And.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Fetch_Or.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Generic.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Generic_Secondary.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Increment.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Load.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Memory_Order.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_MinMax.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Store.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_View.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Atomic_Windows.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_BitOps.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_CPUDiscovery.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_CPUDiscovery.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ChaseLev.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ClockTic.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Combined_Reducer.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Command_Line_Parsing.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ConcurrentBitset.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Core.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_Default_GraphNodeKernel.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Default_GraphNode_Impl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Default_Graph_Impl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Default_Graph_fwd.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_DeviceManagement.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_EBO.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Error.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_Error.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ExecPolicy.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_ExecSpaceManager.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_FixedBufferMemoryPool.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_FunctorAnalysis.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_GraphImpl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_GraphImpl_Utilities.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_GraphImpl_fwd.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_GraphNodeCustomization.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_GraphNodeImpl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_HBWSpace.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_HostBarrier.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_HostBarrier.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_HostSharedPtr.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_HostSpace.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_HostSpace_deepcopy.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_HostSpace_deepcopy.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_HostThreadTeam.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_HostThreadTeam.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_InitializationSettings.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_LIFO.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_LinkedListNode.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_MemoryPool.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_MemoryPoolAllocator.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_MemorySpace.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_MemorySpace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Memory_Fence.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_MultipleTaskQueue.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_NumericTraits.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_OptionalRef.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ParseCommandLineArgumentsAndEnvironmentVariables.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_PhysicalLayout.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Profiling.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_Profiling.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Profiling_DeviceInfo.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Profiling_Interface.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_QuadPrecisionMath.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_SharedAlloc.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_SharedAlloc.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_SharedAlloc_timpl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_SimpleTaskScheduler.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_SingleTaskQueue.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Spinwait.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_Spinwait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Stacktrace.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	impl/Kokkos_Stacktrace.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_StringManipulation.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskBase.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskNode.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskPolicyData.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskQueue.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskQueueCommon.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskQueueMemoryManager.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskQueueMultiple.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskQueueMultiple_impl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskQueue_impl.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskResult.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_TaskTeamMember.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Timer.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Tools_Generic.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Traits.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Utilities.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_VLAEmulation.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ViewArray.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ViewCtor.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ViewLayoutTiled.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = std::is_same<T, Kokkos::Impl::ALL_t>::value ? 1 : 0 };$/;"	e	enum:Kokkos::Impl::is_integral_extent_type::__anon421557341a03
Kokkos	impl/Kokkos_ViewMapping.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ViewTracker.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_ViewUniformType.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_Volatile_Load.hpp	/^namespace Kokkos {$/;"	n
Kokkos	impl/Kokkos_hwloc.cpp	/^namespace Kokkos {$/;"	n	file:
Kokkos	traits/Kokkos_ExecutionSpaceTrait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_GraphKernelTrait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_IndexTypeTrait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_IterationPatternTrait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_LaunchBoundsTrait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_OccupancyControlTrait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_PolicyTraitAdaptor.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_PolicyTraitMatcher.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_ScheduleTrait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_Traits_fwd.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_WorkItemPropertyTrait.hpp	/^namespace Kokkos {$/;"	n
Kokkos	traits/Kokkos_WorkTagTrait.hpp	/^namespace Kokkos {$/;"	n
KokkosPDeviceInfo	impl/Kokkos_Profiling_DeviceInfo.hpp	/^using KokkosPDeviceInfo = Kokkos_Profiling_KokkosPDeviceInfo;$/;"	t	namespace:Kokkos::Profiling	typeref:typename:Kokkos_Profiling_KokkosPDeviceInfo
KokkosToDesulMemoryOrder	Kokkos_Atomics_Desul_Wrapper.hpp	/^  struct KokkosToDesulMemoryOrder<memory_order_acq_rel_t> {$/;"	s	namespace:Kokkos::Impl
KokkosToDesulMemoryOrder	Kokkos_Atomics_Desul_Wrapper.hpp	/^  struct KokkosToDesulMemoryOrder<memory_order_acquire_t> {$/;"	s	namespace:Kokkos::Impl
KokkosToDesulMemoryOrder	Kokkos_Atomics_Desul_Wrapper.hpp	/^  struct KokkosToDesulMemoryOrder<memory_order_relaxed_t> {$/;"	s	namespace:Kokkos::Impl
KokkosToDesulMemoryOrder	Kokkos_Atomics_Desul_Wrapper.hpp	/^  struct KokkosToDesulMemoryOrder<memory_order_release_t> {$/;"	s	namespace:Kokkos::Impl
KokkosToDesulMemoryOrder	Kokkos_Atomics_Desul_Wrapper.hpp	/^  struct KokkosToDesulMemoryOrder<memory_order_seq_cst_t> {$/;"	s	namespace:Kokkos::Impl
Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars	impl/Kokkos_Atomic_View.hpp	/^struct Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars<4> {$/;"	s	namespace:Kokkos::Impl
Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars	impl/Kokkos_Atomic_View.hpp	/^struct Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars<8> {$/;"	s	namespace:Kokkos::Impl
Kokkos_Profiling_EventSet	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Profiling_EventSet {$/;"	s
Kokkos_Profiling_KokkosPDeviceInfo	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Profiling_KokkosPDeviceInfo {$/;"	s
Kokkos_Profiling_SpaceHandle	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Profiling_SpaceHandle {$/;"	s
Kokkos_Profiling_allocateDataFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_allocateDataFunction)($/;"	t	typeref:typename:void (*)(const struct Kokkos_Profiling_SpaceHandle,const char *,const void *,const uint64_t)
Kokkos_Profiling_beginDeepCopyFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_beginDeepCopyFunction)($/;"	t	typeref:typename:void (*)(struct Kokkos_Profiling_SpaceHandle,const char *,const void *,struct Kokkos_Profiling_SpaceHandle,const char *,const void *,uint64_t)
Kokkos_Profiling_beginFenceFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_beginFenceFunction)(const char*, const uint32_t,$/;"	t	typeref:typename:void (*)(const char *,const uint32_t,uint64_t *)
Kokkos_Profiling_beginFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_beginFunction)(const char*, const uint32_t,$/;"	t	typeref:typename:void (*)(const char *,const uint32_t,uint64_t *)
Kokkos_Profiling_createProfileSectionFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_createProfileSectionFunction)(const char*,$/;"	t	typeref:typename:void (*)(const char *,uint32_t *)
Kokkos_Profiling_deallocateDataFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_deallocateDataFunction)($/;"	t	typeref:typename:void (*)(const struct Kokkos_Profiling_SpaceHandle,const char *,const void *,const uint64_t)
Kokkos_Profiling_declareMetadataFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_declareMetadataFunction)(const char*,$/;"	t	typeref:typename:void (*)(const char *,const char *)
Kokkos_Profiling_destroyProfileSectionFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_destroyProfileSectionFunction)(const uint32_t);$/;"	t	typeref:typename:void (*)(const uint32_t)
Kokkos_Profiling_dualViewModifyFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_dualViewModifyFunction)(const char*,$/;"	t	typeref:typename:void (*)(const char *,const void * const,bool)
Kokkos_Profiling_dualViewSyncFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_dualViewSyncFunction)(const char*,$/;"	t	typeref:typename:void (*)(const char *,const void * const,bool)
Kokkos_Profiling_endDeepCopyFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_endDeepCopyFunction)();$/;"	t	typeref:typename:void (*)()
Kokkos_Profiling_endFenceFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_endFenceFunction)(uint64_t);$/;"	t	typeref:typename:void (*)(uint64_t)
Kokkos_Profiling_endFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_endFunction)(uint64_t);$/;"	t	typeref:typename:void (*)(uint64_t)
Kokkos_Profiling_finalizeFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_finalizeFunction)();$/;"	t	typeref:typename:void (*)()
Kokkos_Profiling_initFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_initFunction)($/;"	t	typeref:typename:void (*)(const int,const uint64_t,const uint32_t,struct Kokkos_Profiling_KokkosPDeviceInfo *)
Kokkos_Profiling_parseArgsFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_parseArgsFunction)(int, char**);$/;"	t	typeref:typename:void (*)(int,char **)
Kokkos_Profiling_popFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_popFunction)();$/;"	t	typeref:typename:void (*)()
Kokkos_Profiling_printHelpFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_printHelpFunction)(char*);$/;"	t	typeref:typename:void (*)(char *)
Kokkos_Profiling_profileEventFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_profileEventFunction)(const char*);$/;"	t	typeref:typename:void (*)(const char *)
Kokkos_Profiling_pushFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_pushFunction)(const char*);$/;"	t	typeref:typename:void (*)(const char *)
Kokkos_Profiling_startProfileSectionFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_startProfileSectionFunction)(const uint32_t);$/;"	t	typeref:typename:void (*)(const uint32_t)
Kokkos_Profiling_stopProfileSectionFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Profiling_stopProfileSectionFunction)(const uint32_t);$/;"	t	typeref:typename:void (*)(const uint32_t)
Kokkos_Tools_Maximize	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_Maximize$/;"	e	enum:Kokkos_Tools_OptimizationType
Kokkos_Tools_Minimize	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_Minimize,$/;"	e	enum:Kokkos_Tools_OptimizationType
Kokkos_Tools_OptimizationType	impl/Kokkos_Profiling_C_Interface.h	/^enum Kokkos_Tools_OptimizationType {$/;"	g
Kokkos_Tools_OptimzationGoal	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Tools_OptimzationGoal {$/;"	s
Kokkos_Tools_ToolProgrammingInterface	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Tools_ToolProgrammingInterface {$/;"	s
Kokkos_Tools_ToolSettings	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Tools_ToolSettings {$/;"	s
Kokkos_Tools_Tuning_String	impl/Kokkos_Profiling_C_Interface.h	/^typedef char Kokkos_Tools_Tuning_String[KOKKOS_TOOLS_TUNING_STRING_LENGTH];$/;"	t	typeref:typename:char[KOKKOS_TOOLS_TUNING_STRING_LENGTH]
Kokkos_Tools_ValueRange	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Tools_ValueRange {$/;"	s
Kokkos_Tools_ValueSet	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Tools_ValueSet {$/;"	s
Kokkos_Tools_VariableInfo	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Tools_VariableInfo {$/;"	s
Kokkos_Tools_VariableInfo_CandidateValueType	impl/Kokkos_Profiling_C_Interface.h	/^enum Kokkos_Tools_VariableInfo_CandidateValueType {$/;"	g
Kokkos_Tools_VariableInfo_SetOrRange	impl/Kokkos_Profiling_C_Interface.h	/^union Kokkos_Tools_VariableInfo_SetOrRange {$/;"	u
Kokkos_Tools_VariableInfo_StatisticalCategory	impl/Kokkos_Profiling_C_Interface.h	/^enum Kokkos_Tools_VariableInfo_StatisticalCategory {$/;"	g
Kokkos_Tools_VariableInfo_ValueType	impl/Kokkos_Profiling_C_Interface.h	/^enum Kokkos_Tools_VariableInfo_ValueType {$/;"	g
Kokkos_Tools_VariableValue	impl/Kokkos_Profiling_C_Interface.h	/^struct Kokkos_Tools_VariableValue {$/;"	s
Kokkos_Tools_VariableValue_ValueUnion	impl/Kokkos_Profiling_C_Interface.h	/^union Kokkos_Tools_VariableValue_ValueUnion {$/;"	u
Kokkos_Tools_VariableValue_ValueUnionSet	impl/Kokkos_Profiling_C_Interface.h	/^union Kokkos_Tools_VariableValue_ValueUnionSet {$/;"	u
Kokkos_Tools_contextBeginFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_contextBeginFunction)(const size_t);$/;"	t	typeref:typename:void (*)(const size_t)
Kokkos_Tools_contextEndFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_contextEndFunction)($/;"	t	typeref:typename:void (*)(const size_t,struct Kokkos_Tools_VariableValue)
Kokkos_Tools_functionPointer	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_functionPointer)();$/;"	t	typeref:typename:void (*)()
Kokkos_Tools_inputTypeDeclarationFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_inputTypeDeclarationFunction)($/;"	t	typeref:typename:void (*)(const char *,const size_t,struct Kokkos_Tools_VariableInfo * info)
Kokkos_Tools_optimizationGoalDeclarationFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_optimizationGoalDeclarationFunction)($/;"	t	typeref:typename:void (*)(const size_t,const struct Kokkos_Tools_OptimzationGoal goal)
Kokkos_Tools_outputTypeDeclarationFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_outputTypeDeclarationFunction)($/;"	t	typeref:typename:void (*)(const char *,const size_t,struct Kokkos_Tools_VariableInfo * info)
Kokkos_Tools_provideToolProgrammingInterfaceFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_provideToolProgrammingInterfaceFunction)($/;"	t	typeref:typename:void (*)(const uint32_t,struct Kokkos_Tools_ToolProgrammingInterface)
Kokkos_Tools_requestToolSettingsFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_requestToolSettingsFunction)($/;"	t	typeref:typename:void (*)(const uint32_t,struct Kokkos_Tools_ToolSettings *)
Kokkos_Tools_requestValueFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_requestValueFunction)($/;"	t	typeref:typename:void (*)(const size_t,const size_t,const struct Kokkos_Tools_VariableValue *,const size_t count,struct Kokkos_Tools_VariableValue *)
Kokkos_Tools_toolInvokedFenceFunction	impl/Kokkos_Profiling_C_Interface.h	/^typedef void (*Kokkos_Tools_toolInvokedFenceFunction)(const uint32_t);$/;"	t	typeref:typename:void (*)(const uint32_t)
LAnd	Kokkos_Parallel_Reduce.hpp	/^  LAnd(const result_view_type& value_)$/;"	f	struct:Kokkos::LAnd	typeref:typename:KOKKOS_INLINE_FUNCTION
LAnd	Kokkos_Parallel_Reduce.hpp	/^  LAnd(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::LAnd	typeref:typename:KOKKOS_INLINE_FUNCTION
LAnd	Kokkos_Parallel_Reduce.hpp	/^struct LAnd {$/;"	s	namespace:Kokkos
LOOP_1L	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_1L(/;"	d
LOOP_1R	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_1R(/;"	d
LOOP_2L	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_2L(/;"	d
LOOP_2R	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_2R(/;"	d
LOOP_3L	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_3L(/;"	d
LOOP_3R	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_3R(/;"	d
LOOP_4L	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_4L(/;"	d
LOOP_4R	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_4R(/;"	d
LOOP_5L	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_5L(/;"	d
LOOP_5R	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_5R(/;"	d
LOOP_6L	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_6L(/;"	d
LOOP_6R	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_6R(/;"	d
LOOP_7L	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_7L(/;"	d
LOOP_7R	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_7R(/;"	d
LOOP_8L	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_8L(/;"	d
LOOP_8R	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_8R(/;"	d
LOOP_ARGS_1	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_ARGS_1 /;"	d
LOOP_ARGS_2	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_ARGS_2 /;"	d
LOOP_ARGS_3	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_ARGS_3 /;"	d
LOOP_ARGS_4	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_ARGS_4 /;"	d
LOOP_ARGS_5	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_ARGS_5 /;"	d
LOOP_ARGS_6	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_ARGS_6 /;"	d
LOOP_ARGS_7	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_ARGS_7 /;"	d
LOOP_ARGS_8	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_ARGS_8 /;"	d
LOOP_LAYOUT_1	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_1(/;"	d
LOOP_LAYOUT_1_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_1_REDUX(/;"	d
LOOP_LAYOUT_2	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_2(/;"	d
LOOP_LAYOUT_2_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_2_REDUX(/;"	d
LOOP_LAYOUT_3	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_3(/;"	d
LOOP_LAYOUT_3_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_3_REDUX(/;"	d
LOOP_LAYOUT_4	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_4(/;"	d
LOOP_LAYOUT_4_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_4_REDUX(/;"	d
LOOP_LAYOUT_5	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_5(/;"	d
LOOP_LAYOUT_5_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_5_REDUX(/;"	d
LOOP_LAYOUT_6	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_6(/;"	d
LOOP_LAYOUT_6_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_6_REDUX(/;"	d
LOOP_LAYOUT_7	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_7(/;"	d
LOOP_LAYOUT_7_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_7_REDUX(/;"	d
LOOP_LAYOUT_8	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_8(/;"	d
LOOP_LAYOUT_8_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_LAYOUT_8_REDUX(/;"	d
LOOP_L_1	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_1(/;"	d
LOOP_L_1_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_1_REDUX(/;"	d
LOOP_L_2	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_2(/;"	d
LOOP_L_2_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_2_REDUX(/;"	d
LOOP_L_3	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_3(/;"	d
LOOP_L_3_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_3_REDUX(/;"	d
LOOP_L_4	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_4(/;"	d
LOOP_L_4_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_4_REDUX(/;"	d
LOOP_L_5	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_5(/;"	d
LOOP_L_5_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_5_REDUX(/;"	d
LOOP_L_6	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_6(/;"	d
LOOP_L_6_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_6_REDUX(/;"	d
LOOP_L_7	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_7(/;"	d
LOOP_L_7_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_7_REDUX(/;"	d
LOOP_L_8	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_8(/;"	d
LOOP_L_8_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_L_8_REDUX(/;"	d
LOOP_R_1	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_1(/;"	d
LOOP_R_1_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_1_REDUX(/;"	d
LOOP_R_2	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_2(/;"	d
LOOP_R_2_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_2_REDUX(/;"	d
LOOP_R_3	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_3(/;"	d
LOOP_R_3_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_3_REDUX(/;"	d
LOOP_R_4	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_4(/;"	d
LOOP_R_4_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_4_REDUX(/;"	d
LOOP_R_5	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_5(/;"	d
LOOP_R_5_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_5_REDUX(/;"	d
LOOP_R_6	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_6(/;"	d
LOOP_R_6_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_6_REDUX(/;"	d
LOOP_R_7	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_7(/;"	d
LOOP_R_7_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_7_REDUX(/;"	d
LOOP_R_8	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_8(/;"	d
LOOP_R_8_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define LOOP_R_8_REDUX(/;"	d
LOr	Kokkos_Parallel_Reduce.hpp	/^  LOr(const result_view_type& value_)$/;"	f	struct:Kokkos::LOr	typeref:typename:KOKKOS_INLINE_FUNCTION
LOr	Kokkos_Parallel_Reduce.hpp	/^  LOr(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::LOr	typeref:typename:KOKKOS_INLINE_FUNCTION
LOr	Kokkos_Parallel_Reduce.hpp	/^struct LOr {$/;"	s	namespace:Kokkos
LShiftOper	impl/Kokkos_Atomic_Generic.hpp	/^struct LShiftOper {$/;"	s	namespace:Kokkos::Impl
LastLoc	Kokkos_Parallel_Reduce.hpp	/^  LastLoc(const result_view_type& value_)$/;"	f	struct:Kokkos::LastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
LastLoc	Kokkos_Parallel_Reduce.hpp	/^  LastLoc(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::LastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
LastLoc	Kokkos_Parallel_Reduce.hpp	/^struct LastLoc {$/;"	s	namespace:Kokkos
LastLocScalar	Kokkos_Parallel_Reduce.hpp	/^struct LastLocScalar {$/;"	s	namespace:Kokkos
LaunchBounds	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using LaunchBounds     = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
LaunchBounds	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::launch_bounds
LaunchBounds	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
LaunchBounds	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::launch_bounds
LaunchBounds	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::launch_bounds
LaunchBounds	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::launch_bounds
LaunchBounds	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
LaunchBounds	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::launch_bounds
LaunchBounds	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using LaunchBounds     = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
LaunchBounds	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::launch_bounds
LaunchBounds	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
LaunchBounds	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::launch_bounds
LaunchBounds	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Policy::launch_bounds
LaunchBounds	Kokkos_Concepts.hpp	/^struct LaunchBounds {$/;"	s	namespace:Kokkos
LaunchBounds	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using LaunchBounds     = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
LaunchBounds	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
LaunchBounds	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using LaunchBounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Policy::launch_bounds
LaunchBoundsTrait	traits/Kokkos_LaunchBoundsTrait.hpp	/^struct LaunchBoundsTrait : TraitSpecificationBase<LaunchBoundsTrait> {$/;"	s	namespace:Kokkos::Impl
LayoutLeft	Kokkos_Layout.hpp	/^  explicit constexpr LayoutLeft(size_t N0 = KOKKOS_IMPL_CTOR_DEFAULT_ARG,$/;"	f	struct:Kokkos::LayoutLeft	typeref:typename:KOKKOS_INLINE_FUNCTION 
LayoutLeft	Kokkos_Layout.hpp	/^struct LayoutLeft {$/;"	s	namespace:Kokkos
LayoutRight	Kokkos_Layout.hpp	/^  explicit constexpr LayoutRight(size_t N0 = KOKKOS_IMPL_CTOR_DEFAULT_ARG,$/;"	f	struct:Kokkos::LayoutRight	typeref:typename:KOKKOS_INLINE_FUNCTION 
LayoutRight	Kokkos_Layout.hpp	/^struct LayoutRight {$/;"	s	namespace:Kokkos
LayoutStride	Kokkos_Layout.hpp	/^  explicit constexpr LayoutStride($/;"	f	struct:Kokkos::LayoutStride	typeref:typename:KOKKOS_INLINE_FUNCTION 
LayoutStride	Kokkos_Layout.hpp	/^struct LayoutStride {$/;"	s	namespace:Kokkos
LayoutTiled	Kokkos_Layout.hpp	/^  explicit constexpr LayoutTiled(size_t argN0 = 0, size_t argN1 = 0,$/;"	f	struct:Kokkos::Experimental::LayoutTiled	typeref:typename:KOKKOS_INLINE_FUNCTION 
LayoutTiled	Kokkos_Layout.hpp	/^struct LayoutTiled {$/;"	s	namespace:Kokkos::Experimental
LayoutType	impl/Kokkos_PhysicalLayout.hpp	/^  enum LayoutType { Left, Right, Scalar, Error };$/;"	g	struct:Kokkos::Impl::PhysicalLayout
LeagueQueueCollection	impl/Kokkos_TaskQueueMultiple.hpp	/^  explicit LeagueQueueCollection(team_queue_type* arg_rank_zero_queue)$/;"	f	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:KOKKOS_INLINE_FUNCTION
LeagueQueueCollection	impl/Kokkos_TaskQueueMultiple.hpp	/^class LeagueQueueCollection {$/;"	c	namespace:Kokkos::Impl
Left	KokkosExp_MDRangePolicy.hpp	/^  static constexpr auto Left  = Iterate::Left;$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:auto
Left	Kokkos_Layout.hpp	/^  Left,  \/\/ Left indices stride fastest$/;"	e	enum:Kokkos::Iterate
Left	impl/Kokkos_PhysicalLayout.hpp	/^  enum LayoutType { Left, Right, Scalar, Error };$/;"	e	enum:Kokkos::Impl::PhysicalLayout::LayoutType
LinkedListNodeAccess	impl/Kokkos_LinkedListNode.hpp	/^struct LinkedListNodeAccess {$/;"	s	namespace:Kokkos::Impl
LocalMemory	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  LocalMemory    = 4$/;"	e	enum:Kokkos::Experimental::Impl::HIPLaunchMechanism
LocalMemory	Kokkos_Cuda.hpp	/^  LocalMemory    = 4$/;"	e	enum:Kokkos::Impl::Experimental::CudaLaunchMechanism
LockBasedLIFO	impl/Kokkos_LIFO.hpp	/^class LockBasedLIFO : private LockBasedLIFOCommon<T> {$/;"	c	namespace:Kokkos::Impl
LockBasedLIFOCommon	impl/Kokkos_LIFO.hpp	/^struct LockBasedLIFOCommon {$/;"	s	namespace:Kokkos::Impl
LockTag	impl/Kokkos_LIFO.hpp	/^  static constexpr uintptr_t LockTag = ~uintptr_t(0);$/;"	m	struct:Kokkos::Impl::LockBasedLIFOCommon	typeref:typename:uintptr_t
LockTag	impl/Kokkos_TaskBase.hpp	/^  enum : uintptr_t { LockTag = ~uintptr_t(0), EndTag = ~uintptr_t(1) };$/;"	e	enum:Kokkos::Impl::TaskBase::__anonf4e6889b0203
LogicalMemorySpace	Kokkos_LogicalSpaces.hpp	/^  LogicalMemorySpace(Args&&... args) : underlying_space((Args &&) args...) {}$/;"	f	class:Kokkos::Experimental::LogicalMemorySpace
LogicalMemorySpace	Kokkos_LogicalSpaces.hpp	/^class LogicalMemorySpace {$/;"	c	namespace:Kokkos::Experimental
LogicalSpaceSharesAccess	Kokkos_LogicalSpaces.hpp	/^struct LogicalSpaceSharesAccess {$/;"	s	namespace:Kokkos::Experimental
Low	Kokkos_TaskScheduler_fwd.hpp	/^enum class TaskPriority : int { High = 0, Regular = 1, Low = 2 };$/;"	e	enum:Kokkos::TaskPriority
MASK	Kokkos_ScratchSpace.hpp	/^  enum { MASK = ALIGN - 1 };  \/\/ Alignment used by View::shmem_size$/;"	e	enum:Kokkos::ScratchMemorySpace::__anon170bcf000203
MASK_0	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::MASK_0;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
MASK_1	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::MASK_1;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
MASK_2	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::MASK_2;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
MASK_3	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::MASK_3;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
MASK_4	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::MASK_4;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
MASK_5	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::MASK_5;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
MASK_6	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::MASK_6;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
MASK_7	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::MASK_7;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
MAXIMUM_DEVICE_COUNT	Cuda/Kokkos_Cuda_Instance.cpp	/^  enum { MAXIMUM_DEVICE_COUNT = 64 };$/;"	e	enum:Kokkos::Impl::__anon02417da40510::CudaInternalDevices::__anon02417da40603	file:
MAXIMUM_DEVICE_COUNT	HIP/Kokkos_HIP_Instance.cpp	/^  enum { MAXIMUM_DEVICE_COUNT = 64 };$/;"	e	enum:Kokkos::Experimental::__anon18c94a8c0110::HIPInternalDevices::__anon18c94a8c0203	file:
MAX_ACTIVE_TEAMS	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { MAX_ACTIVE_TEAMS = MAX_ACTIVE_THREADS \/ 32 };$/;"	e	enum:Kokkos::Impl::OpenMPTargetExec::__anon265123eb0203
MAX_ACTIVE_THREADS	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { MAX_ACTIVE_THREADS = 2080 * 80 };$/;"	e	enum:Kokkos::Impl::OpenMPTargetExec::__anon265123eb0103
MAX_CORE	impl/Kokkos_hwloc.cpp	/^enum { MAX_CORE = 1024 };$/;"	e	enum:Kokkos::hwloc::__anonec54cfc50110::__anonec54cfc50203	file:
MAX_DIGITS10_HELPER	Kokkos_NumericTraits.hpp	/^#define MAX_DIGITS10_HELPER(/;"	d
MAX_FAN_COUNT	Threads/Kokkos_ThreadsExec.hpp	/^  enum { MAX_FAN_COUNT = 16 };$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60103
MAX_THREAD_COUNT	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  static int constexpr MAX_THREAD_COUNT = 512;$/;"	m	struct:Kokkos::Impl::OpenMPTraits	typeref:typename:int 
MAX_THREAD_COUNT	Threads/Kokkos_ThreadsExec.hpp	/^  enum { MAX_THREAD_COUNT = 1 << (MAX_FAN_COUNT - 2) };$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60203
MAX_WARP	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  static constexpr int MAX_WARP = 8;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
MDRangePolicy	KokkosExp_MDRangePolicy.hpp	/^  MDRangePolicy(const MDRangePolicy<OtherProperties...> p)$/;"	f	struct:Kokkos::MDRangePolicy
MDRangePolicy	KokkosExp_MDRangePolicy.hpp	/^  MDRangePolicy(const typename traits::execution_space& work_space,$/;"	f	struct:Kokkos::MDRangePolicy
MDRangePolicy	KokkosExp_MDRangePolicy.hpp	/^  MDRangePolicy(point_type const& lower, point_type const& upper,$/;"	f	struct:Kokkos::MDRangePolicy
MDRangePolicy	KokkosExp_MDRangePolicy.hpp	/^struct MDRangePolicy : public Kokkos::Impl::PolicyTraits<Properties...> {$/;"	s	namespace:Kokkos
MDRangePolicy	KokkosExp_MDRangePolicy.hpp	/^using MDRangePolicy KOKKOS_DEPRECATED = Kokkos::MDRangePolicy<Properties...>;$/;"	t	namespace:Kokkos::Experimental	typeref:typename:Kokkos::MDRangePolicy<Properties...>
MDRangePolicy	Kokkos_HPX.hpp	/^  using MDRangePolicy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::MDRangePolicy<Traits...>
MDRangePolicy	Kokkos_HPX.hpp	/^  using MDRangePolicy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::MDRangePolicy<Traits...>
MDRangePolicy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using MDRangePolicy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::MDRangePolicy<Traits...>
MDRangePolicy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using MDRangePolicy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::MDRangePolicy<Traits...>
MDRangePolicy	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using MDRangePolicy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::MDRangePolicy<Traits...>
MDRangePolicy	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using MDRangePolicy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::MDRangePolicy<Traits...>
MDRangePolicy	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using MDRangePolicy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::MDRangePolicy<Traits...>
MDRangePolicy	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using MDRangePolicy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::MDRangePolicy<Traits...>
MDRangeTuner	Kokkos_Tuners.hpp	/^  MDRangeTuner(const std::string& name,$/;"	f	struct:Kokkos::Tools::Experimental::MDRangeTuner
MDRangeTuner	Kokkos_Tuners.hpp	/^struct MDRangeTuner : public ExtendableTunerMixin<MDRangeTuner<MDRangeRank>> {$/;"	s	namespace:Kokkos::Tools::Experimental
MDRangeTuningMap	impl/Kokkos_Tools_Generic.hpp	/^using MDRangeTuningMap =$/;"	t	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:std::map<std::string,Kokkos::Tools::Experimental::MDRangeTuner<Rank>>
MEMKIND_TYPE	impl/Kokkos_HBWSpace.cpp	/^#define MEMKIND_TYPE /;"	d	file:
MEMORY_ALIGNMENT	Kokkos_MemoryTraits.hpp	/^  MEMORY_ALIGNMENT           = KOKKOS_MEMORY_ALIGNMENT,$/;"	e	enum:Kokkos::Impl::__anonda37d41c0603
MEMORY_ALIGNMENT_THRESHOLD	Kokkos_MemoryTraits.hpp	/^  MEMORY_ALIGNMENT_THRESHOLD = KOKKOS_MEMORY_ALIGNMENT_THRESHOLD$/;"	e	enum:Kokkos::Impl::__anonda37d41c0603
Mapping	Kokkos_View.hpp	/^    using Mapping   = Kokkos::Impl::ViewMapping<traits, SrcTraits,$/;"	t	function:Kokkos::View::View	typeref:typename:Kokkos::Impl::ViewMapping<traits,SrcTraits,typename traits::specialize>
Mapping	Kokkos_View.hpp	/^    using Mapping   = Kokkos::Impl::ViewMapping<traits, SrcTraits,$/;"	t	function:Kokkos::View::operator =	typeref:typename:Kokkos::Impl::ViewMapping<traits,SrcTraits,typename traits::specialize>
Mapping	Kokkos_View.hpp	/^    using Mapping = Kokkos::Impl::ViewMapping<void, typename SrcType::traits,$/;"	t	function:Kokkos::View::View	typeref:typename:Kokkos::Impl::ViewMapping<void,typename SrcType::traits,Arg0,Args...>
Mapping	Kokkos_View.hpp	/^    using Mapping =$/;"	t	function:Kokkos::View::View	typeref:typename:Kokkos::Impl::ViewMapping<traits,Traits,typename traits::specialize>
MasterLock	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  KOKKOS_DEPRECATED MasterLock() { omp_init_lock(&m_lock); }$/;"	f	class:Kokkos::Experimental::MasterLock	typeref:typename:KOKKOS_DEPRECATED
MasterLock	OpenMP/Kokkos_OpenMP_Instance.hpp	/^class MasterLock<OpenMP> {$/;"	c	namespace:Kokkos::Experimental
Max	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^enum class BlockType { Max, Preferred };$/;"	e	enum:Kokkos::Experimental::Impl::BlockType
Max	Kokkos_Parallel_Reduce.hpp	/^  Max(const result_view_type& value_)$/;"	f	struct:Kokkos::Max	typeref:typename:KOKKOS_INLINE_FUNCTION
Max	Kokkos_Parallel_Reduce.hpp	/^  Max(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::Max	typeref:typename:KOKKOS_INLINE_FUNCTION
Max	Kokkos_Parallel_Reduce.hpp	/^struct Max {$/;"	s	namespace:Kokkos
MaxFirstLoc	Kokkos_Parallel_Reduce.hpp	/^  MaxFirstLoc(const result_view_type& value_)$/;"	f	struct:Kokkos::MaxFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MaxFirstLoc	Kokkos_Parallel_Reduce.hpp	/^  MaxFirstLoc(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::MaxFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MaxFirstLoc	Kokkos_Parallel_Reduce.hpp	/^struct MaxFirstLoc {$/;"	s	namespace:Kokkos
MaxFirstLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^  MaxFirstLocCustomComparator(const result_view_type& value_,$/;"	f	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION
MaxFirstLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^  MaxFirstLocCustomComparator(value_type& value_, ComparatorType comp_)$/;"	f	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION
MaxFirstLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^struct MaxFirstLocCustomComparator {$/;"	s	namespace:Kokkos
MaxHierarchicalParallelism	Cuda/Kokkos_Cuda_Instance.hpp	/^  static constexpr CudaSpace::size_type MaxHierarchicalParallelism =$/;"	m	struct:Kokkos::Impl::CudaTraits	typeref:typename:CudaSpace::size_type
MaxLoc	Kokkos_Parallel_Reduce.hpp	/^  MaxLoc(const result_view_type& value_)$/;"	f	struct:Kokkos::MaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MaxLoc	Kokkos_Parallel_Reduce.hpp	/^  MaxLoc(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::MaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MaxLoc	Kokkos_Parallel_Reduce.hpp	/^struct MaxLoc {$/;"	s	namespace:Kokkos
MaxOper	impl/Kokkos_Atomic_Generic.hpp	/^struct MaxOper {$/;"	s	namespace:Kokkos::Impl
MaxThreadsPerBlock	HIP/Kokkos_HIP_Instance.hpp	/^  static int constexpr MaxThreadsPerBlock =$/;"	m	struct:Kokkos::Experimental::Impl::HIPTraits	typeref:typename:int 
MaximizeOccupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^struct MaximizeOccupancy {$/;"	s	namespace:Kokkos::Experimental
MaximumCudaUVMAllocationsExceeded	impl/Kokkos_Error.hpp	/^    MaximumCudaUVMAllocationsExceeded,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::FailureMode
MayRequireGlobalFencing	impl/Kokkos_Profiling.cpp	/^enum class MayRequireGlobalFencing : bool { No, Yes };$/;"	g	namespace:Kokkos::Tools::Experimental	typeref:typename:bool	file:
Member	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::member_type
Member	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::member_type
Member	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Policy::member_type
Member	Kokkos_HPX.hpp	/^  using Member        = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Kokkos_HPX.hpp	/^  using Member        = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	Kokkos_HPX.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Kokkos_HPX.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	Kokkos_HPX.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::member_type
Member	Kokkos_HPX.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::member_type
Member	Kokkos_HPX.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Kokkos_HPX.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::member_type
Member	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::member_type
Member	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Member   = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Member   = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::member_type
Member	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using Member          = TaskExec<execution_space>;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::execute	typeref:typename:TaskExec<execution_space>	file:
Member	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using Member          = TaskExec<execution_space>;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::iff_single_thread_recursive_execute	typeref:typename:TaskExec<execution_space>	file:
Member	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using Member       = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Policy::member_type
Member	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using Member = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
Member	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::member_type
Member	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Member    = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::member_type
Member	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
Member	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using Member  = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
MemoryManaged	Kokkos_MemoryTraits.hpp	/^using MemoryManaged   = Kokkos::MemoryTraits<0>;$/;"	t	namespace:Kokkos	typeref:typename:Kokkos::MemoryTraits<0>
MemoryOrderSeqCst	Kokkos_Atomic.hpp	/^struct MemoryOrderSeqCst {};$/;"	s	namespace:Kokkos::Impl
MemoryPool	Kokkos_MemoryPool.hpp	/^  KOKKOS_INLINE_FUNCTION MemoryPool()$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION
MemoryPool	Kokkos_MemoryPool.hpp	/^  MemoryPool(const base_memory_space &memspace,$/;"	f	class:Kokkos::MemoryPool
MemoryPool	Kokkos_MemoryPool.hpp	/^class MemoryPool {$/;"	c	namespace:Kokkos
MemoryPoolAllocator	impl/Kokkos_MemoryPoolAllocator.hpp	/^  explicit MemoryPoolAllocator(memory_pool const& arg_pool)$/;"	f	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:KOKKOS_INLINE_FUNCTION
MemoryPoolAllocator	impl/Kokkos_MemoryPoolAllocator.hpp	/^  explicit MemoryPoolAllocator(memory_pool&& arg_pool)$/;"	f	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:KOKKOS_INLINE_FUNCTION
MemoryPoolAllocator	impl/Kokkos_MemoryPoolAllocator.hpp	/^class MemoryPoolAllocator {$/;"	c	namespace:Kokkos::Impl
MemoryRandomAccess	Kokkos_MemoryTraits.hpp	/^using MemoryRandomAccess =$/;"	t	namespace:Kokkos	typeref:typename:Kokkos::MemoryTraits<Kokkos::Unmanaged|Kokkos::RandomAccess>
MemoryScopeDevice	Kokkos_Atomic.hpp	/^struct MemoryScopeDevice {};$/;"	s	namespace:Kokkos::Impl
MemorySpace	Kokkos_Core.hpp	/^  using MemorySpace = typename Space::memory_space;$/;"	t	function:Kokkos::kokkos_free	typeref:typename:Space::memory_space
MemorySpace	Kokkos_Core.hpp	/^  using MemorySpace = typename Space::memory_space;$/;"	t	function:Kokkos::kokkos_malloc	typeref:typename:Space::memory_space
MemorySpace	Kokkos_Core.hpp	/^  using MemorySpace = typename Space::memory_space;$/;"	t	function:Kokkos::kokkos_realloc	typeref:typename:Space::memory_space
MemorySpace	Kokkos_View.hpp	/^  using MemorySpace =$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::memory_space> typename prop typename ExecutionSpace::memory_space>
MemorySpaceAccess	Kokkos_AnonymousSpace.hpp	/^struct MemorySpaceAccess<Kokkos::AnonymousSpace, Kokkos::AnonymousSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_AnonymousSpace.hpp	/^struct MemorySpaceAccess<Kokkos::AnonymousSpace, OtherSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_AnonymousSpace.hpp	/^struct MemorySpaceAccess<OtherSpace, Kokkos::AnonymousSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_Concepts.hpp	/^struct MemorySpaceAccess {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_Cuda.hpp	/^struct MemorySpaceAccess<Kokkos::CudaSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_Cuda.hpp	/^struct MemorySpaceAccess<Kokkos::CudaUVMSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaHostPinnedSpace, Kokkos::CudaSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaHostPinnedSpace, Kokkos::CudaUVMSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaHostPinnedSpace, Kokkos::HostSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaSpace, Kokkos::CudaHostPinnedSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaSpace, Kokkos::CudaUVMSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaSpace, Kokkos::HostSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaUVMSpace, Kokkos::CudaHostPinnedSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaUVMSpace, Kokkos::CudaSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::CudaUVMSpace, Kokkos::HostSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::HostSpace, Kokkos::CudaHostPinnedSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::HostSpace, Kokkos::CudaSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_CudaSpace.hpp	/^struct MemorySpaceAccess<Kokkos::HostSpace, Kokkos::CudaUVMSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HBWSpace.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::HBWSpace, Kokkos::HostSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HBWSpace.hpp	/^struct MemorySpaceAccess<Kokkos::HostSpace, Kokkos::Experimental::HBWSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HIP_Space.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::HIPHostPinnedSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HIP_Space.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::HIPManagedSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HIP_Space.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::HIPSpace, Kokkos::HostSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HIP_Space.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::HIPSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HIP_Space.hpp	/^struct MemorySpaceAccess<Kokkos::HostSpace, Kokkos::Experimental::HIPSpace> {$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HIP_Space.hpp	/^struct MemorySpaceAccess<Kokkos::HostSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_HPX.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::HPX::memory_space,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_LogicalSpaces.hpp	/^struct MemorySpaceAccess<$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_OpenMP.hpp	/^struct MemorySpaceAccess<Kokkos::OpenMP::memory_space,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_OpenMPTarget.hpp	/^struct MemorySpaceAccess<$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_OpenMPTargetSpace.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::OpenMPTargetSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_OpenMPTargetSpace.hpp	/^struct MemorySpaceAccess<Kokkos::HostSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_SYCL_Space.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::SYCLDeviceUSMSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_SYCL_Space.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::SYCLHostUSMSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_SYCL_Space.hpp	/^struct MemorySpaceAccess<Kokkos::Experimental::SYCLSharedUSMSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_SYCL_Space.hpp	/^struct MemorySpaceAccess<Kokkos::HostSpace,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_Serial.hpp	/^struct MemorySpaceAccess<Kokkos::Serial::memory_space,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	Kokkos_Threads.hpp	/^struct MemorySpaceAccess<Kokkos::Threads::memory_space,$/;"	s	namespace:Kokkos::Impl
MemorySpaceAccess	OpenACC/Kokkos_OpenACCSpace.hpp	/^struct Kokkos::Impl::MemorySpaceAccess<Kokkos::Experimental::OpenACCSpace,$/;"	s	class:Kokkos::Impl
MemorySpaceAccess	OpenACC/Kokkos_OpenACCSpace.hpp	/^struct Kokkos::Impl::MemorySpaceAccess<Kokkos::HostSpace,$/;"	s	class:Kokkos::Impl
MemorySpaceInstanceStorage	impl/Kokkos_EBO.hpp	/^  MemorySpaceInstanceStorage() : base_t() {}$/;"	f	class:Kokkos::Impl::MemorySpaceInstanceStorage
MemorySpaceInstanceStorage	impl/Kokkos_EBO.hpp	/^  MemorySpaceInstanceStorage(MemorySpace const& arg_memory_space)$/;"	f	class:Kokkos::Impl::MemorySpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION
MemorySpaceInstanceStorage	impl/Kokkos_EBO.hpp	/^  constexpr explicit MemorySpaceInstanceStorage(MemorySpace&& arg_memory_space)$/;"	f	class:Kokkos::Impl::MemorySpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION 
MemorySpaceInstanceStorage	impl/Kokkos_EBO.hpp	/^class MemorySpaceInstanceStorage$/;"	c	namespace:Kokkos::Impl
MemoryTraits	Kokkos_MemoryTraits.hpp	/^struct MemoryTraits {$/;"	s	namespace:Kokkos
MemoryTraits	Kokkos_View.hpp	/^  using MemoryTraits =$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::memory_traits> typename prop typename Kokkos::MemoryManaged>
MemoryTraitsFlags	Kokkos_MemoryTraits.hpp	/^enum MemoryTraitsFlags {$/;"	g	namespace:Kokkos
MemoryUnmanaged	Kokkos_MemoryTraits.hpp	/^using MemoryUnmanaged = Kokkos::MemoryTraits<Kokkos::Unmanaged>;$/;"	t	namespace:Kokkos	typeref:typename:Kokkos::MemoryTraits<Kokkos::Unmanaged>
Min	Kokkos_Parallel_Reduce.hpp	/^  Min(const result_view_type& value_)$/;"	f	struct:Kokkos::Min	typeref:typename:KOKKOS_INLINE_FUNCTION
Min	Kokkos_Parallel_Reduce.hpp	/^  Min(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::Min	typeref:typename:KOKKOS_INLINE_FUNCTION
Min	Kokkos_Parallel_Reduce.hpp	/^struct Min {$/;"	s	namespace:Kokkos
MinFirstLoc	Kokkos_Parallel_Reduce.hpp	/^  MinFirstLoc(const result_view_type& value_)$/;"	f	struct:Kokkos::MinFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MinFirstLoc	Kokkos_Parallel_Reduce.hpp	/^  MinFirstLoc(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::MinFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MinFirstLoc	Kokkos_Parallel_Reduce.hpp	/^struct MinFirstLoc {$/;"	s	namespace:Kokkos
MinFirstLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^  MinFirstLocCustomComparator(const result_view_type& value_,$/;"	f	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION
MinFirstLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^  MinFirstLocCustomComparator(value_type& value_, ComparatorType comp_)$/;"	f	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION
MinFirstLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^struct MinFirstLocCustomComparator {$/;"	s	namespace:Kokkos
MinLoc	Kokkos_Parallel_Reduce.hpp	/^  MinLoc(const result_view_type& value_)$/;"	f	struct:Kokkos::MinLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MinLoc	Kokkos_Parallel_Reduce.hpp	/^  MinLoc(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::MinLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MinLoc	Kokkos_Parallel_Reduce.hpp	/^struct MinLoc {$/;"	s	namespace:Kokkos
MinMax	Kokkos_Parallel_Reduce.hpp	/^  MinMax(const result_view_type& value_)$/;"	f	struct:Kokkos::MinMax	typeref:typename:KOKKOS_INLINE_FUNCTION
MinMax	Kokkos_Parallel_Reduce.hpp	/^  MinMax(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::MinMax	typeref:typename:KOKKOS_INLINE_FUNCTION
MinMax	Kokkos_Parallel_Reduce.hpp	/^struct MinMax {$/;"	s	namespace:Kokkos
MinMaxFirstLastLoc	Kokkos_Parallel_Reduce.hpp	/^  MinMaxFirstLastLoc(const result_view_type& value_)$/;"	f	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MinMaxFirstLastLoc	Kokkos_Parallel_Reduce.hpp	/^  MinMaxFirstLastLoc(value_type& value_)$/;"	f	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MinMaxFirstLastLoc	Kokkos_Parallel_Reduce.hpp	/^struct MinMaxFirstLastLoc {$/;"	s	namespace:Kokkos
MinMaxFirstLastLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^  MinMaxFirstLastLocCustomComparator(const result_view_type& value_,$/;"	f	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION
MinMaxFirstLastLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^  MinMaxFirstLastLocCustomComparator(value_type& value_, ComparatorType comp_)$/;"	f	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION
MinMaxFirstLastLocCustomComparator	Kokkos_Parallel_Reduce.hpp	/^struct MinMaxFirstLastLocCustomComparator {$/;"	s	namespace:Kokkos
MinMaxLoc	Kokkos_Parallel_Reduce.hpp	/^  MinMaxLoc(const result_view_type& value_)$/;"	f	struct:Kokkos::MinMaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MinMaxLoc	Kokkos_Parallel_Reduce.hpp	/^  MinMaxLoc(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::MinMaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION
MinMaxLoc	Kokkos_Parallel_Reduce.hpp	/^struct MinMaxLoc {$/;"	s	namespace:Kokkos
MinMaxLocScalar	Kokkos_Parallel_Reduce.hpp	/^struct MinMaxLocScalar {$/;"	s	namespace:Kokkos
MinMaxScalar	Kokkos_Parallel_Reduce.hpp	/^struct MinMaxScalar {$/;"	s	namespace:Kokkos
MinOper	impl/Kokkos_Atomic_Generic.hpp	/^struct MinOper {$/;"	s	namespace:Kokkos::Impl
Mirror	Kokkos_CopyViews.hpp	/^  using Mirror = typename Impl::MirrorViewType<Space, T, P...>::view_type;$/;"	t	function:Kokkos::create_mirror_view_and_copy	typeref:typename:Impl::MirrorViewType<Space,T,P...>::view_type
Mirror	Kokkos_CopyViews.hpp	/^  using Mirror = typename Impl::MirrorViewType<Space, T, P...>::view_type;$/;"	t	namespace:Kokkos	typeref:typename:Impl::MirrorViewType<Space,T,P...>::view_type
MirrorType	Kokkos_CopyViews.hpp	/^struct MirrorType {$/;"	s	namespace:Kokkos::Impl
MirrorViewType	Kokkos_CopyViews.hpp	/^struct MirrorViewType {$/;"	s	namespace:Kokkos::Impl
ModOper	impl/Kokkos_Atomic_Generic.hpp	/^struct ModOper {$/;"	s	namespace:Kokkos::Impl
MulOper	impl/Kokkos_Atomic_Generic.hpp	/^struct MulOper {$/;"	s	namespace:Kokkos::Impl
MultidimensionalSparseTuningProblem	Kokkos_Tuners.hpp	/^  MultidimensionalSparseTuningProblem(ProblemSpaceInput space,$/;"	f	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem
MultidimensionalSparseTuningProblem	Kokkos_Tuners.hpp	/^  MultidimensionalSparseTuningProblem(StoredProblemSpace space,$/;"	f	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem
MultidimensionalSparseTuningProblem	Kokkos_Tuners.hpp	/^class MultidimensionalSparseTuningProblem {$/;"	c	namespace:Kokkos::Tools::Experimental
MultipleTaskQueue	impl/Kokkos_MultipleTaskQueue.hpp	/^  MultipleTaskQueue(typename base_t::execution_space const& arg_execution_space,$/;"	f	class:Kokkos::Impl::MultipleTaskQueue
MultipleTaskQueue	impl/Kokkos_MultipleTaskQueue.hpp	/^class MultipleTaskQueue final$/;"	c	namespace:Kokkos::Impl
MultipleTaskQueueTeamEntry	impl/Kokkos_MultipleTaskQueue.hpp	/^  MultipleTaskQueueTeamEntry() {$/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION
MultipleTaskQueueTeamEntry	impl/Kokkos_MultipleTaskQueue.hpp	/^struct MultipleTaskQueueTeamEntry {$/;"	s	namespace:Kokkos::Impl
N	Cuda/Kokkos_Cuda_Vectorization.hpp	/^    enum : int { N = sizeof(Scalar) \/ sizeof(shuffle_as_t) };$/;"	e	enum:Kokkos::Impl::in_place_shfl_op::operator ()::__anond8e96d650103
N0	Kokkos_Layout.hpp	/^  enum { N0 = ArgN0 };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0503
N1	Kokkos_Layout.hpp	/^  enum { N1 = ArgN1 };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0603
N2	Kokkos_Layout.hpp	/^  enum { N2 = ArgN2 };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0703
N3	Kokkos_Layout.hpp	/^  enum { N3 = ArgN3 };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0803
N4	Kokkos_Layout.hpp	/^  enum { N4 = ArgN4 };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0903
N5	Kokkos_Layout.hpp	/^  enum { N5 = ArgN5 };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0a03
N6	Kokkos_Layout.hpp	/^  enum { N6 = ArgN6 };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0b03
N7	Kokkos_Layout.hpp	/^  enum { N7 = ArgN7 };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0c03
NOMINMAX	impl/Kokkos_Atomic_Windows.hpp	/^#define NOMINMAX$/;"	d
NUM_16	impl/Kokkos_Volatile_Load.hpp	/^    NUM_16 = NUM_8 \/ 2,$/;"	e	enum:Kokkos::volatile_load::__anon1365d82c0103
NUM_16	impl/Kokkos_Volatile_Load.hpp	/^    NUM_16 = NUM_8 \/ 2,$/;"	e	enum:Kokkos::volatile_store::__anon1365d82c0403
NUM_16	impl/Kokkos_Volatile_Load.hpp	/^    NUM_16 = NUM_8 \/ 2,$/;"	e	enum:Kokkos::volatile_store::__anon1365d82c0703
NUM_32	impl/Kokkos_Volatile_Load.hpp	/^    NUM_32 = NUM_8 \/ 4,$/;"	e	enum:Kokkos::volatile_load::__anon1365d82c0103
NUM_32	impl/Kokkos_Volatile_Load.hpp	/^    NUM_32 = NUM_8 \/ 4,$/;"	e	enum:Kokkos::volatile_store::__anon1365d82c0403
NUM_32	impl/Kokkos_Volatile_Load.hpp	/^    NUM_32 = NUM_8 \/ 4,$/;"	e	enum:Kokkos::volatile_store::__anon1365d82c0703
NUM_64	impl/Kokkos_Volatile_Load.hpp	/^    NUM_64 = NUM_8 \/ 8$/;"	e	enum:Kokkos::volatile_load::__anon1365d82c0103
NUM_64	impl/Kokkos_Volatile_Load.hpp	/^    NUM_64 = NUM_8 \/ 8$/;"	e	enum:Kokkos::volatile_store::__anon1365d82c0403
NUM_64	impl/Kokkos_Volatile_Load.hpp	/^    NUM_64 = NUM_8 \/ 8$/;"	e	enum:Kokkos::volatile_store::__anon1365d82c0703
NUM_8	impl/Kokkos_Volatile_Load.hpp	/^    NUM_8  = sizeof(T),$/;"	e	enum:Kokkos::volatile_load::__anon1365d82c0103
NUM_8	impl/Kokkos_Volatile_Load.hpp	/^    NUM_8  = sizeof(T),$/;"	e	enum:Kokkos::volatile_store::__anon1365d82c0403
NUM_8	impl/Kokkos_Volatile_Load.hpp	/^    NUM_8  = sizeof(T),$/;"	e	enum:Kokkos::volatile_store::__anon1365d82c0703
NextTraits	Kokkos_View.hpp	/^  using NextTraits = DeduceCommonViewAllocProp<NextViews...>;$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:DeduceCommonViewAllocProp<NextViews...>
No	impl/Kokkos_Profiling.cpp	/^enum class MayRequireGlobalFencing : bool { No, Yes };$/;"	e	enum:Kokkos::Tools::Experimental::MayRequireGlobalFencing	file:
NoAssociatedTeam	impl/Kokkos_MultipleTaskQueue.hpp	/^    static constexpr team_queue_id_t NoAssociatedTeam = -1;$/;"	m	struct:Kokkos::Impl::MultipleTaskQueue::SchedulerInfo	typeref:typename:team_queue_id_t
NoCtorsNotOnDevice	impl/Kokkos_EBO.hpp	/^struct NoCtorsNotOnDevice : std::false_type {};$/;"	s	namespace:Kokkos::Impl
NoUniqueAddressMemberEmulation	impl/Kokkos_EBO.hpp	/^class NoUniqueAddressMemberEmulation$/;"	c	namespace:Kokkos::Impl
None	Kokkos_Concepts.hpp	/^  constexpr static const ImplWorkItemProperty<0> None =$/;"	m	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:const ImplWorkItemProperty<0>
None_t	Kokkos_Concepts.hpp	/^  using None_t            = ImplWorkItemProperty<0>;$/;"	t	struct:Kokkos::Experimental::WorkItemProperty	typeref:typename:ImplWorkItemProperty<0>
NotOnDeviceCtorDisambiguator	impl/Kokkos_EBO.hpp	/^struct NotOnDeviceCtorDisambiguator {};$/;"	s	namespace:Kokkos::Impl
NumPriorities	impl/Kokkos_MultipleTaskQueue.hpp	/^  static constexpr int NumPriorities = 3;$/;"	m	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:int
NumPriorities	impl/Kokkos_MultipleTaskQueue.hpp	/^  static constexpr int NumPriorities = 3;$/;"	m	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:int
NumQueue	impl/Kokkos_SingleTaskQueue.hpp	/^  static constexpr int NumQueue = 3;$/;"	m	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:int
NumQueue	impl/Kokkos_TaskQueue.hpp	/^  enum : int { NumQueue = 3 };$/;"	e	enum:Kokkos::Impl::TaskQueue::__anoncd8d68450103
NumReservedDeviceIDs	impl/Kokkos_Profiling_Interface.hpp	/^constexpr const uint32_t NumReservedDeviceIDs = 1;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:const uint32_t
OMPT_SAFE_CALL	OpenMPTarget/Kokkos_OpenMPTarget_Error.hpp	/^#define OMPT_SAFE_CALL(/;"	d
OUT_OF_CLASS_DEFINITION_FLOATING_POINT	impl/Kokkos_NumericTraits.cpp	/^#define OUT_OF_CLASS_DEFINITION_FLOATING_POINT(/;"	d	file:
OUT_OF_CLASS_DEFINITION_FLOATING_POINT_2	impl/Kokkos_NumericTraits.cpp	/^#define OUT_OF_CLASS_DEFINITION_FLOATING_POINT_2(/;"	d	file:
OUT_OF_CLASS_DEFINITION_INTEGRAL	impl/Kokkos_NumericTraits.cpp	/^#define OUT_OF_CLASS_DEFINITION_INTEGRAL(/;"	d	file:
OUT_OF_CLASS_DEFINITION_INTEGRAL_2	impl/Kokkos_NumericTraits.cpp	/^#define OUT_OF_CLASS_DEFINITION_INTEGRAL_2(/;"	d	file:
ObjectWithVLAEmulation	impl/Kokkos_VLAEmulation.hpp	/^  explicit ObjectWithVLAEmulation(vla_entry_count_type num_entries) noexcept($/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION
ObjectWithVLAEmulation	impl/Kokkos_VLAEmulation.hpp	/^struct ObjectWithVLAEmulation {$/;"	s	namespace:Kokkos::Impl
ObservingRawPtr	Kokkos_PointerOwnership.hpp	/^using ObservingRawPtr = T*;$/;"	t	namespace:Kokkos	typeref:typename:T *
OccupancyControlPolicyMixin	traits/Kokkos_OccupancyControlTrait.hpp	/^  OccupancyControlPolicyMixin(ExecPolicyTraitsWithDefaults<Other> const& other)$/;"	f	struct:Kokkos::Impl::OccupancyControlPolicyMixin
OccupancyControlPolicyMixin	traits/Kokkos_OccupancyControlTrait.hpp	/^struct OccupancyControlPolicyMixin<Kokkos::Experimental::DesiredOccupancy,$/;"	s	namespace:Kokkos::Impl
OccupancyControlPolicyMixin	traits/Kokkos_OccupancyControlTrait.hpp	/^struct OccupancyControlPolicyMixin<Kokkos::Experimental::MaximizeOccupancy,$/;"	s	namespace:Kokkos::Impl
OccupancyControlTrait	traits/Kokkos_OccupancyControlTrait.hpp	/^struct OccupancyControlTrait : TraitSpecificationBase<OccupancyControlTrait> {$/;"	s	namespace:Kokkos::Impl
OpenACC	OpenACC/Kokkos_OpenACC.cpp	/^Kokkos::Experimental::OpenACC::OpenACC()$/;"	f	class:Kokkos::Experimental::OpenACC
OpenACC	OpenACC/Kokkos_OpenACC.hpp	/^class OpenACC {$/;"	c	namespace:Kokkos::Experimental
OpenACC	impl/Kokkos_Profiling_Interface.hpp	/^  OpenACC,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
OpenACCInternal	OpenACC/Kokkos_OpenACC_Instance.hpp	/^class OpenACCInternal {$/;"	c	namespace:Kokkos::Experimental::Impl
OpenACCSpace	OpenACC/Kokkos_OpenACCSpace.hpp	/^class OpenACCSpace {$/;"	c	namespace:Kokkos::Experimental
OpenACC_Traits	OpenACC/Kokkos_OpenACC_Traits.hpp	/^struct OpenACC_Traits {$/;"	s	namespace:Kokkos::Experimental::Impl
OpenMP	Kokkos_OpenMP.hpp	/^class OpenMP {$/;"	c	namespace:Kokkos
OpenMP	OpenMP/Kokkos_OpenMP_Instance.cpp	/^OpenMP::OpenMP()$/;"	f	class:Kokkos::OpenMP
OpenMP	impl/Kokkos_Profiling_Interface.hpp	/^  OpenMP,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
OpenMPInternal	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  OpenMPInternal(int arg_pool_size)$/;"	f	class:Kokkos::Impl::OpenMPInternal
OpenMPInternal	OpenMP/Kokkos_OpenMP_Instance.hpp	/^class OpenMPInternal {$/;"	c	namespace:Kokkos::Impl
OpenMPTarget	Kokkos_OpenMPTarget.hpp	/^class OpenMPTarget {$/;"	c	namespace:Kokkos::Experimental
OpenMPTarget	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^OpenMPTarget::OpenMPTarget()$/;"	f	class:Kokkos::Experimental::OpenMPTarget
OpenMPTarget	impl/Kokkos_Profiling_Interface.hpp	/^  OpenMPTarget,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
OpenMPTargetExec	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^class OpenMPTargetExec {$/;"	c	namespace:Kokkos::Impl
OpenMPTargetExecTeamMember	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline OpenMPTargetExecTeamMember($/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember
OpenMPTargetExecTeamMember	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^class OpenMPTargetExecTeamMember {$/;"	c	namespace:Kokkos::Impl
OpenMPTargetInternal	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^class OpenMPTargetInternal {$/;"	c	namespace:Kokkos::Experimental::Impl
OpenMPTargetReducerWrapper	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^struct OpenMPTargetReducerWrapper {$/;"	s	namespace:Kokkos::Impl
OpenMPTargetSpace	Kokkos_OpenMPTargetSpace.hpp	/^class OpenMPTargetSpace {$/;"	c	namespace:Kokkos::Experimental
OpenMPTargetSpace	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^OpenMPTargetSpace::OpenMPTargetSpace() {}$/;"	f	class:Kokkos::Experimental::OpenMPTargetSpace
OpenMPTarget_abort	OpenMPTarget/Kokkos_OpenMPTarget_Abort.hpp	/^KOKKOS_INLINE_FUNCTION void OpenMPTarget_abort(char const *msg) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION void
OpenMPTraits	OpenMP/Kokkos_OpenMP_Instance.hpp	/^struct OpenMPTraits {$/;"	s	namespace:Kokkos::Impl
OptimizationGoal	impl/Kokkos_Profiling_Interface.hpp	/^using OptimizationGoal    = Kokkos_Tools_OptimzationGoal;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_OptimzationGoal
OptionalRef	impl/Kokkos_OptionalRef.hpp	/^  explicit OptionalRef(T& arg_value) : m_value(&arg_value) {}$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION
OptionalRef	impl/Kokkos_OptionalRef.hpp	/^  explicit OptionalRef(std::nullptr_t) : m_value(nullptr) {}$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION
OptionalRef	impl/Kokkos_OptionalRef.hpp	/^struct OptionalRef {$/;"	s	namespace:Kokkos::Impl
OrOper	impl/Kokkos_Atomic_Generic.hpp	/^struct OrOper {$/;"	s	namespace:Kokkos::Impl
OtherSpace	Kokkos_LogicalSpaces.hpp	/^  enum { accessible = MemorySpaceAccess<BaseSpace, OtherSpace>::accessible };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anoncffb81260203
OtherSpace	Kokkos_LogicalSpaces.hpp	/^  enum { assignable = MemorySpaceAccess<BaseSpace, OtherSpace>::assignable };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anoncffb81260103
OtherSpace	Kokkos_LogicalSpaces.hpp	/^  enum { deepcopy = MemorySpaceAccess<BaseSpace, OtherSpace>::deepcopy };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anoncffb81260303
OutOfMemoryError	impl/Kokkos_Error.hpp	/^    OutOfMemoryError,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::FailureMode
OwningRawPtr	Kokkos_PointerOwnership.hpp	/^using OwningRawPtr = T*;$/;"	t	namespace:Kokkos	typeref:typename:T *
P	impl/Kokkos_ViewCtor.hpp	/^    initialize = !Kokkos::Impl::has_type<WithoutInitializing_t, P...>::value$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00703
P	impl/Kokkos_ViewCtor.hpp	/^  enum { allow_padding = Kokkos::Impl::has_type<AllowPadding_t, P...>::value };$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00603
P	impl/Kokkos_ViewCtor.hpp	/^  enum { has_label = Kokkos::Impl::has_type<std::string, P...>::value };$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00503
PASSIVE	impl/Kokkos_Spinwait.hpp	/^  PASSIVE  \/\/ Used to quickly yield the thread to quite down the system$/;"	e	enum:Kokkos::Impl::WaitMode
POSIX_MEMALIGN	Kokkos_HBWSpace.hpp	/^    POSIX_MEMALIGN,$/;"	e	enum:Kokkos::Experimental::HBWSpace::AllocationMechanism
POSIX_MEMALIGN	Kokkos_HostSpace.hpp	/^    POSIX_MEMALIGN,$/;"	e	enum:Kokkos::HostSpace::AllocationMechanism
POSIX_MMAP	Kokkos_HBWSpace.hpp	/^    POSIX_MMAP,$/;"	e	enum:Kokkos::Experimental::HBWSpace::AllocationMechanism
POSIX_MMAP	Kokkos_HostSpace.hpp	/^    POSIX_MMAP,$/;"	e	enum:Kokkos::HostSpace::AllocationMechanism
ParReduceCommon	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using ParReduceCommon = ParallelReduceCommon<PointerType>;$/;"	t	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:ParallelReduceCommon<PointerType>
ParReduceCommon	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using ParReduceCommon = ParallelReduceCommon<pointer_type>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ParallelReduceCommon<pointer_type>
ParReduceSpecialize	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using ParReduceSpecialize =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ParallelReduceSpecialize<FunctorType,Policy,ReducerType,pointer_type,typename Analysis::value_type>
ParallelConstructName	Kokkos_ExecPolicy.hpp	/^  ParallelConstructName(std::string const& label) : label_ref(label) {$/;"	f	struct:Kokkos::Impl::ParallelConstructName
ParallelConstructName	Kokkos_ExecPolicy.hpp	/^struct ParallelConstructName<FunctorType, TagType, false> {$/;"	s	namespace:Kokkos::Impl
ParallelConstructName	Kokkos_ExecPolicy.hpp	/^struct ParallelConstructName<FunctorType, TagType, true> {$/;"	s	namespace:Kokkos::Impl
ParallelFor	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  ParallelFor(const FunctorType& arg_functor, Policy arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^class ParallelFor<FunctorType, Kokkos::MDRangePolicy<Traits...>, Kokkos::Cuda> {$/;"	c	namespace:Kokkos::Impl
ParallelFor	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^class ParallelFor<FunctorType, Kokkos::RangePolicy<Traits...>, Kokkos::Cuda> {$/;"	c	namespace:Kokkos::Impl
ParallelFor	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^class ParallelFor<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^class ParallelFor<FunctorType, Kokkos::WorkGraphPolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  ParallelFor(FunctorType const& arg_functor, Policy const& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^class ParallelFor<FunctorType, Kokkos::MDRangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	HIP/Kokkos_HIP_Parallel_Range.hpp	/^class ParallelFor<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  ParallelFor(FunctorType const& arg_functor, Policy const& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	HIP/Kokkos_HIP_Parallel_Team.hpp	/^class ParallelFor<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^class ParallelFor<FunctorType, Kokkos::WorkGraphPolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^  inline ParallelFor(const FunctorType &arg_functor, const Policy &arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^class ParallelFor<FunctorType, Kokkos::WorkGraphPolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Kokkos_HPX.hpp	/^  ParallelFor(const FunctorType &arg_functor, const Policy &arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Kokkos_HPX.hpp	/^  inline ParallelFor(const FunctorType &arg_functor, MDRangePolicy arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Kokkos_HPX.hpp	/^  inline ParallelFor(const FunctorType &arg_functor, Policy arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Kokkos_HPX.hpp	/^class ParallelFor<FunctorType, Kokkos::MDRangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Kokkos_HPX.hpp	/^class ParallelFor<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Kokkos_HPX.hpp	/^class ParallelFor<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, MDRangePolicy arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, Policy arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^class ParallelFor<FunctorType, Kokkos::MDRangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^class ParallelFor<FunctorType, Kokkos::RangePolicy<Traits...>, Kokkos::OpenMP> {$/;"	c	namespace:Kokkos::Impl
ParallelFor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^class ParallelFor<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^class ParallelFor<FunctorType, Kokkos::WorkGraphPolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  ParallelFor(const FunctorType& arg_functor, Policy arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^class ParallelFor<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^class ParallelFor<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, Policy arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^class ParallelFor<FunctorType, Kokkos::MDRangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^class Kokkos::Impl::ParallelFor<FunctorType, Kokkos::MDRangePolicy<Traits...>,$/;"	c	class:Kokkos::Impl
ParallelFor	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^class Kokkos::Impl::ParallelFor<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	class:Kokkos::Impl
ParallelFor	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  ParallelFor(FunctorType const& arg_functor, Policy const& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^class ParallelFor<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  inline ParallelFor(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^class ParallelFor<FunctorType, Kokkos::MDRangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Serial/Kokkos_Serial_Parallel_Range.hpp	/^class ParallelFor<FunctorType, Kokkos::RangePolicy<Traits...>, Kokkos::Serial> {$/;"	c	namespace:Kokkos::Impl
ParallelFor	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Serial/Kokkos_Serial_Parallel_Team.hpp	/^class ParallelFor<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^class ParallelFor<FunctorType, Kokkos::WorkGraphPolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  ParallelFor(const FunctorType &arg_functor, const MDRangePolicy &arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^class ParallelFor<FunctorType, Kokkos::MDRangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  ParallelFor(const FunctorType &arg_functor, const Policy &arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Threads/Kokkos_Threads_Parallel_Range.hpp	/^class ParallelFor<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  ParallelFor(const FunctorType &arg_functor, const Policy &arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Threads/Kokkos_Threads_Parallel_Team.hpp	/^class ParallelFor<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelFor	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  inline ParallelFor(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelFor
ParallelFor	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^class ParallelFor<FunctorType, Kokkos::WorkGraphPolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelForTag	Kokkos_ExecPolicy.hpp	/^struct ParallelForTag {};$/;"	s	namespace:Kokkos
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  ParallelReduce(const FunctorType& arg_functor, const Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^class ParallelReduce<FunctorType, Kokkos::MDRangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  ParallelReduce(const FunctorType& arg_functor, const Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^class ParallelReduce<FunctorType, Kokkos::RangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  ParallelReduce(const FunctorType& arg_functor, const Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^class ParallelReduce<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  ParallelReduce(const FunctorType& arg_functor, const Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^class ParallelReduce<FunctorType, Kokkos::MDRangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  ParallelReduce(const FunctorType& arg_functor, const Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	HIP/Kokkos_HIP_Parallel_Range.hpp	/^class ParallelReduce<FunctorType, Kokkos::RangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  ParallelReduce(FunctorType const& arg_functor, Policy const& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	HIP/Kokkos_HIP_Parallel_Team.hpp	/^class ParallelReduce<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Kokkos_HPX.hpp	/^  ParallelReduce(const FunctorType &arg_functor, const Policy &arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Kokkos_HPX.hpp	/^  inline ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Kokkos_HPX.hpp	/^  inline ParallelReduce(const FunctorType &arg_functor, Policy arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Kokkos_HPX.hpp	/^  inline ParallelReduce(const FunctorType &arg_functor,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Kokkos_HPX.hpp	/^class ParallelReduce<FunctorType, Kokkos::MDRangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Kokkos_HPX.hpp	/^class ParallelReduce<FunctorType, Kokkos::RangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Kokkos_HPX.hpp	/^class ParallelReduce<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline ParallelReduce(const FunctorType& arg_functor, Policy arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline ParallelReduce(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^class ParallelReduce<FunctorType, Kokkos::MDRangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^class ParallelReduce<FunctorType, Kokkos::RangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^class ParallelReduce<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  ParallelReduce(const FunctorType& arg_functor, Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  ParallelReduce(const FunctorType& arg_functor, const Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^class ParallelReduce<FunctorType, Kokkos::RangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^class ParallelReduce<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline ParallelReduce(const FunctorType& arg_functor, Policy arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^class ParallelReduce<FunctorType, Kokkos::MDRangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  ParallelReduce(const FunctorType& f, const Policy& p, const V& v,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  ParallelReduce(const FunctorType& f, const Policy& p,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^class ParallelReduce<FunctorType, Kokkos::MDRangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^class ParallelReduce<FunctorType, Kokkos::RangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  ParallelReduce(FunctorType const& arg_functor, Policy const& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^class ParallelReduce<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  ParallelReduce(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  inline ParallelReduce(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^class ParallelReduce<FunctorType, Kokkos::MDRangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  ParallelReduce(const FunctorType& arg_functor, const Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline ParallelReduce(const FunctorType& arg_functor, Policy arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Serial/Kokkos_Serial_Parallel_Range.hpp	/^class ParallelReduce<FunctorType, Kokkos::RangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  ParallelReduce(const FunctorType& arg_functor, const Policy& arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline ParallelReduce(const FunctorType& arg_functor, Policy arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Serial/Kokkos_Serial_Parallel_Team.hpp	/^class ParallelReduce<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  ParallelReduce(const FunctorType &arg_functor,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  inline ParallelReduce(const FunctorType &arg_functor,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^class ParallelReduce<FunctorType, Kokkos::MDRangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  ParallelReduce(const FunctorType &arg_functor, const Policy &arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline ParallelReduce(const FunctorType &arg_functor, Policy arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Threads/Kokkos_Threads_Parallel_Range.hpp	/^class ParallelReduce<FunctorType, Kokkos::RangePolicy<Traits...>, ReducerType,$/;"	c	namespace:Kokkos::Impl
ParallelReduce	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  inline ParallelReduce($/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  inline ParallelReduce(const FunctorType &arg_functor, Policy arg_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce
ParallelReduce	Threads/Kokkos_Threads_Parallel_Team.hpp	/^class ParallelReduce<FunctorType, Kokkos::TeamPolicy<Properties...>,$/;"	c	namespace:Kokkos::Impl
ParallelReduceAdaptor	Kokkos_Parallel_Reduce.hpp	/^struct ParallelReduceAdaptor {$/;"	s	namespace:Kokkos::Impl
ParallelReduceCommon	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^struct ParallelReduceCommon {$/;"	s	namespace:Kokkos::Impl
ParallelReduceFence	Kokkos_Parallel_Reduce.hpp	/^struct ParallelReduceFence {$/;"	s	namespace:Kokkos::Impl
ParallelReduceFunctorType	Kokkos_Parallel_Reduce.hpp	/^struct ParallelReduceFunctorType {$/;"	s	namespace:Kokkos::Impl
ParallelReducePolicyType	Kokkos_Parallel_Reduce.hpp	/^struct ParallelReducePolicyType<$/;"	s	namespace:Kokkos::Impl
ParallelReduceReturnValue	Kokkos_Parallel_Reduce.hpp	/^struct ParallelReduceReturnValue<$/;"	s	namespace:Kokkos::Impl
ParallelReduceSpecialize	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^struct ParallelReduceSpecialize {$/;"	s	namespace:Kokkos::Impl
ParallelReduceSpecialize	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^struct ParallelReduceSpecialize<FunctorType, Kokkos::RangePolicy<PolicyArgs...>,$/;"	s	namespace:Kokkos::Impl
ParallelReduceSpecialize	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^struct ParallelReduceSpecialize<FunctorType, TeamPolicyInternal<PolicyArgs...>,$/;"	s	namespace:Kokkos::Impl
ParallelReduceTag	Kokkos_ExecPolicy.hpp	/^struct ParallelReduceTag {};$/;"	s	namespace:Kokkos
ParallelScan	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  ParallelScan(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelScan
ParallelScan	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^class ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>, Kokkos::Cuda> {$/;"	c	namespace:Kokkos::Impl
ParallelScan	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  ParallelScan(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScan
ParallelScan	HIP/Kokkos_HIP_Parallel_Range.hpp	/^class ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScan	Kokkos_HPX.hpp	/^  inline ParallelScan(const FunctorType &arg_functor, const Policy &arg_policy)$/;"	f	class:Kokkos::Impl::ParallelScan
ParallelScan	Kokkos_HPX.hpp	/^class ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScan	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline ParallelScan(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelScan
ParallelScan	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^class ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScan	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  ParallelScan(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelScan
ParallelScan	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^class ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScan	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  ParallelScan(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScan
ParallelScan	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^class ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScan	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline ParallelScan(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelScan
ParallelScan	Serial/Kokkos_Serial_Parallel_Range.hpp	/^class ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScan	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  ParallelScan(const FunctorType &arg_functor, const Policy &arg_policy)$/;"	f	class:Kokkos::Impl::ParallelScan
ParallelScan	Threads/Kokkos_Threads_Parallel_Range.hpp	/^class ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScanHIPBase	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  ParallelScanHIPBase(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelScanHIPBase
ParallelScanHIPBase	HIP/Kokkos_HIP_Parallel_Range.hpp	/^class ParallelScanHIPBase {$/;"	c	namespace:Kokkos::Impl
ParallelScanSYCLBase	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  ParallelScanSYCLBase(const FunctorType& arg_functor, const Policy& arg_policy)$/;"	f	class:Kokkos::Impl::ParallelScanSYCLBase
ParallelScanSYCLBase	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^class ParallelScanSYCLBase {$/;"	c	namespace:Kokkos::Impl
ParallelScanTag	Kokkos_ExecPolicy.hpp	/^struct ParallelScanTag {};$/;"	s	namespace:Kokkos
ParallelScanWithTotal	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  ParallelScanWithTotal(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal
ParallelScanWithTotal	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^class ParallelScanWithTotal<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScanWithTotal	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  ParallelScanWithTotal(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal
ParallelScanWithTotal	HIP/Kokkos_HIP_Parallel_Range.hpp	/^class ParallelScanWithTotal<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScanWithTotal	Kokkos_HPX.hpp	/^  inline ParallelScanWithTotal(const FunctorType &arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal
ParallelScanWithTotal	Kokkos_HPX.hpp	/^class ParallelScanWithTotal<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScanWithTotal	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline ParallelScanWithTotal(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal
ParallelScanWithTotal	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^class ParallelScanWithTotal<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScanWithTotal	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  ParallelScanWithTotal(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal
ParallelScanWithTotal	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^class ParallelScanWithTotal<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScanWithTotal	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  ParallelScanWithTotal(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal
ParallelScanWithTotal	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^class ParallelScanWithTotal<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScanWithTotal	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline ParallelScanWithTotal(const FunctorType& arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal
ParallelScanWithTotal	Serial/Kokkos_Serial_Parallel_Range.hpp	/^class ParallelScanWithTotal<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParallelScanWithTotal	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  ParallelScanWithTotal(const FunctorType &arg_functor,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal
ParallelScanWithTotal	Threads/Kokkos_Threads_Parallel_Range.hpp	/^class ParallelScanWithTotal<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	c	namespace:Kokkos::Impl
ParseViewExtents	Kokkos_Extents.hpp	/^struct ParseViewExtents {$/;"	s	namespace:Kokkos::Impl
PatternImplSpecializationFromTag	Kokkos_ExecPolicy.hpp	/^struct PatternImplSpecializationFromTag<Kokkos::ParallelForTag, Args...>$/;"	s	namespace:Kokkos::Impl
PatternImplSpecializationFromTag	Kokkos_ExecPolicy.hpp	/^struct PatternImplSpecializationFromTag<Kokkos::ParallelReduceTag, Args...>$/;"	s	namespace:Kokkos::Impl
PatternImplSpecializationFromTag	Kokkos_ExecPolicy.hpp	/^struct PatternImplSpecializationFromTag<Kokkos::ParallelScanTag, Args...>$/;"	s	namespace:Kokkos::Impl
PerTeam	Cuda/Kokkos_Cuda_Team.hpp	/^Impl::ThreadSingleStruct<Impl::CudaTeamMember> PerTeam($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadSingleStruct<Impl::CudaTeamMember>
PerTeam	HIP/Kokkos_HIP_Team.hpp	/^Impl::ThreadSingleStruct<Impl::HIPTeamMember> PerTeam($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadSingleStruct<Impl::HIPTeamMember>
PerTeam	Kokkos_HPX.hpp	/^Impl::ThreadSingleStruct<Impl::HPXTeamMember> PerTeam($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadSingleStruct<Impl::HPXTeamMember>
PerTeam	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^Impl::ThreadSingleStruct<Impl::OpenMPTargetExecTeamMember> PerTeam($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadSingleStruct<Impl::OpenMPTargetExecTeamMember>
PerTeam	SYCL/Kokkos_SYCL_Team.hpp	/^Impl::ThreadSingleStruct<Impl::SYCLTeamMember> PerTeam($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadSingleStruct<Impl::SYCLTeamMember>
PerTeam	Threads/Kokkos_ThreadsTeam.hpp	/^Impl::ThreadSingleStruct<Impl::ThreadsExecTeamMember> PerTeam($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadSingleStruct<Impl::ThreadsExecTeamMember>
PerTeam	impl/Kokkos_ExecPolicy.cpp	/^Impl::PerTeamValue PerTeam(const size_t& arg) {$/;"	f	namespace:Kokkos	typeref:typename:Impl::PerTeamValue
PerTeam	impl/Kokkos_HostThreadTeam.hpp	/^KOKKOS_INLINE_FUNCTION Impl::ThreadSingleStruct<Member> PerTeam($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadSingleStruct<Member>
PerTeamValue	Kokkos_ExecPolicy.hpp	/^struct PerTeamValue {$/;"	s	namespace:Kokkos::Impl
PerTeamValue	impl/Kokkos_ExecPolicy.cpp	/^PerTeamValue::PerTeamValue(size_t arg) : value(arg) {}$/;"	f	class:Kokkos::Impl::PerTeamValue
PerThread	Cuda/Kokkos_Cuda_Team.hpp	/^Impl::VectorSingleStruct<Impl::CudaTeamMember> PerThread($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::VectorSingleStruct<Impl::CudaTeamMember>
PerThread	HIP/Kokkos_HIP_Team.hpp	/^Impl::VectorSingleStruct<Impl::HIPTeamMember> PerThread($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::VectorSingleStruct<Impl::HIPTeamMember>
PerThread	Kokkos_HPX.hpp	/^Impl::VectorSingleStruct<Impl::HPXTeamMember> PerThread($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::VectorSingleStruct<Impl::HPXTeamMember>
PerThread	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^Impl::VectorSingleStruct<Impl::OpenMPTargetExecTeamMember> PerThread($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::VectorSingleStruct<Impl::OpenMPTargetExecTeamMember>
PerThread	SYCL/Kokkos_SYCL_Team.hpp	/^Impl::VectorSingleStruct<Impl::SYCLTeamMember> PerThread($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::VectorSingleStruct<Impl::SYCLTeamMember>
PerThread	Threads/Kokkos_ThreadsTeam.hpp	/^Impl::VectorSingleStruct<Impl::ThreadsExecTeamMember> PerThread($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::VectorSingleStruct<Impl::ThreadsExecTeamMember>
PerThread	impl/Kokkos_ExecPolicy.cpp	/^Impl::PerThreadValue PerThread(const size_t& arg) {$/;"	f	namespace:Kokkos	typeref:typename:Impl::PerThreadValue
PerThread	impl/Kokkos_HostThreadTeam.hpp	/^KOKKOS_INLINE_FUNCTION Impl::VectorSingleStruct<Member> PerThread($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::VectorSingleStruct<Member>
PerThreadValue	Kokkos_ExecPolicy.hpp	/^struct PerThreadValue {$/;"	s	namespace:Kokkos::Impl
PerThreadValue	impl/Kokkos_ExecPolicy.cpp	/^PerThreadValue::PerThreadValue(size_t arg) : value(arg) {}$/;"	f	class:Kokkos::Impl::PerThreadValue
PhysicalLayout	impl/Kokkos_PhysicalLayout.hpp	/^  PhysicalLayout(const View<T, L, D, M>& view)$/;"	f	struct:Kokkos::Impl::PhysicalLayout
PhysicalLayout	impl/Kokkos_PhysicalLayout.hpp	/^struct PhysicalLayout {$/;"	s	namespace:Kokkos::Impl
Policy	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  struct Policy {$/;"	s	struct:Kokkos::Impl::CudaGraphNodeAggregateKernel
Policy	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using Policy       = PolicyType;$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:PolicyType
Policy	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using Policy       = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::MDRangePolicy<Traits...>
Policy	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using Policy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::MDRangePolicy<Traits...>
Policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using Policy = TeamPolicy<Properties...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:TeamPolicy<Properties...>
Policy	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using Policy = TeamPolicy<Properties...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:TeamPolicy<Properties...>
Policy	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  using Policy = Kokkos::WorkGraphPolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::WorkGraphPolicy<Traits...>
Policy	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using Policy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::MDRangePolicy<Traits...>
Policy	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using Policy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::MDRangePolicy<Traits...>
Policy	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using Policy = TeamPolicyInternal<Kokkos::Experimental::HIP, Properties...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:TeamPolicyInternal<Kokkos::Experimental::HIP,Properties...>
Policy	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using Policy = TeamPolicyInternal<Kokkos::Experimental::HIP, Properties...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:TeamPolicyInternal<Kokkos::Experimental::HIP,Properties...>
Policy	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^  using Policy = Kokkos::WorkGraphPolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::WorkGraphPolicy<Traits...>
Policy	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^  using Policy  = Kokkos::WorkGraphPolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::WorkGraphPolicy<Traits...>
Policy	Kokkos_HPX.hpp	/^  using Policy        = typename MDRangePolicy::impl_range_policy;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:MDRangePolicy::impl_range_policy
Policy	Kokkos_HPX.hpp	/^  using Policy        = typename MDRangePolicy::impl_range_policy;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:MDRangePolicy::impl_range_policy
Policy	Kokkos_HPX.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Kokkos_HPX.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Kokkos_HPX.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Kokkos_HPX.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Kokkos_HPX.hpp	/^  using Policy  = TeamPolicyInternal<Kokkos::Experimental::HPX, Properties...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:TeamPolicyInternal<Kokkos::Experimental::HPX,Properties...>
Policy	Kokkos_HPX.hpp	/^  using Policy  = TeamPolicyInternal<Kokkos::Experimental::HPX, Properties...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:TeamPolicyInternal<Kokkos::Experimental::HPX,Properties...>
Policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Policy        = typename MDRangePolicy::impl_range_policy;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:MDRangePolicy::impl_range_policy
Policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Policy        = typename MDRangePolicy::impl_range_policy;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:MDRangePolicy::impl_range_policy
Policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Policy =$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::Impl::TeamPolicyInternal<Kokkos::OpenMP,Properties...>
Policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using Policy =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::TeamPolicyInternal<Kokkos::OpenMP,Properties...>
Policy	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^  using Policy = Kokkos::WorkGraphPolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::WorkGraphPolicy<Traits...>
Policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Policy =$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::Impl::TeamPolicyInternal<Kokkos::Experimental::OpenMPTarget,Properties...>
Policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using Policy =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::TeamPolicyInternal<Kokkos::Experimental::OpenMPTarget,Properties...>
Policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^        Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE, Policy,$/;"	e	enum:Kokkos::Impl::ParallelReduce::__anonc86c1b300103
Policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using Policy  = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::MDRangePolicy<Traits...>
Policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using Policy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::MDRangePolicy<Traits...>
Policy	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using Policy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::MDRangePolicy<Traits...>
Policy	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using Policy = Kokkos::MDRangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::MDRangePolicy<Traits...>
Policy	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using Policy = TeamPolicyInternal<Kokkos::Experimental::SYCL, Properties...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:TeamPolicyInternal<Kokkos::Experimental::SYCL,Properties...>
Policy	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using Policy = TeamPolicyInternal<Kokkos::Experimental::SYCL, Properties...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:TeamPolicyInternal<Kokkos::Experimental::SYCL,Properties...>
Policy	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using Policy        = typename MDRangePolicy::impl_range_policy;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:MDRangePolicy::impl_range_policy
Policy	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using Policy        = typename MDRangePolicy::impl_range_policy;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:MDRangePolicy::impl_range_policy
Policy	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using Policy  = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using Policy  = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using Policy  = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using Policy = TeamPolicyInternal<Kokkos::Serial, Properties...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:TeamPolicyInternal<Kokkos::Serial,Properties...>
Policy	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using Policy = TeamPolicyInternal<Kokkos::Serial, Properties...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:TeamPolicyInternal<Kokkos::Serial,Properties...>
Policy	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^  using Policy = Kokkos::WorkGraphPolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::WorkGraphPolicy<Traits...>
Policy	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using Policy        = typename MDRangePolicy::impl_range_policy;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:MDRangePolicy::impl_range_policy
Policy	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using Policy        = typename MDRangePolicy::impl_range_policy;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:MDRangePolicy::impl_range_policy
Policy	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Policy    = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using Policy = Kokkos::RangePolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::RangePolicy<Traits...>
Policy	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using Policy =$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::Impl::TeamPolicyInternal<Kokkos::Threads,Properties...>
Policy	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using Policy =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::TeamPolicyInternal<Kokkos::Threads,Properties...>
Policy	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  using Policy = Kokkos::WorkGraphPolicy<Traits...>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::WorkGraphPolicy<Traits...>
Policy	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  struct Policy {$/;"	s	struct:Kokkos::Impl::GraphNodeAggregateKernelDefaultImpl
Policy	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  using Policy       = PolicyType;$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:PolicyType
Policy	impl/Kokkos_Tools_Generic.hpp	/^  using Policy              = Kokkos::MDRangePolicy<Properties...>;$/;"	t	function:Kokkos::Tools::Experimental::Impl::report_policy_results	typeref:typename:Kokkos::MDRangePolicy<Properties...>
Policy	impl/Kokkos_Tools_Generic.hpp	/^  using Policy              = Kokkos::MDRangePolicy<Properties...>;$/;"	t	function:Kokkos::Tools::Experimental::Impl::tune_policy	typeref:typename:Kokkos::MDRangePolicy<Properties...>
PolicyTraitMatcher	traits/Kokkos_PolicyTraitAdaptor.hpp	/^struct PolicyTraitMatcher : std::false_type {};$/;"	s	namespace:Kokkos::Impl
PolicyTraitMatcher	traits/Kokkos_PolicyTraitMatcher.hpp	/^struct PolicyTraitMatcher : std::false_type {};$/;"	s	namespace:Kokkos::Impl
PolicyType	Kokkos_Tuners.hpp	/^    using PolicyType           = Kokkos::TeamPolicy<Properties...>;$/;"	t	function:Kokkos::Tools::Experimental::TeamSizeTuner::TeamSizeTuner	typeref:typename:Kokkos::TeamPolicy<Properties...>
PolicyType	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using PolicyType = Kokkos::RangePolicy<PolicyArgs...>;$/;"	t	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:Kokkos::RangePolicy<PolicyArgs...>
PolicyType	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using PolicyType = TeamPolicyInternal<PolicyArgs...>;$/;"	t	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:TeamPolicyInternal<PolicyArgs...>
PoolAllocatedObjectBase	impl/Kokkos_TaskNode.hpp	/^  constexpr explicit PoolAllocatedObjectBase($/;"	f	class:Kokkos::Impl::PoolAllocatedObjectBase	typeref:typename:KOKKOS_INLINE_FUNCTION 
PoolAllocatedObjectBase	impl/Kokkos_TaskNode.hpp	/^class alignas(void*) PoolAllocatedObjectBase {$/;"	c	namespace:Kokkos::Impl
PoolExec	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using PoolExec        = Kokkos::Impl::OpenMPTargetExec;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::execute	typeref:typename:Kokkos::Impl::OpenMPTargetExec	file:
PoolExec	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  using PoolExec = Kokkos::Impl::OpenMPTargetExec;$/;"	t	class:Kokkos::Impl::TaskExec	typeref:typename:Kokkos::Impl::OpenMPTargetExec
PosixMMap	impl/Kokkos_Error.hpp	/^    PosixMMap,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
PosixMemAlign	impl/Kokkos_Error.hpp	/^    PosixMemAlign,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
PossiblyUnsetOption	impl/Kokkos_Profiling.hpp	/^  enum PossiblyUnsetOption { unset, off, on };$/;"	g	struct:Kokkos::Tools::InitArguments
Preferred	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^enum class BlockType { Max, Preferred };$/;"	e	enum:Kokkos::Experimental::Impl::BlockType
PrependExtent	Kokkos_Extents.hpp	/^struct PrependExtent<Extents<Exts...>, NewExtent> {$/;"	s	namespace:Kokkos::Experimental
ProblemSpaceInput	Kokkos_Tuners.hpp	/^  using ProblemSpaceInput = Container<TemplateArguments...>;$/;"	t	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:Container<TemplateArguments...>
Prod	Kokkos_Parallel_Reduce.hpp	/^  Prod(const result_view_type& value_)$/;"	f	struct:Kokkos::Prod	typeref:typename:KOKKOS_INLINE_FUNCTION
Prod	Kokkos_Parallel_Reduce.hpp	/^  Prod(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::Prod	typeref:typename:KOKKOS_INLINE_FUNCTION
Prod	Kokkos_Parallel_Reduce.hpp	/^struct Prod {$/;"	s	namespace:Kokkos
Profiling	Kokkos_Profiling_ProfileSection.hpp	/^namespace Profiling {$/;"	n	namespace:Kokkos
Profiling	impl/Kokkos_Profiling.cpp	/^namespace Profiling {$/;"	n	namespace:Kokkos	file:
Profiling	impl/Kokkos_Profiling.hpp	/^namespace Profiling {$/;"	n	namespace:Kokkos
Profiling	impl/Kokkos_Profiling_DeviceInfo.hpp	/^namespace Profiling {$/;"	n	namespace:Kokkos
Profiling	impl/Kokkos_Profiling_Interface.hpp	/^namespace Profiling {$/;"	n	namespace:Kokkos
ProfilingSection	Kokkos_Profiling_ProfileSection.hpp	/^  ProfilingSection(const std::string& sectionName)$/;"	f	class:Kokkos::Profiling::ProfilingSection
ProfilingSection	Kokkos_Profiling_ProfileSection.hpp	/^class ProfilingSection {$/;"	c	namespace:Kokkos::Profiling
R	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^  using R = std::conditional_t<std::is_volatile<type>::value, volatile uint32_t,$/;"	t	function:Kokkos::Impl::__atomic_compare_exchange_simt_	typeref:typename:std::conditional_t<std::is_volatile<type>::value,volatile uint32_t,uint32_t>
REDUCE	impl/Kokkos_FunctorAnalysis.hpp	/^  struct REDUCE {};$/;"	s	struct:Kokkos::Impl::FunctorPatternInterface
REDUCE	impl/Kokkos_FunctorAnalysis.hpp	/^  using REDUCE = FunctorPatternInterface::REDUCE;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:FunctorPatternInterface::REDUCE
REQUIRED_HWLOC_API_VERSION	impl/Kokkos_hwloc.cpp	/^#define REQUIRED_HWLOC_API_VERSION /;"	d	file:
ROOT	impl/Kokkos_Spinwait.hpp	/^  ROOT  \/\/ Never sleep or yield the root thread$/;"	e	enum:Kokkos::Impl::WaitMode
RP	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using RP               = Policy;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy
RShiftOper	impl/Kokkos_Atomic_Generic.hpp	/^struct RShiftOper {$/;"	s	namespace:Kokkos::Impl
RandomAccess	Kokkos_MemoryTraits.hpp	/^  RandomAccess = 0x02,$/;"	e	enum:Kokkos::MemoryTraitsFlags
RangePolicy	Kokkos_ExecPolicy.hpp	/^  RangePolicy(const RangePolicy<OtherProperties...>& p)$/;"	f	class:Kokkos::RangePolicy
RangePolicy	Kokkos_ExecPolicy.hpp	/^  inline RangePolicy()$/;"	f	class:Kokkos::RangePolicy
RangePolicy	Kokkos_ExecPolicy.hpp	/^  inline RangePolicy(const member_type work_begin, const member_type work_end)$/;"	f	class:Kokkos::RangePolicy
RangePolicy	Kokkos_ExecPolicy.hpp	/^  inline RangePolicy(const member_type work_begin, const member_type work_end,$/;"	f	class:Kokkos::RangePolicy
RangePolicy	Kokkos_ExecPolicy.hpp	/^  inline RangePolicy(const typename traits::execution_space& work_space,$/;"	f	class:Kokkos::RangePolicy
RangePolicy	Kokkos_ExecPolicy.hpp	/^class RangePolicy : public Impl::PolicyTraits<Properties...> {$/;"	c	namespace:Kokkos
Rank	KokkosExp_MDRangePolicy.hpp	/^using Rank KOKKOS_DEPRECATED = Kokkos::Rank<N, OuterDir, InnerDir>;$/;"	t	namespace:Kokkos::Experimental	typeref:typename:Kokkos::Rank<N,OuterDir,InnerDir>
Rank	Kokkos_Rank.hpp	/^struct Rank {$/;"	s	namespace:Kokkos
Rank	Kokkos_View.hpp	/^  enum { Rank = map_type::Rank };$/;"	e	enum:Kokkos::View::__anon8559ec870903
RankDataType	Kokkos_View.hpp	/^struct RankDataType {$/;"	s	namespace:Kokkos::Impl
RankDataType	Kokkos_View.hpp	/^struct RankDataType<ValueType, 0> {$/;"	s	namespace:Kokkos::Impl
RankTag	impl/KokkosExp_Host_IterateTile.hpp	/^  struct RankTag {$/;"	s	struct:Kokkos::Impl::HostIterateTile
RawMemoryAllocationFailure	impl/Kokkos_Error.hpp	/^  RawMemoryAllocationFailure($/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure
RawMemoryAllocationFailure	impl/Kokkos_Error.hpp	/^class RawMemoryAllocationFailure : public std::bad_alloc {$/;"	c	namespace:Kokkos::Experimental
RealType	Kokkos_MathematicalSpecialFunctions.hpp	/^  using RealType = typename CmplxType::value_type;$/;"	t	function:Kokkos::Experimental::cyl_bessel_h10	typeref:typename:CmplxType::value_type
RealType	Kokkos_MathematicalSpecialFunctions.hpp	/^  using RealType = typename CmplxType::value_type;$/;"	t	function:Kokkos::Experimental::cyl_bessel_h11	typeref:typename:CmplxType::value_type
RealType	Kokkos_MathematicalSpecialFunctions.hpp	/^  using RealType = typename CmplxType::value_type;$/;"	t	function:Kokkos::Experimental::cyl_bessel_h20	typeref:typename:CmplxType::value_type
RealType	Kokkos_MathematicalSpecialFunctions.hpp	/^  using RealType = typename CmplxType::value_type;$/;"	t	function:Kokkos::Experimental::cyl_bessel_h21	typeref:typename:CmplxType::value_type
Record	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using Record = Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaSpace, void>;$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaSpace,void>
Record	Cuda/Kokkos_Cuda_Instance.cpp	/^      using Record =$/;"	t	function:Kokkos::Impl::CudaInternal::initialize	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaSpace,void>	file:
Record	Cuda/Kokkos_Cuda_Instance.cpp	/^    using Record =$/;"	t	function:Kokkos::Impl::CudaInternal::scratch_flags	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaSpace,void>	file:
Record	Cuda/Kokkos_Cuda_Instance.cpp	/^    using Record =$/;"	t	function:Kokkos::Impl::CudaInternal::scratch_functor	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaSpace,void>	file:
Record	Cuda/Kokkos_Cuda_Instance.cpp	/^    using Record =$/;"	t	function:Kokkos::Impl::CudaInternal::scratch_space	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaSpace,void>	file:
Record	Cuda/Kokkos_Cuda_Instance.cpp	/^    using Record =$/;"	t	function:Kokkos::Impl::CudaInternal::scratch_unified	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaHostPinnedSpace,void>	file:
Record	HIP/Kokkos_HIP_Instance.cpp	/^      using Record =$/;"	t	function:Kokkos::Experimental::Impl::HIPInternal::initialize	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::HIPSpace,void>	file:
Record	HIP/Kokkos_HIP_Instance.cpp	/^    using Record =$/;"	t	function:Kokkos::Experimental::Impl::HIPInternal::scratch_flags	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::HIPSpace,void>	file:
Record	HIP/Kokkos_HIP_Instance.cpp	/^    using Record =$/;"	t	function:Kokkos::Experimental::Impl::HIPInternal::scratch_space	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::HIPSpace,void>	file:
Record	Kokkos_MemoryPool.hpp	/^  using Record  = Kokkos::Impl::SharedAllocationRecord<base_memory_space>;$/;"	t	class:Kokkos::MemoryPool	typeref:typename:Kokkos::Impl::SharedAllocationRecord<base_memory_space>
Record	SYCL/Kokkos_SYCL_Instance.cpp	/^      using Record = Kokkos::Impl::SharedAllocationRecord<$/;"	t	function:Kokkos::Experimental::Impl::SYCLInternal::initialize	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::SYCLDeviceUSMSpace,void>	file:
Record	SYCL/Kokkos_SYCL_Instance.cpp	/^    using Record = Kokkos::Impl::SharedAllocationRecord<$/;"	t	function:Kokkos::Experimental::Impl::SYCLInternal::scratch_flags	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::SYCLDeviceUSMSpace,void>	file:
Record	SYCL/Kokkos_SYCL_Instance.cpp	/^    using Record = Kokkos::Impl::SharedAllocationRecord<$/;"	t	function:Kokkos::Experimental::Impl::SYCLInternal::scratch_space	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::SYCLDeviceUSMSpace,void>	file:
Record	SYCL/Kokkos_SYCL_Instance.cpp	/^    using Record = Kokkos::Impl::SharedAllocationRecord<AllocationSpace, void>;$/;"	t	function:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem::reserve	typeref:typename:Kokkos::Impl::SharedAllocationRecord<AllocationSpace,void>	file:
Record	SYCL/Kokkos_SYCL_Instance.cpp	/^    using Record = Kokkos::Impl::SharedAllocationRecord<AllocationSpace, void>;$/;"	t	function:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem::reset	typeref:typename:Kokkos::Impl::SharedAllocationRecord<AllocationSpace,void>	file:
Record	Threads/Kokkos_ThreadsExec.cpp	/^      using Record =$/;"	t	function:Kokkos::Impl::ThreadsExec::execute_resize_scratch_in_serial::__anon54e346b10302	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::HostSpace,void>	file:
Record	Threads/Kokkos_ThreadsExec.cpp	/^      using Record =$/;"	t	function:Kokkos::Impl::ThreadsExec::first_touch_allocate_thread_private_scratch	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::HostSpace,void>	file:
Record	Threads/Kokkos_ThreadsExec.cpp	/^  using Record = Kokkos::Impl::SharedAllocationRecord<Kokkos::HostSpace, void>;$/;"	t	function:Kokkos::Impl::ThreadsExec::~ThreadsExec	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::HostSpace,void>	file:
Record	impl/Kokkos_SharedAlloc.hpp	/^  using Record = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationHeader	typeref:typename:SharedAllocationRecord<void,void>
Record	impl/Kokkos_SharedAlloc.hpp	/^  using Record = SharedAllocationRecord<void, void>;$/;"	t	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:SharedAllocationRecord<void,void>
RecordBase	Kokkos_CudaSpace.hpp	/^  using RecordBase = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void>
RecordBase	Kokkos_HBWSpace.hpp	/^  using RecordBase = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void>
RecordBase	Kokkos_HIP_Space.hpp	/^  using RecordBase = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void>
RecordBase	Kokkos_HostSpace.hpp	/^  using RecordBase = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void>
RecordBase	Kokkos_LogicalSpaces.hpp	/^  using RecordBase = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void>
RecordBase	Kokkos_OpenMPTargetSpace.hpp	/^  using RecordBase = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void>
RecordBase	Kokkos_SYCL_Space.hpp	/^  using RecordBase = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void>
RecordBase	OpenACC/Kokkos_OpenACCSpace.hpp	/^  using RecordBase = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void>
RecordCuda	Cuda/Kokkos_Cuda_Instance.cpp	/^    using RecordCuda = Kokkos::Impl::SharedAllocationRecord<CudaSpace>;$/;"	t	function:Kokkos::Impl::CudaInternal::finalize	typeref:typename:Kokkos::Impl::SharedAllocationRecord<CudaSpace>	file:
RecordHIP	HIP/Kokkos_HIP_Instance.cpp	/^    using RecordHIP =$/;"	t	function:Kokkos::Experimental::Impl::HIPInternal::finalize	typeref:typename:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::HIPSpace>	file:
RecordHost	Cuda/Kokkos_Cuda_Instance.cpp	/^    using RecordHost =$/;"	t	function:Kokkos::Impl::CudaInternal::finalize	typeref:typename:Kokkos::Impl::SharedAllocationRecord<CudaHostPinnedSpace>	file:
RecordHost	Kokkos_LogicalSpaces.hpp	/^    using RecordHost = SharedAllocationRecord<SpaceType, void>;$/;"	t	function:Kokkos::Impl::SharedAllocationRecord::get_record	typeref:typename:SharedAllocationRecord<SpaceType,void>
RecordHost	impl/Kokkos_HBWSpace.cpp	/^  using RecordHost =$/;"	t	function:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace::get_record	typeref:typename:SharedAllocationRecord<Kokkos::Experimental::HBWSpace,void>	file:
RecordSYCL	SYCL/Kokkos_SYCL_Instance.cpp	/^  using RecordSYCL = Kokkos::Impl::SharedAllocationRecord<SYCLDeviceUSMSpace>;$/;"	t	function:Kokkos::Experimental::Impl::SYCLInternal::finalize	typeref:typename:Kokkos::Impl::SharedAllocationRecord<SYCLDeviceUSMSpace>	file:
Reduce	impl/KokkosExp_IterateTileGPU.hpp	/^namespace Reduce {$/;"	n	namespace:Kokkos::Impl
ReducerConditional	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Kokkos_HPX.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::conditional<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerConditional	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using ReducerConditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerHasTestReferenceFunction	Kokkos_Parallel_Reduce.hpp	/^struct ReducerHasTestReferenceFunction {$/;"	s	namespace:Kokkos::Impl
ReducerTypeFwd	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Kokkos_HPX.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using ReducerTypeFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::conditional_t<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerTypeFwd	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using ReducerTypeFwd =$/;"	t	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:std::conditional_t<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
ReducerTypeFwd	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReducerTypeFwd	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using ReducerTypeFwd = typename ReducerConditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerConditional::type
ReductionAvailable	Threads/Kokkos_ThreadsExec.hpp	/^    ReductionAvailable$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60403
ReductionSwitcher	impl/Kokkos_Tools_Generic.hpp	/^struct ReductionSwitcher {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
ReductionSwitcher	impl/Kokkos_Tools_Generic.hpp	/^struct ReductionSwitcher<Kokkos::InvalidType> {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
ReductionTag	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using ReductionTag = std::conditional_t<UseShflReduction, ShflReductionTag,$/;"	t	function:Kokkos::Impl::ParallelReduce::operator ()	typeref:typename:std::conditional_t<UseShflReduction,ShflReductionTag,SHMEMReductionTag>
ReductionTag	HIP/Kokkos_HIP_Parallel_Range.hpp	/^    using ReductionTag = std::conditional_t<UseShflReduction, ShflReductionTag,$/;"	t	function:Kokkos::Impl::ParallelReduce::operator ()	typeref:typename:std::conditional_t<UseShflReduction,ShflReductionTag,SHMEMReductionTag>
ReductionTag	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using ReductionTag = std::conditional_t<UseShflReduction, ShflReductionTag,$/;"	t	function:Kokkos::Impl::ParallelReduce::operator ()	typeref:typename:std::conditional_t<UseShflReduction,ShflReductionTag,SHMEMReductionTag>
ReferenceCountedBase	impl/Kokkos_TaskNode.hpp	/^      explicit ReferenceCountedBase($/;"	f	class:Kokkos::Impl::ReferenceCountedBase	typeref:typename:KOKKOS_INLINE_FUNCTION 
ReferenceCountedBase	impl/Kokkos_TaskNode.hpp	/^class ReferenceCountedBase {$/;"	c	namespace:Kokkos::Impl
ReferenceType	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using ReferenceType = typename Analysis::reference_type;$/;"	t	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:Analysis::reference_type
Regular	Kokkos_TaskScheduler_fwd.hpp	/^enum class TaskPriority : int { High = 0, Regular = 1, Low = 2 };$/;"	e	enum:Kokkos::TaskPriority
Rendezvous	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { Active = 0, Rendezvous = 1 };$/;"	e	enum:Kokkos::Impl::OpenMPTargetExecTeamMember::__anon265123eb0403
Rendezvous	Threads/Kokkos_ThreadsExec.hpp	/^    Rendezvous  \/\/\/<  Exists, waiting in a barrier or reduce$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60403
ResolveFutureArgOrder	Kokkos_Future.hpp	/^class ResolveFutureArgOrder {$/;"	c	namespace:Kokkos::Impl
Restrict	Kokkos_MemoryTraits.hpp	/^  Restrict     = 0x08,$/;"	e	enum:Kokkos::MemoryTraitsFlags
Right	KokkosExp_MDRangePolicy.hpp	/^  static constexpr auto Right = Iterate::Right;$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:auto
Right	Kokkos_Layout.hpp	/^  Right  \/\/ Right indices stride fastest$/;"	e	enum:Kokkos::Iterate
Right	impl/Kokkos_PhysicalLayout.hpp	/^  enum LayoutType { Left, Right, Scalar, Error };$/;"	e	enum:Kokkos::Impl::PhysicalLayout::LayoutType
RunnableTask	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr explicit RunnableTask(FunctorType&& functor,$/;"	f	class:Kokkos::Impl::RunnableTask	typeref:typename:KOKKOS_INLINE_FUNCTION 
RunnableTask	impl/Kokkos_TaskNode.hpp	/^class alignas(16) RunnableTask$/;"	c	namespace:Kokkos::Impl
RunnableTaskBase	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr explicit RunnableTaskBase($/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION 
RunnableTaskBase	impl/Kokkos_TaskNode.hpp	/^class RunnableTaskBase$/;"	c	namespace:Kokkos::Impl
RuntimeCheckMemoryAccessViolation	Kokkos_Core_fwd.hpp	/^  KOKKOS_FUNCTION RuntimeCheckMemoryAccessViolation(char const *const msg) {$/;"	f	struct:Kokkos::Impl::RuntimeCheckMemoryAccessViolation	typeref:typename:KOKKOS_FUNCTION
RuntimeCheckMemoryAccessViolation	Kokkos_Core_fwd.hpp	/^  KOKKOS_FUNCTION RuntimeCheckMemoryAccessViolation(char const *const) {}$/;"	f	struct:Kokkos::Impl::RuntimeCheckMemoryAccessViolation	typeref:typename:KOKKOS_FUNCTION
RuntimeCheckMemoryAccessViolation	Kokkos_Core_fwd.hpp	/^struct RuntimeCheckMemoryAccessViolation {$/;"	s	namespace:Kokkos::Impl
RuntimeCheckMemoryAccessViolation	Kokkos_Core_fwd.hpp	/^struct RuntimeCheckMemoryAccessViolation<MemorySpace, AccessSpace, false> {$/;"	s	namespace:Kokkos::Impl
S	impl/Kokkos_Traits.hpp	/^  enum { self_value = std::is_same<T, S>::value };$/;"	e	enum:Kokkos::Impl::has_type::__anon1766c6640203
SCAN	impl/Kokkos_FunctorAnalysis.hpp	/^  struct SCAN {};$/;"	s	struct:Kokkos::Impl::FunctorPatternInterface
SCAN	impl/Kokkos_FunctorAnalysis.hpp	/^  using SCAN   = FunctorPatternInterface::SCAN;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:FunctorPatternInterface::SCAN
SHIFT_0	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_0;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_1	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_1;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_2	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_2;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_2T	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_2T;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_3	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_3;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_3T	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_3T;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_4	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_4;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_4T	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_4T;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_5	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_5;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_5T	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_5T;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_6	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_6;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_6T	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_6T;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_7	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_7;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_7T	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_7T;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHIFT_8T	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::SHIFT_8T;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:unsigned
SHMEMReductionTag	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  struct SHMEMReductionTag {};$/;"	s	class:Kokkos::Impl::ParallelReduce
SHMEMReductionTag	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  struct SHMEMReductionTag {};$/;"	s	class:Kokkos::Impl::ParallelReduce
SHMEMReductionTag	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  struct SHMEMReductionTag {};$/;"	s	class:Kokkos::Impl::ParallelReduce
SOURCES	impl/CMakeLists.txt	/^SET(SOURCES "")$/;"	v
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.cu']$/;"	v
ST	Kokkos_CopyViews.hpp	/^  using ST = typename ViewType::non_const_value_type;$/;"	t	struct:Kokkos::Impl::ViewFill	typeref:typename:ViewType::non_const_value_type
STATIC_ASSERT	impl/Kokkos_ExecSpaceManager.hpp	/^#define STATIC_ASSERT(/;"	d
STD_MALLOC	Kokkos_HBWSpace.hpp	/^    STD_MALLOC,$/;"	e	enum:Kokkos::Experimental::HBWSpace::AllocationMechanism
STD_MALLOC	Kokkos_HostSpace.hpp	/^    STD_MALLOC,$/;"	e	enum:Kokkos::HostSpace::AllocationMechanism
STEP_WIDTH	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^#define STEP_WIDTH /;"	d
SYCL	Kokkos_SYCL.hpp	/^class SYCL {$/;"	c	namespace:Kokkos::Experimental
SYCL	SYCL/Kokkos_SYCL.cpp	/^SYCL::SYCL()$/;"	f	class:Kokkos::Experimental::SYCL
SYCL	SYCL/Kokkos_SYCL.cpp	/^SYCL::SYCL(const sycl::queue& stream)$/;"	f	class:Kokkos::Experimental::SYCL
SYCL	impl/Kokkos_Profiling_Interface.hpp	/^  SYCL,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
SYCLDeviceUSMSpace	Kokkos_SYCL_Space.hpp	/^class SYCLDeviceUSMSpace {$/;"	c	namespace:Kokkos::Experimental
SYCLDeviceUSMSpace	SYCL/Kokkos_SYCL_Space.cpp	/^SYCLDeviceUSMSpace::SYCLDeviceUSMSpace()$/;"	f	class:Kokkos::Experimental::SYCLDeviceUSMSpace
SYCLDeviceUSMSpace	SYCL/Kokkos_SYCL_Space.cpp	/^SYCLDeviceUSMSpace::SYCLDeviceUSMSpace(sycl::queue queue)$/;"	f	class:Kokkos::Experimental::SYCLDeviceUSMSpace
SYCLFunctionWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^  SYCLFunctionWrapper(const Functor& functor, Storage& storage)$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper
SYCLFunctionWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^  SYCLFunctionWrapper(const Functor& functor, Storage&) : m_functor(functor) {}$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper
SYCLFunctionWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^class SYCLFunctionWrapper<Functor, Storage, false> {$/;"	c	namespace:Kokkos::Experimental::Impl
SYCLFunctionWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^class SYCLFunctionWrapper<Functor, Storage, true> {$/;"	c	namespace:Kokkos::Experimental::Impl
SYCLHostUSMSpace	Kokkos_SYCL_Space.hpp	/^class SYCLHostUSMSpace {$/;"	c	namespace:Kokkos::Experimental
SYCLHostUSMSpace	SYCL/Kokkos_SYCL_Space.cpp	/^SYCLHostUSMSpace::SYCLHostUSMSpace()$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace
SYCLHostUSMSpace	SYCL/Kokkos_SYCL_Space.cpp	/^SYCLHostUSMSpace::SYCLHostUSMSpace(sycl::queue queue)$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace
SYCLInternal	SYCL/Kokkos_SYCL_Instance.hpp	/^class SYCLInternal {$/;"	c	namespace:Kokkos::Experimental::Impl
SYCLMallocDevice	impl/Kokkos_Error.hpp	/^    SYCLMallocDevice,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
SYCLMallocHost	impl/Kokkos_Error.hpp	/^    SYCLMallocHost$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
SYCLMallocShared	impl/Kokkos_Error.hpp	/^    SYCLMallocShared,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
SYCLReduction	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^namespace SYCLReduction {$/;"	n	namespace:Kokkos::Impl
SYCLSharedUSMSpace	Kokkos_SYCL_Space.hpp	/^class SYCLSharedUSMSpace {$/;"	c	namespace:Kokkos::Experimental
SYCLSharedUSMSpace	SYCL/Kokkos_SYCL_Space.cpp	/^SYCLSharedUSMSpace::SYCLSharedUSMSpace()$/;"	f	class:Kokkos::Experimental::SYCLSharedUSMSpace
SYCLSharedUSMSpace	SYCL/Kokkos_SYCL_Space.cpp	/^SYCLSharedUSMSpace::SYCLSharedUSMSpace(sycl::queue queue)$/;"	f	class:Kokkos::Experimental::SYCLSharedUSMSpace
SYCLTeamMember	SYCL/Kokkos_SYCL_Team.hpp	/^  SYCLTeamMember(sycl::local_ptr<void> shared, const int shared_begin,$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION
SYCLTeamMember	SYCL/Kokkos_SYCL_Team.hpp	/^class SYCLTeamMember {$/;"	c	namespace:Kokkos::Impl
SYCL_ENABLE_FALLBACK_ASSERT	setup/Kokkos_Setup_SYCL.hpp	/^#define SYCL_ENABLE_FALLBACK_ASSERT$/;"	d
SYCL_FALLBACK_ASSERT	setup/Kokkos_Setup_SYCL.hpp	/^#define SYCL_FALLBACK_ASSERT /;"	d
Scalar	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using Scalar       = typename FunctorType::value_type;$/;"	t	struct:Kokkos::Impl::CudaReductionsFunctor	typeref:typename:FunctorType::value_type
Scalar	HIP/Kokkos_HIP_ReduceScan.hpp	/^  using Scalar       = typename FunctorType::value_type;$/;"	t	struct:Kokkos::Impl::HIPReductionsFunctor	typeref:typename:FunctorType::value_type
Scalar	impl/Kokkos_PhysicalLayout.hpp	/^  enum LayoutType { Left, Right, Scalar, Error };$/;"	e	enum:Kokkos::Impl::PhysicalLayout::LayoutType
ScanAvailable	Threads/Kokkos_ThreadsExec.hpp	/^    ScanAvailable,$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60403
ScanCompleted	Threads/Kokkos_ThreadsExec.hpp	/^    ScanCompleted,$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60403
SchedTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using SchedTag = typename Policy::schedule_type::type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::schedule_type::type
SchedTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using SchedTag = typename Policy::schedule_type::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::schedule_type::type
Schedule	Kokkos_Concepts.hpp	/^struct Schedule {$/;"	s	namespace:Kokkos
ScheduleTrait	traits/Kokkos_ScheduleTrait.hpp	/^struct ScheduleTrait : TraitSpecificationBase<ScheduleTrait> {$/;"	s	namespace:Kokkos::Impl
SchedulerInfo	impl/Kokkos_MultipleTaskQueue.hpp	/^    constexpr explicit SchedulerInfo(team_queue_id_t association) noexcept$/;"	f	struct:Kokkos::Impl::MultipleTaskQueue::SchedulerInfo	typeref:typename:KOKKOS_INLINE_FUNCTION 
SchedulerInfo	impl/Kokkos_MultipleTaskQueue.hpp	/^  struct SchedulerInfo {$/;"	s	class:Kokkos::Impl::MultipleTaskQueue
SchedulingInfoStorage	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr explicit SchedulingInfoStorage($/;"	f	class:Kokkos::Impl::SchedulingInfoStorage	typeref:typename:KOKKOS_INLINE_FUNCTION 
SchedulingInfoStorage	impl/Kokkos_TaskNode.hpp	/^class SchedulingInfoStorage$/;"	c	namespace:Kokkos::Impl
ScopeGuard	Kokkos_Core.hpp	/^  ScopeGuard($/;"	f	class:Kokkos::ScopeGuard	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD
ScopeGuard	Kokkos_Core.hpp	/^  ScopeGuard(int& argc, char* argv[]) {$/;"	f	class:Kokkos::ScopeGuard	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD
ScopeGuard	Kokkos_Core.hpp	/^  explicit ScopeGuard($/;"	f	class:Kokkos::ScopeGuard	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD
ScopeGuard	Kokkos_Core.hpp	/^class KOKKOS_ATTRIBUTE_NODISCARD ScopeGuard {$/;"	c	namespace:Kokkos
ScratchGrain	Cuda/Kokkos_Cuda_Instance.cpp	/^using ScratchGrain = Cuda::size_type[Impl::CudaTraits::WarpSize];$/;"	t	namespace:Kokkos::Impl	typeref:typename:Cuda::size_type[Impl::CudaTraits::WarpSize]	file:
ScratchGrain	HIP/Kokkos_HIP_Instance.cpp	/^using ScratchGrain =$/;"	t	namespace:Kokkos::Experimental::Impl	typeref:typename:Kokkos::Experimental::HIP::size_type[Impl::HIPTraits::WarpSize]	file:
ScratchMemorySpace	Kokkos_ScratchSpace.hpp	/^  KOKKOS_INLINE_FUNCTION ScratchMemorySpace(void* ptr_L0,$/;"	f	class:Kokkos::ScratchMemorySpace	typeref:typename:KOKKOS_INLINE_FUNCTION
ScratchMemorySpace	Kokkos_ScratchSpace.hpp	/^class ScratchMemorySpace {$/;"	c	namespace:Kokkos
ScratchRequest	Kokkos_ExecPolicy.hpp	/^  inline ScratchRequest(const int& level_, const Impl::PerTeamValue& team_value,$/;"	f	struct:Kokkos::ScratchRequest
ScratchRequest	Kokkos_ExecPolicy.hpp	/^  inline ScratchRequest(const int& level_,$/;"	f	struct:Kokkos::ScratchRequest
ScratchRequest	Kokkos_ExecPolicy.hpp	/^struct ScratchRequest {$/;"	s	namespace:Kokkos
Self	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  using Self   = ParallelFor<FunctorType, Policy, Kokkos::Cuda>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:ParallelFor<FunctorType,Policy,Kokkos::Cuda>
Self	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^  using Self   = ParallelFor<FunctorType, Policy, Kokkos::Experimental::HIP>;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:ParallelFor<FunctorType,Policy,Kokkos::Experimental::HIP>
Self	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  using Self = ParallelFor<FunctorType, Kokkos::WorkGraphPolicy<Traits...>,$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:ParallelFor<FunctorType,Kokkos::WorkGraphPolicy<Traits...>,Kokkos::Threads>
Sentinel	Threads/Kokkos_ThreadsExec.cpp	/^struct Sentinel {$/;"	s	namespace:Kokkos::Impl::__anon54e346b10110	file:
Sentinel	impl/Kokkos_hwloc.cpp	/^Sentinel::Sentinel() {$/;"	f	class:Kokkos::hwloc::__anonec54cfc50110::Sentinel
Sentinel	impl/Kokkos_hwloc.cpp	/^struct Sentinel {$/;"	s	namespace:Kokkos::hwloc::__anonec54cfc50110	file:
Serial	Kokkos_Serial.hpp	/^class Serial {$/;"	c	namespace:Kokkos
Serial	Serial/Kokkos_Serial.cpp	/^Serial::Serial()$/;"	f	class:Kokkos::Serial
Serial	impl/Kokkos_Profiling_Interface.hpp	/^  Serial,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
SerialInternal	Kokkos_Serial.hpp	/^class SerialInternal {$/;"	c	namespace:Kokkos::Impl
SetOrRange	impl/Kokkos_Profiling_Interface.hpp	/^using SetOrRange          = Kokkos_Tools_VariableInfo_SetOrRange;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_VariableInfo_SetOrRange
Settings	.ycm_extra_conf.py	/^def Settings(**kwargs ):$/;"	f
SharedAllocationHeader	impl/Kokkos_SharedAlloc.hpp	/^class SharedAllocationHeader {$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Cuda/Kokkos_CudaSpace.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::CudaHostPinnedSpace
SharedAllocationRecord	Cuda/Kokkos_CudaSpace.cpp	/^SharedAllocationRecord<Kokkos::CudaSpace, void>::SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::CudaSpace
SharedAllocationRecord	Cuda/Kokkos_CudaSpace.cpp	/^SharedAllocationRecord<Kokkos::CudaUVMSpace, void>::SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::CudaUVMSpace
SharedAllocationRecord	HIP/Kokkos_HIP_Space.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HIPHostPinnedSpace
SharedAllocationRecord	HIP/Kokkos_HIP_Space.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HIPManagedSpace
SharedAllocationRecord	HIP/Kokkos_HIP_Space.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HIPSpace
SharedAllocationRecord	Kokkos_CudaSpace.hpp	/^  SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	Kokkos_CudaSpace.hpp	/^class SharedAllocationRecord<Kokkos::CudaHostPinnedSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_CudaSpace.hpp	/^class SharedAllocationRecord<Kokkos::CudaSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_CudaSpace.hpp	/^class SharedAllocationRecord<Kokkos::CudaUVMSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_HBWSpace.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::HBWSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_HIP_Space.hpp	/^  SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	Kokkos_HIP_Space.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::HIPHostPinnedSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_HIP_Space.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::HIPManagedSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_HIP_Space.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::HIPSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_HostSpace.hpp	/^  SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	Kokkos_HostSpace.hpp	/^class SharedAllocationRecord<Kokkos::HostSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_LogicalSpaces.hpp	/^  SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	Kokkos_LogicalSpaces.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::LogicalMemorySpace<$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_OpenMPTargetSpace.hpp	/^  SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	Kokkos_OpenMPTargetSpace.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::OpenMPTargetSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_SYCL_Space.hpp	/^  SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	Kokkos_SYCL_Space.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::SYCLDeviceUSMSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_SYCL_Space.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::SYCLHostUSMSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	Kokkos_SYCL_Space.hpp	/^class SharedAllocationRecord<Kokkos::Experimental::SYCLSharedUSMSpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	OpenACC/Kokkos_OpenACCSpace.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::OpenACCSpace
SharedAllocationRecord	OpenACC/Kokkos_OpenACCSpace.hpp	/^  SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	OpenACC/Kokkos_OpenACCSpace.hpp	/^class Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::OpenACCSpace,$/;"	c	class:Kokkos::Impl
SharedAllocationRecord	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::OpenMPTargetSpace
SharedAllocationRecord	SYCL/Kokkos_SYCL_Space.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::SYCLDeviceUSMSpace
SharedAllocationRecord	SYCL/Kokkos_SYCL_Space.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::SYCLHostUSMSpace
SharedAllocationRecord	SYCL/Kokkos_SYCL_Space.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::SYCLSharedUSMSpace
SharedAllocationRecord	impl/Kokkos_HBWSpace.cpp	/^    SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace
SharedAllocationRecord	impl/Kokkos_HostSpace.cpp	/^SharedAllocationRecord<Kokkos::HostSpace, void>::SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::HostSpace
SharedAllocationRecord	impl/Kokkos_SharedAlloc.cpp	/^SharedAllocationRecord<void, void>::SharedAllocationRecord($/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationRecord()$/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationRecord(const ExecutionSpace& execution_space,$/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationRecord(const MemorySpace& arg_space,$/;"	f	class:Kokkos::Impl::SharedAllocationRecord
SharedAllocationRecord	impl/Kokkos_SharedAlloc.hpp	/^class SharedAllocationRecord$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	impl/Kokkos_SharedAlloc.hpp	/^class SharedAllocationRecord<MemorySpace, void>$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecord	impl/Kokkos_SharedAlloc.hpp	/^class SharedAllocationRecord<void, void> {$/;"	c	namespace:Kokkos::Impl
SharedAllocationRecordCommon	Cuda/Kokkos_CudaSpace.cpp	/^template class SharedAllocationRecordCommon<Kokkos::CudaHostPinnedSpace>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	Cuda/Kokkos_CudaSpace.cpp	/^template class SharedAllocationRecordCommon<Kokkos::CudaSpace>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	Cuda/Kokkos_CudaSpace.cpp	/^template class SharedAllocationRecordCommon<Kokkos::CudaUVMSpace>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	HIP/Kokkos_HIP_Space.cpp	/^template class SharedAllocationRecordCommon<$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	HIP/Kokkos_HIP_Space.cpp	/^template class SharedAllocationRecordCommon<Kokkos::Experimental::HIPSpace>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	OpenACC/Kokkos_OpenACCSpace.cpp	/^template class Kokkos::Impl::SharedAllocationRecordCommon<$/;"	m	class:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^template class SharedAllocationRecordCommon<$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	SYCL/Kokkos_SYCL_Space.cpp	/^template class SharedAllocationRecordCommon<$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	impl/Kokkos_HostSpace.cpp	/^template class SharedAllocationRecordCommon<Kokkos::HostSpace>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
SharedAllocationRecordCommon	impl/Kokkos_SharedAlloc.hpp	/^class SharedAllocationRecordCommon : public SharedAllocationRecord<void, void> {$/;"	c	namespace:Kokkos::Impl
SharedAllocationTracker	impl/Kokkos_SharedAlloc.hpp	/^        KOKKOS_FORCEINLINE_FUNCTION SharedAllocationTracker($/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION
SharedAllocationTracker	impl/Kokkos_SharedAlloc.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr SharedAllocationTracker()$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
SharedAllocationTracker	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationTracker(SharedAllocationTracker&& rhs)$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION
SharedAllocationTracker	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationTracker(const SharedAllocationTracker& rhs)$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION
SharedAllocationTracker	impl/Kokkos_SharedAlloc.hpp	/^union SharedAllocationTracker {$/;"	u	namespace:Kokkos::Impl
ShflReductionTag	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  struct ShflReductionTag {};$/;"	s	class:Kokkos::Impl::ParallelReduce
ShflReductionTag	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  struct ShflReductionTag {};$/;"	s	class:Kokkos::Impl::ParallelReduce
ShflReductionTag	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  struct ShflReductionTag {};$/;"	s	class:Kokkos::Impl::ParallelReduce
SimpleSinglyLinkedListNode	impl/Kokkos_LinkedListNode.hpp	/^struct SimpleSinglyLinkedListNode {$/;"	s	namespace:Kokkos::Impl
SimpleTaskScheduler	impl/Kokkos_SimpleTaskScheduler.hpp	/^  SimpleTaskScheduler(memory_space const& arg_memory_space,$/;"	f	class:Kokkos::SimpleTaskScheduler
SimpleTaskScheduler	impl/Kokkos_SimpleTaskScheduler.hpp	/^  explicit SimpleTaskScheduler(execution_space const& arg_execution_space,$/;"	f	class:Kokkos::SimpleTaskScheduler
SimpleTaskScheduler	impl/Kokkos_SimpleTaskScheduler.hpp	/^  explicit SimpleTaskScheduler(memory_pool const& pool)$/;"	f	class:Kokkos::SimpleTaskScheduler
SimpleTaskScheduler	impl/Kokkos_SimpleTaskScheduler.hpp	/^class SimpleTaskScheduler$/;"	c	namespace:Kokkos
SimpleTeamSizeCalculator	impl/Kokkos_Tools_Generic.hpp	/^struct SimpleTeamSizeCalculator {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl::Impl
SingleConsumeOperationLIFO	impl/Kokkos_LIFO.hpp	/^class SingleConsumeOperationLIFO : private LockBasedLIFOCommon<T> {$/;"	c	namespace:Kokkos::Impl
SingleTaskQueue	impl/Kokkos_SingleTaskQueue.hpp	/^  explicit SingleTaskQueue(typename base_t::execution_space const&,$/;"	f	class:Kokkos::Impl::SingleTaskQueue
SingleTaskQueue	impl/Kokkos_SingleTaskQueue.hpp	/^class SingleTaskQueue$/;"	c	namespace:Kokkos::Impl
Space	Kokkos_CopyViews.hpp	/^  using Space  = typename alloc_prop_input::memory_space;$/;"	t	function:Kokkos::create_mirror_view_and_copy	typeref:typename:alloc_prop_input::memory_space
Space	Kokkos_HostSpace.hpp	/^  using Space = std::conditional_t<$/;"	t	struct:Kokkos::Impl::HostMirror
SpaceAccessibility	Kokkos_Concepts.hpp	/^struct SpaceAccessibility {$/;"	s	namespace:Kokkos
SpaceAccessibility	Kokkos_Concepts.hpp	/^using SpaceAccessibility KOKKOS_DEPRECATED =$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::SpaceAccessibility<AccessSpace,MemorySpace>
SpaceDescription	Kokkos_Tuners.hpp	/^  using SpaceDescription = std::map<int64_t, std::vector<int64_t>>;$/;"	t	class:Kokkos::Tools::Experimental::TeamSizeTuner	typeref:typename:std::map<int64_t,std::vector<int64_t>>
SpaceDescription	Kokkos_Tuners.hpp	/^  using SpaceDescription =$/;"	t	struct:Kokkos::Tools::Experimental::MDRangeTuner	typeref:typename:Impl::n_dimensional_sparse_structure<int,rank>::type
SpaceHandle	impl/Kokkos_Profiling_Interface.hpp	/^using SpaceHandle = Kokkos_Profiling_SpaceHandle;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_SpaceHandle
SpaceType	Kokkos_LogicalSpaces.hpp	/^  using SpaceType =$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:Kokkos::Experimental::LogicalMemorySpace<BaseSpace,DefaultBaseExecutionSpace,Namer,SharesAccessSemanticsWithBase>
SpecialSynchronizationCases	impl/Kokkos_Profiling_Interface.hpp	/^enum SpecialSynchronizationCases : int {$/;"	g	namespace:Kokkos::Tools::Experimental	typeref:typename:int
SrcExecCanAccessDst	Kokkos_CopyViews.hpp	/^    SrcExecCanAccessDst =$/;"	e	enum:Kokkos::Impl::view_copy::__anon6f9042750403
SrcExecCanAccessDst	Kokkos_CopyViews.hpp	/^    SrcExecCanAccessDst =$/;"	e	enum:Kokkos::deep_copy::__anon6f9042750603
SrcExecCanAccessDst	Kokkos_CopyViews.hpp	/^    SrcExecCanAccessDst =$/;"	e	enum:Kokkos::deep_copy::__anon6f9042751903
SrcLayout	impl/Kokkos_ViewLayoutTiled.hpp	/^  using SrcLayout =$/;"	t	function:Kokkos::tile_subview	typeref:typename:Kokkos::Experimental::LayoutTiled<OuterP,InnerP,N0,N1,N2,N3,N4,N5,N6,N7,true>
SrcMemorySpace	Kokkos_Concepts.hpp	/^  enum { assignable = std::is_same<DstMemorySpace, SrcMemorySpace>::value };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonfe5a008b0103
SrcTraits	Kokkos_View.hpp	/^    using SrcTraits = typename View<RT, RP...>::traits;$/;"	t	function:Kokkos::View::View	typeref:typename:View<RT,RP...>::traits
SrcTraits	Kokkos_View.hpp	/^    using SrcTraits = typename View<RT, RP...>::traits;$/;"	t	function:Kokkos::View::operator =	typeref:typename:View<RT,RP...>::traits
SrcTraits	Kokkos_View.hpp	/^  using SrcTraits = typename Kokkos::View<ViewTSrc...>::traits;$/;"	t	function:Kokkos::is_assignable	typeref:typename:Kokkos::View<ViewTSrc...>::traits
SrcType	Kokkos_View.hpp	/^    using SrcType = View<RT, RP...>;$/;"	t	function:Kokkos::View::View	typeref:typename:View<RT,RP...>
Stacktrace	impl/Kokkos_Stacktrace.cpp	/^class Stacktrace {$/;"	c	namespace:Kokkos::Impl	file:
StandardLayoutNoUniqueAddressMemberEmulation	impl/Kokkos_EBO.hpp	/^struct StandardLayoutNoUniqueAddressMemberEmulation$/;"	s	namespace:Kokkos::Impl
Static	Kokkos_Concepts.hpp	/^struct Static {};$/;"	s	namespace:Kokkos
StaticValueSize	impl/Kokkos_FunctorAnalysis.hpp	/^    StaticValueSize =$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::__anona1ab5b321603
StatisticalCategory	impl/Kokkos_Profiling_Interface.hpp	/^using StatisticalCategory = Kokkos_Tools_VariableInfo_StatisticalCategory;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_VariableInfo_StatisticalCategory
StdIsPartScalar	Kokkos_Parallel_Reduce.hpp	/^struct StdIsPartScalar {$/;"	s	namespace:Kokkos
StdIsPartitioned	Kokkos_Parallel_Reduce.hpp	/^  StdIsPartitioned(const result_view_type& value_)$/;"	f	struct:Kokkos::StdIsPartitioned	typeref:typename:KOKKOS_INLINE_FUNCTION
StdIsPartitioned	Kokkos_Parallel_Reduce.hpp	/^  StdIsPartitioned(value_type& value_)$/;"	f	struct:Kokkos::StdIsPartitioned	typeref:typename:KOKKOS_INLINE_FUNCTION
StdIsPartitioned	Kokkos_Parallel_Reduce.hpp	/^struct StdIsPartitioned {$/;"	s	namespace:Kokkos
StdMalloc	impl/Kokkos_Error.hpp	/^    StdMalloc,$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::AllocationMechanism
StdPartPointScalar	Kokkos_Parallel_Reduce.hpp	/^struct StdPartPointScalar {$/;"	s	namespace:Kokkos
StdPartitionPoint	Kokkos_Parallel_Reduce.hpp	/^  StdPartitionPoint(const result_view_type& value_)$/;"	f	struct:Kokkos::StdPartitionPoint	typeref:typename:KOKKOS_INLINE_FUNCTION
StdPartitionPoint	Kokkos_Parallel_Reduce.hpp	/^  StdPartitionPoint(value_type& value_)$/;"	f	struct:Kokkos::StdPartitionPoint	typeref:typename:KOKKOS_INLINE_FUNCTION
StdPartitionPoint	Kokkos_Parallel_Reduce.hpp	/^struct StdPartitionPoint {$/;"	s	namespace:Kokkos
StoredProblemSpace	Kokkos_Tuners.hpp	/^  using StoredProblemSpace =$/;"	t	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:Impl::MapTypeConverter<ProblemSpaceInput>::type
SubOper	impl/Kokkos_Atomic_Generic.hpp	/^struct SubOper {$/;"	s	namespace:Kokkos::Impl
SubscribableViewHooks	View/Hooks/Kokkos_ViewHooks.hpp	/^struct SubscribableViewHooks {$/;"	s	namespace:Kokkos::Experimental
Subview	Kokkos_View.hpp	/^using Subview =$/;"	t	namespace:Kokkos	typeref:typename:Kokkos::Impl::ViewMapping<void,typename V::traits,Args...>::type
SubviewExtents	impl/Kokkos_ViewMapping.hpp	/^  KOKKOS_INLINE_FUNCTION SubviewExtents(const ViewDimension<DimArgs...>& dim,$/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:KOKKOS_INLINE_FUNCTION
SubviewExtents	impl/Kokkos_ViewMapping.hpp	/^struct SubviewExtents {$/;"	s	namespace:Kokkos::Impl
SubviewLegalArgsCompileTime	impl/Kokkos_ViewMapping.hpp	/^struct SubviewLegalArgsCompileTime<Kokkos::LayoutLeft, Kokkos::LayoutLeft,$/;"	s	namespace:Kokkos::Impl
SubviewLegalArgsCompileTime	impl/Kokkos_ViewMapping.hpp	/^struct SubviewLegalArgsCompileTime<Kokkos::LayoutRight, Kokkos::LayoutRight,$/;"	s	namespace:Kokkos::Impl
SubviewLegalArgsCompileTime	impl/Kokkos_ViewMapping.hpp	/^struct SubviewLegalArgsCompileTime<Kokkos::LayoutStride, Kokkos::LayoutLeft,$/;"	s	namespace:Kokkos::Impl
SubviewLegalArgsCompileTime	impl/Kokkos_ViewMapping.hpp	/^struct SubviewLegalArgsCompileTime<Kokkos::LayoutStride, Kokkos::LayoutRight,$/;"	s	namespace:Kokkos::Impl
SubviewLegalArgsCompileTime	impl/Kokkos_ViewMapping.hpp	/^struct SubviewLegalArgsCompileTime<Kokkos::LayoutStride, Kokkos::LayoutStride,$/;"	s	namespace:Kokkos::Impl
Sum	Kokkos_Parallel_Reduce.hpp	/^  Sum(const result_view_type& value_)$/;"	f	struct:Kokkos::Sum	typeref:typename:KOKKOS_INLINE_FUNCTION
Sum	Kokkos_Parallel_Reduce.hpp	/^  Sum(value_type& value_) : value(&value_), references_scalar_v(true) {}$/;"	f	struct:Kokkos::Sum	typeref:typename:KOKKOS_INLINE_FUNCTION
Sum	Kokkos_Parallel_Reduce.hpp	/^struct Sum {$/;"	s	namespace:Kokkos
T	KokkosExp_MDRangePolicy.hpp	/^  using T = typename Array::value_type;$/;"	t	function:Kokkos::Impl::to_array_potentially_narrowing	typeref:typename:Array::value_type
T	KokkosExp_MDRangePolicy.hpp	/^  using T = typename NVCC_WONT_LET_ME_CALL_YOU_Array::value_type;$/;"	t	function:Kokkos::Impl::to_array_potentially_narrowing	typeref:typename:NVCC_WONT_LET_ME_CALL_YOU_Array::value_type
T16	impl/Kokkos_Volatile_Load.hpp	/^  typedef uint16_t KOKKOS_IMPL_MAY_ALIAS T16;  \/\/ NOLINT(modernize-use-using)$/;"	t	function:Kokkos::volatile_load	typeref:typename:uint16_t KOKKOS_IMPL_MAY_ALIAS
T16	impl/Kokkos_Volatile_Load.hpp	/^  typedef uint16_t KOKKOS_IMPL_MAY_ALIAS T16;  \/\/ NOLINT(modernize-use-using)$/;"	t	function:Kokkos::volatile_store	typeref:typename:uint16_t KOKKOS_IMPL_MAY_ALIAS
T32	impl/Kokkos_Volatile_Load.hpp	/^  typedef uint32_t KOKKOS_IMPL_MAY_ALIAS T32;  \/\/ NOLINT(modernize-use-using)$/;"	t	function:Kokkos::volatile_load	typeref:typename:uint32_t KOKKOS_IMPL_MAY_ALIAS
T32	impl/Kokkos_Volatile_Load.hpp	/^  typedef uint32_t KOKKOS_IMPL_MAY_ALIAS T32;  \/\/ NOLINT(modernize-use-using)$/;"	t	function:Kokkos::volatile_store	typeref:typename:uint32_t KOKKOS_IMPL_MAY_ALIAS
T64	impl/Kokkos_Volatile_Load.hpp	/^  typedef uint64_t KOKKOS_IMPL_MAY_ALIAS T64;  \/\/ NOLINT(modernize-use-using)$/;"	t	function:Kokkos::volatile_load	typeref:typename:uint64_t KOKKOS_IMPL_MAY_ALIAS
T64	impl/Kokkos_Volatile_Load.hpp	/^  typedef uint64_t KOKKOS_IMPL_MAY_ALIAS T64;  \/\/ NOLINT(modernize-use-using)$/;"	t	function:Kokkos::volatile_store	typeref:typename:uint64_t KOKKOS_IMPL_MAY_ALIAS
T8	impl/Kokkos_Volatile_Load.hpp	/^  typedef uint8_t KOKKOS_IMPL_MAY_ALIAS T8;    \/\/ NOLINT(modernize-use-using)$/;"	t	function:Kokkos::volatile_load	typeref:typename:uint8_t KOKKOS_IMPL_MAY_ALIAS
T8	impl/Kokkos_Volatile_Load.hpp	/^  typedef uint8_t KOKKOS_IMPL_MAY_ALIAS T8;    \/\/ NOLINT(modernize-use-using)$/;"	t	function:Kokkos::volatile_store	typeref:typename:uint8_t KOKKOS_IMPL_MAY_ALIAS
TAGGED_APPLY	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_APPLY(/;"	d
TAGGED_APPLY_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_APPLY_REDUX(/;"	d
TAGGED_LOOP_LAYOUT_1	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_LAYOUT_1(/;"	d
TAGGED_LOOP_LAYOUT_1_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                   extent, rank)                            \\$/;"	d
TAGGED_LOOP_LAYOUT_2	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_LAYOUT_2(/;"	d
TAGGED_LOOP_LAYOUT_2_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                   extent, rank)                              \\$/;"	d
TAGGED_LOOP_LAYOUT_3	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_LAYOUT_3(/;"	d
TAGGED_LOOP_LAYOUT_3_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                   extent, rank)                              \\$/;"	d
TAGGED_LOOP_LAYOUT_4	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_LAYOUT_4(/;"	d
TAGGED_LOOP_LAYOUT_4_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                   extent, rank)                              \\$/;"	d
TAGGED_LOOP_LAYOUT_5	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_LAYOUT_5(/;"	d
TAGGED_LOOP_LAYOUT_5_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                   extent, rank)                              \\$/;"	d
TAGGED_LOOP_LAYOUT_6	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_LAYOUT_6(/;"	d
TAGGED_LOOP_LAYOUT_6_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                   extent, rank)                              \\$/;"	d
TAGGED_LOOP_LAYOUT_7	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_LAYOUT_7(/;"	d
TAGGED_LOOP_LAYOUT_7_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                   extent, rank)                              \\$/;"	d
TAGGED_LOOP_LAYOUT_8	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_LAYOUT_8(/;"	d
TAGGED_LOOP_LAYOUT_8_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                   extent, rank)                              \\$/;"	d
TAGGED_LOOP_L_1	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_1(/;"	d
TAGGED_LOOP_L_1_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_1_REDUX(/;"	d
TAGGED_LOOP_L_2	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_2(/;"	d
TAGGED_LOOP_L_2_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_2_REDUX(/;"	d
TAGGED_LOOP_L_3	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_3(/;"	d
TAGGED_LOOP_L_3_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_3_REDUX(/;"	d
TAGGED_LOOP_L_4	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_4(/;"	d
TAGGED_LOOP_L_4_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_4_REDUX(/;"	d
TAGGED_LOOP_L_5	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_5(/;"	d
TAGGED_LOOP_L_5_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_5_REDUX(/;"	d
TAGGED_LOOP_L_6	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_6(/;"	d
TAGGED_LOOP_L_6_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_6_REDUX(/;"	d
TAGGED_LOOP_L_7	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_7(/;"	d
TAGGED_LOOP_L_7_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_7_REDUX(/;"	d
TAGGED_LOOP_L_8	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_8(/;"	d
TAGGED_LOOP_L_8_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_L_8_REDUX(/;"	d
TAGGED_LOOP_R_1	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_1(/;"	d
TAGGED_LOOP_R_1_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_1_REDUX(/;"	d
TAGGED_LOOP_R_2	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_2(/;"	d
TAGGED_LOOP_R_2_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_2_REDUX(/;"	d
TAGGED_LOOP_R_3	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_3(/;"	d
TAGGED_LOOP_R_3_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_3_REDUX(/;"	d
TAGGED_LOOP_R_4	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_4(/;"	d
TAGGED_LOOP_R_4_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_4_REDUX(/;"	d
TAGGED_LOOP_R_5	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_5(/;"	d
TAGGED_LOOP_R_5_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_5_REDUX(/;"	d
TAGGED_LOOP_R_6	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_6(/;"	d
TAGGED_LOOP_R_6_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_6_REDUX(/;"	d
TAGGED_LOOP_R_7	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_7(/;"	d
TAGGED_LOOP_R_7_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_7_REDUX(/;"	d
TAGGED_LOOP_R_8	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_8(/;"	d
TAGGED_LOOP_R_8_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^#define TAGGED_LOOP_R_8_REDUX(/;"	d
TAGGED_TILE_LOOP_1	impl/KokkosExp_Host_IterateTile.hpp	/^                           extent_full, extent_partial, rank)                \\$/;"	d
TAGGED_TILE_LOOP_1_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                 m_offset, extent_full, extent_partial, rank) \\$/;"	d
TAGGED_TILE_LOOP_2	impl/KokkosExp_Host_IterateTile.hpp	/^                           extent_full, extent_partial, rank)                \\$/;"	d
TAGGED_TILE_LOOP_2_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                 m_offset, extent_full, extent_partial, rank) \\$/;"	d
TAGGED_TILE_LOOP_3	impl/KokkosExp_Host_IterateTile.hpp	/^                           extent_full, extent_partial, rank)                \\$/;"	d
TAGGED_TILE_LOOP_3_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                 m_offset, extent_full, extent_partial, rank) \\$/;"	d
TAGGED_TILE_LOOP_4	impl/KokkosExp_Host_IterateTile.hpp	/^                           extent_full, extent_partial, rank)                \\$/;"	d
TAGGED_TILE_LOOP_4_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                 m_offset, extent_full, extent_partial, rank) \\$/;"	d
TAGGED_TILE_LOOP_5	impl/KokkosExp_Host_IterateTile.hpp	/^                           extent_full, extent_partial, rank)                \\$/;"	d
TAGGED_TILE_LOOP_5_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                 m_offset, extent_full, extent_partial, rank) \\$/;"	d
TAGGED_TILE_LOOP_6	impl/KokkosExp_Host_IterateTile.hpp	/^                           extent_full, extent_partial, rank)                \\$/;"	d
TAGGED_TILE_LOOP_6_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                 m_offset, extent_full, extent_partial, rank) \\$/;"	d
TAGGED_TILE_LOOP_7	impl/KokkosExp_Host_IterateTile.hpp	/^                           extent_full, extent_partial, rank)                \\$/;"	d
TAGGED_TILE_LOOP_7_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                 m_offset, extent_full, extent_partial, rank) \\$/;"	d
TAGGED_TILE_LOOP_8	impl/KokkosExp_Host_IterateTile.hpp	/^                           extent_full, extent_partial, rank)                \\$/;"	d
TAGGED_TILE_LOOP_8_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                                 m_offset, extent_full, extent_partial, rank) \\$/;"	d
TEAM_REDUCE_SIZE	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	e	enum:Kokkos::Impl::ParallelFor::__anona5536d250303
TEAM_REDUCE_SIZE	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	e	enum:Kokkos::Impl::ParallelReduce::__anona5536d250503
TEAM_REDUCE_SIZE	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	e	enum:Kokkos::Impl::OpenMPTargetExecTeamMember::__anon265123eb0303
TEAM_REDUCE_SIZE	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	e	enum:Kokkos::Impl::ParallelFor::__anon6d5c44ad0103
TEAM_REDUCE_SIZE	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	e	enum:Kokkos::Impl::ParallelReduce::__anon6d5c44ad0203
TEAM_REDUCE_SIZE	Threads/Kokkos_ThreadsTeam.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	e	enum:Kokkos::Impl::ThreadsExecTeamMember::__anon6d8ca5580103
TEXTURE_BOUND_1D	Cuda/Kokkos_CudaSpace.cpp	/^  enum { TEXTURE_BOUND_1D = 1u << 27 };$/;"	e	enum:Kokkos::Impl::SharedAllocationRecord::CudaSpace::attach_texture_object::__anonebf75d1c0403	file:
TILE_LOOP_1	impl/KokkosExp_Host_IterateTile.hpp	/^                    extent_partial, rank)                              \\$/;"	d
TILE_LOOP_1_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                          extent_full, extent_partial, rank)                   \\$/;"	d
TILE_LOOP_2	impl/KokkosExp_Host_IterateTile.hpp	/^                    extent_partial, rank)                              \\$/;"	d
TILE_LOOP_2_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                          extent_full, extent_partial, rank)                   \\$/;"	d
TILE_LOOP_3	impl/KokkosExp_Host_IterateTile.hpp	/^                    extent_partial, rank)                              \\$/;"	d
TILE_LOOP_3_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                          extent_full, extent_partial, rank)                   \\$/;"	d
TILE_LOOP_4	impl/KokkosExp_Host_IterateTile.hpp	/^                    extent_partial, rank)                              \\$/;"	d
TILE_LOOP_4_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                          extent_full, extent_partial, rank)                   \\$/;"	d
TILE_LOOP_5	impl/KokkosExp_Host_IterateTile.hpp	/^                    extent_partial, rank)                              \\$/;"	d
TILE_LOOP_5_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                          extent_full, extent_partial, rank)                   \\$/;"	d
TILE_LOOP_6	impl/KokkosExp_Host_IterateTile.hpp	/^                    extent_partial, rank)                              \\$/;"	d
TILE_LOOP_6_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                          extent_full, extent_partial, rank)                   \\$/;"	d
TILE_LOOP_7	impl/KokkosExp_Host_IterateTile.hpp	/^                    extent_partial, rank)                              \\$/;"	d
TILE_LOOP_7_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                          extent_full, extent_partial, rank)                   \\$/;"	d
TILE_LOOP_8	impl/KokkosExp_Host_IterateTile.hpp	/^                    extent_partial, rank)                              \\$/;"	d
TILE_LOOP_8_REDUX	impl/KokkosExp_Host_IterateTile.hpp	/^                          extent_full, extent_partial, rank)                   \\$/;"	d
TRILINOS_INCDIR	impl/CMakeLists.txt	/^SET(TRILINOS_INCDIR ${${PROJECT_NAME}_INSTALL_INCLUDE_DIR})$/;"	v
Tag	impl/Kokkos_FunctorAnalysis.hpp	/^  using Tag  = typename has_work_tag<>::type;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:has_work_tag<>::type
TagCount	Kokkos_WorkGraphPolicy.hpp	/^  struct TagCount {};$/;"	s	class:Kokkos::WorkGraphPolicy
TagInit	Kokkos_WorkGraphPolicy.hpp	/^  struct TagInit {};$/;"	s	class:Kokkos::WorkGraphPolicy
TagReady	Kokkos_WorkGraphPolicy.hpp	/^  struct TagReady {};$/;"	s	class:Kokkos::WorkGraphPolicy
TagType	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using TagType    = typename PolicyType::work_tag;$/;"	t	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:PolicyType::work_tag
TagType	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using TagType = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
Task	impl/Kokkos_TaskBase.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr Task(FunctorType&& arg_functor)$/;"	f	class:Kokkos::Impl::Task	typeref:typename:KOKKOS_INLINE_FUNCTION 
Task	impl/Kokkos_TaskBase.hpp	/^class Task : public TaskBase, public FunctorType {$/;"	c	namespace:Kokkos::Impl
TaskBase	impl/Kokkos_TaskBase.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr TaskBase()$/;"	f	class:Kokkos::Impl::TaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION 
TaskBase	impl/Kokkos_TaskBase.hpp	/^class TaskBase {$/;"	c	namespace:Kokkos::Impl
TaskExec	Cuda/Kokkos_Cuda_Task.hpp	/^  TaskExec(Scheduler const& parent_scheduler, int32_t* arg_team_shmem,$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:KOKKOS_INLINE_FUNCTION
TaskExec	Cuda/Kokkos_Cuda_Task.hpp	/^class TaskExec<Kokkos::Cuda, Scheduler> {$/;"	c	namespace:Kokkos::Impl
TaskExec	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^TaskExec<Kokkos::Experimental::OpenMPTarget>::TaskExec($/;"	f	class:Kokkos::Impl::TaskExec::Experimental::OpenMPTarget
TaskExec	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^TaskExec<Kokkos::Experimental::OpenMPTarget>::TaskExec()$/;"	f	class:Kokkos::Impl::TaskExec::Experimental::OpenMPTarget
TaskExec	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^class TaskExec<Kokkos::Experimental::OpenMPTarget> {$/;"	c	namespace:Kokkos::Impl
TaskNode	impl/Kokkos_TaskNode.hpp	/^  constexpr TaskNode(TaskType task_type, TaskPriority priority,$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION 
TaskNode	impl/Kokkos_TaskNode.hpp	/^class TaskNode$/;"	c	namespace:Kokkos::Impl
TaskPolicyWithPredecessor	impl/Kokkos_TaskPolicyData.hpp	/^  TaskPolicyWithPredecessor(DepFutureType arg_predecessor,$/;"	f	struct:Kokkos::Impl::TaskPolicyWithPredecessor	typeref:typename:KOKKOS_INLINE_FUNCTION
TaskPolicyWithPredecessor	impl/Kokkos_TaskPolicyData.hpp	/^struct TaskPolicyWithPredecessor {$/;"	s	namespace:Kokkos::Impl
TaskPolicyWithScheduler	impl/Kokkos_TaskPolicyData.hpp	/^  TaskPolicyWithScheduler(Scheduler arg_scheduler,$/;"	f	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION
TaskPolicyWithScheduler	impl/Kokkos_TaskPolicyData.hpp	/^struct TaskPolicyWithScheduler {$/;"	s	namespace:Kokkos::Impl
TaskPriority	Kokkos_TaskScheduler_fwd.hpp	/^enum class TaskPriority : int { High = 0, Regular = 1, Low = 2 };$/;"	g	namespace:Kokkos	typeref:typename:int
TaskQueue	Cuda/Kokkos_Cuda_Task.cpp	/^template class TaskQueue<$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
TaskQueue	HPX/Kokkos_HPX_Task.cpp	/^template class TaskQueue<Kokkos::Experimental::HPX,$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
TaskQueue	OpenMP/Kokkos_OpenMP_Task.cpp	/^template class TaskQueue<Kokkos::OpenMP, typename Kokkos::OpenMP::memory_space>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
TaskQueue	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^template class TaskQueue<Kokkos::Experimental::OpenMPTarget>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
TaskQueue	Serial/Kokkos_Serial_Task.cpp	/^template class TaskQueue<Kokkos::Serial, typename Kokkos::Serial::memory_space>;$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
TaskQueue	impl/Kokkos_TaskQueue.hpp	/^class TaskQueue : public TaskQueueBase {$/;"	c	namespace:Kokkos::Impl
TaskQueue	impl/Kokkos_TaskQueue_impl.hpp	/^TaskQueue<ExecSpace, MemorySpace>::TaskQueue($/;"	f	class:Kokkos::Impl::TaskQueue
TaskQueueBase	Kokkos_TaskScheduler_fwd.hpp	/^class TaskQueueBase {};$/;"	c	namespace:Kokkos::Impl
TaskQueueCommonMixin	impl/Kokkos_TaskQueueCommon.hpp	/^  TaskQueueCommonMixin() : m_ready_count(0) {$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin
TaskQueueCommonMixin	impl/Kokkos_TaskQueueCommon.hpp	/^class TaskQueueCommonMixin {$/;"	c	namespace:Kokkos::Impl
TaskQueueMemoryManager	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  explicit TaskQueueMemoryManager(memory_pool const& pool) : m_pool(pool) {}$/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager
TaskQueueMemoryManager	impl/Kokkos_TaskQueueMemoryManager.hpp	/^class TaskQueueMemoryManager : public TaskQueueBase {$/;"	c	namespace:Kokkos::Impl
TaskQueueMultiple	Cuda/Kokkos_Cuda_Task.cpp	/^template class TaskQueueMultiple<$/;"	v	namespace:Kokkos::Impl	typeref:typename:class
TaskQueueMultiple	impl/Kokkos_TaskQueueMultiple.hpp	/^  TaskQueueMultiple(int arg_league_rank, queue_collection_t* arg_other_queues,$/;"	f	class:Kokkos::Impl::TaskQueueMultiple
TaskQueueMultiple	impl/Kokkos_TaskQueueMultiple.hpp	/^  explicit TaskQueueMultiple($/;"	f	class:Kokkos::Impl::TaskQueueMultiple
TaskQueueMultiple	impl/Kokkos_TaskQueueMultiple.hpp	/^class TaskQueueMultiple : public TaskQueue<ExecSpace, MemorySpace> {$/;"	c	namespace:Kokkos::Impl
TaskQueueSpecialization	Kokkos_TaskScheduler_fwd.hpp	/^struct TaskQueueSpecialization : TaskQueueSpecializationConstrained<Scheduler> {$/;"	s	namespace:Kokkos::Impl
TaskQueueSpecialization	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^class TaskQueueSpecialization<Kokkos::Experimental::OpenMPTarget> {$/;"	c	namespace:Kokkos::Impl
TaskQueueSpecializationConstrained	Cuda/Kokkos_Cuda_Task.hpp	/^  friend class Kokkos::Impl::TaskQueueSpecializationConstrained;$/;"	m	class:Kokkos::Impl::TaskExec::Kokkos::Impl	typeref:class:Kokkos::Impl::TaskQueue template class
TaskQueueSpecializationConstrained	Kokkos_TaskScheduler_fwd.hpp	/^class TaskQueueSpecializationConstrained {};$/;"	c	namespace:Kokkos::Impl
TaskQueueTraitsChaseLev	impl/Kokkos_ChaseLev.hpp	/^struct TaskQueueTraitsChaseLev {$/;"	s	namespace:Kokkos::Impl
TaskQueueTraitsLockBased	impl/Kokkos_LIFO.hpp	/^struct TaskQueueTraitsLockBased {$/;"	s	namespace:Kokkos::Impl
TaskResult	impl/Kokkos_TaskResult.hpp	/^struct TaskResult {$/;"	s	namespace:Kokkos::Impl
TaskResult	impl/Kokkos_TaskResult.hpp	/^struct TaskResult<void> {$/;"	s	namespace:Kokkos::Impl
TaskResultStorage	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr explicit TaskResultStorage(Args&&... args)$/;"	f	class:Kokkos::Impl::TaskResultStorage	typeref:typename:KOKKOS_INLINE_FUNCTION 
TaskResultStorage	impl/Kokkos_TaskNode.hpp	/^class TaskResultStorage : public Base {$/;"	c	namespace:Kokkos::Impl
TaskResultStorage	impl/Kokkos_TaskNode.hpp	/^class TaskResultStorage<void, Base> : public Base {$/;"	c	namespace:Kokkos::Impl
TaskScheduler	Kokkos_TaskScheduler_fwd.hpp	/^using TaskScheduler = SimpleTaskScheduler<$/;"	t	namespace:Kokkos	typeref:typename:SimpleTaskScheduler<Space,Impl::SingleTaskQueue<Space,Impl::default_tasking_memory_space_for_execution_space_t<Space>,Impl::TaskQueueTraitsLockBased>>
TaskSchedulerBase	Kokkos_TaskScheduler_fwd.hpp	/^struct TaskSchedulerBase {};$/;"	s	namespace:Kokkos::Impl
TaskSchedulerMultiple	Kokkos_TaskScheduler_fwd.hpp	/^using TaskSchedulerMultiple = SimpleTaskScheduler<$/;"	t	namespace:Kokkos
TaskSingle	Kokkos_TaskScheduler.hpp	/^    KOKKOS_INLINE_FUNCTION TaskSingle($/;"	f	namespace:Kokkos	typeref:typename:Impl::TaskPolicyWithScheduler<Impl::TaskType::TaskSingle,Scheduler> KOKKOS_INLINE_FUNCTION
TaskSingle	Kokkos_TaskScheduler.hpp	/^    TaskSingle(Kokkos::BasicFuture<T, Scheduler> arg_future,$/;"	f	namespace:Kokkos	typeref:typename:Impl::TaskPolicyWithPredecessor<Impl::TaskType::TaskSingle,Kokkos::BasicFuture<T,Scheduler>> KOKKOS_INLINE_FUNCTION
TaskSingle	Kokkos_TaskScheduler.hpp	/^    TaskSingle(Scheduler arg_scheduler, PredecessorFuture arg_future,$/;"	f	namespace:Kokkos	typeref:typename:Impl::TaskPolicyWithScheduler<Kokkos::Impl::TaskType::TaskSingle,Scheduler,PredecessorFuture> KOKKOS_INLINE_FUNCTION
TaskSingle	impl/Kokkos_TaskBase.hpp	/^  enum : int16_t { TaskTeam = 0, TaskSingle = 1, Aggregate = 2 };$/;"	e	enum:Kokkos::Impl::TaskBase::__anonf4e6889b0103
TaskSingle	impl/Kokkos_TaskNode.hpp	/^  TaskSingle  = 1,$/;"	e	enum:Kokkos::Impl::TaskType
TaskSpecial	impl/Kokkos_TaskNode.hpp	/^  TaskSpecial = -1$/;"	e	enum:Kokkos::Impl::TaskType
TaskTeam	Kokkos_TaskScheduler.hpp	/^    KOKKOS_INLINE_FUNCTION TaskTeam($/;"	f	namespace:Kokkos	typeref:typename:Impl::TaskPolicyWithScheduler<Impl::TaskType::TaskTeam,Scheduler> KOKKOS_INLINE_FUNCTION
TaskTeam	Kokkos_TaskScheduler.hpp	/^    TaskTeam(Kokkos::BasicFuture<T, Scheduler> arg_future,$/;"	f	namespace:Kokkos	typeref:typename:Impl::TaskPolicyWithPredecessor<Impl::TaskType::TaskTeam,Kokkos::BasicFuture<T,Scheduler>> KOKKOS_INLINE_FUNCTION
TaskTeam	Kokkos_TaskScheduler.hpp	/^    TaskTeam(Scheduler arg_scheduler, PredecessorFuture arg_future,$/;"	f	namespace:Kokkos	typeref:typename:Impl::TaskPolicyWithScheduler<Kokkos::Impl::TaskType::TaskTeam,Scheduler,PredecessorFuture> KOKKOS_INLINE_FUNCTION
TaskTeam	impl/Kokkos_TaskBase.hpp	/^  enum : int16_t { TaskTeam = 0, TaskSingle = 1, Aggregate = 2 };$/;"	e	enum:Kokkos::Impl::TaskBase::__anonf4e6889b0103
TaskTeam	impl/Kokkos_TaskNode.hpp	/^  TaskTeam    = 0,$/;"	e	enum:Kokkos::Impl::TaskType
TaskTeamMemberAdapter	impl/Kokkos_TaskTeamMember.hpp	/^  KOKKOS_INLINE_FUNCTION explicit TaskTeamMemberAdapter($/;"	f	class:Kokkos::Impl::TaskTeamMemberAdapter	typeref:typename:KOKKOS_INLINE_FUNCTION
TaskTeamMemberAdapter	impl/Kokkos_TaskTeamMember.hpp	/^class TaskTeamMemberAdapter : public TeamMember {$/;"	c	namespace:Kokkos::Impl
TaskType	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^    using TaskType = TaskBase<Kokkos::Experimental::OpenMPTarget,$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::proc_set_apply	typeref:typename:TaskBase<Kokkos::Experimental::OpenMPTarget,typename FunctorType::value_type,FunctorType>
TaskType	impl/Kokkos_TaskNode.hpp	/^enum TaskType : int16_t {$/;"	g	namespace:Kokkos::Impl	typeref:typename:int16_t
TeamPolicy	Kokkos_ExecPolicy.hpp	/^  TeamPolicy() : internal_policy(0, AUTO) {}$/;"	f	class:Kokkos::TeamPolicy
TeamPolicy	Kokkos_ExecPolicy.hpp	/^  TeamPolicy(const TeamPolicy<OtherProperties...> p) : internal_policy(p) {$/;"	f	class:Kokkos::TeamPolicy
TeamPolicy	Kokkos_ExecPolicy.hpp	/^  TeamPolicy(const internal_policy& p) : internal_policy(p) {}$/;"	f	class:Kokkos::TeamPolicy
TeamPolicy	Kokkos_ExecPolicy.hpp	/^  TeamPolicy(const typename traits::execution_space& space_,$/;"	f	class:Kokkos::TeamPolicy
TeamPolicy	Kokkos_ExecPolicy.hpp	/^  TeamPolicy(int league_size_request, const Kokkos::AUTO_t&,$/;"	f	class:Kokkos::TeamPolicy
TeamPolicy	Kokkos_ExecPolicy.hpp	/^  TeamPolicy(int league_size_request, const int team_size_request,$/;"	f	class:Kokkos::TeamPolicy
TeamPolicy	Kokkos_ExecPolicy.hpp	/^  TeamPolicy(int league_size_request, int team_size_request,$/;"	f	class:Kokkos::TeamPolicy
TeamPolicy	Kokkos_ExecPolicy.hpp	/^class TeamPolicy$/;"	c	namespace:Kokkos
TeamPolicyInternal	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  TeamPolicyInternal()$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  TeamPolicyInternal(const TeamPolicyInternal<OtherProperties...>& p) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  TeamPolicyInternal(const execution_space space_, int league_size_,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  TeamPolicyInternal(int league_size_, const Kokkos::AUTO_t& team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  TeamPolicyInternal(int league_size_, int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^class TeamPolicyInternal<Kokkos::Cuda, Properties...>$/;"	c	namespace:Kokkos::Impl
TeamPolicyInternal	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  TeamPolicyInternal()$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  TeamPolicyInternal(TeamPolicyInternal<OtherProperties...> const& p) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  TeamPolicyInternal(const execution_space space_, int league_size_,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  TeamPolicyInternal(int league_size_, int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  TeamPolicyInternal(int league_size_,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	HIP/Kokkos_HIP_Parallel_Team.hpp	/^class TeamPolicyInternal<Kokkos::Experimental::HIP, Properties...>$/;"	c	namespace:Kokkos::Impl
TeamPolicyInternal	Kokkos_ExecPolicy.hpp	/^class TeamPolicyInternal : public Impl::PolicyTraits<Properties...> {$/;"	c	namespace:Kokkos::Impl
TeamPolicyInternal	Kokkos_HPX.hpp	/^  TeamPolicyInternal(const TeamPolicyInternal<Kokkos::Experimental::HPX,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Kokkos_HPX.hpp	/^  TeamPolicyInternal(const typename traits::execution_space &,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Kokkos_HPX.hpp	/^  TeamPolicyInternal(int league_size_request, const Kokkos::AUTO_t &,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Kokkos_HPX.hpp	/^  TeamPolicyInternal(int league_size_request, int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Kokkos_HPX.hpp	/^  TeamPolicyInternal(int league_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Kokkos_HPX.hpp	/^class TeamPolicyInternal<Kokkos::Experimental::HPX, Properties...>$/;"	c	namespace:Kokkos::Impl
TeamPolicyInternal	OpenMP/Kokkos_OpenMP_Team.hpp	/^  TeamPolicyInternal($/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	OpenMP/Kokkos_OpenMP_Team.hpp	/^  TeamPolicyInternal(const typename traits::execution_space&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	OpenMP/Kokkos_OpenMP_Team.hpp	/^  TeamPolicyInternal(int league_size_request, int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	OpenMP/Kokkos_OpenMP_Team.hpp	/^  TeamPolicyInternal(int league_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	OpenMP/Kokkos_OpenMP_Team.hpp	/^class TeamPolicyInternal<Kokkos::OpenMP, Properties...>$/;"	c	namespace:Kokkos::Impl
TeamPolicyInternal	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  TeamPolicyInternal(const TeamPolicyInternal<OtherProperties...>& p)$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  TeamPolicyInternal(const typename traits::execution_space&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  TeamPolicyInternal(int league_size_request, int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  TeamPolicyInternal(int league_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^class TeamPolicyInternal<Kokkos::Experimental::OpenMPTarget, Properties...>$/;"	c	namespace:Kokkos::Impl
TeamPolicyInternal	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  TeamPolicyInternal()$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  TeamPolicyInternal(TeamPolicyInternal<OtherProperties...> const& p) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  TeamPolicyInternal(const execution_space space_, int league_size_,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  TeamPolicyInternal(int league_size_, int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  TeamPolicyInternal(int league_size_,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^class TeamPolicyInternal<Kokkos::Experimental::SYCL, Properties...>$/;"	c	namespace:Kokkos::Impl
TeamPolicyInternal	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  TeamPolicyInternal($/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  TeamPolicyInternal(const execution_space& space, int league_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  TeamPolicyInternal(const execution_space&, int league_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  TeamPolicyInternal(int league_size_request, int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  TeamPolicyInternal(int league_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Serial/Kokkos_Serial_Parallel_Team.hpp	/^class TeamPolicyInternal<Kokkos::Serial, Properties...>$/;"	c	namespace:Kokkos::Impl
TeamPolicyInternal	Threads/Kokkos_ThreadsTeam.hpp	/^  TeamPolicyInternal($/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Threads/Kokkos_ThreadsTeam.hpp	/^  TeamPolicyInternal(const typename traits::execution_space& space,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Threads/Kokkos_ThreadsTeam.hpp	/^  TeamPolicyInternal(const typename traits::execution_space&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Threads/Kokkos_ThreadsTeam.hpp	/^  TeamPolicyInternal(int league_size_request, int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Threads/Kokkos_ThreadsTeam.hpp	/^  TeamPolicyInternal(int league_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal
TeamPolicyInternal	Threads/Kokkos_ThreadsTeam.hpp	/^class TeamPolicyInternal<Kokkos::Threads, Properties...>$/;"	c	namespace:Kokkos::Impl
TeamSizeTuner	Kokkos_Tuners.hpp	/^  TeamSizeTuner(const std::string& name,$/;"	f	class:Kokkos::Tools::Experimental::TeamSizeTuner
TeamSizeTuner	Kokkos_Tuners.hpp	/^class TeamSizeTuner : public ExtendableTunerMixin<TeamSizeTuner> {$/;"	c	namespace:Kokkos::Tools::Experimental
TeamThreadRange	Cuda/Kokkos_Cuda_Team.hpp	/^    TeamThreadRange(const Impl::CudaTeamMember& thread, iType count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::CudaTeamMember>
TeamThreadRange	Cuda/Kokkos_Cuda_Team.hpp	/^TeamThreadRange(const Impl::CudaTeamMember& thread, iType1 begin, iType2 end) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::CudaTeamMember>
TeamThreadRange	HIP/Kokkos_HIP_Team.hpp	/^    TeamThreadRange(const Impl::HIPTeamMember& thread, iType count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::HIPTeamMember>
TeamThreadRange	HIP/Kokkos_HIP_Team.hpp	/^TeamThreadRange(const Impl::HIPTeamMember& thread, iType1 begin, iType2 end) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::HIPTeamMember>
TeamThreadRange	Kokkos_HPX.hpp	/^    TeamThreadRange(const Impl::HPXTeamMember &thread, const iType &count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::HPXTeamMember>
TeamThreadRange	Kokkos_HPX.hpp	/^TeamThreadRange(const Impl::HPXTeamMember &thread, const iType1 &i_begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::HPXTeamMember>
TeamThreadRange	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^TeamThreadRange(const Impl::OpenMPTargetExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::OpenMPTargetExecTeamMember>
TeamThreadRange	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^TeamThreadRange(const Impl::OpenMPTargetExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::OpenMPTargetExecTeamMember>
TeamThreadRange	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^TeamThreadRange(Impl::TaskExec<Kokkos::Experimental::OpenMPTarget>& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::TaskExec<Kokkos::Experimental::OpenMPTarget>>
TeamThreadRange	SYCL/Kokkos_SYCL_Team.hpp	/^    TeamThreadRange(const Impl::SYCLTeamMember& thread, iType count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::SYCLTeamMember>
TeamThreadRange	SYCL/Kokkos_SYCL_Team.hpp	/^TeamThreadRange(const Impl::SYCLTeamMember& thread, iType1 begin, iType2 end) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::SYCLTeamMember>
TeamThreadRange	Threads/Kokkos_ThreadsTeam.hpp	/^    TeamThreadRange(const Impl::ThreadsExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::ThreadsExecTeamMember>
TeamThreadRange	Threads/Kokkos_ThreadsTeam.hpp	/^TeamThreadRange(const Impl::ThreadsExecTeamMember& thread, const iType1& begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::ThreadsExecTeamMember>
TeamThreadRange	impl/Kokkos_HostThreadTeam.hpp	/^TeamThreadRange($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Member>
TeamThreadRange	impl/Kokkos_HostThreadTeam.hpp	/^TeamThreadRange($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Member>
TeamThreadRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^  TeamThreadRangeBoundariesStruct(const CudaTeamMember& thread_, iType begin_,$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamThreadRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^  TeamThreadRangeBoundariesStruct(const CudaTeamMember& thread_, iType count)$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamThreadRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^struct TeamThreadRangeBoundariesStruct<iType, CudaTeamMember> {$/;"	s	namespace:Kokkos::Impl
TeamThreadRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^  TeamThreadRangeBoundariesStruct(const HIPTeamMember& thread_, iType begin_,$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamThreadRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^  TeamThreadRangeBoundariesStruct(const HIPTeamMember& thread_, iType count)$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamThreadRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^struct TeamThreadRangeBoundariesStruct<iType, HIPTeamMember> {$/;"	s	namespace:Kokkos::Impl
TeamThreadRangeBoundariesStruct	Kokkos_ExecPolicy.hpp	/^  TeamThreadRangeBoundariesStruct(const TeamMemberType& arg_thread,$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamThreadRangeBoundariesStruct	Kokkos_ExecPolicy.hpp	/^struct TeamThreadRangeBoundariesStruct {$/;"	s	namespace:Kokkos::Impl
TeamThreadRangeBoundariesStruct	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  TeamThreadRangeBoundariesStruct(const OpenMPTargetExecTeamMember& thread_,$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct
TeamThreadRangeBoundariesStruct	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^struct TeamThreadRangeBoundariesStruct<iType, OpenMPTargetExecTeamMember> {$/;"	s	namespace:Kokkos::Impl
TeamThreadRangeBoundariesStruct	SYCL/Kokkos_SYCL_Team.hpp	/^  TeamThreadRangeBoundariesStruct(const SYCLTeamMember& thread_, iType begin_,$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamThreadRangeBoundariesStruct	SYCL/Kokkos_SYCL_Team.hpp	/^  TeamThreadRangeBoundariesStruct(const SYCLTeamMember& thread_, iType count)$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamThreadRangeBoundariesStruct	SYCL/Kokkos_SYCL_Team.hpp	/^struct TeamThreadRangeBoundariesStruct<iType, SYCLTeamMember> {$/;"	s	namespace:Kokkos::Impl
TeamThread_scratch	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  ValueType* TeamThread_scratch =$/;"	v	namespace:Kokkos	typeref:typename:ValueType *
TeamVectorRange	Cuda/Kokkos_Cuda_Team.hpp	/^    TeamVectorRange(const Impl::CudaTeamMember& thread, const iType& count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamVectorRangeBoundariesStruct<iType,Impl::CudaTeamMember>
TeamVectorRange	Cuda/Kokkos_Cuda_Team.hpp	/^TeamVectorRange(const Impl::CudaTeamMember& thread, const iType1& begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::CudaTeamMember>
TeamVectorRange	HIP/Kokkos_HIP_Team.hpp	/^    TeamVectorRange(const Impl::HIPTeamMember& thread, const iType& count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamVectorRangeBoundariesStruct<iType,Impl::HIPTeamMember>
TeamVectorRange	HIP/Kokkos_HIP_Team.hpp	/^TeamVectorRange(const Impl::HIPTeamMember& thread, const iType1& begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::HIPTeamMember>
TeamVectorRange	Kokkos_HPX.hpp	/^    TeamVectorRange(const Impl::HPXTeamMember &thread, const iType &count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::HPXTeamMember>
TeamVectorRange	Kokkos_HPX.hpp	/^TeamVectorRange(const Impl::HPXTeamMember &thread, const iType1 &i_begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::HPXTeamMember>
TeamVectorRange	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^TeamVectorRange(const Impl::OpenMPTargetExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamVectorRangeBoundariesStruct<iType,Impl::OpenMPTargetExecTeamMember>
TeamVectorRange	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^TeamVectorRange(const Impl::OpenMPTargetExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::OpenMPTargetExecTeamMember>
TeamVectorRange	SYCL/Kokkos_SYCL_Team.hpp	/^    TeamVectorRange(const Impl::SYCLTeamMember& thread, const iType& count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamVectorRangeBoundariesStruct<iType,Impl::SYCLTeamMember>
TeamVectorRange	SYCL/Kokkos_SYCL_Team.hpp	/^TeamVectorRange(const Impl::SYCLTeamMember& thread, const iType1& begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::SYCLTeamMember>
TeamVectorRange	Threads/Kokkos_ThreadsTeam.hpp	/^    TeamVectorRange(const Impl::ThreadsExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Impl::ThreadsExecTeamMember>
TeamVectorRange	Threads/Kokkos_ThreadsTeam.hpp	/^TeamVectorRange(const Impl::ThreadsExecTeamMember& thread, const iType1& begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::ThreadsExecTeamMember>
TeamVectorRange	impl/Kokkos_HostThreadTeam.hpp	/^TeamVectorRange($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<iType,Member>
TeamVectorRange	impl/Kokkos_HostThreadTeam.hpp	/^TeamVectorRange($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::TeamThreadRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Member>
TeamVectorRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^  TeamVectorRangeBoundariesStruct(const CudaTeamMember& thread_,$/;"	f	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamVectorRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^struct TeamVectorRangeBoundariesStruct<iType, CudaTeamMember> {$/;"	s	namespace:Kokkos::Impl
TeamVectorRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^  TeamVectorRangeBoundariesStruct(const HIPTeamMember& thread_,$/;"	f	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamVectorRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^struct TeamVectorRangeBoundariesStruct<iType, HIPTeamMember> {$/;"	s	namespace:Kokkos::Impl
TeamVectorRangeBoundariesStruct	Kokkos_ExecPolicy.hpp	/^  TeamVectorRangeBoundariesStruct(const TeamMemberType& arg_thread,$/;"	f	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamVectorRangeBoundariesStruct	Kokkos_ExecPolicy.hpp	/^struct TeamVectorRangeBoundariesStruct {$/;"	s	namespace:Kokkos::Impl
TeamVectorRangeBoundariesStruct	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  TeamVectorRangeBoundariesStruct(const OpenMPTargetExecTeamMember& thread_,$/;"	f	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct
TeamVectorRangeBoundariesStruct	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^struct TeamVectorRangeBoundariesStruct<iType, OpenMPTargetExecTeamMember> {$/;"	s	namespace:Kokkos::Impl
TeamVectorRangeBoundariesStruct	SYCL/Kokkos_SYCL_Team.hpp	/^  TeamVectorRangeBoundariesStruct(const SYCLTeamMember& thread_,$/;"	f	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
TeamVectorRangeBoundariesStruct	SYCL/Kokkos_SYCL_Team.hpp	/^struct TeamVectorRangeBoundariesStruct<iType, SYCLTeamMember> {$/;"	s	namespace:Kokkos::Impl
Terminating	Threads/Kokkos_ThreadsExec.hpp	/^    Terminating  \/\/\/<  Termination in progress$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60403
ThreadSingleStruct	Kokkos_ExecPolicy.hpp	/^  ThreadSingleStruct(const TeamMemberType& team_member_)$/;"	f	struct:Kokkos::Impl::ThreadSingleStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadSingleStruct	Kokkos_ExecPolicy.hpp	/^struct ThreadSingleStruct {$/;"	s	namespace:Kokkos::Impl
ThreadVectorRange	Cuda/Kokkos_Cuda_Team.hpp	/^    ThreadVectorRange(const Impl::CudaTeamMember& thread, iType count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<iType,Impl::CudaTeamMember>
ThreadVectorRange	Cuda/Kokkos_Cuda_Team.hpp	/^ThreadVectorRange(const Impl::CudaTeamMember& thread, iType1 arg_begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::CudaTeamMember>
ThreadVectorRange	HIP/Kokkos_HIP_Team.hpp	/^    ThreadVectorRange(const Impl::HIPTeamMember& thread, iType count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<iType,Impl::HIPTeamMember>
ThreadVectorRange	HIP/Kokkos_HIP_Team.hpp	/^ThreadVectorRange(const Impl::HIPTeamMember& thread, iType1 arg_begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::HIPTeamMember>
ThreadVectorRange	Kokkos_HPX.hpp	/^    ThreadVectorRange(const Impl::HPXTeamMember &thread, const iType &count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<iType,Impl::HPXTeamMember>
ThreadVectorRange	Kokkos_HPX.hpp	/^ThreadVectorRange(const Impl::HPXTeamMember &thread, const iType1 &i_begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::HPXTeamMember>
ThreadVectorRange	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^ThreadVectorRange(const Impl::OpenMPTargetExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<iType,Impl::OpenMPTargetExecTeamMember>
ThreadVectorRange	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^ThreadVectorRange(const Impl::OpenMPTargetExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::OpenMPTargetExecTeamMember>
ThreadVectorRange	SYCL/Kokkos_SYCL_Team.hpp	/^    ThreadVectorRange(const Impl::SYCLTeamMember& thread, iType count) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<iType,Impl::SYCLTeamMember>
ThreadVectorRange	SYCL/Kokkos_SYCL_Team.hpp	/^ThreadVectorRange(const Impl::SYCLTeamMember& thread, iType1 arg_begin,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::SYCLTeamMember>
ThreadVectorRange	Threads/Kokkos_ThreadsTeam.hpp	/^    ThreadVectorRange(const Impl::ThreadsExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<iType,Impl::ThreadsExecTeamMember>
ThreadVectorRange	Threads/Kokkos_ThreadsTeam.hpp	/^ThreadVectorRange(const Impl::ThreadsExecTeamMember& thread,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Impl::ThreadsExecTeamMember>
ThreadVectorRange	impl/Kokkos_HostThreadTeam.hpp	/^ThreadVectorRange($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<iType,Member>
ThreadVectorRange	impl/Kokkos_HostThreadTeam.hpp	/^ThreadVectorRange($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ThreadVectorRangeBoundariesStruct<std::common_type_t<iType1,iType2>,Member>
ThreadVectorRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(const CudaTeamMember, index_type arg_begin,$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(const CudaTeamMember, index_type count)$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(index_type arg_begin, index_type arg_end)$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(index_type count)$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	Cuda/Kokkos_Cuda_Team.hpp	/^struct ThreadVectorRangeBoundariesStruct<iType, CudaTeamMember> {$/;"	s	namespace:Kokkos::Impl
ThreadVectorRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(const HIPTeamMember, index_type arg_begin,$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(const HIPTeamMember, index_type count)$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(index_type arg_begin, index_type arg_end)$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(index_type count)$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	HIP/Kokkos_HIP_Team.hpp	/^struct ThreadVectorRangeBoundariesStruct<iType, HIPTeamMember> {$/;"	s	namespace:Kokkos::Impl
ThreadVectorRangeBoundariesStruct	Kokkos_ExecPolicy.hpp	/^  constexpr ThreadVectorRangeBoundariesStruct($/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION 
ThreadVectorRangeBoundariesStruct	Kokkos_ExecPolicy.hpp	/^  constexpr ThreadVectorRangeBoundariesStruct(const TeamMemberType,$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION 
ThreadVectorRangeBoundariesStruct	Kokkos_ExecPolicy.hpp	/^  constexpr ThreadVectorRangeBoundariesStruct(const index_type& count) noexcept$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION 
ThreadVectorRangeBoundariesStruct	Kokkos_ExecPolicy.hpp	/^struct ThreadVectorRangeBoundariesStruct {$/;"	s	namespace:Kokkos::Impl
ThreadVectorRangeBoundariesStruct	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  ThreadVectorRangeBoundariesStruct(const OpenMPTargetExecTeamMember& thread_,$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct
ThreadVectorRangeBoundariesStruct	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^struct ThreadVectorRangeBoundariesStruct<iType, OpenMPTargetExecTeamMember> {$/;"	s	namespace:Kokkos::Impl
ThreadVectorRangeBoundariesStruct	SYCL/Kokkos_SYCL_Team.hpp	/^  ThreadVectorRangeBoundariesStruct(const SYCLTeamMember& thread,$/;"	f	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
ThreadVectorRangeBoundariesStruct	SYCL/Kokkos_SYCL_Team.hpp	/^struct ThreadVectorRangeBoundariesStruct<iType, SYCLTeamMember> {$/;"	s	namespace:Kokkos::Impl
Threads	Kokkos_Threads.hpp	/^class Threads {$/;"	c	namespace:Kokkos
Threads	impl/Kokkos_Profiling_Interface.hpp	/^  Threads,$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
ThreadsExec	Threads/Kokkos_ThreadsExec.cpp	/^ThreadsExec::ThreadsExec()$/;"	f	class:Kokkos::Impl::ThreadsExec
ThreadsExec	Threads/Kokkos_ThreadsExec.hpp	/^class ThreadsExec {$/;"	c	namespace:Kokkos::Impl
ThreadsExecTeamMember	Threads/Kokkos_ThreadsTeam.hpp	/^  ThreadsExecTeamMember($/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember
ThreadsExecTeamMember	Threads/Kokkos_ThreadsTeam.hpp	/^  ThreadsExecTeamMember()$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember
ThreadsExecTeamMember	Threads/Kokkos_ThreadsTeam.hpp	/^class ThreadsExecTeamMember {$/;"	c	namespace:Kokkos::Impl
TileSizeProperties	KokkosExp_MDRangePolicy.hpp	/^struct TileSizeProperties {$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<1, IsLeft, IType, Tagged,$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<1, IsLeft, IType, void, void> {$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<2, IsLeft, IType, Tagged,$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<2, IsLeft, IType, void, void> {$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<3, IsLeft, IType, Tagged,$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<3, IsLeft, IType, void, void> {$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<4, IsLeft, IType, Tagged,$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<4, IsLeft, IType, void, void> {$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<5, IsLeft, IType, Tagged,$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<5, IsLeft, IType, void, void> {$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<6, IsLeft, IType, Tagged,$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<6, IsLeft, IType, void, void> {$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<7, IsLeft, IType, Tagged,$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<7, IsLeft, IType, void, void> {$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<8, IsLeft, IType, Tagged,$/;"	s	namespace:Kokkos::Impl
Tile_Loop_Type	impl/KokkosExp_Host_IterateTile.hpp	/^struct Tile_Loop_Type<8, IsLeft, IType, void, void> {$/;"	s	namespace:Kokkos::Impl
Timer	Kokkos_Timer.hpp	/^  inline Timer() { reset(); }$/;"	f	class:Kokkos::Timer
Timer	Kokkos_Timer.hpp	/^class Timer {$/;"	c	namespace:Kokkos
Timer	impl/Kokkos_Timer.hpp	/^using Timer KOKKOS_DEPRECATED_WITH_COMMENT("Use Kokkos::Timer instead!") =$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::Timer
ToolProgrammingInterface	impl/Kokkos_Profiling_Interface.hpp	/^using ToolProgrammingInterface    = Kokkos_Tools_ToolProgrammingInterface;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_ToolProgrammingInterface
ToolSettings	impl/Kokkos_Profiling_Interface.hpp	/^using ToolSettings                = Kokkos_Tools_ToolSettings;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_ToolSettings
Tools	Cuda/Kokkos_Cuda_Instance.cpp	/^namespace Tools {$/;"	n	namespace:Kokkos	file:
Tools	HIP/Kokkos_HIP_Space.cpp	/^namespace Tools {$/;"	n	namespace:Kokkos	file:
Tools	HPX/Kokkos_HPX.cpp	/^namespace Tools {$/;"	n	namespace:Kokkos	file:
Tools	Kokkos_Cuda.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	Kokkos_HIP_Space.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	Kokkos_HPX.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	Kokkos_OpenMP.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	Kokkos_OpenMPTarget.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	Kokkos_SYCL.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	Kokkos_Serial.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	Kokkos_Threads.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	Kokkos_Tuners.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	OpenMP/Kokkos_OpenMP_Instance.cpp	/^namespace Tools {$/;"	n	namespace:Kokkos	file:
Tools	Serial/Kokkos_Serial.cpp	/^namespace Tools {$/;"	n	namespace:Kokkos	file:
Tools	Threads/Kokkos_ThreadsExec.cpp	/^namespace Tools {$/;"	n	namespace:Kokkos	file:
Tools	impl/Kokkos_Profiling.cpp	/^namespace Tools {$/;"	n	namespace:Kokkos	file:
Tools	impl/Kokkos_Profiling.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	impl/Kokkos_Profiling_Interface.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tools	impl/Kokkos_Tools_Generic.hpp	/^namespace Tools {$/;"	n	namespace:Kokkos
Tracker	Kokkos_MemoryPool.hpp	/^  using Tracker = Kokkos::Impl::SharedAllocationTracker;$/;"	t	class:Kokkos::MemoryPool	typeref:typename:Kokkos::Impl::SharedAllocationTracker
Traits	impl/Kokkos_AnalyzePolicy.hpp	/^    type_list<TraitSpec, TraitSpecs...>, Trait, Traits...>$/;"	s	namespace:Kokkos::Impl
TrivialWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^    TrivialWrapper(){};$/;"	f	union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper
TrivialWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^    TrivialWrapper(TrivialWrapper&& other) {$/;"	f	union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper
TrivialWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^    TrivialWrapper(const Functor& f) { std::memcpy(&m_f, &f, sizeof(m_f)); }$/;"	f	union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper
TrivialWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^    TrivialWrapper(const TrivialWrapper& other) {$/;"	f	union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper
TrivialWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^  union TrivialWrapper {$/;"	u	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper
TunerType	Kokkos_Tuners.hpp	/^  using TunerType = decltype(make_multidimensional_sparse_tuning_problem<20>($/;"	t	class:Kokkos::Tools::Experimental::TeamSizeTuner
TunerType	Kokkos_Tuners.hpp	/^  using TunerType =$/;"	t	struct:Kokkos::Tools::Experimental::MDRangeTuner
TuningString	impl/Kokkos_Profiling_Interface.hpp	/^using TuningString        = Kokkos_Tools_Tuning_String;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_Tuning_String
TypeErasedTag	Kokkos_Graph_fwd.hpp	/^struct TypeErasedTag {};$/;"	s	namespace:Kokkos::Experimental
U	HIP/Kokkos_HIP_Atomic.hpp	/^    __inline__ __device__ U() {}$/;"	f	union:Kokkos::atomic_compare_exchange::U	typeref:typename:__device__
U	HIP/Kokkos_HIP_Atomic.hpp	/^    __inline__ __device__ U() {}$/;"	f	union:Kokkos::atomic_fetch_add::U	typeref:typename:__device__
U	HIP/Kokkos_HIP_Atomic.hpp	/^    __inline__ __device__ U() {}$/;"	f	union:Kokkos::atomic_fetch_sub::U	typeref:typename:__device__
U	HIP/Kokkos_HIP_Atomic.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_compare_exchange
U	HIP/Kokkos_HIP_Atomic.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_fetch_add
U	HIP/Kokkos_HIP_Atomic.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_fetch_sub
U	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^    KOKKOS_INLINE_FUNCTION U() {}$/;"	f	union:Kokkos::atomic_compare_exchange::U	typeref:typename:KOKKOS_INLINE_FUNCTION
U	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_compare_exchange
U	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^    KOKKOS_INLINE_FUNCTION U() {}$/;"	f	union:Kokkos::atomic_compare_exchange::U	typeref:typename:KOKKOS_INLINE_FUNCTION
U	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_compare_exchange
U	impl/Kokkos_Atomic_Exchange.hpp	/^    inline U() {}$/;"	f	union:Kokkos::atomic_assign::U
U	impl/Kokkos_Atomic_Exchange.hpp	/^    inline U() {}$/;"	f	union:Kokkos::atomic_exchange::U
U	impl/Kokkos_Atomic_Exchange.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_assign
U	impl/Kokkos_Atomic_Exchange.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_exchange
U	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    inline U() {}$/;"	f	union:Kokkos::atomic_fetch_add::U
U	impl/Kokkos_Atomic_Fetch_Add.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_fetch_add
U	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^    KOKKOS_INLINE_FUNCTION U() {}$/;"	f	union:Kokkos::atomic_fetch_sub::U	typeref:typename:KOKKOS_INLINE_FUNCTION
U	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_fetch_sub
U	impl/Kokkos_Atomic_Generic.hpp	/^    KOKKOS_INLINE_FUNCTION U() {}$/;"	f	union:Kokkos::Impl::atomic_fetch_oper::U	typeref:typename:KOKKOS_INLINE_FUNCTION
U	impl/Kokkos_Atomic_Generic.hpp	/^    KOKKOS_INLINE_FUNCTION U() {}$/;"	f	union:Kokkos::Impl::atomic_oper_fetch::U	typeref:typename:KOKKOS_INLINE_FUNCTION
U	impl/Kokkos_Atomic_Generic.hpp	/^  union U {$/;"	u	function:Kokkos::Impl::atomic_fetch_oper
U	impl/Kokkos_Atomic_Generic.hpp	/^  union U {$/;"	u	function:Kokkos::Impl::atomic_oper_fetch
U	impl/Kokkos_Atomic_Windows.hpp	/^    KOKKOS_INLINE_FUNCTION U() {}$/;"	f	union:Kokkos::atomic_compare_exchange::U	typeref:typename:KOKKOS_INLINE_FUNCTION
U	impl/Kokkos_Atomic_Windows.hpp	/^    KOKKOS_INLINE_FUNCTION U(){};$/;"	f	union:Kokkos::atomic_compare_exchange::U	typeref:typename:KOKKOS_INLINE_FUNCTION
U	impl/Kokkos_Atomic_Windows.hpp	/^  union U {$/;"	u	function:Kokkos::atomic_compare_exchange
U1	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    KOKKOS_INLINE_FUNCTION U1() {}$/;"	f	union:Kokkos::atomic_fetch_add::U1	typeref:typename:KOKKOS_INLINE_FUNCTION
U1	impl/Kokkos_Atomic_Fetch_Add.hpp	/^  union U1 {$/;"	u	function:Kokkos::atomic_fetch_add
U2	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    KOKKOS_INLINE_FUNCTION U2() {}$/;"	f	union:Kokkos::atomic_fetch_add::U2	typeref:typename:KOKKOS_INLINE_FUNCTION
U2	impl/Kokkos_Atomic_Fetch_Add.hpp	/^  union U2 {$/;"	u	function:Kokkos::atomic_fetch_add
USMObjectMem	SYCL/Kokkos_SYCL_Instance.cpp	/^template class SYCLInternal::USMObjectMem<sycl::usm::alloc::device>;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:class
USMObjectMem	SYCL/Kokkos_SYCL_Instance.cpp	/^template class SYCLInternal::USMObjectMem<sycl::usm::alloc::host>;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:class
USMObjectMem	SYCL/Kokkos_SYCL_Instance.cpp	/^template class SYCLInternal::USMObjectMem<sycl::usm::alloc::shared>;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:class
USMObjectMem	SYCL/Kokkos_SYCL_Instance.hpp	/^    explicit USMObjectMem(sycl::queue q, uint32_t instance_id) noexcept$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem
USMObjectMem	SYCL/Kokkos_SYCL_Instance.hpp	/^  class USMObjectMem {$/;"	c	class:Kokkos::Experimental::Impl::SYCLInternal
UVM_available	Cuda/Kokkos_CudaSpace.cpp	/^  enum : bool { UVM_available = true };$/;"	e	enum:Kokkos::CudaUVMSpace::available::__anonebf75d1c0203	file:
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  UniqueToken()$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  UniqueToken(size_type max_size) {$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  UniqueToken(size_type max_size, execution_space const& arg)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  UniqueToken(size_type max_size, execution_space const& exec) {$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  explicit UniqueToken(execution_space const& = Cuda())$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  explicit UniqueToken(execution_space const& arg)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  explicit UniqueToken(size_type max_size)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^class UniqueToken<Cuda, UniqueTokenScope::Global> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^class UniqueToken<Cuda, UniqueTokenScope::Instance>$/;"	c	namespace:Kokkos::Experimental
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^  UniqueToken()$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^  UniqueToken(size_type max_size) {$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^  UniqueToken(size_type max_size, execution_space const& arg)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^  UniqueToken(size_type max_size, execution_space const& exec) {$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^  explicit UniqueToken(execution_space const& = HIP())$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^  explicit UniqueToken(execution_space const& arg)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^  explicit UniqueToken(size_type max_size)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^class UniqueToken<HIP, UniqueTokenScope::Global> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	HIP/Kokkos_HIP_UniqueToken.hpp	/^class UniqueToken<HIP, UniqueTokenScope::Instance>$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Kokkos_HPX.hpp	/^  UniqueToken(execution_space const & = execution_space()) noexcept {}$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Kokkos_HPX.hpp	/^  UniqueToken(execution_space const & = execution_space()) noexcept$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Kokkos_HPX.hpp	/^  UniqueToken(size_type max_size, execution_space const & = execution_space())$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Kokkos_HPX.hpp	/^class UniqueToken<HPX, UniqueTokenScope::Global> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Kokkos_HPX.hpp	/^class UniqueToken<HPX, UniqueTokenScope::Instance> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Kokkos_UniqueToken.hpp	/^class UniqueToken {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Kokkos_UniqueToken.hpp	/^class UniqueToken<ExecutionSpace, UniqueTokenScope::Instance>$/;"	c	namespace:Kokkos::Experimental
UniqueToken	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  UniqueToken(execution_space const& = execution_space()) noexcept {}$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  UniqueToken(execution_space const& = execution_space()) noexcept$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  UniqueToken(size_type max_size, execution_space const& = execution_space())$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	OpenMP/Kokkos_OpenMP_Instance.hpp	/^class UniqueToken<OpenMP, UniqueTokenScope::Global> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	OpenMP/Kokkos_OpenMP_Instance.hpp	/^class UniqueToken<OpenMP, UniqueTokenScope::Instance> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^    UniqueToken(Kokkos::Experimental::OpenMPTarget const&) {$/;"	f	class:Kokkos::Experimental::UniqueToken::Experimental::OpenMPTarget::Experimental::UniqueTokenScope::Global
UniqueToken	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  UniqueToken(size_type max_size, execution_space const& = execution_space())$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  explicit UniqueToken(execution_space const& arg = execution_space())$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^class UniqueToken<OpenMPTarget, UniqueTokenScope::Global> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^class UniqueToken<OpenMPTarget, UniqueTokenScope::Instance>$/;"	c	namespace:Kokkos::Experimental
UniqueToken	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  UniqueToken()$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  UniqueToken(size_type max_size)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  UniqueToken(size_type max_size, execution_space const& arg)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  explicit UniqueToken(execution_space const& = execution_space())$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  explicit UniqueToken(execution_space const& arg)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  explicit UniqueToken(size_type max_size)$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^class UniqueToken<SYCL, UniqueTokenScope::Global> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^class UniqueToken<SYCL, UniqueTokenScope::Instance>$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Serial/Kokkos_Serial_UniqueToken.hpp	/^  UniqueToken(execution_space const& = execution_space()) noexcept {}$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Serial/Kokkos_Serial_UniqueToken.hpp	/^  UniqueToken(size_type, execution_space const& = execution_space()) {}$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Serial/Kokkos_Serial_UniqueToken.hpp	/^class UniqueToken<Serial, UniqueTokenScope::Global> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Serial/Kokkos_Serial_UniqueToken.hpp	/^class UniqueToken<Serial, UniqueTokenScope::Instance> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Threads/Kokkos_Threads_UniqueToken.hpp	/^  UniqueToken(execution_space const & = execution_space()) noexcept {}$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Threads/Kokkos_Threads_UniqueToken.hpp	/^  UniqueToken(execution_space const & = execution_space()) noexcept$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Threads/Kokkos_Threads_UniqueToken.hpp	/^  UniqueToken(size_type max_size, execution_space const & = execution_space())$/;"	f	class:Kokkos::Experimental::UniqueToken
UniqueToken	Threads/Kokkos_Threads_UniqueToken.hpp	/^class UniqueToken<Threads, UniqueTokenScope::Global> {$/;"	c	namespace:Kokkos::Experimental
UniqueToken	Threads/Kokkos_Threads_UniqueToken.hpp	/^class UniqueToken<Threads, UniqueTokenScope::Instance> {$/;"	c	namespace:Kokkos::Experimental
UniqueTokenScope	Kokkos_UniqueToken.hpp	/^enum class UniqueTokenScope : int { Instance, Global };$/;"	g	namespace:Kokkos::Experimental	typeref:typename:int
Unknown	impl/Kokkos_Error.hpp	/^    Unknown$/;"	e	enum:Kokkos::Experimental::RawMemoryAllocationFailure::FailureMode
Unknown	impl/Kokkos_Profiling_Interface.hpp	/^  Unknown$/;"	e	enum:Kokkos::Tools::Experimental::DeviceType
Unmanaged	Kokkos_MemoryTraits.hpp	/^  Unmanaged    = 0x01,$/;"	e	enum:Kokkos::MemoryTraitsFlags
Unsigned	impl/Kokkos_StringManipulation.hpp	/^  using Unsigned = std::conditional_t<sizeof(Integral) <= sizeof(unsigned int),$/;"	t	function:Kokkos::Impl::to_chars_i
UseReducer	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  static constexpr int UseReducer = is_reducer<ReducerType>::value;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
UseReducer	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  enum { UseReducer = is_reducer<ReducerType>::value };$/;"	e	enum:Kokkos::Impl::ParallelReduce::__anonc86c1b300203
UseShflReduction	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  static constexpr bool UseShflReduction = false;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:bool
UseShflReduction	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  static constexpr bool UseShflReduction = false;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:bool
UseShflReduction	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  static constexpr bool UseShflReduction =$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:bool
UseShflReduction	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  static bool constexpr UseShflReduction =$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:bool 
UseShflReduction	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  static int constexpr UseShflReduction = (analysis::StaticValueSize != 0);$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int 
VECTOR_LENGTH	Threads/Kokkos_ThreadsExec.hpp	/^  enum { VECTOR_LENGTH = 8 };$/;"	e	enum:Kokkos::Impl::ThreadsExec::__anon54e35bf60303
VLAEmulationAccess	impl/Kokkos_VLAEmulation.hpp	/^struct VLAEmulationAccess {$/;"	s	namespace:Kokkos::Impl
VOIDDUMMY	impl/Kokkos_ViewCtor.hpp	/^  struct VOIDDUMMY {};$/;"	s	struct:Kokkos::Impl::ViewCtorProp
VORank	impl/Kokkos_ViewLayoutTiled.hpp	/^    ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::VORank;$/;"	m	class:Kokkos::Impl::ViewOffset<Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:int
ValLocScalar	Kokkos_Parallel_Reduce.hpp	/^struct ValLocScalar {$/;"	s	namespace:Kokkos
ValueArray	Kokkos_Tuners.hpp	/^  using ValueArray = std::array<Kokkos::Tools::Experimental::VariableValue,$/;"	t	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:std::array<Kokkos::Tools::Experimental::VariableValue,space_dimensionality>
ValueHierarchyNode	Kokkos_Tuners.hpp	/^  explicit ValueHierarchyNode(std::vector<ValueType> rv)$/;"	f	struct:Kokkos::Tools::Experimental::Impl::ValueHierarchyNode
ValueHierarchyNode	Kokkos_Tuners.hpp	/^struct ValueHierarchyNode {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
ValueHierarchyNode	Kokkos_Tuners.hpp	/^struct ValueHierarchyNode<ValueType, void> {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
ValueRange	impl/Kokkos_Profiling_Interface.hpp	/^using ValueRange          = Kokkos_Tools_ValueRange;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_ValueRange
ValueSet	impl/Kokkos_Profiling_Interface.hpp	/^using ValueSet            = Kokkos_Tools_ValueSet;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_ValueSet
ValueType	Cuda/Kokkos_Cuda_Task.hpp	/^  using ValueType = typename ReducerType::value_type;$/;"	t	function:Kokkos::parallel_reduce	typeref:typename:ReducerType::value_type
ValueType	Kokkos_HostSpace.hpp	/^    using ValueType = typename View<DT, DP...>::value_type;$/;"	t	function:Kokkos::Impl::ZeroMemset::ZeroMemset	typeref:typename:View<DT,DP...>::value_type
ValueType	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using ValueType = typename ReducerType::value_type;$/;"	t	function:Kokkos::parallel_reduce	typeref:typename:ReducerType::value_type
ValueType	impl/Kokkos_FunctorAnalysis.hpp	/^  using ValueType = std::conditional_t<candidate_is_void, void_tag, value_type>;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:std::conditional_t<candidate_is_void,void_tag,value_type>
ValueType	impl/Kokkos_Profiling_Interface.hpp	/^using ValueType           = Kokkos_Tools_VariableInfo_ValueType;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_VariableInfo_ValueType
VariableInfo	impl/Kokkos_Profiling_Interface.hpp	/^using VariableInfo        = Kokkos_Tools_VariableInfo;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_VariableInfo
VariableValue	impl/Kokkos_Profiling_Interface.hpp	/^using VariableValue       = Kokkos_Tools_VariableValue;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_VariableValue
VectorSingleStruct	Kokkos_ExecPolicy.hpp	/^  VectorSingleStruct(const TeamMemberType& team_member_)$/;"	f	struct:Kokkos::Impl::VectorSingleStruct	typeref:typename:KOKKOS_INLINE_FUNCTION
VectorSingleStruct	Kokkos_ExecPolicy.hpp	/^struct VectorSingleStruct {$/;"	s	namespace:Kokkos::Impl
View	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION View($/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION
View	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION View(const View<RT, RP...>& src_view, const Arg0 arg0,$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION
View	Kokkos_View.hpp	/^  View(View&& other)$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_FUNCTION
View	Kokkos_View.hpp	/^  View(const View& other) : m_track(other.m_track), m_map(other.m_map) {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_FUNCTION
View	Kokkos_View.hpp	/^  explicit KOKKOS_INLINE_FUNCTION View($/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION
View	Kokkos_View.hpp	/^  explicit inline View($/;"	f	class:Kokkos::View
View	Kokkos_View.hpp	/^class View : public ViewTraits<DataType, Properties...> {$/;"	c	namespace:Kokkos
View	impl/Kokkos_ViewArray.hpp	/^  friend class Kokkos::View;$/;"	m	class:Kokkos::Impl::Kokkos	typeref:class:ViewMapping template class
ViewAllocateWithoutInitializing	impl/Kokkos_ViewCtor.hpp	/^using ViewAllocateWithoutInitializing =$/;"	t	namespace:Kokkos	typeref:typename:Impl::ViewCtorProp<Impl::WithoutInitializing_t,std::string,Impl::ViewAllocateWithoutInitializingBackwardCompat>
ViewAllocateWithoutInitializingBackwardCompat	impl/Kokkos_ViewCtor.hpp	/^struct ViewAllocateWithoutInitializingBackwardCompat {};$/;"	s	namespace:Kokkos::Impl
ViewCopy	Kokkos_CopyViews.hpp	/^  ViewCopy(const ViewTypeA& a_, const ViewTypeB& b_,$/;"	f	struct:Kokkos::Impl::ViewCopy
ViewCopy	Kokkos_CopyViews.hpp	/^struct ViewCopy<ViewTypeA, ViewTypeB, Layout, ExecSpace, 1, iType> {$/;"	s	namespace:Kokkos::Impl
ViewCopy	Kokkos_CopyViews.hpp	/^struct ViewCopy<ViewTypeA, ViewTypeB, Layout, ExecSpace, 2, iType> {$/;"	s	namespace:Kokkos::Impl
ViewCopy	Kokkos_CopyViews.hpp	/^struct ViewCopy<ViewTypeA, ViewTypeB, Layout, ExecSpace, 3, iType> {$/;"	s	namespace:Kokkos::Impl
ViewCopy	Kokkos_CopyViews.hpp	/^struct ViewCopy<ViewTypeA, ViewTypeB, Layout, ExecSpace, 4, iType> {$/;"	s	namespace:Kokkos::Impl
ViewCopy	Kokkos_CopyViews.hpp	/^struct ViewCopy<ViewTypeA, ViewTypeB, Layout, ExecSpace, 5, iType> {$/;"	s	namespace:Kokkos::Impl
ViewCopy	Kokkos_CopyViews.hpp	/^struct ViewCopy<ViewTypeA, ViewTypeB, Layout, ExecSpace, 6, iType> {$/;"	s	namespace:Kokkos::Impl
ViewCopy	Kokkos_CopyViews.hpp	/^struct ViewCopy<ViewTypeA, ViewTypeB, Layout, ExecSpace, 7, iType> {$/;"	s	namespace:Kokkos::Impl
ViewCopy	Kokkos_CopyViews.hpp	/^struct ViewCopy<ViewTypeA, ViewTypeB, Layout, ExecSpace, 8, iType> {$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  KOKKOS_INLINE_FUNCTION ViewCtorProp(pointer_type arg0)$/;"	f	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  KOKKOS_INLINE_FUNCTION ViewCtorProp(pointer_type arg0, Args const &... args)$/;"	f	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  ViewCtorProp(const type &) {}$/;"	f	struct:Kokkos::Impl::ViewCtorProp
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  ViewCtorProp(const type &arg) : value(arg) {}$/;"	f	struct:Kokkos::Impl::ViewCtorProp
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  ViewCtorProp(const type arg) : value(arg) {}$/;"	f	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  ViewCtorProp(std::string label)$/;"	f	struct:Kokkos::Impl::ViewCtorProp
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  ViewCtorProp(type &&arg) : value(arg) {}$/;"	f	struct:Kokkos::Impl::ViewCtorProp
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  ViewCtorProp(view_ctor_prop_args<Args...> const &arg)$/;"	f	struct:Kokkos::Impl::ViewCtorProp
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^  inline ViewCtorProp(Args const &... args) : ViewCtorProp<void, P>(args)... {}$/;"	f	struct:Kokkos::Impl::ViewCtorProp
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp : public ViewCtorProp<void, P>... {$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp<$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp<T *> {$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp<WithoutInitializing_t, std::string,$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp<std::enable_if_t<Kokkos::is_memory_space<Space>::value ||$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp<std::enable_if_t<is_view_label<Label>::value>, Label> {$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp<void, T *> {$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp<void, ViewAllocateWithoutInitializingBackwardCompat> {};$/;"	s	namespace:Kokkos::Impl
ViewCtorProp	impl/Kokkos_ViewCtor.hpp	/^struct ViewCtorProp<void> {};$/;"	s	namespace:Kokkos::Impl
ViewDimension	impl/Kokkos_ViewMapping.hpp	/^  constexpr ViewDimension(size_t n0, size_t n1, size_t n2, size_t n3, size_t n4,$/;"	f	struct:Kokkos::Impl::ViewDimension	typeref:typename:KOKKOS_INLINE_FUNCTION 
ViewDimension	impl/Kokkos_ViewMapping.hpp	/^struct KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION ViewDimension$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^  ViewFill(const ViewType& a, const ST& val, const ExecSpace& space) {$/;"	f	struct:Kokkos::Impl::ViewFill
ViewFill	Kokkos_CopyViews.hpp	/^  ViewFill(const ViewType& a_, typename ViewType::const_value_type& val_,$/;"	f	struct:Kokkos::Impl::ViewFill
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 0, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 1, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 2, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 3, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 4, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 5, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 6, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 7, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFill	Kokkos_CopyViews.hpp	/^struct ViewFill<ViewType, Layout, ExecSpace, 8, iType> {$/;"	s	namespace:Kokkos::Impl
ViewFillLayoutSelector	Kokkos_CopyViews.hpp	/^struct ViewFillLayoutSelector {};$/;"	s	namespace:Kokkos::Impl
ViewFillLayoutSelector	Kokkos_CopyViews.hpp	/^struct ViewFillLayoutSelector<Kokkos::LayoutLeft> {$/;"	s	namespace:Kokkos::Impl
ViewFillLayoutSelector	Kokkos_CopyViews.hpp	/^struct ViewFillLayoutSelector<Kokkos::LayoutRight> {$/;"	s	namespace:Kokkos::Impl
ViewMapping	Kokkos_View.hpp	/^class ViewMapping {$/;"	c	namespace:Kokkos::Impl
ViewMapping	impl/Kokkos_ViewArray.hpp	/^  ViewMapping(const handle_type &arg_handle, const offset_type &arg_offset)$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewMapping	impl/Kokkos_ViewLayoutTiled.hpp	/^class ViewMapping<$/;"	c	namespace:Kokkos::Impl
ViewMapping	impl/Kokkos_ViewLayoutTiled.hpp	/^class ViewMapping<std::enable_if_t<(N2 == 0 && N3 == 0 && N4 == 0 && N5 == 0 &&$/;"	c	namespace:Kokkos::Impl
ViewMapping	impl/Kokkos_ViewLayoutTiled.hpp	/^class ViewMapping<std::enable_if_t<(N3 == 0 && N4 == 0 && N5 == 0 && N6 == 0 &&$/;"	c	namespace:Kokkos::Impl
ViewMapping	impl/Kokkos_ViewLayoutTiled.hpp	/^class ViewMapping<std::enable_if_t<(N5 == 0 && N6 == 0 && N7 == 0)>  \/\/ void$/;"	c	namespace:Kokkos::Impl
ViewMapping	impl/Kokkos_ViewLayoutTiled.hpp	/^class ViewMapping<std::enable_if_t<(N6 == 0 && N7 == 0)>  \/\/ void$/;"	c	namespace:Kokkos::Impl
ViewMapping	impl/Kokkos_ViewLayoutTiled.hpp	/^class ViewMapping<std::enable_if_t<(N7 == 0)>  \/\/ void$/;"	c	namespace:Kokkos::Impl
ViewRemap	Kokkos_CopyViews.hpp	/^  ViewRemap(const DstType& dst, const SrcType& src,$/;"	f	struct:Kokkos::Impl::ViewRemap
ViewRemap	Kokkos_CopyViews.hpp	/^struct ViewRemap<DstType, SrcType, ExecSpace, 1> {$/;"	s	namespace:Kokkos::Impl
ViewRemap	Kokkos_CopyViews.hpp	/^struct ViewRemap<DstType, SrcType, ExecSpace, 2> {$/;"	s	namespace:Kokkos::Impl
ViewRemap	Kokkos_CopyViews.hpp	/^struct ViewRemap<DstType, SrcType, ExecSpace, 3> {$/;"	s	namespace:Kokkos::Impl
ViewRemap	Kokkos_CopyViews.hpp	/^struct ViewRemap<DstType, SrcType, ExecSpace, 4> {$/;"	s	namespace:Kokkos::Impl
ViewRemap	Kokkos_CopyViews.hpp	/^struct ViewRemap<DstType, SrcType, ExecSpace, 5> {$/;"	s	namespace:Kokkos::Impl
ViewRemap	Kokkos_CopyViews.hpp	/^struct ViewRemap<DstType, SrcType, ExecSpace, 6> {$/;"	s	namespace:Kokkos::Impl
ViewRemap	Kokkos_CopyViews.hpp	/^struct ViewRemap<DstType, SrcType, ExecSpace, 7> {$/;"	s	namespace:Kokkos::Impl
ViewRemap	Kokkos_CopyViews.hpp	/^struct ViewRemap<DstType, SrcType, ExecSpace, 8> {$/;"	s	namespace:Kokkos::Impl
ViewScalarToDataType	impl/Kokkos_ViewUniformType.hpp	/^struct ViewScalarToDataType {$/;"	s	namespace:Kokkos::Impl
ViewScalarToDataType	impl/Kokkos_ViewUniformType.hpp	/^struct ViewScalarToDataType<ScalarType, 0> {$/;"	s	namespace:Kokkos::Impl
ViewTracker	impl/Kokkos_ViewTracker.hpp	/^  KOKKOS_INLINE_FUNCTION explicit ViewTracker($/;"	f	struct:Kokkos::Impl::ViewTracker	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewTracker	impl/Kokkos_ViewTracker.hpp	/^  ViewTracker() : m_tracker() {}$/;"	f	struct:Kokkos::Impl::ViewTracker	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewTracker	impl/Kokkos_ViewTracker.hpp	/^  ViewTracker(const ViewTracker& vt) noexcept$/;"	f	struct:Kokkos::Impl::ViewTracker	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewTracker	impl/Kokkos_ViewTracker.hpp	/^  explicit ViewTracker(const ParentView& vt) noexcept : m_tracker() {$/;"	f	struct:Kokkos::Impl::ViewTracker	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewTracker	impl/Kokkos_ViewTracker.hpp	/^  explicit ViewTracker(const track_type& tt) noexcept$/;"	f	struct:Kokkos::Impl::ViewTracker	typeref:typename:KOKKOS_INLINE_FUNCTION
ViewTracker	impl/Kokkos_ViewTracker.hpp	/^struct ViewTracker {$/;"	s	namespace:Kokkos::Impl
ViewTraits	Kokkos_View.hpp	/^struct ViewTraits {$/;"	s	namespace:Kokkos
ViewTraits	Kokkos_View.hpp	/^struct ViewTraits<$/;"	s	namespace:Kokkos
ViewTraits	Kokkos_View.hpp	/^struct ViewTraits<std::enable_if_t<Kokkos::is_array_layout<ArrayLayout>::value>,$/;"	s	namespace:Kokkos
ViewTraits	Kokkos_View.hpp	/^struct ViewTraits<std::enable_if_t<Kokkos::is_space<Space>::value>, Space,$/;"	s	namespace:Kokkos
ViewTraits	Kokkos_View.hpp	/^struct ViewTraits<void, void, Prop...> {$/;"	s	namespace:Kokkos
ViewTraits	Kokkos_View.hpp	/^struct ViewTraits<void> {$/;"	s	namespace:Kokkos
ViewType	Kokkos_CopyViews.hpp	/^    using ViewType = View<DT, DP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:View<DT,DP...>
ViewType	Kokkos_CopyViews.hpp	/^  using ViewType        = View<DT, DP...>;$/;"	t	function:Kokkos::Impl::contiguous_fill_or_memset	typeref:typename:View<DT,DP...>
ViewType	Kokkos_CopyViews.hpp	/^  using ViewType        = View<DT, DP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:View<DT,DP...>
ViewType	Kokkos_CopyViews.hpp	/^  using ViewType     = View<DT, DP...>;$/;"	t	function:Kokkos::Impl::contiguous_fill	typeref:typename:View<DT,DP...>
ViewTypeFlat	Kokkos_CopyViews.hpp	/^  using ViewTypeFlat = Kokkos::View<$/;"	t	function:Kokkos::Impl::contiguous_fill
ViewTypeUniform	Kokkos_CopyViews.hpp	/^      using ViewTypeUniform = std::conditional_t<$/;"	t	function:Kokkos::deep_copy
ViewTypeUniform	Kokkos_CopyViews.hpp	/^    using ViewTypeUniform =$/;"	t	function:Kokkos::deep_copy	typeref:typename:std::conditional_t<ViewType::Rank==0,typename ViewType::uniform_runtime_type,typename ViewType::uniform_runtime_nomemspace_type>
ViewTypeUniform	Kokkos_CopyViews.hpp	/^  using ViewTypeUniform =$/;"	t	function:Kokkos::deep_copy	typeref:typename:std::conditional_t<ViewType::Rank==0,typename ViewType::uniform_runtime_type,typename ViewType::uniform_runtime_nomemspace_type>
ViewUniformLayout	impl/Kokkos_ViewUniformType.hpp	/^struct ViewUniformLayout {$/;"	s	namespace:Kokkos::Impl
ViewUniformLayout	impl/Kokkos_ViewUniformType.hpp	/^struct ViewUniformLayout<Kokkos::LayoutRight, 1> {$/;"	s	namespace:Kokkos::Impl
ViewUniformLayout	impl/Kokkos_ViewUniformType.hpp	/^struct ViewUniformLayout<LayoutType, 0> {$/;"	s	namespace:Kokkos::Impl
ViewUniformType	impl/Kokkos_ViewUniformType.hpp	/^struct ViewUniformType {$/;"	s	namespace:Kokkos::Impl
WIN32_LEAN_AND_MEAN	impl/Kokkos_CPUDiscovery.cpp	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WTag	impl/Kokkos_FunctorAnalysis.hpp	/^  using WTag = typename has_work_tag<>::wtag;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:has_work_tag<>::wtag
WaitMode	impl/Kokkos_Spinwait.hpp	/^enum class WaitMode : int {$/;"	g	namespace:Kokkos::Impl	typeref:typename:int
WarpIndexMask	Cuda/Kokkos_Cuda_Instance.hpp	/^  static constexpr CudaSpace::size_type WarpIndexMask =$/;"	m	struct:Kokkos::Impl::CudaTraits	typeref:typename:CudaSpace::size_type
WarpIndexMask	HIP/Kokkos_HIP_Instance.hpp	/^  static int constexpr WarpIndexMask  = 0x003f; \/* hexadecimal for 63 *\/$/;"	m	struct:Kokkos::Experimental::Impl::HIPTraits	typeref:typename:int 
WarpIndexShift	Cuda/Kokkos_Cuda_Instance.hpp	/^  static constexpr CudaSpace::size_type WarpIndexShift =$/;"	m	struct:Kokkos::Impl::CudaTraits	typeref:typename:CudaSpace::size_type
WarpIndexShift	HIP/Kokkos_HIP_Instance.hpp	/^  static int constexpr WarpIndexShift = 6;      \/* WarpSize == 1 << WarpShift*\/$/;"	m	struct:Kokkos::Experimental::Impl::HIPTraits	typeref:typename:int 
WarpSize	Cuda/Kokkos_Cuda_Instance.hpp	/^  static constexpr CudaSpace::size_type WarpSize = 32 \/* 0x0020 *\/;$/;"	m	struct:Kokkos::Impl::CudaTraits	typeref:typename:CudaSpace::size_type
WarpSize	Cuda/Kokkos_Cuda_Task.hpp	/^  enum : int { WarpSize = Kokkos::Impl::CudaTraits::WarpSize };$/;"	e	enum:Kokkos::Impl::TaskExec::__anonb05892e70203
WarpSize	HIP/Kokkos_HIP_Instance.hpp	/^  static int constexpr WarpSize       = 64;$/;"	m	struct:Kokkos::Experimental::Impl::HIPTraits	typeref:typename:int 
WithoutInitializing	Kokkos_View.hpp	/^constexpr Kokkos::Impl::WithoutInitializing_t WithoutInitializing =$/;"	v	namespace:Kokkos::__anon8559ec870810	typeref:typename:Kokkos::Impl::WithoutInitializing_t
WithoutInitializing_t	Kokkos_CopyViews.hpp	/^                         Impl::WithoutInitializing_t>,$/;"	t	function:Kokkos::create_mirror_view_and_copy
WithoutInitializing_t	impl/Kokkos_ViewCtor.hpp	/^struct WithoutInitializing_t {};$/;"	s	namespace:Kokkos::Impl
WordSize	Cuda/Kokkos_Cuda_Instance.cpp	/^  enum { WordSize = sizeof(size_type) };$/;"	e	enum:Kokkos::Impl::CudaInternal::initialize::__anon02417da40703	file:
WorkGraphPolicy	Kokkos_WorkGraphPolicy.hpp	/^  WorkGraphPolicy(const graph_type& arg_graph)$/;"	f	class:Kokkos::WorkGraphPolicy
WorkGraphPolicy	Kokkos_WorkGraphPolicy.hpp	/^class WorkGraphPolicy : public Kokkos::Impl::PolicyTraits<Properties...> {$/;"	c	namespace:Kokkos
WorkItemProperty	Kokkos_Concepts.hpp	/^struct WorkItemProperty {$/;"	s	namespace:Kokkos::Experimental
WorkItemPropertyTrait	traits/Kokkos_WorkItemPropertyTrait.hpp	/^struct WorkItemPropertyTrait : TraitSpecificationBase<WorkItemPropertyTrait> {$/;"	s	namespace:Kokkos::Impl
WorkRange	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using WorkRange    = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::WorkRange
WorkRange	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using WorkRange    = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::WorkRange
WorkRange	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using WorkRange    = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::WorkRange
WorkRange	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using WorkRange    = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::WorkRange
WorkRange	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using WorkRange    = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Policy::WorkRange
WorkRange	Kokkos_ExecPolicy.hpp	/^    WorkRange(const RangePolicy& range, const int part_rank,$/;"	f	struct:Kokkos::RangePolicy::WorkRange	typeref:typename:KOKKOS_INLINE_FUNCTION
WorkRange	Kokkos_ExecPolicy.hpp	/^  struct WorkRange {$/;"	s	class:Kokkos::RangePolicy
WorkRange	Kokkos_HPX.hpp	/^  using WorkRange     = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::WorkRange
WorkRange	Kokkos_HPX.hpp	/^  using WorkRange     = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::WorkRange
WorkRange	Kokkos_HPX.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::WorkRange
WorkRange	Kokkos_HPX.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::WorkRange
WorkRange	Kokkos_HPX.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::WorkRange
WorkRange	Kokkos_HPX.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::WorkRange
WorkRange	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::WorkRange
WorkRange	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::WorkRange
WorkRange	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::WorkRange
WorkRange	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::WorkRange
WorkRange	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::WorkRange
WorkRange	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::WorkRange
WorkRange	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::WorkRange
WorkRange	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using WorkRange    = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Policy::WorkRange
WorkRange	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::WorkRange
WorkRange	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::WorkRange
WorkRange	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::WorkRange
WorkRange	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::WorkRange
WorkRange	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::WorkRange
WorkRange	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkRange = typename Policy::WorkRange;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::WorkRange
WorkTag	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::work_tag
WorkTag	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::work_tag
WorkTag	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Policy::work_tag
WorkTag	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	Kokkos_HPX.hpp	/^  using WorkTag       = typename MDRangePolicy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:MDRangePolicy::work_tag
WorkTag	Kokkos_HPX.hpp	/^  using WorkTag       = typename MDRangePolicy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:MDRangePolicy::work_tag
WorkTag	Kokkos_HPX.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	Kokkos_HPX.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	Kokkos_HPX.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::work_tag
WorkTag	Kokkos_HPX.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::work_tag
WorkTag	Kokkos_HPX.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	Kokkos_HPX.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTag       = typename MDRangePolicy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:MDRangePolicy::work_tag
WorkTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTag   = typename MDRangePolicy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:MDRangePolicy::work_tag
WorkTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::work_tag
WorkTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::work_tag
WorkTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTag  = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTag  = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::work_tag
WorkTag	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using WorkTag          = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	struct:Kokkos::Impl::FunctorWrapperRangePolicyParallelFor	typeref:typename:Policy::work_tag
WorkTag	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using WorkTag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Policy::work_tag
WorkTag	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using WorkTag       = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using WorkTag = typename MDRangePolicy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:MDRangePolicy::work_tag
WorkTag	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::work_tag
WorkTag	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::work_tag
WorkTag	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using WorkTag   = typename MDRangePolicy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:MDRangePolicy::work_tag
WorkTag	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using WorkTag = typename MDRangePolicy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:MDRangePolicy::work_tag
WorkTag	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTag	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::work_tag
WorkTag	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkTag   = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::work_tag
WorkTag	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
WorkTag	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using WorkTag = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
WorkTagFwd	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>::type
WorkTagFwd	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>::type
WorkTagFwd	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>::type
WorkTagFwd	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>::type
WorkTagFwd	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>::type
WorkTagFwd	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::conditional_t<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>
WorkTagFwd	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::conditional_t<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>
WorkTagFwd	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::conditional_t<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>
WorkTagFwd	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::conditional_t<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>
WorkTagFwd	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::conditional_t<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>
WorkTagFwd	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>::type
WorkTagFwd	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>::type
WorkTagFwd	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using WorkTagFwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,WorkTag,void>::type
WorkTagTrait	traits/Kokkos_WorkTagTrait.hpp	/^struct WorkTagTrait : TraitSpecificationBase<WorkTagTrait> {$/;"	s	namespace:Kokkos::Impl
XorOper	impl/Kokkos_Atomic_Generic.hpp	/^struct XorOper {$/;"	s	namespace:Kokkos::Impl
Yes	impl/Kokkos_Profiling.cpp	/^enum class MayRequireGlobalFencing : bool { No, Yes };$/;"	e	enum:Kokkos::Tools::Experimental::MayRequireGlobalFencing	file:
ZeroMemset	Kokkos_CopyViews.hpp	/^  ZeroMemset(const ExecutionSpace& exec_space, const View<DT, DP...>& dst,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	Kokkos_CopyViews.hpp	/^  ZeroMemset(const View<DT, DP...>& dst,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	Kokkos_CopyViews.hpp	/^struct ZeroMemset {$/;"	s	namespace:Kokkos::Impl
ZeroMemset	Kokkos_Cuda.hpp	/^  ZeroMemset(const Kokkos::Cuda& exec_space_instance,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	Kokkos_Cuda.hpp	/^  ZeroMemset(const View<DT, DP...>& dst,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	Kokkos_Cuda.hpp	/^struct ZeroMemset<Kokkos::Cuda, DT, DP...> {$/;"	s	namespace:Kokkos::Impl
ZeroMemset	Kokkos_HIP_Space.hpp	/^  ZeroMemset(const Kokkos::Experimental::HIP& exec_space,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	Kokkos_HIP_Space.hpp	/^  ZeroMemset(const View<DT, DP...>& dst,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	Kokkos_HIP_Space.hpp	/^struct ZeroMemset<Kokkos::Experimental::HIP, DT, DP...> {$/;"	s	namespace:Kokkos::Impl
ZeroMemset	Kokkos_HostSpace.hpp	/^  ZeroMemset(const View<DT, DP...>& dst,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	Kokkos_HostSpace.hpp	/^  ZeroMemset(const typename HostSpace::execution_space& exec,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	Kokkos_HostSpace.hpp	/^struct ZeroMemset<typename HostSpace::execution_space, DT, DP...> {$/;"	s	namespace:Kokkos::Impl
ZeroMemset	Kokkos_Serial.hpp	/^  ZeroMemset(const Serial&, const View<DT, DP...>& dst,$/;"	f	struct:Kokkos::Impl::DP
ZeroMemset	SYCL/Kokkos_SYCL_DeepCopy.hpp	/^  ZeroMemset(const Kokkos::Experimental::SYCL& exec_space,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	SYCL/Kokkos_SYCL_DeepCopy.hpp	/^  ZeroMemset(const View<DT, DP...>& dst,$/;"	f	struct:Kokkos::Impl::ZeroMemset
ZeroMemset	SYCL/Kokkos_SYCL_DeepCopy.hpp	/^struct ZeroMemset<Kokkos::Experimental::SYCL, DT, DP...> {$/;"	s	namespace:Kokkos::Impl
_SIMT_DETAILS_CONFIG	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define _SIMT_DETAILS_CONFIG$/;"	d
__ATOMIC_ACQUIRE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __ATOMIC_ACQUIRE /;"	d
__ATOMIC_ACQ_REL	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __ATOMIC_ACQ_REL /;"	d
__ATOMIC_CONSUME	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __ATOMIC_CONSUME /;"	d
__ATOMIC_RELAXED	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __ATOMIC_RELAXED /;"	d
__ATOMIC_RELEASE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __ATOMIC_RELEASE /;"	d
__ATOMIC_SEQ_CST	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __ATOMIC_SEQ_CST /;"	d
__CUDACC__	setup/Kokkos_Setup_Cuda.hpp	/^#define __CUDACC__$/;"	d
__GCC_ATOMIC_BOOL_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_BOOL_LOCK_FREE /;"	d
__GCC_ATOMIC_CHAR16_T_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE /;"	d
__GCC_ATOMIC_CHAR32_T_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE /;"	d
__GCC_ATOMIC_CHAR_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_CHAR_LOCK_FREE /;"	d
__GCC_ATOMIC_INT_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_INT_LOCK_FREE /;"	d
__GCC_ATOMIC_LLONG_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_LLONG_LOCK_FREE /;"	d
__GCC_ATOMIC_LONG_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_LONG_LOCK_FREE /;"	d
__GCC_ATOMIC_POINTER_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_POINTER_LOCK_FREE /;"	d
__GCC_ATOMIC_SHORT_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_SHORT_LOCK_FREE /;"	d
__GCC_ATOMIC_WCHAR_T_LOCK_FREE	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE /;"	d
__anon02417da40110	Cuda/Kokkos_Cuda_Instance.cpp	/^namespace {$/;"	n	namespace:Kokkos::Impl	file:
__anon02417da40202	Cuda/Kokkos_Cuda_Instance.cpp	/^      []() {  \/\/ TODO: correct device ID$/;"	f	function:Kokkos::Impl::cuda_device_synchronize	file:
__anon02417da40302	Cuda/Kokkos_Cuda_Instance.cpp	/^      [&]() {  \/\/ TODO: correct device ID$/;"	f	function:Kokkos::Impl::cuda_stream_synchronize	file:
__anon02417da40402	Cuda/Kokkos_Cuda_Instance.cpp	/^      name, reason, [&]() {  \/\/ TODO: correct device ID$/;"	f	function:Kokkos::Impl::cuda_stream_synchronize	file:
__anon02417da40510	Cuda/Kokkos_Cuda_Instance.cpp	/^namespace {$/;"	n	namespace:Kokkos::Impl	file:
__anon02417da40603	Cuda/Kokkos_Cuda_Instance.cpp	/^  enum { MAXIMUM_DEVICE_COUNT = 64 };$/;"	g	class:Kokkos::Impl::__anon02417da40510::CudaInternalDevices	file:
__anon02417da40703	Cuda/Kokkos_Cuda_Instance.cpp	/^  enum { WordSize = sizeof(size_type) };$/;"	g	function:Kokkos::Impl::CudaInternal::initialize	file:
__anon02417da40803	Cuda/Kokkos_Cuda_Instance.cpp	/^enum { sizeScratchGrain = sizeof(ScratchGrain) };$/;"	g	namespace:Kokkos::Impl	file:
__anon02417da40903	Cuda/Kokkos_Cuda_Instance.cpp	/^  enum : int { max_resident_blocks_per_multiprocessor = 16 };$/;"	g	function:Kokkos::Impl::cuda_internal_maximum_concurrent_block_count	typeref:typename:int	file:
__anon02417da40a02	Cuda/Kokkos_Cuda_Instance.cpp	/^                       [](Impl::CudaInternal *) {}) {$/;"	f	namespace:Kokkos	file:
__anon02417da40b02	Cuda/Kokkos_Cuda_Instance.cpp	/^    : m_space_instance(new Impl::CudaInternal, [](Impl::CudaInternal *ptr) {$/;"	f	namespace:Kokkos	file:
__anon04015cc10103	Kokkos_AnonymousSpace.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon04015cc10203	Kokkos_AnonymousSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon04015cc10303	Kokkos_AnonymousSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon04015cc10403	Kokkos_AnonymousSpace.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon04015cc10503	Kokkos_AnonymousSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon04015cc10603	Kokkos_AnonymousSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon04015cc10703	Kokkos_AnonymousSpace.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon04015cc10803	Kokkos_AnonymousSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon04015cc10903	Kokkos_AnonymousSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0a9b96110103	impl/Kokkos_TaskQueueMultiple.hpp	/^  enum : long { max_num_queues = 6 };  \/\/ specialization::max_league_size };$/;"	g	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:long
__anon0e1462230110	HIP/Kokkos_HIP_Space.cpp	/^namespace {$/;"	n	file:
__anon0e1462230210	HIP/Kokkos_HIP_Space.cpp	/^namespace {$/;"	n	namespace:Kokkos::Impl	file:
__anon0e1462230302	HIP/Kokkos_HIP_Space.cpp	/^      [&]() { KOKKOS_IMPL_HIP_SAFE_CALL(hipStreamSynchronize(s)); });$/;"	f	function:Kokkos::Impl::DeepCopyAsyncHIP	file:
__anon0e1462230402	HIP/Kokkos_HIP_Space.cpp	/^                       [](Impl::HIPInternal*) {}) {$/;"	f	namespace:Kokkos::Experimental	file:
__anon0e1462230502	HIP/Kokkos_HIP_Space.cpp	/^    : m_space_instance(new Impl::HIPInternal, [](Impl::HIPInternal* ptr) {$/;"	f	namespace:Kokkos::Experimental	file:
__anon0e1462230602	HIP/Kokkos_HIP_Space.cpp	/^      [&]() { KOKKOS_IMPL_HIP_SAFE_CALL(hipDeviceSynchronize()); });$/;"	f	function:Kokkos::Experimental::HIP::impl_static_fence	file:
__anon0facdfb90103	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0facdfb90203	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0facdfb90303	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0facdfb90403	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0facdfb90503	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0facdfb90603	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0facdfb90703	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0facdfb90803	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon0facdfb90903	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon1365d82c0103	impl/Kokkos_Volatile_Load.hpp	/^  enum {$/;"	g	function:Kokkos::volatile_load
__anon1365d82c020a	impl/Kokkos_Volatile_Load.hpp	/^  union {$/;"	u	function:Kokkos::volatile_load
__anon1365d82c030a	impl/Kokkos_Volatile_Load.hpp	/^  union {$/;"	u	function:Kokkos::volatile_load
__anon1365d82c0403	impl/Kokkos_Volatile_Load.hpp	/^  enum {$/;"	g	function:Kokkos::volatile_store
__anon1365d82c050a	impl/Kokkos_Volatile_Load.hpp	/^  union {$/;"	u	function:Kokkos::volatile_store
__anon1365d82c060a	impl/Kokkos_Volatile_Load.hpp	/^  union {$/;"	u	function:Kokkos::volatile_store
__anon1365d82c0703	impl/Kokkos_Volatile_Load.hpp	/^  enum {$/;"	g	function:Kokkos::volatile_store
__anon1365d82c080a	impl/Kokkos_Volatile_Load.hpp	/^  union {$/;"	u	function:Kokkos::volatile_store
__anon1365d82c090a	impl/Kokkos_Volatile_Load.hpp	/^  union {$/;"	u	function:Kokkos::volatile_store
__anon170bcf000103	Kokkos_ScratchSpace.hpp	/^  enum { ALIGN = 8 };$/;"	g	class:Kokkos::ScratchMemorySpace
__anon170bcf000203	Kokkos_ScratchSpace.hpp	/^  enum { MASK = ALIGN - 1 };  \/\/ Alignment used by View::shmem_size$/;"	g	class:Kokkos::ScratchMemorySpace
__anon1766c6640103	impl/Kokkos_Traits.hpp	/^  enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::has_type	typeref:typename:bool
__anon1766c6640203	impl/Kokkos_Traits.hpp	/^  enum { self_value = std::is_same<T, S>::value };$/;"	g	struct:Kokkos::Impl::has_type
__anon1766c6640303	impl/Kokkos_Traits.hpp	/^  enum : bool { value = self_value || next::value };$/;"	g	struct:Kokkos::Impl::has_type	typeref:typename:bool
__anon1766c6640403	impl/Kokkos_Traits.hpp	/^  enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::has_condition	typeref:typename:bool
__anon1766c6640503	impl/Kokkos_Traits.hpp	/^  enum { self_value = Condition<S>::value };$/;"	g	struct:Kokkos::Impl::has_condition
__anon1766c6640603	impl/Kokkos_Traits.hpp	/^  enum : bool { value = self_value || next::value };$/;"	g	struct:Kokkos::Impl::has_condition	typeref:typename:bool
__anon1766c6640703	impl/Kokkos_Traits.hpp	/^  enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::are_integral	typeref:typename:bool
__anon1766c6640803	impl/Kokkos_Traits.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::are_integral
__anon1766c6640903	impl/Kokkos_Traits.hpp	/^  enum : bool { value = Cond };$/;"	g	struct:Kokkos::Impl::if_c	typeref:typename:bool
__anon1766c6640a03	impl/Kokkos_Traits.hpp	/^  enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::if_c	typeref:typename:bool
__anon1766c6640b03	impl/Kokkos_Traits.hpp	/^  enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::if_c	typeref:typename:bool
__anon1766c6640c03	impl/Kokkos_Traits.hpp	/^  enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::if_c	typeref:typename:bool
__anon1766c6640d03	impl/Kokkos_Traits.hpp	/^  enum { value = T(v) };$/;"	g	struct:Kokkos::Impl::integral_nonzero_constant
__anon18c94a8c0110	HIP/Kokkos_HIP_Instance.cpp	/^namespace {$/;"	n	namespace:Kokkos::Experimental	file:
__anon18c94a8c0203	HIP/Kokkos_HIP_Instance.cpp	/^  enum { MAXIMUM_DEVICE_COUNT = 64 };$/;"	g	class:Kokkos::Experimental::__anon18c94a8c0110::HIPInternalDevices	file:
__anon18c94a8c0302	HIP/Kokkos_HIP_Instance.cpp	/^      [&]() {$/;"	f	function:Kokkos::Experimental::Impl::HIPInternal::fence	file:
__anon18c94a8c0403	HIP/Kokkos_HIP_Instance.cpp	/^enum { sizeScratchGrain = sizeof(ScratchGrain) };$/;"	g	namespace:Kokkos::Experimental::Impl	file:
__anon18c94a8c0502	HIP/Kokkos_HIP_Instance.cpp	/^      [&]() { KOKKOS_IMPL_HIP_SAFE_CALL(hipDeviceSynchronize()); });$/;"	f	function:Kokkos::Impl::hip_device_synchronize	file:
__anon19497b0a010a	impl/Kokkos_FixedBufferMemoryPool.hpp	/^    union {$/;"	u	struct:Kokkos::Impl::FixedBlockSizeMemoryPool::Block
__anon19497b0a0203	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  enum : size_type { IndexInUse = ~size_type(0) };$/;"	g	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:size_type
__anon195e99400102	Kokkos_AcquireUniqueTokenImpl.hpp	/^                 [&]() { my_team_acquired_val() = my_token.acquire(); });$/;"	f	function:Kokkos::Experimental::AcquireTeamUniqueToken::AcquireTeamUniqueToken	file:
__anon195e99400202	Kokkos_AcquireUniqueTokenImpl.hpp	/^                 [&]() { my_token.release(my_acquired_val); });$/;"	f	function:Kokkos::Experimental::AcquireTeamUniqueToken::~AcquireTeamUniqueToken	file:
__anon1e19c0180102	HIP/Kokkos_HIP_KernelLaunch.hpp	/^    static hipFuncAttributes attr = [=]() {$/;"	f	function:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFuncData::get_hip_func_attributes	file:
__anon265123eb0103	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { MAX_ACTIVE_THREADS = 2080 * 80 };$/;"	g	class:Kokkos::Impl::OpenMPTargetExec
__anon265123eb0203	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { MAX_ACTIVE_TEAMS = MAX_ACTIVE_THREADS \/ 32 };$/;"	g	class:Kokkos::Impl::OpenMPTargetExec
__anon265123eb0303	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	g	class:Kokkos::Impl::OpenMPTargetExecTeamMember
__anon265123eb0403	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  enum { Active = 0, Rendezvous = 1 };$/;"	g	class:Kokkos::Impl::OpenMPTargetExecTeamMember
__anon2679b92e0103	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2679b92e0203	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2679b92e0303	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2679b92e0403	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2679b92e0503	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2679b92e0603	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2adfd90a0103	Kokkos_Layout.hpp	/^enum { ARRAY_LAYOUT_MAX_RANK = 8 };$/;"	g	namespace:Kokkos
__anon2adfd90a0203	Kokkos_Layout.hpp	/^  enum : bool { is_extent_constructible = true };$/;"	g	struct:Kokkos::LayoutLeft	typeref:typename:bool
__anon2adfd90a0303	Kokkos_Layout.hpp	/^  enum : bool { is_extent_constructible = true };$/;"	g	struct:Kokkos::LayoutRight	typeref:typename:bool
__anon2adfd90a0403	Kokkos_Layout.hpp	/^  enum : bool { is_extent_constructible = false };$/;"	g	struct:Kokkos::LayoutStride	typeref:typename:bool
__anon2adfd90a0503	Kokkos_Layout.hpp	/^  enum { N0 = ArgN0 };$/;"	g	struct:Kokkos::Experimental::LayoutTiled
__anon2adfd90a0603	Kokkos_Layout.hpp	/^  enum { N1 = ArgN1 };$/;"	g	struct:Kokkos::Experimental::LayoutTiled
__anon2adfd90a0703	Kokkos_Layout.hpp	/^  enum { N2 = ArgN2 };$/;"	g	struct:Kokkos::Experimental::LayoutTiled
__anon2adfd90a0803	Kokkos_Layout.hpp	/^  enum { N3 = ArgN3 };$/;"	g	struct:Kokkos::Experimental::LayoutTiled
__anon2adfd90a0903	Kokkos_Layout.hpp	/^  enum { N4 = ArgN4 };$/;"	g	struct:Kokkos::Experimental::LayoutTiled
__anon2adfd90a0a03	Kokkos_Layout.hpp	/^  enum { N5 = ArgN5 };$/;"	g	struct:Kokkos::Experimental::LayoutTiled
__anon2adfd90a0b03	Kokkos_Layout.hpp	/^  enum { N6 = ArgN6 };$/;"	g	struct:Kokkos::Experimental::LayoutTiled
__anon2adfd90a0c03	Kokkos_Layout.hpp	/^  enum { N7 = ArgN7 };$/;"	g	struct:Kokkos::Experimental::LayoutTiled
__anon2adfd90a0d03	Kokkos_Layout.hpp	/^  enum : bool { is_extent_constructible = true };$/;"	g	struct:Kokkos::Experimental::LayoutTiled	typeref:typename:bool
__anon2b9f49c80102	OpenMP/Kokkos_OpenMP_Instance.cpp	/^      name, Kokkos::Tools::Experimental::Impl::DirectFenceIDHandle{1}, []() {});$/;"	f	function:Kokkos::OpenMP::fence	file:
__anon2b9f5f0d0102	OpenMP/Kokkos_OpenMP_Instance.hpp	/^      []() {});$/;"	f	function:Kokkos::OpenMP::impl_static_fence	file:
__anon2d16c4960103	Kokkos_HostSpace.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::HostMirror
__anon2d16c4960203	Kokkos_HostSpace.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::HostMirror
__anon2e1eac7c0102	Kokkos_HPX.hpp	/^        [&]() {$/;"	f	function:Kokkos::Experimental::HPX::fence	file:
__anon2e1eac7c0202	Kokkos_HPX.hpp	/^        [&]() {$/;"	f	function:Kokkos::Experimental::HPX::impl_static_fence	file:
__anon2e1eac7c0302	Kokkos_HPX.hpp	/^              l, [&]() { return m_active_parallel_region_count == 0; });$/;"	f	function:Kokkos::Experimental::HPX::impl_static_fence::__anon2e1eac7c0202	file:
__anon2e1eac7c0402	Kokkos_HPX.hpp	/^                   [closure_copy](hpx::shared_future<void> &&) {$/;"	f	function:Kokkos::Impl::dispatch_execute_task	file:
__anon2e1eac7c0503	Kokkos_HPX.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2e1eac7c0603	Kokkos_HPX.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2e1eac7c0703	Kokkos_HPX.hpp	/^  enum : bool { deepcopy = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon2e1eac7c0802	Kokkos_HPX.hpp	/^             m_policy.begin(), m_policy.end(), [this](const Member i) {$/;"	f	function:Kokkos::Impl::ParallelFor::execute_task	file:
__anon2e1eac7c0902	Kokkos_HPX.hpp	/^        [this, chunk_size](const Member i_begin) {$/;"	f	function:Kokkos::Impl::ParallelFor::execute_task	file:
__anon2e1eac7c0a02	Kokkos_HPX.hpp	/^             m_policy.begin(), m_policy.end(), [this](const Member i) {$/;"	f	function:Kokkos::Impl::ParallelFor::execute_task	file:
__anon2e1eac7c0b02	Kokkos_HPX.hpp	/^                     [this, chunk_size](const Member i_begin) {$/;"	f	function:Kokkos::Impl::ParallelFor::execute_task	file:
__anon2e1eac7c0c02	Kokkos_HPX.hpp	/^                           value_type_wrapper &b) -> value_type_wrapper & {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	typeref:typename:value_type_wrapper &	file:
__anon2e1eac7c0d02	Kokkos_HPX.hpp	/^             [this](Member i, value_type_wrapper &update) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c0e02	Kokkos_HPX.hpp	/^        [&buffer, final_reducer ](const int t) noexcept {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c0f02	Kokkos_HPX.hpp	/^        [this, &buffer, chunk_size](const Member i_begin) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c1002	Kokkos_HPX.hpp	/^        [&buffer, final_reducer](std::size_t t) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c1102	Kokkos_HPX.hpp	/^             m_policy.begin(), m_policy.end(), [this, &buffer](const Member i) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c1202	Kokkos_HPX.hpp	/^        num_worker_threads, [&buffer, final_reducer](const std::size_t t) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c1302	Kokkos_HPX.hpp	/^        [this, &buffer, chunk_size](const Member i_begin) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c1402	Kokkos_HPX.hpp	/^         final_reducer](int t) {$/;"	f	function:Kokkos::Impl::ParallelScan::execute_task	file:
__anon2e1eac7c1502	Kokkos_HPX.hpp	/^         final_reducer](int t) {$/;"	f	function:Kokkos::Impl::ParallelScanWithTotal::execute_task	file:
__anon2e1eac7c1602	Kokkos_HPX.hpp	/^        m_policy.league_size(), [this, &buffer](const int league_rank) {$/;"	f	function:Kokkos::Impl::ParallelFor::execute_task	file:
__anon2e1eac7c1702	Kokkos_HPX.hpp	/^        [this, &buffer](const int league_rank_begin) {$/;"	f	function:Kokkos::Impl::ParallelFor::execute_task	file:
__anon2e1eac7c1802	Kokkos_HPX.hpp	/^        [&buffer, final_reducer](const std::size_t t) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c1902	Kokkos_HPX.hpp	/^             [this, &buffer, value_size](const int league_rank) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c1a02	Kokkos_HPX.hpp	/^        [&buffer, final_reducer](std::size_t const t) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon2e1eac7c1b02	Kokkos_HPX.hpp	/^        [this, &buffer, value_size](int const league_rank_begin) {$/;"	f	function:Kokkos::Impl::ParallelReduce::execute_task	file:
__anon337ce9bb0103	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { bits_per_int_lg2 = 5 };$/;"	g	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:uint32_t
__anon337ce9bb0203	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { bits_per_int_mask = (1 << bits_per_int_lg2) - 1 };$/;"	g	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:uint32_t
__anon337ce9bb0303	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { max_bit_count_lg2 = 25 };$/;"	g	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:uint32_t
__anon337ce9bb0403	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { max_bit_count = 1u << max_bit_count_lg2 };$/;"	g	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:uint32_t
__anon337ce9bb0503	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { state_shift = 26 };$/;"	g	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:uint32_t
__anon337ce9bb0603	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { state_used_mask = (1 << state_shift) - 1 };$/;"	g	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:uint32_t
__anon337ce9bb0703	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { state_header_mask = uint32_t(0x001f) << state_shift };$/;"	g	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:uint32_t
__anon383dd5eb0110	Cuda/Kokkos_Cuda_Locks.cpp	/^namespace {$/;"	n	namespace:Kokkos	file:
__anon383deb300110	Cuda/Kokkos_Cuda_Locks.hpp	/^namespace {$/;"	n	namespace:Kokkos::Impl
__anon3c3e765f0103	impl/Kokkos_TaskResult.hpp	/^  enum : int32_t { size = sizeof(ResultType) };$/;"	g	struct:Kokkos::Impl::TaskResult	typeref:typename:int32_t
__anon3c3e765f0203	impl/Kokkos_TaskResult.hpp	/^  enum : int32_t { size = 0 };$/;"	g	struct:Kokkos::Impl::TaskResult	typeref:typename:int32_t
__anon3ff296770103	Kokkos_Threads.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon3ff296770203	Kokkos_Threads.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon3ff296770303	Kokkos_Threads.hpp	/^  enum : bool { deepcopy = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon421557341303	impl/Kokkos_ViewMapping.hpp	/^  enum : size_t { value = KOKKOS_INVALID_INDEX };$/;"	g	struct:Kokkos::Impl::variadic_size_t	typeref:typename:size_t
__anon421557341403	impl/Kokkos_ViewMapping.hpp	/^  enum : size_t { value = Val };$/;"	g	struct:Kokkos::Impl::variadic_size_t	typeref:typename:size_t
__anon421557341503	impl/Kokkos_ViewMapping.hpp	/^  enum : size_t { value = variadic_size_t<I - 1, Args...>::value };$/;"	g	struct:Kokkos::Impl::variadic_size_t	typeref:typename:size_t
__anon421557341603	impl/Kokkos_ViewMapping.hpp	/^  enum : unsigned { value = 0 };$/;"	g	struct:Kokkos::Impl::rank_dynamic	typeref:typename:unsigned
__anon421557341703	impl/Kokkos_ViewMapping.hpp	/^  enum : unsigned { value = (Val == 0 ? 1 : 0) + rank_dynamic<Args...>::value };$/;"	g	struct:Kokkos::Impl::rank_dynamic	typeref:typename:unsigned
__anon421557341803	impl/Kokkos_ViewMapping.hpp	/^  enum : unsigned { rank = sizeof...(Vals) };$/;"	g	struct:Kokkos::Impl::ViewDimension	typeref:typename:unsigned
__anon421557341903	impl/Kokkos_ViewMapping.hpp	/^  enum : unsigned { rank_dynamic = Impl::rank_dynamic<Vals...>::value };$/;"	g	struct:Kokkos::Impl::ViewDimension	typeref:typename:unsigned
__anon421557341a03	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = std::is_same<T, Kokkos::Impl::ALL_t>::value ? 1 : 0 };$/;"	g	struct:Kokkos::Impl::is_integral_extent_type	typeref:typename:bool
__anon421557341b03	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = is_integral_extent_type<type>::value };$/;"	g	struct:Kokkos::Impl::is_integral_extent	typeref:typename:bool
__anon421557341c03	impl/Kokkos_ViewMapping.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::SubviewLegalArgsCompileTime
__anon421557341d03	impl/Kokkos_ViewMapping.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::SubviewLegalArgsCompileTime
__anon421557341e03	impl/Kokkos_ViewMapping.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::SubviewLegalArgsCompileTime
__anon421557341f03	impl/Kokkos_ViewMapping.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::SubviewLegalArgsCompileTime
__anon421557342003	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::SubviewLegalArgsCompileTime	typeref:typename:bool
__anon421557342103	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::SubviewLegalArgsCompileTime	typeref:typename:bool
__anon421557342203	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::SubviewLegalArgsCompileTime	typeref:typename:bool
__anon421557342303	impl/Kokkos_ViewMapping.hpp	/^  enum { InternalRangeRank = RangeRank ? RangeRank : +1u };$/;"	g	struct:Kokkos::Impl::SubviewExtents
__anon421557342402	impl/Kokkos_ViewMapping.hpp	/^                         [](Args...) {}(args...);))$/;"	f	function:Kokkos::Impl::SubviewExtents::error	file:
__anon463ea3660102	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^    auto shmem_functor   = [&f](unsigned n) {$/;"	f	function:Kokkos::Impl::ParallelReduce::local_block_size	file:
__anon4863ae900103	Kokkos_Parallel_Reduce.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::ReducerHasTestReferenceFunction
__anon4cadf70f0110	impl/Kokkos_SharedAlloc.hpp	/^namespace {$/;"	n	namespace:Kokkos::Impl
__anon4cadf70f0203	impl/Kokkos_SharedAlloc.hpp	/^  enum : uintptr_t { DO_NOT_DEREF_FLAG = 0x01ul };$/;"	g	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:uintptr_t
__anon54dea1070103	Kokkos_Future.hpp	/^  enum { Arg1_is_space = Kokkos::is_space<Arg1>::value };$/;"	g	class:Kokkos::Impl::ResolveFutureArgOrder
__anon54dea1070203	Kokkos_Future.hpp	/^  enum { Arg2_is_space = Kokkos::is_space<Arg2>::value };$/;"	g	class:Kokkos::Impl::ResolveFutureArgOrder
__anon54dea1070303	Kokkos_Future.hpp	/^  enum { Arg1_is_value = !Arg1_is_space && !std::is_void<Arg1>::value };$/;"	g	class:Kokkos::Impl::ResolveFutureArgOrder
__anon54dea1070403	Kokkos_Future.hpp	/^  enum { Arg2_is_value = !Arg2_is_space && !std::is_void<Arg2>::value };$/;"	g	class:Kokkos::Impl::ResolveFutureArgOrder
__anon54e346b10110	Threads/Kokkos_ThreadsExec.cpp	/^namespace {$/;"	n	namespace:Kokkos::Impl	file:
__anon54e346b10202	Threads/Kokkos_ThreadsExec.cpp	/^  const auto &fence_lam = [&]() {$/;"	f	function:Kokkos::Impl::ThreadsExec::internal_fence	file:
__anon54e346b10302	Threads/Kokkos_ThreadsExec.cpp	/^  auto deallocate_scratch_memory = [](ThreadsExec &exec) {$/;"	f	function:Kokkos::Impl::ThreadsExec::execute_resize_scratch_in_serial	file:
__anon54e346b10403	Threads/Kokkos_ThreadsExec.cpp	/^  enum { ALIGN_MASK = Kokkos::Impl::MEMORY_ALIGNMENT - 1 };$/;"	g	function:Kokkos::Impl::ThreadsExec::resize_scratch	file:
__anon54e35bf60103	Threads/Kokkos_ThreadsExec.hpp	/^  enum { MAX_FAN_COUNT = 16 };$/;"	g	class:Kokkos::Impl::ThreadsExec
__anon54e35bf60203	Threads/Kokkos_ThreadsExec.hpp	/^  enum { MAX_THREAD_COUNT = 1 << (MAX_FAN_COUNT - 2) };$/;"	g	class:Kokkos::Impl::ThreadsExec
__anon54e35bf60303	Threads/Kokkos_ThreadsExec.hpp	/^  enum { VECTOR_LENGTH = 8 };$/;"	g	class:Kokkos::Impl::ThreadsExec
__anon54e35bf60403	Threads/Kokkos_ThreadsExec.hpp	/^  enum {$/;"	g	class:Kokkos::Impl::ThreadsExec
__anon586c38980103	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980203	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980303	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980403	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980503	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980603	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980703	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980803	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980903	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980a03	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980b03	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980c03	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980d03	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980e03	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };  \/\/ HIPSpace::execution_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38980f03	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981003	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981103	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981203	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981303	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from HIP$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981403	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };   \/\/ HIPHostPinnedSpace::execution_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981503	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981603	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from Host$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981703	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981803	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981903	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };  \/\/ different exec_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981a03	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981b03	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981c03	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981d03	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = false };  \/\/ HIPHostPinnedSpace::execution_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981e03	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38981f03	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38982003	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38982103	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38982203	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };  \/\/ different exec_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38982303	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38982403	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38982503	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38982603	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon586c38982703	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon5875dff10110	impl/Kokkos_Core.cpp	/^namespace {$/;"	n	file:
__anon5875dff10210	impl/Kokkos_Core.cpp	/^namespace {$/;"	n	file:
__anon5875dff10302	impl/Kokkos_Core.cpp	/^  auto get_flag = [](std::string s) -> std::string {$/;"	f	function:Kokkos::Impl::parse_command_line_arguments	typeref:typename:std::string	file:
__anon5875dff10410	impl/Kokkos_Core.cpp	/^namespace {$/;"	n	file:
__anon589a69990103	Kokkos_HBWSpace.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon589a69990203	Kokkos_HBWSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon589a69990303	Kokkos_HBWSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon589a69990403	Kokkos_HBWSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon589a69990503	Kokkos_HBWSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon589a69990603	Kokkos_HBWSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon595f3ce00103	impl/Kokkos_ViewCtor.hpp	/^  enum : bool { has_pointer = true };$/;"	g	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:bool
__anon595f3ce00203	impl/Kokkos_ViewCtor.hpp	/^  enum { has_memory_space = var_memory_space::value };$/;"	g	struct:Kokkos::Impl::ViewCtorProp
__anon595f3ce00303	impl/Kokkos_ViewCtor.hpp	/^  enum { has_execution_space = var_execution_space::value };$/;"	g	struct:Kokkos::Impl::ViewCtorProp
__anon595f3ce00403	impl/Kokkos_ViewCtor.hpp	/^  enum { has_pointer = var_pointer::value };$/;"	g	struct:Kokkos::Impl::ViewCtorProp
__anon595f3ce00503	impl/Kokkos_ViewCtor.hpp	/^  enum { has_label = Kokkos::Impl::has_type<std::string, P...>::value };$/;"	g	struct:Kokkos::Impl::ViewCtorProp
__anon595f3ce00603	impl/Kokkos_ViewCtor.hpp	/^  enum { allow_padding = Kokkos::Impl::has_type<AllowPadding_t, P...>::value };$/;"	g	struct:Kokkos::Impl::ViewCtorProp
__anon595f3ce00703	impl/Kokkos_ViewCtor.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::ViewCtorProp
__anon66fe5c330103	impl/KokkosExp_Host_IterateTile.hpp	/^    enum { value = (int)Rank };$/;"	g	struct:Kokkos::Impl::HostIterateTile::RankTag
__anon66fe5c330203	impl/KokkosExp_Host_IterateTile.hpp	/^    enum { value = (int)Rank };$/;"	g	struct:Kokkos::Impl::HostIterateTile::RankTag
__anon67a5d9920110	impl/Kokkos_Profiling.cpp	/^namespace {$/;"	n	file:
__anon67a5d9920202	impl/Kokkos_Profiling.cpp	/^  auto tokenize  = [](const std::string& line, const std::string& delimiters) {$/;"	f	function:Kokkos::Tools::parseArgs	file:
__anon67a5d9920302	impl/Kokkos_Profiling.cpp	/^  auto invoke_init_callbacks = []() {$/;"	f	function:Kokkos::Tools::initialize	file:
__anon689979640102	impl/Kokkos_Atomic_View.hpp	/^      const iType& i) const {$/;"	f	class:Kokkos::Impl::AtomicViewDataHandle	file:
__anon689979640202	impl/Kokkos_Atomic_View.hpp	/^  operator typename ViewTraits::value_type*() const { return ptr; }$/;"	f	class:Kokkos::Impl::AtomicViewDataHandle	file:
__anon6b884e590102	HIP/Kokkos_HIP_ReduceScan.hpp	/^                               pointer_type memory_start, int index_shift) {$/;"	f	function:Kokkos::Impl::hip_intra_block_reduce_scan	file:
__anon6d5c44ad0103	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	g	class:Kokkos::Impl::ParallelFor
__anon6d5c44ad0203	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	g	class:Kokkos::Impl::ParallelReduce
__anon6d8ca5580103	Threads/Kokkos_ThreadsTeam.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	g	class:Kokkos::Impl::ThreadsExecTeamMember
__anon6f9042750103	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::Impl::view_copy
__anon6f9042750203	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::Impl::view_copy
__anon6f9042750303	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::Impl::view_copy
__anon6f9042750403	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::Impl::view_copy
__anon6f9042750503	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::deep_copy
__anon6f9042750603	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::deep_copy
__anon6f9042750702	Kokkos_CopyViews.hpp	/^                       [&](const int& i) { dst.data()[i] = src.data()[i]; });$/;"	f	function:Kokkos::Experimental::local_deep_copy_contiguous	file:
__anon6f9042750802	Kokkos_CopyViews.hpp	/^                       [&](const int& i) { dst(i) = src(i); });$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042750902	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042750a02	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042750b02	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042750c02	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042750d02	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042750e02	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042750f02	Kokkos_CopyViews.hpp	/^                       [&](const int& i) { dst.data()[i] = value; });$/;"	f	function:Kokkos::Experimental::local_deep_copy_contiguous	file:
__anon6f9042751002	Kokkos_CopyViews.hpp	/^                       [&](const int& i) { dst(i) = value; });$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042751102	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042751202	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042751302	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042751402	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042751502	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042751602	Kokkos_CopyViews.hpp	/^    Kokkos::parallel_for(Kokkos::TeamVectorRange(team, N), [&](const int& i) {$/;"	f	function:Kokkos::Experimental::local_deep_copy	file:
__anon6f9042751703	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::deep_copy
__anon6f9042751803	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::deep_copy
__anon6f9042751903	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	function:Kokkos::deep_copy
__anon6f9042751a03	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::MirrorViewType
__anon6f9042751b03	Kokkos_CopyViews.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::MirrorType
__anon721bd4950110	Kokkos_Core_fwd.hpp	/^namespace {$/;"	n	namespace:Kokkos
__anon74f35e950110	impl/Kokkos_HBWSpace.cpp	/^namespace {$/;"	n	namespace:Kokkos::Experimental	file:
__anon7729fb0f0102	HIP/Kokkos_HIP_Parallel_Team.hpp	/^                             const hipFuncAttributes& attr, int block_size) {$/;"	f	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_common	file:
__anon7729fb0f0202	HIP/Kokkos_HIP_Parallel_Team.hpp	/^                             const hipFuncAttributes& attr, int block_size) {$/;"	f	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_common_reduce	file:
__anon78a5c6630102	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^    auto parallel_for_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelFor::sycl_direct_launch	file:
__anon78a5c6630202	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^      auto lambda = [=](sycl::nd_item<2> item) {$/;"	f	function:Kokkos::Impl::ParallelFor::sycl_direct_launch::__anon78a5c6630102	file:
__anon78a5c6630302	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^      static sycl::kernel kernel = [&] {$/;"	f	function:Kokkos::Impl::ParallelFor::sycl_direct_launch::__anon78a5c6630102	file:
__anon78a5c6630402	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^      auto parallel_reduce_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch	file:
__anon78a5c6630502	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^            [=](sycl::nd_item<2> item) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anon78a5c6630402	file:
__anon78a5c6630602	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^      auto parallel_reduce_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch	file:
__anon78a5c6630702	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^                sycl::device_ptr<value_type> results_ptr) mutable {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anon78a5c6630602	file:
__anon78a5c6630802	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^              auto lambda = [=](sycl::nd_item<2> item) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anon78a5c6630602::__anon78a5c6630702	file:
__anon78a5c6630902	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^        static sycl::kernel kernel = [&] {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anon78a5c6630602	file:
__anon7a81e23f0102	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^             [this](int) {$/;"	f	function:Kokkos::Impl::ParallelFor::execute_task	file:
__anon7b7ffb4d0102	impl/Kokkos_Stacktrace.cpp	/^    for_each_token(entry, [&](const std::string& s, bool) {$/;"	f	function:Kokkos::Impl::find_main_column	file:
__anon7b7ffb4d0202	impl/Kokkos_Stacktrace.cpp	/^    for_each_token(entry, [&](const std::string& s, bool) {$/;"	f	function:Kokkos::Impl::find_main_column	file:
__anon7b7ffb4d0302	impl/Kokkos_Stacktrace.cpp	/^  for_each_token(traceback_entry, [&](const std::string& s, bool last) {$/;"	f	function:Kokkos::Impl::demangle_and_print_traceback_entry	file:
__anon7e1ce1ec0110	SYCL/Kokkos_SYCL.cpp	/^namespace {$/;"	n	file:
__anon7e1ce1ec0202	SYCL/Kokkos_SYCL.cpp	/^                       [](Impl::SYCLInternal*) {}) {$/;"	f	namespace:Kokkos::Experimental	file:
__anon7e1ce1ec0302	SYCL/Kokkos_SYCL.cpp	/^    : m_space_instance(new Impl::SYCLInternal, [](Impl::SYCLInternal* ptr) {$/;"	f	namespace:Kokkos::Experimental	file:
__anon7e1ce1ec0402	SYCL/Kokkos_SYCL.cpp	/^      [&]() {$/;"	f	function:Kokkos::Experimental::SYCL::impl_static_fence	file:
__anon7e9b0b0d0102	impl/Kokkos_MemorySpace.cpp	/^  auto generate_failure_message = [&](std::ostream& o) {$/;"	f	function:Kokkos::Impl::safe_throw_allocation_with_header_failure	file:
__anon81622fd60110	Kokkos_NumericTraits.hpp	/^namespace{$/;"	n	namespace:Kokkos::Experimental::Impl
__anon8559ec870103	Kokkos_View.hpp	/^  enum : bool { is_assignable_data_type = false };$/;"	g	class:Kokkos::Impl::ViewMapping	typeref:typename:bool
__anon8559ec870203	Kokkos_View.hpp	/^  enum : bool { is_assignable = false };$/;"	g	class:Kokkos::Impl::ViewMapping	typeref:typename:bool
__anon8559ec870303	Kokkos_View.hpp	/^  enum { rank = dimension::rank };$/;"	g	struct:Kokkos::ViewTraits
__anon8559ec870403	Kokkos_View.hpp	/^  enum { rank_dynamic = dimension::rank_dynamic };$/;"	g	struct:Kokkos::ViewTraits
__anon8559ec870503	Kokkos_View.hpp	/^  enum { is_hostspace = std::is_same<MemorySpace, HostSpace>::value };$/;"	g	struct:Kokkos::ViewTraits
__anon8559ec870603	Kokkos_View.hpp	/^  enum { is_managed = MemoryTraits::is_unmanaged == 0 };$/;"	g	struct:Kokkos::ViewTraits
__anon8559ec870703	Kokkos_View.hpp	/^  enum { is_random_access = MemoryTraits::is_random_access == 1 };$/;"	g	struct:Kokkos::ViewTraits
__anon8559ec870810	Kokkos_View.hpp	/^namespace {$/;"	n	namespace:Kokkos
__anon8559ec870903	Kokkos_View.hpp	/^  enum { Rank = map_type::Rank };$/;"	g	class:Kokkos::View
__anon8559ec870a03	Kokkos_View.hpp	/^  enum {$/;"	g	class:Kokkos::View
__anon8559ec870b02	Kokkos_View.hpp	/^  operator[](I0 i0) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec870c02	Kokkos_View.hpp	/^      operator[](I0 i0) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec870d02	Kokkos_View.hpp	/^      operator[](I0 i0) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec870e02	Kokkos_View.hpp	/^      operator()(I0 i0, I1 i1) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec870f02	Kokkos_View.hpp	/^      operator()(I0 i0, I1 i1) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871002	Kokkos_View.hpp	/^      operator()(I0 i0, I1 i1) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871102	Kokkos_View.hpp	/^      operator()(I0 i0, I1 i1) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871202	Kokkos_View.hpp	/^      operator()(I0 i0, I1 i1) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871302	Kokkos_View.hpp	/^  operator()(Is... indices) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871402	Kokkos_View.hpp	/^      operator()(Is... indices) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871502	Kokkos_View.hpp	/^  access(Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871602	Kokkos_View.hpp	/^      access(I0 i0, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871702	Kokkos_View.hpp	/^      access(I0 i0, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871802	Kokkos_View.hpp	/^      access(I0 i0, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871902	Kokkos_View.hpp	/^      access(I0 i0, I1 i1, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871a02	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871b02	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871c02	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871d02	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871e02	Kokkos_View.hpp	/^      access(I0 i0, I1 i1, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec871f02	Kokkos_View.hpp	/^      access(I0 i0, I1 i1, I2 i2, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872002	Kokkos_View.hpp	/^      access(I0 i0, I1 i1, I2 i2, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872102	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, I2 i2, I3 i3, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872202	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, I2 i2, I3 i3, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872302	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, I2 i2, I3 i3, I4 i4, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872402	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, I2 i2, I3 i3, I4 i4, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872502	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, I2 i2, I3 i3, I4 i4, I5 i5, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872602	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, I2 i2, I3 i3, I4 i4, I5 i5, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872702	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, I2 i2, I3 i3, I4 i4, I5 i5, I6 i6, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872802	Kokkos_View.hpp	/^  access(I0 i0, I1 i1, I2 i2, I3 i3, I4 i4, I5 i5, I6 i6, Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872902	Kokkos_View.hpp	/^             Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872a02	Kokkos_View.hpp	/^             Is... extra) const {$/;"	f	class:Kokkos::View	file:
__anon8559ec872b03	Kokkos_View.hpp	/^  enum : bool { is_view = is_view<FirstView>::value };$/;"	g	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:bool
__anon8559ec872c03	Kokkos_View.hpp	/^  enum : bool { first_is_view = is_view<FirstView>::value };$/;"	g	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:bool
__anon8559ec872d03	Kokkos_View.hpp	/^  enum : bool { next_is_view = NextTraits::is_view };$/;"	g	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:bool
__anon8559ec872e03	Kokkos_View.hpp	/^  enum : bool { is_view = (first_is_view && next_is_view) };$/;"	g	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:bool
__anon871257160102	HPX/Kokkos_HPX.cpp	/^      hpx::apply([]() { hpx::local::finalize(); });$/;"	f	function:Kokkos::Experimental::HPX::impl_finalize	file:
__anon883e8ee70403	impl/Kokkos_ViewArray.hpp	/^  enum {$/;"	g	namespace:Kokkos::Impl
__anon883e8ee70503	impl/Kokkos_ViewArray.hpp	/^  enum { Array_N = Traits::value_type::size() };$/;"	g	namespace:Kokkos::Impl
__anon883e8ee70603	impl/Kokkos_ViewArray.hpp	/^  enum { Array_S = is_contiguous_reference ? Array_N : 1 };$/;"	g	namespace:Kokkos::Impl
__anon927024580102	impl/Kokkos_ChaseLev.hpp	/^  node_type* operator[](size_type idx) const noexcept {$/;"	f	struct:Kokkos::Impl::fixed_size_circular_buffer	file:
__anon927024580202	impl/Kokkos_ChaseLev.hpp	/^  node_type*& operator[](size_type idx) noexcept {$/;"	f	struct:Kokkos::Impl::fixed_size_circular_buffer	file:
__anon927024580302	impl/Kokkos_ChaseLev.hpp	/^  node_type* operator[](size_type idx) const noexcept {$/;"	f	struct:Kokkos::Impl::non_owning_variable_size_circular_buffer	file:
__anon927024580402	impl/Kokkos_ChaseLev.hpp	/^  node_type*& operator[](size_type idx) noexcept {$/;"	f	struct:Kokkos::Impl::non_owning_variable_size_circular_buffer	file:
__anon93d9a7710102	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^                               pointer_type memory_start, int index_shift) {$/;"	f	function:Kokkos::Impl::cuda_intra_block_reduce_scan	file:
__anon93d9a7710202	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^                             pointer_type memory_start, int index_shift) {$/;"	f	function:Kokkos::Impl::cuda_intra_block_reduce_scan	file:
__anon944eb5290103	Kokkos_Cuda.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon944eb5290203	Kokkos_Cuda.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon944eb5290303	Kokkos_Cuda.hpp	/^  enum : bool { deepcopy = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon944eb5290403	Kokkos_Cuda.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon944eb5290503	Kokkos_Cuda.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon944eb5290603	Kokkos_Cuda.hpp	/^  enum : bool { deepcopy = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon958959a20103	Kokkos_OpenMPTarget.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon958959a20203	Kokkos_OpenMPTarget.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon958959a20303	Kokkos_OpenMPTarget.hpp	/^  enum : bool { deepcopy = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anon9705f8ea0103	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { max_pool_members = 1024 };$/;"	g	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
__anon9705f8ea0203	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { max_team_members = 64 };$/;"	g	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
__anon9705f8ea0303	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { max_pool_rendezvous = HostBarrier::required_buffer_size };$/;"	g	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
__anon9705f8ea0403	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { max_team_rendezvous = HostBarrier::required_buffer_size };$/;"	g	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
__anon9705f8ea0503	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { m_pool_members = 0 };$/;"	g	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
__anon9705f8ea0603	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int {$/;"	g	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
__anon9705f8ea0703	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int {$/;"	g	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
__anon9705f8ea0803	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int {$/;"	g	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
__anon9cf731380103	Kokkos_Pair.hpp	/^  enum { second = 0 };$/;"	g	struct:Kokkos::pair
__anon9ea096ca0102	impl/Kokkos_HostSpace_deepcopy.cpp	/^                         [=](const ptrdiff_t i) { dst_p[i] = src_p[i]; });$/;"	f	function:Kokkos::Impl::hostspace_parallel_deepcopy_async	file:
__anon9ea096ca0202	impl/Kokkos_HostSpace_deepcopy.cpp	/^                         [=](const ptrdiff_t i) { dst_p[i] = src_p[i]; });$/;"	f	function:Kokkos::Impl::hostspace_parallel_deepcopy_async	file:
__anon9ea096ca0302	impl/Kokkos_HostSpace_deepcopy.cpp	/^                         [=](const ptrdiff_t i) { dst_p[i] = src_p[i]; });$/;"	f	function:Kokkos::Impl::hostspace_parallel_deepcopy_async	file:
__anona0068bd30110	HIP/Kokkos_HIP_Locks.cpp	/^namespace {$/;"	n	namespace:Kokkos	file:
__anona006a1180110	HIP/Kokkos_HIP_Locks.hpp	/^namespace {$/;"	n	namespace:Kokkos::Impl
__anona025bf300102	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  auto set_cache_config = [&] {$/;"	f	function:Kokkos::Impl::configure_shmem_preference	file:
__anona025bf300202	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^    auto wrap_get_attributes = []() -> cudaFuncAttributes {$/;"	f	function:Kokkos::Impl::CudaParallelLaunchImpl::get_cuda_func_attributes	typeref:typename:cudaFuncAttributes	file:
__anona0e29d950102	HIP/Kokkos_HIP_Parallel_Range.hpp	/^    auto shmem_functor   = [&f](unsigned n) {$/;"	f	function:Kokkos::Impl::ParallelReduce::local_block_size	file:
__anona0e29d950202	HIP/Kokkos_HIP_Parallel_Range.hpp	/^    auto shmem_functor = [&f](unsigned n) {$/;"	f	function:Kokkos::Impl::ParallelScan::local_block_size	file:
__anona0e29d950302	HIP/Kokkos_HIP_Parallel_Range.hpp	/^    auto shmem_functor = [&f](unsigned n) {$/;"	f	function:Kokkos::Impl::ParallelScanWithTotal::local_block_size	file:
__anona1ab5b321303	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::has_execution_space	typeref:typename:bool
__anona1ab5b321403	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::has_execution_space	typeref:typename:bool
__anona1ab5b321503	impl/Kokkos_FunctorAnalysis.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::FunctorAnalysis
__anona1ab5b321603	impl/Kokkos_FunctorAnalysis.hpp	/^  enum {$/;"	g	struct:Kokkos::Impl::FunctorAnalysis
__anona1ab5b321703	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::detected_join_no_tag	typeref:typename:bool
__anona1ab5b321803	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::detected_join_no_tag	typeref:typename:bool
__anona1ab5b321903	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::detected_volatile_join_no_tag	typeref:typename:bool
__anona1ab5b321a03	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::detected_volatile_join_no_tag	typeref:typename:bool
__anona1ab5b321b03	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::detected_join_tag	typeref:typename:bool
__anona1ab5b321c03	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::detected_join_tag	typeref:typename:bool
__anona1ab5b321d03	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::detected_volatile_join_tag	typeref:typename:bool
__anona1ab5b321e03	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::detected_volatile_join_tag	typeref:typename:bool
__anona1ab5b321f03	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	g	struct:Kokkos::Impl::FunctorAnalysis::DeduceJoinNoTag	typeref:typename:bool
__anona1ab5b322003	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	g	struct:Kokkos::DeduceJoin	typeref:typename:bool
__anona1ab5b322103	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	g	struct:Kokkos::DeduceJoin	typeref:typename:bool
__anona1ab5b322203	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	g	struct:Kokkos::DeduceInitNoTag	typeref:typename:bool
__anona1ab5b322303	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	g	struct:DeduceInit	typeref:typename:bool
__anona1ab5b322403	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	g	struct:DeduceFinalNoTag	typeref:typename:bool
__anona5536d250103	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    enum {$/;"	g	function:Kokkos::Impl::ParallelReduce::execute
__anona5536d250203	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    enum {$/;"	g	function:Kokkos::Impl::ParallelReduce::execute
__anona5536d250303	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	g	class:Kokkos::Impl::ParallelFor
__anona5536d250403	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    enum { is_dynamic = std::is_same<SchedTag, Kokkos::Dynamic>::value };$/;"	g	function:Kokkos::Impl::ParallelFor::execute
__anona5536d250503	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  enum { TEAM_REDUCE_SIZE = 512 };$/;"	g	class:Kokkos::Impl::ParallelReduce
__anona5536d250603	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    enum { is_dynamic = std::is_same<SchedTag, Kokkos::Dynamic>::value };$/;"	g	function:Kokkos::Impl::ParallelReduce::execute
__anona63965ac0102	Kokkos_Serial.hpp	/^        []() {});  \/\/ TODO: correct device ID$/;"	f	function:Kokkos::Serial::impl_static_fence	file:
__anona63965ac0202	Kokkos_Serial.hpp	/^        []() {});  \/\/ TODO: correct device ID$/;"	f	function:Kokkos::Serial::fence	file:
__anona63965ac0303	Kokkos_Serial.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona63965ac0403	Kokkos_Serial.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona63965ac0503	Kokkos_Serial.hpp	/^  enum : bool { deepcopy = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150103	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150203	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150303	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150403	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150503	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150603	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150703	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150803	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150903	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150a03	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150b03	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150c03	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150d03	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150e03	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861150f03	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151003	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151103	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };  \/\/ CudaSpace::execution_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151203	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151303	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151403	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = false };  \/\/ Cuda cannot access HostSpace$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151503	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151603	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151703	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151803	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151903	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151a03	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };  \/\/ CudaUVMSpace::execution_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151b03	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151c03	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from Cuda$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151d03	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };   \/\/ CudaHostPinnedSpace::execution_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151e03	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861151f03	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from Host$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861152003	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861152103	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861152203	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };  \/\/ different execution_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861152303	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };   \/\/ same accessibility$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona8b861152403	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anona9cfb1600102	SYCL/Kokkos_SYCL_Instance.cpp	/^  auto exception_handler = [](sycl::exception_list exceptions) {$/;"	f	function:Kokkos::Experimental::Impl::SYCLInternal::initialize	file:
__anona9cfb1600202	SYCL/Kokkos_SYCL_Instance.cpp	/^      [&]() {$/;"	f	function:Kokkos::Experimental::Impl::SYCLInternal::fence_helper	file:
__anonab438a6b0302	Kokkos_Array.hpp	/^      const iType& i) const {$/;"	f	struct:Kokkos::Array	file:
__anonab438a6b0402	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION const_reference operator[](const iType&) const {$/;"	f	struct:Kokkos::Array	file:
__anonad3933610110	impl/Kokkos_Command_Line_Parsing.cpp	/^namespace {$/;"	n	file:
__anonad3933610210	impl/Kokkos_Command_Line_Parsing.cpp	/^namespace {$/;"	n	file:
__anonb05892e70110	Cuda/Kokkos_Cuda_Task.hpp	/^namespace {$/;"	n	namespace:Kokkos::Impl
__anonb05892e70203	Cuda/Kokkos_Cuda_Task.hpp	/^  enum : int { WarpSize = Kokkos::Impl::CudaTraits::WarpSize };$/;"	g	class:Kokkos::Impl::TaskExec	typeref:typename:int
__anonb05892e70302	Cuda/Kokkos_Cuda_Task.hpp	/^        [&](ValueType& val1, const ValueType& val2) { val1 += val2; },$/;"	f	function:Kokkos::parallel_reduce	file:
__anonb05892e70402	Cuda/Kokkos_Cuda_Task.hpp	/^        [&](ValueType& val1, const ValueType& val2) {$/;"	f	function:Kokkos::parallel_reduce	file:
__anonb05892e70502	Cuda/Kokkos_Cuda_Task.hpp	/^        [&](ValueType& val1, const ValueType& val2) { val1 += val2; },$/;"	f	function:Kokkos::parallel_reduce	file:
__anonb05892e70602	Cuda/Kokkos_Cuda_Task.hpp	/^        [&](ValueType& val1, const ValueType& val2) {$/;"	f	function:Kokkos::parallel_reduce	file:
__anonb1a65bf80102	impl/Kokkos_HostSharedPtr.hpp	/^      : HostSharedPtr(element_ptr, [](T* const t) { delete t; }) {}$/;"	f	class:Kokkos::Impl::HostSharedPtr	file:
__anonb31dd6fc0102	OpenACC/Kokkos_OpenACC_Instance.cpp	/^      [&]() {$/;"	f	function:Kokkos::Experimental::Impl::OpenACCInternal::fence	file:
__anonb3c898560102	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^        [&]() {});$/;"	f	function:Kokkos::Experimental::Impl::OpenMPTargetInternal::fence	file:
__anonb3c898560202	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^        [&]() {});$/;"	f	function:Kokkos::Experimental::Impl::OpenMPTargetInternal::fence	file:
__anonba8f35ff0103	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { bits_per_int_lg2 = CB::bits_per_int_lg2 };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0203	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { state_shift = CB::state_shift };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0303	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { state_used_mask = CB::state_used_mask };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0403	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { state_header_mask = CB::state_header_mask };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0503	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { max_bit_count_lg2 = CB::max_bit_count_lg2 };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0603	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { max_bit_count = CB::max_bit_count };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0703	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { HINT_PER_BLOCK_SIZE = 2 };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0803	Kokkos_MemoryPool.hpp	/^  enum {$/;"	g	class:Kokkos::MemoryPool
__anonba8f35ff0903	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { max_superblock_size = 1LU << 31 \/* 2 gigabytes *\/ };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0a03	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { max_block_per_superblock = max_bit_count };$/;"	g	class:Kokkos::MemoryPool	typeref:typename:uint32_t
__anonba8f35ff0b02	Kokkos_MemoryPool.hpp	/^    bool can_access_state_array = []() {$/;"	f	function:Kokkos::MemoryPool::superblock_state	file:
__anonc0cf2ed20103	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20203	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20303	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20403	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20503	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20603	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20703	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20803	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20903	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20a03	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20b03	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20c03	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20d03	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20e03	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed20f03	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21003	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21103	Kokkos_SYCL_Space.hpp	/^  enum : bool {$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21203	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21303	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21403	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = false };  \/\/ SYCL cannot access HostSpace$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21503	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21603	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21703	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21803	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21903	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21a03	Kokkos_SYCL_Space.hpp	/^  enum : bool {$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21b03	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21c03	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from SYCL$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21d03	Kokkos_SYCL_Space.hpp	/^  enum : bool {$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21e03	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed21f03	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from Host$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed22003	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed22103	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed22203	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };  \/\/ different execution_space$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed22303	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };   \/\/ same accessibility$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc0cf2ed22403	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anonc342417a0102	impl/Kokkos_Tools_Generic.hpp	/^    auto tuner_iter = [&]() {$/;"	f	function:Kokkos::Tools::Experimental::Impl::generic_tune_policy	file:
__anonc342417a0202	impl/Kokkos_Tools_Generic.hpp	/^    auto tuner_iter = [&]() {$/;"	f	function:Kokkos::Tools::Experimental::Impl::generic_tune_policy	file:
__anonc342417a0302	impl/Kokkos_Tools_Generic.hpp	/^      [](const Kokkos::TeamPolicy<Properties...>& candidate_policy) {$/;"	f	function:Kokkos::Tools::Experimental::Impl::tune_policy	file:
__anonc342417a0402	impl/Kokkos_Tools_Generic.hpp	/^      [](const Kokkos::TeamPolicy<Properties...>& candidate_policy) {$/;"	f	function:Kokkos::Tools::Experimental::Impl::tune_policy	file:
__anonc342417a0502	impl/Kokkos_Tools_Generic.hpp	/^      [](const Policy& candidate_policy) {$/;"	f	function:Kokkos::Tools::Experimental::Impl::tune_policy	file:
__anonc342417a0602	impl/Kokkos_Tools_Generic.hpp	/^      [](const Policy& candidate_policy) {$/;"	f	function:Kokkos::Tools::Experimental::Impl::tune_policy	file:
__anonc342417a0702	impl/Kokkos_Tools_Generic.hpp	/^      [](const Kokkos::TeamPolicy<Properties...>& candidate_policy) {$/;"	f	function:Kokkos::Tools::Experimental::Impl::report_policy_results	file:
__anonc342417a0802	impl/Kokkos_Tools_Generic.hpp	/^      [](const Policy& candidate_policy) {$/;"	f	function:Kokkos::Tools::Experimental::Impl::report_policy_results	file:
__anonc52a77380102	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^  int const max_blocks_per_sm = [&properties]() {$/;"	f	function:Kokkos::Impl::cuda_max_active_blocks_per_sm	file:
__anonc52a77380202	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^                                            shmem_thread](int block_size) {$/;"	f	function:Kokkos::Impl::cuda_get_max_block_size	file:
__anonc52a77380302	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^                                            shmem_thread](int block_size) {$/;"	f	function:Kokkos::Impl::cuda_get_opt_block_size	file:
__anonc52a77380402	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^  return [compute_capability]() {$/;"	f	function:Kokkos::Impl::get_shmem_per_sm_prefer_l1	file:
__anonc657ed790110	impl/Kokkos_ExecSpaceManager.hpp	/^namespace {$/;"	n
__anonc86c1b300103	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  enum {$/;"	g	class:Kokkos::Impl::ParallelReduce
__anonc86c1b300203	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  enum { UseReducer = is_reducer<ReducerType>::value };$/;"	g	class:Kokkos::Impl::ParallelReduce
__anoncd8d68450103	impl/Kokkos_TaskQueue.hpp	/^  enum : int { NumQueue = 3 };$/;"	g	class:Kokkos::Impl::TaskQueue	typeref:typename:int
__anoncffb81260103	Kokkos_LogicalSpaces.hpp	/^  enum { assignable = MemorySpaceAccess<BaseSpace, OtherSpace>::assignable };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess
__anoncffb81260203	Kokkos_LogicalSpaces.hpp	/^  enum { accessible = MemorySpaceAccess<BaseSpace, OtherSpace>::accessible };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess
__anoncffb81260303	Kokkos_LogicalSpaces.hpp	/^  enum { deepcopy = MemorySpaceAccess<BaseSpace, OtherSpace>::deepcopy };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess
__anond0df0fef0102	Cuda/Kokkos_Cuda_View.hpp	/^  KOKKOS_INLINE_FUNCTION ValueType operator[](const iType& i) const {$/;"	f	struct:Kokkos::Impl::CudaTextureFetch	file:
__anond0df0fef0202	Cuda/Kokkos_Cuda_View.hpp	/^  operator const ValueType*() const { return m_ptr; }$/;"	f	struct:Kokkos::Impl::CudaTextureFetch	file:
__anond0df0fef0302	Cuda/Kokkos_Cuda_View.hpp	/^  KOKKOS_INLINE_FUNCTION ValueType operator[](const iType& i) const {$/;"	f	struct:Kokkos::Impl::CudaLDGFetch	file:
__anond0df0fef0402	Cuda/Kokkos_Cuda_View.hpp	/^  operator const ValueType*() const { return m_ptr; }$/;"	f	struct:Kokkos::Impl::CudaLDGFetch	file:
__anond1d7d3690102	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    auto parallel_for_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelFor::sycl_direct_launch	file:
__anond1d7d3690202	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    auto parallel_for_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelFor::sycl_direct_launch	file:
__anond1d7d3690302	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^                                               sycl::nd_item<3> item) {$/;"	f	function:Kokkos::Impl::ParallelFor::sycl_direct_launch::__anond1d7d3690202	file:
__anond49101b20110	impl/Kokkos_HostSpace.cpp	/^namespace {$/;"	n	namespace:Kokkos	file:
__anond4a736210403	Kokkos_ExecPolicy.hpp	/^  enum { increment = 1 };$/;"	g	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct
__anond4a736210503	Kokkos_ExecPolicy.hpp	/^  enum { increment = 1 };$/;"	g	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct
__anond4a736210603	Kokkos_ExecPolicy.hpp	/^  enum { increment = 1 };$/;"	g	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct
__anond5eac2ad0103	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^      enum { GridMaxComputeCapability_2x = 0x0ffff };$/;"	g	function:Kokkos::Impl::ParallelScanWithTotal::execute
__anond8e96d650103	Cuda/Kokkos_Cuda_Vectorization.hpp	/^    enum : int { N = sizeof(Scalar) \/ sizeof(shuffle_as_t) };$/;"	g	function:Kokkos::Impl::in_place_shfl_op::operator ()	typeref:typename:int
__anond8fa09340102	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^      auto parallel_reduce_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch	file:
__anond8fa09340202	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^        cgh.single_task([=]() {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anond8fa09340102	file:
__anond8fa09340302	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^      auto parallel_reduce_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch	file:
__anond8fa09340402	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^            [=](sycl::nd_item<1> item) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anond8fa09340302	file:
__anond8fa09340502	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^      auto parallel_reduce_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch	file:
__anond8fa09340602	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^        cgh.single_task([=]() {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anond8fa09340502	file:
__anond8fa09340702	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^      auto parallel_reduce_event = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch	file:
__anond8fa09340802	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^        cgh.parallel_for(range, [=](sycl::nd_item<1> item) {$/;"	f	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anond8fa09340702	file:
__anonda37d41c0103	Kokkos_MemoryTraits.hpp	/^  enum : bool {$/;"	g	struct:Kokkos::MemoryTraits	typeref:typename:bool
__anonda37d41c0203	Kokkos_MemoryTraits.hpp	/^  enum : bool {$/;"	g	struct:Kokkos::MemoryTraits	typeref:typename:bool
__anonda37d41c0303	Kokkos_MemoryTraits.hpp	/^  enum : bool { is_atomic = (unsigned(0) != (T & unsigned(Kokkos::Atomic))) };$/;"	g	struct:Kokkos::MemoryTraits	typeref:typename:bool
__anonda37d41c0403	Kokkos_MemoryTraits.hpp	/^  enum : bool {$/;"	g	struct:Kokkos::MemoryTraits	typeref:typename:bool
__anonda37d41c0503	Kokkos_MemoryTraits.hpp	/^  enum : bool { is_aligned = (unsigned(0) != (T & unsigned(Kokkos::Aligned))) };$/;"	g	struct:Kokkos::MemoryTraits	typeref:typename:bool
__anonda37d41c0603	Kokkos_MemoryTraits.hpp	/^enum : unsigned {$/;"	g	namespace:Kokkos::Impl	typeref:typename:unsigned
__anone56c68080102	OpenACC/Kokkos_OpenACC.cpp	/^      [&]() { acc_wait_all(); });$/;"	f	function:Kokkos::Experimental::OpenACC::impl_static_fence	file:
__anone669880d0102	HPX/Kokkos_HPX_Task.hpp	/^             [this, &queue, &buffer, num_worker_threads](int) {$/;"	f	namespace:Kokkos::Impl	file:
__anone669880d0202	HPX/Kokkos_HPX_Task.hpp	/^        [this, &buffer, num_worker_threads](int t) {$/;"	f	namespace:Kokkos::Impl	file:
__anone85181db0103	Kokkos_OpenMP.hpp	/^  enum : bool { assignable = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anone85181db0203	Kokkos_OpenMP.hpp	/^  enum : bool { accessible = true };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anone85181db0303	Kokkos_OpenMP.hpp	/^  enum : bool { deepcopy = false };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess	typeref:typename:bool
__anoneaecfe710103	Kokkos_WorkGraphPolicy.hpp	/^  enum : std::int32_t {$/;"	g	class:Kokkos::WorkGraphPolicy	typeref:typename:std::int32_t
__anonebf75d1c0110	Cuda/Kokkos_CudaSpace.cpp	/^namespace {$/;"	n	namespace:Kokkos::Impl	file:
__anonebf75d1c0203	Cuda/Kokkos_CudaSpace.cpp	/^  enum : bool { UVM_available = true };$/;"	g	function:Kokkos::CudaUVMSpace::available	typeref:typename:bool	file:
__anonebf75d1c0310	Cuda/Kokkos_CudaSpace.cpp	/^namespace {$/;"	n	namespace:Kokkos	file:
__anonebf75d1c0403	Cuda/Kokkos_CudaSpace.cpp	/^  enum { TEXTURE_BOUND_1D = 1u << 27 };$/;"	g	function:Kokkos::Impl::SharedAllocationRecord::CudaSpace::attach_texture_object	file:
__anonec54cfc50110	impl/Kokkos_hwloc.cpp	/^namespace {$/;"	n	namespace:Kokkos::hwloc	file:
__anonec54cfc50203	impl/Kokkos_hwloc.cpp	/^enum { MAX_CORE = 1024 };$/;"	g	namespace:Kokkos::hwloc::__anonec54cfc50110	file:
__anonec54cfc50303	impl/Kokkos_hwloc.cpp	/^    enum {$/;"	g	function:Kokkos::hwloc::__anonec54cfc50110::Sentinel::Sentinel	file:
__anonf28190810102	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^    auto local_scans = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelScanSYCLBase::scan_internal	file:
__anonf28190810202	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^          [=](sycl::nd_item<1> item) {$/;"	f	function:Kokkos::Impl::ParallelScanSYCLBase::scan_internal::__anonf28190810102	file:
__anonf28190810302	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^      auto update_with_group_results = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelScanSYCLBase::scan_internal	file:
__anonf28190810402	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^            [=](sycl::nd_item<1> item) {$/;"	f	function:Kokkos::Impl::ParallelScanSYCLBase::scan_internal::__anonf28190810302	file:
__anonf28190810502	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^    auto initialize_global_memory = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelScanSYCLBase::sycl_direct_launch	file:
__anonf28190810602	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^      cgh.parallel_for(sycl::range<1>(len), [=](sycl::item<1> item) {$/;"	f	function:Kokkos::Impl::ParallelScanSYCLBase::sycl_direct_launch::__anonf28190810502	file:
__anonf28190810702	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^    auto update_global_results = q.submit([&](sycl::handler& cgh) {$/;"	f	function:Kokkos::Impl::ParallelScanSYCLBase::sycl_direct_launch	file:
__anonf28190810802	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^      cgh.parallel_for(sycl::range<1>(len), [=](sycl::item<1> item) {$/;"	f	function:Kokkos::Impl::ParallelScanSYCLBase::sycl_direct_launch::__anonf28190810702	file:
__anonf28190810902	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^    Base::impl_execute([]() {});$/;"	f	function:Kokkos::Impl::ParallelScan::execute	file:
__anonf28190810a02	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^    Base::impl_execute([&]() {$/;"	f	function:Kokkos::Impl::ParallelScanWithTotal::execute	file:
__anonf4e6889b0103	impl/Kokkos_TaskBase.hpp	/^  enum : int16_t { TaskTeam = 0, TaskSingle = 1, Aggregate = 2 };$/;"	g	class:Kokkos::Impl::TaskBase	typeref:typename:int16_t
__anonf4e6889b0203	impl/Kokkos_TaskBase.hpp	/^  enum : uintptr_t { LockTag = ~uintptr_t(0), EndTag = ~uintptr_t(1) };$/;"	g	class:Kokkos::Impl::TaskBase	typeref:typename:uintptr_t
__anonfe5a008b0103	Kokkos_Concepts.hpp	/^  enum { assignable = std::is_same<DstMemorySpace, SrcMemorySpace>::value };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess
__anonfe5a008b0203	Kokkos_Concepts.hpp	/^  enum { accessible = assignable };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess
__anonfe5a008b0303	Kokkos_Concepts.hpp	/^  enum { deepcopy = assignable };$/;"	g	struct:Kokkos::Impl::MemorySpaceAccess
__anonfe5a008b0403	Kokkos_Concepts.hpp	/^  enum { accessible = exe_access::accessible };$/;"	g	struct:Kokkos::SpaceAccessibility
__anonfe5a008b0503	Kokkos_Concepts.hpp	/^  enum {$/;"	g	struct:Kokkos::SpaceAccessibility
__anonfe5a008b0603	Kokkos_Concepts.hpp	/^  enum { deepcopy = mem_access::deepcopy };$/;"	g	struct:Kokkos::SpaceAccessibility
__atomic_always_lock_free	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_always_lock_free /;"	d
__atomic_always_lock_free_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline bool __device__ __atomic_always_lock_free_simt(size_t size, void *ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_always_lock_free_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline constexpr __device__ bool __atomic_always_lock_free_simt_(size_t size,$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
__atomic_clear	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_clear /;"	d
__atomic_clear_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_clear_simt(void *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_clear_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_clear_simt(volatile void *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_clear_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline void __device__ __atomic_clear_simt_(type *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_compare_exchange	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_compare_exchange /;"	d
__atomic_compare_exchange_n	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_compare_exchange_n /;"	d
__atomic_compare_exchange_n_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^bool __device__ __atomic_compare_exchange_n_simt(type *ptr, type *expected,$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_compare_exchange_n_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^bool __device__ __atomic_compare_exchange_n_simt(volatile type *ptr,$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_compare_exchange_n_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^bool __device__ __atomic_compare_exchange_n_simt_(type *ptr, type *expected,$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_compare_exchange_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^bool __device__ __atomic_compare_exchange_simt(type *ptr, type *expected,$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_compare_exchange_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^bool __device__ __atomic_compare_exchange_simt(volatile type *ptr,$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_compare_exchange_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^    __atomic_compare_exchange_simt_(type *ptr, type *expected,$/;"	f	namespace:Kokkos::Impl
__atomic_exchange	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_exchange /;"	d
__atomic_exchange_n	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_exchange_n /;"	d
__atomic_exchange_n_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_exchange_n_simt(type *ptr, type val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_exchange_n_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_exchange_n_simt(volatile type *ptr, type val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_exchange_n_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_exchange_n_simt_(type *ptr, type val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_exchange_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_exchange_simt(type *ptr, type *val, type *ret,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_exchange_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_exchange_simt(volatile type *ptr, type *val, type *ret,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_exchange_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^    __atomic_exchange_simt_(type *ptr, type *val, type *ret, int memorder) {$/;"	f	namespace:Kokkos::Impl
__atomic_fetch_add	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_fetch_add /;"	d
__atomic_fetch_add_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_add_simt(type *ptr, delta val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_add_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_add_simt(volatile type *ptr, delta val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_add_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^    __atomic_fetch_add_simt_(type *ptr, delta val, int memorder) {$/;"	f	namespace:Kokkos::Impl
__atomic_fetch_and	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_fetch_and /;"	d
__atomic_fetch_and_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_and_simt(type *ptr, type val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_and_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_and_simt(volatile type *ptr, type val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_and_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^    __atomic_fetch_and_simt_(type *ptr, delta val, int memorder) {$/;"	f	namespace:Kokkos::Impl
__atomic_fetch_or	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_fetch_or /;"	d
__atomic_fetch_or_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_or_simt(type *ptr, type val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_or_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_or_simt(volatile type *ptr, type val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_or_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^    __atomic_fetch_or_simt_(type *ptr, delta val, int memorder) {$/;"	f	namespace:Kokkos::Impl
__atomic_fetch_sub	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_fetch_sub /;"	d
__atomic_fetch_sub_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_sub_simt(type *ptr, delta val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_sub_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_sub_simt(volatile type *ptr, delta val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_sub_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^    __atomic_fetch_sub_simt_(type *ptr, delta val, int memorder) {$/;"	f	namespace:Kokkos::Impl
__atomic_fetch_xor	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_fetch_xor /;"	d
__atomic_fetch_xor_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_xor_simt(type *ptr, type val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_xor_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_fetch_xor_simt(volatile type *ptr, type val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_fetch_xor_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^    __atomic_fetch_xor_simt_(type *ptr, delta val, int memorder) {$/;"	f	namespace:Kokkos::Impl
__atomic_is_lock_free	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_is_lock_free /;"	d
__atomic_is_lock_free_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline bool __device__ __atomic_is_lock_free_simt(size_t size, void *ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_is_lock_free_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline __device__ bool __atomic_is_lock_free_simt_(size_t size, void *ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
__atomic_load	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_load /;"	d
__atomic_load_n	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_load_n /;"	d
__atomic_load_n_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_load_n_simt(const type *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_load_n_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^type __device__ __atomic_load_n_simt(const volatile type *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:type __device__
__atomic_load_n_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^        type __device__ __atomic_load_n_simt_(const type *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl
__atomic_load_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_load_simt(const type *ptr, type *ret, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_load_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_load_simt(const volatile type *ptr, type *ret,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_signal_fence	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_signal_fence /;"	d
__atomic_signal_fence_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline void __device__ __atomic_signal_fence_simt(int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_store	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_store /;"	d
__atomic_store_n	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_store_n /;"	d
__atomic_store_n_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_store_n_simt(type *ptr, type val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_store_n_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_store_n_simt(volatile type *ptr, type val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_store_n_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^    __atomic_store_n_simt_(type *ptr, type val, int memorder) {$/;"	f	namespace:Kokkos::Impl
__atomic_store_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_store_simt(type *ptr, type *val, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_store_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^void __device__ __atomic_store_simt(volatile type *ptr, type *val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__atomic_test_and_set	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_test_and_set /;"	d
__atomic_test_and_set_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^bool __device__ __atomic_test_and_set_simt(void *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_test_and_set_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^bool __device__ __atomic_test_and_set_simt(volatile void *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_test_and_set_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline bool __device__ __atomic_test_and_set_simt_(type *ptr, int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool __device__
__atomic_thread_fence	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __atomic_thread_fence /;"	d
__atomic_thread_fence_simt	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline void __device__ __atomic_thread_fence_simt(int memorder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void __device__
__launch_bounds__	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^__global__ __launch_bounds__($/;"	f	namespace:Kokkos::Impl	typeref:typename:__global__
__launch_bounds__	HIP/Kokkos_HIP_KernelLaunch.hpp	/^__global__ __launch_bounds__($/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:__global__
__simt_add_acq_rel_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_add_acq_rel_32(/;"	d
__simt_add_acq_rel_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_add_acq_rel_64(/;"	d
__simt_add_acquire_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_add_acquire_32(/;"	d
__simt_add_acquire_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_add_acquire_64(/;"	d
__simt_add_relaxed_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_add_relaxed_32(/;"	d
__simt_add_relaxed_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_add_relaxed_64(/;"	d
__simt_add_release_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_add_release_32(/;"	d
__simt_add_release_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_add_release_64(/;"	d
__simt_and_acq_rel_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_and_acq_rel_32(/;"	d
__simt_and_acq_rel_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_and_acq_rel_64(/;"	d
__simt_and_acquire_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_and_acquire_32(/;"	d
__simt_and_acquire_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_and_acquire_64(/;"	d
__simt_and_relaxed_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_and_relaxed_32(/;"	d
__simt_and_relaxed_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_and_relaxed_64(/;"	d
__simt_and_release_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_and_release_32(/;"	d
__simt_and_release_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_and_release_64(/;"	d
__simt_cas_acq_rel_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_cas_acq_rel_32(/;"	d
__simt_cas_acq_rel_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_cas_acq_rel_64(/;"	d
__simt_cas_acquire_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_cas_acquire_32(/;"	d
__simt_cas_acquire_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_cas_acquire_64(/;"	d
__simt_cas_relaxed_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_cas_relaxed_32(/;"	d
__simt_cas_relaxed_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_cas_relaxed_64(/;"	d
__simt_cas_release_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_cas_release_32(/;"	d
__simt_cas_release_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_cas_release_64(/;"	d
__simt_exch_acq_rel_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_exch_acq_rel_32(/;"	d
__simt_exch_acq_rel_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_exch_acq_rel_64(/;"	d
__simt_exch_acquire_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_exch_acquire_32(/;"	d
__simt_exch_acquire_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_exch_acquire_64(/;"	d
__simt_exch_relaxed_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_exch_relaxed_32(/;"	d
__simt_exch_relaxed_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_exch_relaxed_64(/;"	d
__simt_exch_release_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_exch_release_32(/;"	d
__simt_exch_release_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_exch_release_64(/;"	d
__simt_fence_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_fence_(/;"	d
__simt_fence_sc_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_fence_sc_(/;"	d
__simt_fence_signal_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_fence_signal_(/;"	d
__simt_load_acquire_16	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_load_acquire_16(/;"	d
__simt_load_acquire_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_load_acquire_32(/;"	d
__simt_load_acquire_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_load_acquire_64(/;"	d
__simt_load_acquire_8_as_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_load_acquire_8_as_32(/;"	d
__simt_load_relaxed_16	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_load_relaxed_16(/;"	d
__simt_load_relaxed_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_load_relaxed_32(/;"	d
__simt_load_relaxed_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_load_relaxed_64(/;"	d
__simt_load_relaxed_8_as_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_load_relaxed_8_as_32(/;"	d
__simt_nanosleep	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_nanosleep(/;"	d
__simt_or_acq_rel_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_or_acq_rel_32(/;"	d
__simt_or_acq_rel_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_or_acq_rel_64(/;"	d
__simt_or_acquire_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_or_acquire_32(/;"	d
__simt_or_acquire_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_or_acquire_64(/;"	d
__simt_or_relaxed_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_or_relaxed_32(/;"	d
__simt_or_relaxed_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_or_relaxed_64(/;"	d
__simt_or_release_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_or_release_32(/;"	d
__simt_or_release_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_or_release_64(/;"	d
__simt_scope	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_scope /;"	d
__simt_store_relaxed_16	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_store_relaxed_16(/;"	d
__simt_store_relaxed_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_store_relaxed_32(/;"	d
__simt_store_relaxed_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_store_relaxed_64(/;"	d
__simt_store_relaxed_8_as_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_store_relaxed_8_as_32(/;"	d
__simt_store_release_16	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_store_release_16(/;"	d
__simt_store_release_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_store_release_32(/;"	d
__simt_store_release_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_store_release_64(/;"	d
__simt_store_release_8_as_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_store_release_8_as_32(/;"	d
__simt_xor_acq_rel_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_xor_acq_rel_32(/;"	d
__simt_xor_acq_rel_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_xor_acq_rel_64(/;"	d
__simt_xor_acquire_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_xor_acquire_32(/;"	d
__simt_xor_acquire_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_xor_acquire_64(/;"	d
__simt_xor_relaxed_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_xor_relaxed_32(/;"	d
__simt_xor_relaxed_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_xor_relaxed_64(/;"	d
__simt_xor_release_32	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_xor_release_32(/;"	d
__simt_xor_release_64	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^#define __simt_xor_release_64(/;"	d
__stronger_order_simt_	Cuda/Kokkos_Cuda_Atomic_Intrinsics.hpp	/^inline __device__ int __stronger_order_simt_(int a, int b) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ int
__volatile__	impl/Kokkos_Atomic_Decrement.hpp	/^  __asm__ __volatile__("lock decb %0"$/;"	v	namespace:Kokkos	typeref:typename:__asm__
__volatile__	impl/Kokkos_Atomic_Decrement.hpp	/^  __asm__ __volatile__("lock decl %0"$/;"	v	namespace:Kokkos	typeref:typename:__asm__
__volatile__	impl/Kokkos_Atomic_Decrement.hpp	/^  __asm__ __volatile__("lock decq %0"$/;"	v	namespace:Kokkos	typeref:typename:__asm__
__volatile__	impl/Kokkos_Atomic_Decrement.hpp	/^  __asm__ __volatile__("lock decw %0"$/;"	v	namespace:Kokkos	typeref:typename:__asm__
__volatile__	impl/Kokkos_Atomic_Increment.hpp	/^  __asm__ __volatile__("lock incb %0"$/;"	v	namespace:Kokkos	typeref:typename:__asm__
__volatile__	impl/Kokkos_Atomic_Increment.hpp	/^  __asm__ __volatile__("lock incl %0"$/;"	v	namespace:Kokkos	typeref:typename:__asm__
__volatile__	impl/Kokkos_Atomic_Increment.hpp	/^  __asm__ __volatile__("lock incq %0"$/;"	v	namespace:Kokkos	typeref:typename:__asm__
__volatile__	impl/Kokkos_Atomic_Increment.hpp	/^  __asm__ __volatile__("lock incw %0"$/;"	v	namespace:Kokkos	typeref:typename:__asm__
_all_remaining_extents_dynamic	Kokkos_Extents.hpp	/^struct _all_remaining_extents_dynamic : std::true_type {};$/;"	s	namespace:Kokkos::Impl::_parse_view_extents_impl
_all_remaining_extents_dynamic	Kokkos_Extents.hpp	/^struct _all_remaining_extents_dynamic<T*> : _all_remaining_extents_dynamic<T> {$/;"	s	namespace:Kokkos::Impl::_parse_view_extents_impl
_all_remaining_extents_dynamic	Kokkos_Extents.hpp	/^struct _all_remaining_extents_dynamic<T[N]> : std::false_type {};$/;"	s	namespace:Kokkos::Impl::_parse_view_extents_impl
_allocation_result	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  struct _allocation_result {$/;"	s	class:Kokkos::Impl::TaskQueueMemoryManager
_atomic_compare_exchange_strong	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^KOKKOS_INLINE_FUNCTION bool _atomic_compare_exchange_strong($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION bool
_atomic_compare_exchange_strong	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH bool _atomic_compare_exchange_strong($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH bool
_atomic_compare_exchange_strong_fallback	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^KOKKOS_INLINE_FUNCTION bool _atomic_compare_exchange_strong_fallback($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION bool
_atomic_load	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ T _atomic_load(T *ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ T
_atomic_load	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ T _atomic_load(T *ptr, memory_order_acquire_t) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ T
_atomic_load	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ T _atomic_load(T *ptr, memory_order_relaxed_t) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ T
_atomic_load	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ T _atomic_load(T *ptr, memory_order_seq_cst_t) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ T
_atomic_load	impl/Kokkos_Atomic_Load.hpp	/^KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH T _atomic_load($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH T
_atomic_store	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ void _atomic_store(T *ptr, T val) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
_atomic_store	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ void _atomic_store(T *ptr, T val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
_atomic_store	impl/Kokkos_Atomic_Store.hpp	/^KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH void _atomic_store($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INTERNAL_INLINE_DEVICE_IF_CUDA_ARCH void
_call_op_impl	impl/Kokkos_Combined_Reducer.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION void _call_op_impl(IdxOrMemberTypes&&... idxs,$/;"	f	struct:Kokkos::Impl::CombinedReductionFunctorWrapperImpl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
_call_op_impl	impl/Kokkos_Combined_Reducer.hpp	/^  _call_op_impl(IdxOrMemberTypes&&... idxs, IdxOrMemberType1&& idx,$/;"	f	struct:Kokkos::Impl::CombinedReductionFunctorWrapperImpl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION std::enable_if_t<!std::is_same<remove_cvref_t<IdxOrMemberType1>,value_type>::value>
_cast_to_derived	impl/Kokkos_VLAEmulation.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION static constexpr Derived const* _cast_to_derived($/;"	f	struct:Kokkos::Impl::VLAEmulationAccess	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Derived const *
_cast_to_derived	impl/Kokkos_VLAEmulation.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION static constexpr Derived* _cast_to_derived($/;"	f	struct:Kokkos::Impl::VLAEmulationAccess	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Derived *
_check_early_exit_impl	impl/Kokkos_Atomic_Generic.hpp	/^struct _check_early_exit_impl {$/;"	s	namespace:Kokkos::Impl
_check_early_exit_impl	impl/Kokkos_Atomic_Generic.hpp	/^struct _check_early_exit_impl<$/;"	s	namespace:Kokkos::Impl
_complete_finished_task	impl/Kokkos_TaskQueueCommon.hpp	/^  KOKKOS_FUNCTION void _complete_finished_task(TaskNode<TaskQueueTraits>&& task,$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_FUNCTION void
_construct_combined_reducer_from_args_tag	impl/Kokkos_Combined_Reducer.hpp	/^struct _construct_combined_reducer_from_args_tag {};$/;"	s	namespace:Kokkos::Impl
_decrement_ready_count	impl/Kokkos_TaskQueueCommon.hpp	/^  void _decrement_ready_count() {$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION void
_do_allocation	impl/Kokkos_HostSpace.cpp	/^SharedAllocationHeader *_do_allocation(Kokkos::HostSpace const &space,$/;"	f	namespace:Kokkos::Impl	typeref:typename:SharedAllocationHeader *
_do_contruct	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  KOKKOS_INLINE_FUNCTION T* _do_contruct(void* allocated,$/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:KOKKOS_INLINE_FUNCTION T *
_do_pool_allocate	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  _allocation_result _do_pool_allocate(allocation_size_type requested_size) {$/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:KOKKOS_INLINE_FUNCTION _allocation_result
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  T const volatile& _ebo_data_member() const volatile& { return m_ebo_object; }$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T const volatile &
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  T const volatile& _ebo_data_member() const volatile& {$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T const volatile &
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  T const& _ebo_data_member() const& { return m_ebo_object; }$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T const &
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  T volatile& _ebo_data_member() volatile& { return m_ebo_object; }$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T volatile &
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  T volatile& _ebo_data_member() volatile& {$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T volatile &
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  T& _ebo_data_member() & { return m_ebo_object; }$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T &
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  T&& _ebo_data_member() && { return m_ebo_object; }$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T &&
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  constexpr T const& _ebo_data_member() const& {$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T const &
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  constexpr T& _ebo_data_member() & { return *reinterpret_cast<T*>(this); }$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T &
_ebo_data_member	impl/Kokkos_EBO.hpp	/^  constexpr T&& _ebo_data_member() && {$/;"	f	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:KOKKOS_INLINE_FUNCTION T &&
_exec_policy_traits_without_work_tag	traits/Kokkos_WorkTagTrait.hpp	/^using _exec_policy_traits_without_work_tag = typename type_list_remove_first<$/;"	t	namespace:Kokkos::Impl	typeref:typename:type_list_remove_first<WorkTagTrait,execution_policy_trait_specifications>::type
_fill_host_accessible_header_info	impl/Kokkos_SharedAlloc_timpl.hpp	/^    _fill_host_accessible_header_info(SharedAllocationHeader& arg_header,$/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:void
_fold_comma_emulation_return	impl/Kokkos_Utilities.hpp	/^struct _fold_comma_emulation_return {};$/;"	s	namespace:Kokkos::Impl
_get_task_ptr	Kokkos_TaskScheduler.hpp	/^  KOKKOS_INLINE_FUNCTION static constexpr task_base* _get_task_ptr($/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION task_base *
_get_task_ptr	Kokkos_TaskScheduler.hpp	/^  static constexpr task_base* _get_task_ptr(std::nullptr_t) { return nullptr; }$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION task_base *
_get_task_ptr	impl/Kokkos_SimpleTaskScheduler.hpp	/^  KOKKOS_INLINE_FUNCTION static constexpr task_base_type* _get_task_ptr($/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION task_base_type *
_get_task_ptr	impl/Kokkos_SimpleTaskScheduler.hpp	/^  static constexpr task_base_type* _get_task_ptr(std::nullptr_t) {$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION task_base_type *
_get_value_from_combined_reducer_ctor_arg	impl/Kokkos_Combined_Reducer.hpp	/^KOKKOS_INLINE_FUNCTION auto _get_value_from_combined_reducer_ctor_arg($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION auto
_graph_node_is_root_ctor_tag	impl/Kokkos_GraphImpl_fwd.hpp	/^struct _graph_node_is_root_ctor_tag {};$/;"	s	namespace:Kokkos::Impl
_graph_node_kernel_ctor_tag	impl/Kokkos_GraphImpl_fwd.hpp	/^struct _graph_node_kernel_ctor_tag {};$/;"	s	namespace:Kokkos::Impl
_graph_node_predecessor_ctor_tag	impl/Kokkos_GraphImpl_fwd.hpp	/^struct _graph_node_predecessor_ctor_tag {};$/;"	s	namespace:Kokkos::Impl
_increment_ready_count	impl/Kokkos_TaskQueueCommon.hpp	/^  void _increment_ready_count() {$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION void
_init	impl/Kokkos_Combined_Reducer.hpp	/^  constexpr _fold_comma_emulation_return _init(value_type& val) const {$/;"	f	struct:Kokkos::Impl::CombinedReducerStorageImpl	typeref:typename:KOKKOS_INLINE_FUNCTION _fold_comma_emulation_return
_instantiate_graph	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  void _instantiate_graph() {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:void
_is_empty	impl/Kokkos_LIFO.hpp	/^  bool _is_empty() const noexcept {$/;"	f	struct:Kokkos::Impl::LockBasedLIFOCommon	typeref:typename:bool
_join	impl/Kokkos_Combined_Reducer.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr _fold_comma_emulation_return _join($/;"	f	struct:Kokkos::Impl::CombinedReducerStorageImpl	typeref:typename:KOKKOS_INLINE_FUNCTION _fold_comma_emulation_return
_kokkos_pgi_compiler_bug_workaround	impl/Kokkos_Core.cpp	/^void _kokkos_pgi_compiler_bug_workaround() {}$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
_make_reducer_from_arg	impl/Kokkos_Combined_Reducer.hpp	/^_make_reducer_from_arg(Reducer&& arg_reducer) noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<std::decay_t<Reducer>>::value,std::decay_t<Reducer>>
_make_reducer_from_arg	impl/Kokkos_Combined_Reducer.hpp	/^_make_reducer_from_arg(T&& arg_scalar) noexcept {$/;"	f	namespace:Kokkos::Impl
_next	Kokkos_Extents.hpp	/^  using _next = Kokkos::Experimental::AppendExtent<$/;"	t	struct:Kokkos::Impl::_parse_view_extents_impl::_parse_impl
_next_ptr	impl/Kokkos_LinkedListNode.hpp	/^  pointer_type const volatile& _next_ptr() const volatile noexcept {$/;"	f	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:KOKKOS_INLINE_FUNCTION pointer_type const volatile &
_next_ptr	impl/Kokkos_LinkedListNode.hpp	/^  pointer_type const& _next_ptr() const noexcept { return m_next; }$/;"	f	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:KOKKOS_INLINE_FUNCTION pointer_type const &
_next_ptr	impl/Kokkos_LinkedListNode.hpp	/^  pointer_type volatile& _next_ptr() volatile noexcept { return m_next; }$/;"	f	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:KOKKOS_INLINE_FUNCTION pointer_type volatile &
_next_ptr	impl/Kokkos_LinkedListNode.hpp	/^  pointer_type& _next_ptr() noexcept { return m_next; }$/;"	f	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:KOKKOS_INLINE_FUNCTION pointer_type &
_parse_impl	Kokkos_Extents.hpp	/^struct _parse_impl {$/;"	s	namespace:Kokkos::Impl::_parse_view_extents_impl
_parse_impl	Kokkos_Extents.hpp	/^struct _parse_impl<$/;"	s	namespace:Kokkos::Impl::_parse_view_extents_impl
_parse_impl	Kokkos_Extents.hpp	/^struct _parse_impl<T[N], Kokkos::Experimental::Extents<ExtentSpec...>, void>$/;"	s	namespace:Kokkos::Impl::_parse_view_extents_impl
_parse_view_extents_impl	Kokkos_Extents.hpp	/^namespace _parse_view_extents_impl {$/;"	n	namespace:Kokkos::Impl
_pop_failed_insertion	impl/Kokkos_MultipleTaskQueue.hpp	/^  KOKKOS_INLINE_FUNCTION OptionalRef<task_base_type> _pop_failed_insertion($/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<task_base_type>
_print_memory_pool_state	impl/Kokkos_MemoryPool.cpp	/^void _print_memory_pool_state(std::ostream& s, uint32_t const* sb_state_ptr,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
_reducer_from_arg	impl/Kokkos_Combined_Reducer.hpp	/^struct _reducer_from_arg {$/;"	s	namespace:Kokkos::Impl
_reducer_from_arg_t	impl/Kokkos_Combined_Reducer.hpp	/^using _reducer_from_arg_t =$/;"	t	namespace:Kokkos::Impl	typeref:typename:_reducer_from_arg<Space,ReferenceOrViewOrReducer>::type
_schedule_waiting_tasks_operation	impl/Kokkos_TaskQueueCommon.hpp	/^  struct _schedule_waiting_tasks_operation {$/;"	s	class:Kokkos::Impl::TaskQueueCommonMixin
_self	impl/Kokkos_TaskQueueCommon.hpp	/^  Derived& _self() { return *static_cast<Derived*>(this); }$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION Derived &
_spawn_impl	Kokkos_TaskScheduler.hpp	/^      _spawn_impl(DepTaskType* arg_predecessor_task, TaskPriority arg_priority,$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION Kokkos::BasicFuture<typename FunctorType::value_type,scheduler_type>
_spawn_impl	impl/Kokkos_SimpleTaskScheduler.hpp	/^  _spawn_impl($/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_FUNCTION future_type_for_functor<std::decay_t<FunctorType>>
_tag_invoke	impl/KokkosExp_IterateTileGPU.hpp	/^_tag_invoke(Functor const& f, Args&&... args) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_FORCEINLINE_FUNCTION std::enable_if_t<std::is_void<Tag>::value>
_tag_invoke_array	impl/KokkosExp_IterateTileGPU.hpp	/^KOKKOS_IMPL_FORCEINLINE_FUNCTION void _tag_invoke_array(Functor const& f,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_FORCEINLINE_FUNCTION void
_tag_invoke_array_helper	impl/KokkosExp_IterateTileGPU.hpp	/^KOKKOS_IMPL_FORCEINLINE_FUNCTION void _tag_invoke_array_helper($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_FORCEINLINE_FUNCTION void
_then_kernel	Kokkos_GraphNode.hpp	/^  auto _then_kernel(NextKernelDeduced&& arg_kernel) const {$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
_this	impl/Kokkos_VLAEmulation.hpp	/^  Derived const* _this() const noexcept {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Derived const *
_this	impl/Kokkos_VLAEmulation.hpp	/^  Derived* _this() noexcept {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Derived *
_trait_matches_spec_predicate	traits/Kokkos_WorkTagTrait.hpp	/^struct _trait_matches_spec_predicate {$/;"	s	namespace:Kokkos::Impl
_try_push_node	impl/Kokkos_LIFO.hpp	/^  bool _try_push_node(node_type& node) {$/;"	f	struct:Kokkos::Impl::LockBasedLIFOCommon	typeref:typename:KOKKOS_INLINE_FUNCTION bool
_vla_pointer	impl/Kokkos_VLAEmulation.hpp	/^  vla_value_type const* _vla_pointer() const noexcept {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION vla_value_type const *
_vla_pointer	impl/Kokkos_VLAEmulation.hpp	/^  vla_value_type* _vla_pointer() noexcept {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION vla_value_type *
_wrap_with_kokkos_sum	impl/Kokkos_Combined_Reducer.hpp	/^struct _wrap_with_kokkos_sum {$/;"	s	namespace:Kokkos::Impl
a	Kokkos_CopyViews.hpp	/^  ViewType a;$/;"	m	struct:Kokkos::Impl::ViewFill	typeref:typename:ViewType
a	Kokkos_CopyViews.hpp	/^  ViewTypeA a;$/;"	m	struct:Kokkos::Impl::ViewCopy	typeref:typename:ViewTypeA
abort	impl/Kokkos_Error.hpp	/^KOKKOS_IMPL_ABORT_NORETURN KOKKOS_INLINE_FUNCTION void abort($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_IMPL_ABORT_NORETURN KOKKOS_INLINE_FUNCTION void
abs	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION RealType abs(const complex<RealType>& x) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
abs	Kokkos_MathematicalFunctions.hpp	/^KOKKOS_INLINE_FUNCTION double abs(double x) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION double
abs	Kokkos_MathematicalFunctions.hpp	/^KOKKOS_INLINE_FUNCTION float abs(float x) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION float
abs	Kokkos_MathematicalFunctions.hpp	/^KOKKOS_INLINE_FUNCTION int abs(int n) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION int
abs	Kokkos_MathematicalFunctions.hpp	/^KOKKOS_INLINE_FUNCTION long abs(long n) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION long
abs	Kokkos_MathematicalFunctions.hpp	/^KOKKOS_INLINE_FUNCTION long long abs(long long n) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION long long
abs	Kokkos_MathematicalFunctions.hpp	/^inline long double abs(long double x) {$/;"	f	namespace:Kokkos	typeref:typename:long double
abs	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 abs(__float128 x) { return ::fabsq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
access_error	Cuda/Kokkos_CudaSpace.cpp	/^KOKKOS_DEPRECATED void CudaSpace::access_error() {$/;"	f	class:Kokkos::CudaSpace	typeref:typename:KOKKOS_DEPRECATED void
access_error	Cuda/Kokkos_CudaSpace.cpp	/^KOKKOS_DEPRECATED void CudaSpace::access_error(const void *const) {$/;"	f	class:Kokkos::CudaSpace	typeref:typename:KOKKOS_DEPRECATED void
access_error	HIP/Kokkos_HIP_Space.cpp	/^KOKKOS_DEPRECATED void Experimental::HIPSpace::access_error() {$/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:KOKKOS_DEPRECATED void
access_error	HIP/Kokkos_HIP_Space.cpp	/^KOKKOS_DEPRECATED void Experimental::HIPSpace::access_error(const void* const) {$/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:KOKKOS_DEPRECATED void
accessible	Kokkos_AnonymousSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10203
accessible	Kokkos_AnonymousSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10503
accessible	Kokkos_AnonymousSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10803
accessible	Kokkos_Concepts.hpp	/^  enum { accessible = assignable };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonfe5a008b0203
accessible	Kokkos_Concepts.hpp	/^  enum { accessible = exe_access::accessible };$/;"	e	enum:Kokkos::SpaceAccessibility::__anonfe5a008b0403
accessible	Kokkos_Cuda.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon944eb5290203
accessible	Kokkos_Cuda.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon944eb5290503
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = false };  \/\/ Cuda cannot access HostSpace$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151403
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150203
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150b03
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861152003
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };   \/\/ CudaHostPinnedSpace::execution_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151d03
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };   \/\/ same accessibility$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861152303
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };  \/\/ CudaSpace::execution_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151103
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };  \/\/ CudaUVMSpace::execution_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151a03
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150503
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150803
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150e03
accessible	Kokkos_CudaSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151703
accessible	Kokkos_HBWSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon589a69990203
accessible	Kokkos_HBWSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon589a69990503
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = false };  \/\/ HIPHostPinnedSpace::execution_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981d03
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980203
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980b03
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981703
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };   \/\/ HIPHostPinnedSpace::execution_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981403
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };  \/\/ HIPSpace::execution_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980e03
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980503
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980803
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981103
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981a03
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38982003
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38982303
accessible	Kokkos_HIP_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38982603
accessible	Kokkos_HPX.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2e1eac7c0603
accessible	Kokkos_LogicalSpaces.hpp	/^  enum { accessible = MemorySpaceAccess<BaseSpace, OtherSpace>::accessible };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anoncffb81260203
accessible	Kokkos_MemoryPool.hpp	/^    accessible = Kokkos::Impl::MemorySpaceAccess<Kokkos::HostSpace,$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0803
accessible	Kokkos_OpenMP.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anone85181db0203
accessible	Kokkos_OpenMPTarget.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon958959a20203
accessible	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2679b92e0203
accessible	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2679b92e0503
accessible	Kokkos_SYCL_Space.hpp	/^    accessible = true$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21103
accessible	Kokkos_SYCL_Space.hpp	/^    accessible = true$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21a03
accessible	Kokkos_SYCL_Space.hpp	/^    accessible = true$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21d03
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = false };  \/\/ SYCL cannot access HostSpace$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21403
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20203
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20b03
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed22003
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };   \/\/ same accessibility$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed22303
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20503
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20803
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20e03
accessible	Kokkos_SYCL_Space.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21703
accessible	Kokkos_Serial.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona63965ac0403
accessible	Kokkos_Threads.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon3ff296770203
accessible	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90203
accessible	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { accessible = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90503
accessible	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { accessible = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90803
acos	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> acos($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
acos	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 acos(__float128 x) { return ::acosq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
acosh	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> acosh($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
acosh	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 acosh(__float128 x) { return ::acoshq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
acquire	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  size_type acquire() const {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
acquire	HIP/Kokkos_HIP_UniqueToken.hpp	/^  size_type acquire() const {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
acquire	Kokkos_HPX.hpp	/^  int acquire() const noexcept { return HPX::impl_hardware_thread_id(); }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
acquire	Kokkos_HPX.hpp	/^  int acquire() const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
acquire	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  int acquire() const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
acquire	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  size_type acquire() const {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
acquire	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  size_type acquire() const {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
acquire	Serial/Kokkos_Serial_UniqueToken.hpp	/^  int acquire() const noexcept { return 0; }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
acquire	Threads/Kokkos_Threads_UniqueToken.hpp	/^  int acquire() const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
acquire_bounded	impl/Kokkos_ConcurrentBitset.hpp	/^  KOKKOS_INLINE_FUNCTION static Kokkos::pair<int, int> acquire_bounded($/;"	f	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::pair<int,int>
acquire_bounded_lg2	impl/Kokkos_ConcurrentBitset.hpp	/^  KOKKOS_INLINE_FUNCTION static Kokkos::pair<int, int> acquire_bounded_lg2($/;"	f	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::pair<int,int>
acquire_predecessor_from	impl/Kokkos_TaskNode.hpp	/^  void acquire_predecessor_from(runnable_task_type& other) volatile {$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION void
acquire_predecessor_from	impl/Kokkos_TaskNode.hpp	/^  void acquire_predecessor_from(runnable_task_type& other) {$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION void
active_features	impl/Kokkos_Profiling.cpp	/^static std::unordered_set<size_t> active_features;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:std::unordered_set<size_t>	file:
actual_size	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  static constexpr auto actual_size = sizeof(Block);$/;"	m	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:auto
add_dependence	impl/Kokkos_TaskBase.hpp	/^  void add_dependence(TaskBase* dep) {$/;"	f	class:Kokkos::Impl::TaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION void
add_node	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  void add_node(std::shared_ptr<NodeImpl> const& arg_node_ptr) {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:void
add_node	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  void add_node(std::shared_ptr<aggregate_node_impl_t> const& arg_node_ptr) {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:void
add_node	impl/Kokkos_Default_Graph_Impl.hpp	/^  void add_node(std::shared_ptr<NodeImpl> const& arg_node_ptr) {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:void
add_predecessor	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  void add_predecessor(NodeImplPtr arg_node_ptr, PredecessorRef arg_pred_ref) {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:void
add_predecessor	impl/Kokkos_Default_Graph_Impl.hpp	/^  void add_predecessor(NodeImplPtr arg_node_ptr, PredecessorRef arg_pred_ref) {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:void
add_root_value	Kokkos_Tuners.hpp	/^  void add_root_value(const ValueType& in) noexcept {$/;"	f	struct:Kokkos::Tools::Experimental::Impl::ValueHierarchyNode	typeref:typename:void
add_sub_container	Kokkos_Tuners.hpp	/^  void add_sub_container(const ContainedType& in) { sub_values.push_back(in); }$/;"	f	struct:Kokkos::Tools::Experimental::Impl::ValueHierarchyNode	typeref:typename:void
aggregate_dependences	impl/Kokkos_TaskBase.hpp	/^  TaskBase* volatile* aggregate_dependences() volatile {$/;"	f	class:Kokkos::Impl::TaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION TaskBase * volatile *
aggregate_kernel_impl_t	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  using aggregate_kernel_impl_t = CudaGraphNodeAggregateKernel;$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:CudaGraphNodeAggregateKernel
aggregate_kernel_impl_t	impl/Kokkos_Default_Graph_Impl.hpp	/^    using aggregate_kernel_impl_t =$/;"	t	function:Kokkos::Impl::GraphImpl::create_aggregate_ptr	typeref:typename:GraphNodeAggregateKernelDefaultImpl<ExecutionSpace>
aggregate_node_impl_t	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  using aggregate_node_impl_t =$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:GraphNodeImpl<Kokkos::Cuda,aggregate_kernel_impl_t,Kokkos::Experimental::TypeErasedTag>
aggregate_node_impl_t	impl/Kokkos_Default_Graph_Impl.hpp	/^    using aggregate_node_impl_t =$/;"	t	function:Kokkos::Impl::GraphImpl::create_aggregate_ptr	typeref:typename:GraphNodeImpl<ExecutionSpace,aggregate_kernel_impl_t,Kokkos::Experimental::TypeErasedTag>
aggregate_task_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using aggregate_task_type =$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:AggregateTask<task_queue_traits,task_scheduling_info_type>
aggregate_task_type	impl/Kokkos_SingleTaskQueue.hpp	/^  using aggregate_task_type =$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:AggregateTask<task_queue_traits,task_scheduling_info_type>
aggregate_task_type	impl/Kokkos_TaskNode.hpp	/^  using aggregate_task_type = AggregateTask;  \/\/ concept marker$/;"	t	class:Kokkos::Impl::AggregateTask	typeref:typename:AggregateTask
align	Kokkos_ScratchSpace.hpp	/^  KOKKOS_INLINE_FUNCTION static IntType align(const IntType& size) {$/;"	f	class:Kokkos::ScratchMemorySpace	typeref:typename:KOKKOS_INLINE_FUNCTION IntType
align_to_int64	impl/Kokkos_HostThreadTeam.hpp	/^  static constexpr size_t align_to_int64(size_t n) {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
all_queues	SYCL/Kokkos_SYCL_Instance.cpp	/^std::vector<std::optional<sycl::queue>*> SYCLInternal::all_queues;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::vector<std::optional<sycl::queue> * >
all_queues	SYCL/Kokkos_SYCL_Instance.hpp	/^  static std::vector<std::optional<sycl::queue>*> all_queues;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::vector<std::optional<sycl::queue> * >
all_reduce	Threads/Kokkos_ThreadsExec.hpp	/^  inline int all_reduce(const int value) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
alloc_name	Kokkos_View.hpp	/^      const std::string& alloc_name =$/;"	m	class:Kokkos::View	typeref:typename:const std::string &
alloc_prop	Kokkos_CopyViews.hpp	/^      using alloc_prop = Impl::ViewCtorProp<$/;"	t	function:Kokkos::impl_realloc
alloc_prop	Kokkos_CopyViews.hpp	/^    using alloc_prop = Impl::ViewCtorProp<$/;"	t	function:Kokkos::impl_resize
alloc_prop	Kokkos_CopyViews.hpp	/^    using alloc_prop = Impl::ViewCtorProp<ViewCtorArgs..., std::string>;$/;"	t	function:Kokkos::impl_realloc	typeref:typename:Impl::ViewCtorProp<ViewCtorArgs...,std::string>
alloc_prop	Kokkos_CopyViews.hpp	/^  using alloc_prop = Impl::ViewCtorProp<$/;"	t	function:Kokkos::create_mirror_view_and_copy
alloc_prop	Kokkos_CopyViews.hpp	/^  using alloc_prop = Impl::ViewCtorProp<$/;"	t	function:Kokkos::impl_resize
alloc_prop	Kokkos_CopyViews.hpp	/^  using alloc_prop = Impl::ViewCtorProp<ViewCtorArgs..., std::string>;$/;"	t	function:Kokkos::Impl::create_mirror	typeref:typename:Impl::ViewCtorProp<ViewCtorArgs...,std::string>
alloc_prop	Kokkos_CopyViews.hpp	/^  using alloc_prop = Impl::ViewCtorProp<ViewCtorArgs..., std::string>;$/;"	t	function:Kokkos::impl_realloc	typeref:typename:Impl::ViewCtorProp<ViewCtorArgs...,std::string>
alloc_prop	Kokkos_View.hpp	/^    using alloc_prop = Impl::ViewCtorProp<$/;"	t	class:Kokkos::View
alloc_prop_input	Kokkos_CopyViews.hpp	/^  using alloc_prop_input = Impl::ViewCtorProp<ViewCtorArgs...>;$/;"	t	function:Kokkos::Impl::create_mirror	typeref:typename:Impl::ViewCtorProp<ViewCtorArgs...>
alloc_prop_input	Kokkos_CopyViews.hpp	/^  using alloc_prop_input = Impl::ViewCtorProp<ViewCtorArgs...>;$/;"	t	function:Kokkos::create_mirror_view_and_copy	typeref:typename:Impl::ViewCtorProp<ViewCtorArgs...>
alloc_prop_input	Kokkos_CopyViews.hpp	/^  using alloc_prop_input = Impl::ViewCtorProp<ViewCtorArgs...>;$/;"	t	function:Kokkos::impl_realloc	typeref:typename:Impl::ViewCtorProp<ViewCtorArgs...>
alloc_prop_input	Kokkos_CopyViews.hpp	/^  using alloc_prop_input = Impl::ViewCtorProp<ViewCtorArgs...>;$/;"	t	function:Kokkos::impl_resize	typeref:typename:Impl::ViewCtorProp<ViewCtorArgs...>
alloc_prop_input	Kokkos_View.hpp	/^    using alloc_prop_input = Impl::ViewCtorProp<P...>;$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewCtorProp<P...>
allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaHostPinnedSpace::allocate(const char *arg_label,$/;"	f	class:Kokkos::CudaHostPinnedSpace	typeref:typename:void *
allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaHostPinnedSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::CudaHostPinnedSpace	typeref:typename:void *
allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaSpace::allocate(const Cuda &exec_space, const char *arg_label,$/;"	f	class:Kokkos::CudaSpace	typeref:typename:void *
allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaSpace::allocate(const char *arg_label, const size_t arg_alloc_size,$/;"	f	class:Kokkos::CudaSpace	typeref:typename:void *
allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::CudaSpace	typeref:typename:void *
allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaUVMSpace::allocate(const char *arg_label, const size_t arg_alloc_size,$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:void *
allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaUVMSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:void *
allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPHostPinnedSpace::allocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:void *
allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPHostPinnedSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:void *
allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPManagedSpace::allocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:void *
allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPManagedSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:void *
allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPSpace::allocate($/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:void *
allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:void *
allocate	Kokkos_HBWSpace.hpp	/^  KOKKOS_INLINE_FUNCTION static SharedAllocationRecord* allocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_INLINE_FUNCTION SharedAllocationRecord *
allocate	Kokkos_HostSpace.hpp	/^  KOKKOS_INLINE_FUNCTION static SharedAllocationRecord* allocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_INLINE_FUNCTION SharedAllocationRecord *
allocate	Kokkos_LogicalSpaces.hpp	/^  KOKKOS_INLINE_FUNCTION static SharedAllocationRecord* allocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_INLINE_FUNCTION SharedAllocationRecord *
allocate	Kokkos_LogicalSpaces.hpp	/^  void* allocate(const char* arg_label, const size_t arg_alloc_size,$/;"	f	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:void *
allocate	Kokkos_LogicalSpaces.hpp	/^  void* allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:void *
allocate	Kokkos_MemoryPool.hpp	/^  void *allocate(size_t alloc_size, int32_t attempt_limit = 1) const noexcept {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_FUNCTION void *
allocate	Kokkos_OpenMPTargetSpace.hpp	/^  KOKKOS_INLINE_FUNCTION static SharedAllocationRecord* allocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_INLINE_FUNCTION SharedAllocationRecord *
allocate	OpenACC/Kokkos_OpenACCSpace.cpp	/^void *Kokkos::Experimental::OpenACCSpace::allocate($/;"	f	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:void *
allocate	OpenACC/Kokkos_OpenACCSpace.hpp	/^  KOKKOS_INLINE_FUNCTION static SharedAllocationRecord* allocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_INLINE_FUNCTION SharedAllocationRecord *
allocate	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^void* OpenMPTargetSpace::allocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:void *
allocate	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^void* OpenMPTargetSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLDeviceUSMSpace::allocate(const Kokkos::Experimental::SYCL& exec_space,$/;"	f	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLDeviceUSMSpace::allocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLDeviceUSMSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLHostUSMSpace::allocate(const SYCL& exec_space, const char* arg_label,$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLHostUSMSpace::allocate(const SYCL& exec_space,$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLHostUSMSpace::allocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLHostUSMSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLSharedUSMSpace::allocate(const SYCL& exec_space,$/;"	f	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLSharedUSMSpace::allocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:void *
allocate	SYCL/Kokkos_SYCL_Space.cpp	/^void* SYCLSharedUSMSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:void *
allocate	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  void* allocate(size_type alloc_size) const noexcept {$/;"	f	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION void *
allocate	impl/Kokkos_HBWSpace.cpp	/^void *HBWSpace::allocate(const char *arg_label, const size_t arg_alloc_size,$/;"	f	class:Kokkos::Experimental::HBWSpace	typeref:typename:void *
allocate	impl/Kokkos_HBWSpace.cpp	/^void *HBWSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::Experimental::HBWSpace	typeref:typename:void *
allocate	impl/Kokkos_HostSpace.cpp	/^void *HostSpace::allocate(const char *arg_label, const size_t arg_alloc_size,$/;"	f	class:Kokkos::HostSpace	typeref:typename:void *
allocate	impl/Kokkos_HostSpace.cpp	/^void *HostSpace::allocate(const size_t arg_alloc_size) const {$/;"	f	class:Kokkos::HostSpace	typeref:typename:void *
allocate	impl/Kokkos_MemoryPoolAllocator.hpp	/^  pointer allocate(size_t n) {$/;"	f	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:KOKKOS_INLINE_FUNCTION pointer
allocate	impl/Kokkos_SharedAlloc.hpp	/^  KOKKOS_INLINE_FUNCTION static SharedAllocationRecord* allocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_INLINE_FUNCTION SharedAllocationRecord *
allocate	impl/Kokkos_SharedAlloc_timpl.hpp	/^auto SharedAllocationRecordCommon<MemorySpace>::allocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:derived_t *
allocate	impl/Kokkos_TaskQueue_impl.hpp	/^KOKKOS_FUNCTION void *TaskQueue<ExecSpace, MemorySpace>::allocate(size_t n) {$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION void *
allocateData	impl/Kokkos_Profiling.cpp	/^void allocateData(const SpaceHandle handle, const std::string name,$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
allocateData	impl/Kokkos_Profiling.cpp	/^void allocateData(const SpaceHandle space, const std::string label,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
allocateDataFunction	impl/Kokkos_Profiling_Interface.hpp	/^using allocateDataFunction   = Kokkos_Profiling_allocateDataFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_allocateDataFunction
allocate_and_construct	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  KOKKOS_FUNCTION T* allocate_and_construct(Args&&... args)$/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:KOKKOS_FUNCTION T *
allocate_and_construct_with_vla_emulation	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  KOKKOS_INLINE_FUNCTION T* allocate_and_construct_with_vla_emulation($/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:KOKKOS_INLINE_FUNCTION T *
allocate_block_size	Kokkos_MemoryPool.hpp	/^  uint32_t allocate_block_size(uint64_t alloc_size) const noexcept {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION uint32_t
allocate_block_size	impl/Kokkos_TaskQueue_impl.hpp	/^TaskQueue<ExecSpace, MemorySpace>::allocate_block_size(size_t n) {$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION size_t
allocate_data	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_allocateDataFunction allocate_data;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_allocateDataFunction
allocate_driver_memory_buffer	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  Kokkos::ObservingRawPtr<base_t> allocate_driver_memory_buffer() const {$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:Kokkos::ObservingRawPtr<base_t>
allocate_driver_storage_for_kernel	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^auto* allocate_driver_storage_for_kernel(KernelType const& kernel) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:auto *
allocate_sycl	SYCL/Kokkos_SYCL_Space.cpp	/^void* allocate_sycl($/;"	f	namespace:Kokkos::Experimental	typeref:typename:void *
allocate_tracked	Kokkos_LogicalSpaces.hpp	/^  static void* allocate_tracked(const SpaceType& arg_space,$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void *
allocate_tracked	impl/Kokkos_HBWSpace.cpp	/^SharedAllocationRecord<Kokkos::Experimental::HBWSpace, void>::allocate_tracked($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace	typeref:typename:void *
allocate_tracked	impl/Kokkos_SharedAlloc_timpl.hpp	/^void* SharedAllocationRecordCommon<MemorySpace>::allocate_tracked($/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:void *
allocated_task_count	Kokkos_TaskScheduler.hpp	/^  int allocated_task_count() const noexcept { return m_queue->m_count_alloc; }$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION int
allocated_task_count_accum	Kokkos_TaskScheduler.hpp	/^  long allocated_task_count_accum() const noexcept {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION long
allocated_task_count_max	Kokkos_TaskScheduler.hpp	/^  int allocated_task_count_max() const noexcept { return m_queue->m_max_alloc; }$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION int
allocation_capacity	Kokkos_TaskScheduler.hpp	/^  int allocation_capacity() const noexcept {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION int
allocation_count	impl/Kokkos_TaskQueue.hpp	/^  int allocation_count() const noexcept { return m_count_alloc; }$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION int
allocation_count	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  int allocation_count() const noexcept { return m_count_alloc; }$/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:KOKKOS_INLINE_FUNCTION int
allocation_mechanism	impl/Kokkos_Error.hpp	/^  AllocationMechanism allocation_mechanism() const noexcept {$/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD AllocationMechanism
allocation_size_type	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  using allocation_size_type = size_t;$/;"	t	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:size_t
allow_padding	impl/Kokkos_ViewCtor.hpp	/^  enum { allow_padding = Kokkos::Impl::has_type<AllowPadding_t, P...>::value };$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00603
always_true	impl/Kokkos_Utilities.hpp	/^struct always_true : std::true_type {};$/;"	s	namespace:Kokkos::Impl
analysis	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using analysis = Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,Policy,reducer_type_fwd>
anonymous_device_type	impl/Kokkos_ViewUniformType.hpp	/^  using anonymous_device_type =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::Device<typename device_type::execution_space,Kokkos::AnonymousSpace>
append	impl/Kokkos_ViewMapping.hpp	/^  struct append {$/;"	s	struct:Kokkos::Impl::ViewDimension
append_additional_error_information	HIP/Kokkos_HIP_Error.hpp	/^  void append_additional_error_information(std::ostream& o) const override {$/;"	f	class:Kokkos::Experimental::HIPRawMemoryAllocationFailure	typeref:typename:void
append_additional_error_information	impl/Kokkos_Error.cpp	/^void CudaRawMemoryAllocationFailure::append_additional_error_information($/;"	f	class:Kokkos::Experimental::CudaRawMemoryAllocationFailure	typeref:typename:void
append_additional_error_information	impl/Kokkos_Error.hpp	/^  virtual void append_additional_error_information(std::ostream &) const {}$/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:void
apply	impl/KokkosExp_Host_IterateTile.hpp	/^  apply(Args&&... args) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:std::enable_if_t<(sizeof...(Args)==RP::rank && std::is_void<Tag>::value),void>
apply	impl/KokkosExp_Host_IterateTile.hpp	/^  apply(Args&&... args) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:std::enable_if_t<(sizeof...(Args)==RP::rank &&!std::is_void<Tag>::value),void>
apply	impl/KokkosExp_Host_IterateTile.hpp	/^  static void apply(Func const& func, bool cond, Offset const& offset,$/;"	f	struct:Kokkos::Impl::Tile_Loop_Type	typeref:typename:void
apply	impl/KokkosExp_Host_IterateTile.hpp	/^  static void apply(ValType& value, Func const& func, bool cond,$/;"	f	struct:Kokkos::Impl::Tile_Loop_Type	typeref:typename:void
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::AddOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::AndOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::DivOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::LShiftOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::MaxOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::MinOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::ModOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::MulOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::OrOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::RShiftOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::SubOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_Atomic_Generic.hpp	/^  static Scalar1 apply(const Scalar1& val1, const Scalar2& val2) {$/;"	f	struct:Kokkos::Impl::XorOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Scalar1
apply	impl/Kokkos_TaskBase.hpp	/^  KOKKOS_FUNCTION static void apply(root_type* root, void* exec) {$/;"	f	class:Kokkos::Impl::Task	typeref:typename:KOKKOS_FUNCTION void
apply	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_FUNCTION static void apply(task_base_type* self,$/;"	f	class:Kokkos::Impl::RunnableTask	typeref:typename:KOKKOS_FUNCTION void
apply	traits/Kokkos_WorkTagTrait.hpp	/^  struct apply {$/;"	s	struct:Kokkos::Impl::_trait_matches_spec_predicate
apply_functor	impl/Kokkos_TaskBase.hpp	/^  KOKKOS_INLINE_FUNCTION void apply_functor(member_type* const member,$/;"	f	class:Kokkos::Impl::Task	typeref:typename:KOKKOS_INLINE_FUNCTION void
apply_functor	impl/Kokkos_TaskBase.hpp	/^  void apply_functor(member_type* const member, void*) {$/;"	f	class:Kokkos::Impl::Task	typeref:typename:KOKKOS_INLINE_FUNCTION void
apply_functor	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION void apply_functor(member_type* member, T* val) {$/;"	f	class:Kokkos::Impl::RunnableTask	typeref:typename:KOKKOS_INLINE_FUNCTION void
apply_functor	impl/Kokkos_TaskNode.hpp	/^  void apply_functor(member_type* member, void*) {$/;"	f	class:Kokkos::Impl::RunnableTask	typeref:typename:KOKKOS_INLINE_FUNCTION void
apply_to_view_of_static_rank	Kokkos_View.hpp	/^void apply_to_view_of_static_rank(Function&& f, View<Args...> a) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
are_integral	impl/Kokkos_Traits.hpp	/^struct are_integral {$/;"	s	namespace:Kokkos::Impl
are_integral	impl/Kokkos_Traits.hpp	/^struct are_integral<T, Args...> {$/;"	s	namespace:Kokkos::Impl
args	impl/Kokkos_Profiling.hpp	/^  std::string args         = unset_string_option;$/;"	m	struct:Kokkos::Tools::InitArguments	typeref:typename:std::string
array_index_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using array_index_type = typename Policy::array_index_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::array_index_type
array_index_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using array_index_type = typename Policy::array_index_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::array_index_type
array_index_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using array_index_type = typename Policy::array_index_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::array_index_type
array_index_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using array_index_type = typename Policy::array_index_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::array_index_type
array_index_type	KokkosExp_MDRangePolicy.hpp	/^  using array_index_type = std::int64_t;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:std::int64_t
array_index_type	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using array_index_type = typename Policy::array_index_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::array_index_type
array_layout	Kokkos_CopyViews.hpp	/^  using array_layout = typename src_view_type::array_layout;$/;"	t	struct:Kokkos::Impl::MirrorType	typeref:typename:src_view_type::array_layout
array_layout	Kokkos_CopyViews.hpp	/^  using array_layout = typename src_view_type::array_layout;$/;"	t	struct:Kokkos::Impl::MirrorViewType	typeref:typename:src_view_type::array_layout
array_layout	Kokkos_Crs.hpp	/^  using array_layout    = typename traits::array_layout;$/;"	t	class:Kokkos::Crs	typeref:typename:traits::array_layout
array_layout	Kokkos_Cuda.hpp	/^  using array_layout = LayoutLeft;$/;"	t	class:Kokkos::Cuda	typeref:typename:LayoutLeft
array_layout	Kokkos_HIP_Space.hpp	/^  using array_layout = LayoutLeft;$/;"	t	class:Kokkos::Experimental::HIP	typeref:typename:LayoutLeft
array_layout	Kokkos_HPX.hpp	/^  using array_layout         = LayoutRight;$/;"	t	class:Kokkos::Experimental::HPX	typeref:typename:LayoutRight
array_layout	Kokkos_Layout.hpp	/^  using array_layout = LayoutLeft;$/;"	t	struct:Kokkos::LayoutLeft	typeref:typename:LayoutLeft
array_layout	Kokkos_Layout.hpp	/^  using array_layout = LayoutRight;$/;"	t	struct:Kokkos::LayoutRight	typeref:typename:LayoutRight
array_layout	Kokkos_Layout.hpp	/^  using array_layout = LayoutStride;$/;"	t	struct:Kokkos::LayoutStride	typeref:typename:LayoutStride
array_layout	Kokkos_Layout.hpp	/^  using array_layout = LayoutTiled<OuterP, InnerP, ArgN0, ArgN1, ArgN2, ArgN3,$/;"	t	struct:Kokkos::Experimental::LayoutTiled	typeref:typename:LayoutTiled<OuterP,InnerP,ArgN0,ArgN1,ArgN2,ArgN3,ArgN4,ArgN5,ArgN6,ArgN7,IsPowerOfTwo>
array_layout	Kokkos_OpenMP.hpp	/^  using array_layout         = LayoutRight;$/;"	t	class:Kokkos::OpenMP	typeref:typename:LayoutRight
array_layout	Kokkos_OpenMPTarget.hpp	/^  using array_layout = LayoutLeft;$/;"	t	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:LayoutLeft
array_layout	Kokkos_SYCL.hpp	/^  using array_layout = LayoutLeft;$/;"	t	class:Kokkos::Experimental::SYCL	typeref:typename:LayoutLeft
array_layout	Kokkos_ScratchSpace.hpp	/^  using array_layout = typename ExecSpace::array_layout;$/;"	t	class:Kokkos::ScratchMemorySpace	typeref:typename:ExecSpace::array_layout
array_layout	Kokkos_Serial.hpp	/^  using array_layout = LayoutRight;$/;"	t	class:Kokkos::Serial	typeref:typename:LayoutRight
array_layout	Kokkos_Threads.hpp	/^  using array_layout = Kokkos::LayoutRight;$/;"	t	class:Kokkos::Threads	typeref:typename:Kokkos::LayoutRight
array_layout	Kokkos_View.hpp	/^                         typename prop::array_layout,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::array_layout> typename prop::
array_layout	Kokkos_View.hpp	/^  using array_layout    = ArrayLayout;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ArrayLayout
array_layout	Kokkos_View.hpp	/^  using array_layout    = typename ViewTraits<void, Prop...>::array_layout;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::array_layout
array_layout	Kokkos_View.hpp	/^  using array_layout    = void;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:void
array_layout	Kokkos_View.hpp	/^  using array_layout  = typename execution_space::array_layout;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:execution_space::array_layout
array_layout	Kokkos_View.hpp	/^  using array_layout = ArrayLayout;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ArrayLayout
array_layout	OpenACC/Kokkos_OpenACC.hpp	/^  using array_layout = LayoutLeft;$/;"	t	class:Kokkos::Experimental::OpenACC	typeref:typename:LayoutLeft
array_layout	impl/Kokkos_ViewLayoutTiled.hpp	/^  using array_layout = std::conditional_t<is_inner_left, Kokkos::LayoutLeft,$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:std::conditional_t<is_inner_left,Kokkos::LayoutLeft,Kokkos::LayoutRight>
array_layout	impl/Kokkos_ViewLayoutTiled.hpp	/^  using array_layout =$/;"	t	function:Kokkos::tile_subview
array_layout	impl/Kokkos_ViewUniformType.hpp	/^  using array_layout = Kokkos::LayoutLeft;$/;"	t	struct:Kokkos::Impl::ViewUniformLayout	typeref:typename:Kokkos::LayoutLeft
array_layout	impl/Kokkos_ViewUniformType.hpp	/^  using array_layout = LayoutType;$/;"	t	struct:Kokkos::Impl::ViewUniformLayout	typeref:typename:LayoutType
array_layout	impl/Kokkos_ViewUniformType.hpp	/^  using array_layout =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:ViewUniformLayout<typename ViewType::array_layout,ViewType::rank>::array_layout
array_type	Kokkos_View.hpp	/^  using array_type =$/;"	t	class:Kokkos::View	typeref:typename:View<typename traits::scalar_array_type,typename traits::array_layout,typename traits::device_type,typename traits::hooks_policy,typename traits::memory_traits>
arrive	impl/Kokkos_HostBarrier.hpp	/^  static void arrive(int* buffer, const int size, int& step) noexcept {$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
arrive	impl/Kokkos_HostBarrier.hpp	/^  void arrive() const noexcept { return arrive(m_buffer, m_size, m_step); }$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
arrive_idx	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int arrive_idx = 32 \/ sizeof(int);$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
as_aggregate	impl/Kokkos_TaskNode.hpp	/^  as_aggregate() & {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION AggregateTask<TaskQueueTraits,SchedulingInfo> &
as_aggregate	impl/Kokkos_TaskNode.hpp	/^  as_aggregate() && {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION AggregateTask<TaskQueueTraits,SchedulingInfo> &&
as_aggregate	impl/Kokkos_TaskNode.hpp	/^  as_aggregate() const& {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION AggregateTask<TaskQueueTraits,SchedulingInfo> const &
as_python_type	KokkosExp_InterOp.hpp	/^auto as_python_type(Tp&& _v) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:auto
as_runnable_task	impl/Kokkos_TaskNode.hpp	/^  RunnableTaskBase<TaskQueueTraits> const volatile& as_runnable_task() const$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION RunnableTaskBase<TaskQueueTraits> const volatile &
as_runnable_task	impl/Kokkos_TaskNode.hpp	/^  RunnableTaskBase<TaskQueueTraits> const& as_runnable_task() const& {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION RunnableTaskBase<TaskQueueTraits> const &
as_runnable_task	impl/Kokkos_TaskNode.hpp	/^  RunnableTaskBase<TaskQueueTraits> volatile& as_runnable_task() volatile& {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION RunnableTaskBase<TaskQueueTraits> volatile &
as_runnable_task	impl/Kokkos_TaskNode.hpp	/^  RunnableTaskBase<TaskQueueTraits>& as_runnable_task() & {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION RunnableTaskBase<TaskQueueTraits> &
as_runnable_task	impl/Kokkos_TaskNode.hpp	/^  RunnableTaskBase<TaskQueueTraits>&& as_runnable_task() && {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION RunnableTaskBase<TaskQueueTraits> &&
as_view_of_rank_n	Kokkos_View.hpp	/^as_view_of_rank_n(View<Args...> v) {$/;"	f	namespace:Kokkos::Impl
as_view_of_rank_n	Kokkos_View.hpp	/^as_view_of_rank_n(View<T, Args...>) {$/;"	f	namespace:Kokkos::Impl
as_volatile	impl/Kokkos_OptionalRef.hpp	/^  OptionalRef<std::add_volatile_t<T>> as_volatile() volatile noexcept {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<std::add_volatile_t<T>>
as_volatile	impl/Kokkos_OptionalRef.hpp	/^  OptionalRef<std::add_volatile_t<std::add_const_t<T>>> as_volatile() const$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<std::add_volatile_t<std::add_const_t<T>>>
asin	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> asin($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
asin	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 asin(__float128 x) { return ::asinq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
asinh	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> asinh($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
asinh	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 asinh(__float128 x) { return ::asinhq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
assign	impl/Kokkos_SharedAlloc.hpp	/^  void assign(const SharedAllocationTracker& rhs, const bool enable_tracking) {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
assign	impl/Kokkos_TaskQueue.hpp	/^  KOKKOS_FUNCTION static void assign(task_root_type** const lhs,$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION void
assign	impl/Kokkos_ViewLayoutTiled.hpp	/^  KOKKOS_INLINE_FUNCTION static void assign($/;"	f	class:Kokkos::Impl::ViewMapping	typeref:typename:KOKKOS_INLINE_FUNCTION void
assign	impl/Kokkos_ViewTracker.hpp	/^  KOKKOS_INLINE_FUNCTION void assign(const View<RT, RP...>& vt) noexcept {$/;"	f	struct:Kokkos::Impl::ViewTracker	typeref:typename:KOKKOS_INLINE_FUNCTION void
assign_allocated_record_to_uninitialized	impl/Kokkos_SharedAlloc.hpp	/^  inline void assign_allocated_record_to_uninitialized(Record* arg_record) {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:void
assign_data	Kokkos_View.hpp	/^  void assign_data(pointer_type arg_data) {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION void
assign_direct	impl/Kokkos_SharedAlloc.hpp	/^  void assign_direct(const SharedAllocationTracker& rhs) {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
assign_force_disable	impl/Kokkos_SharedAlloc.hpp	/^  void assign_force_disable(const SharedAllocationTracker& rhs) {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
assignable	Kokkos_AnonymousSpace.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10103
assignable	Kokkos_AnonymousSpace.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10403
assignable	Kokkos_AnonymousSpace.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10703
assignable	Kokkos_Concepts.hpp	/^    assignable = is_memory_space<AccessSpace>::value && mem_access::assignable$/;"	e	enum:Kokkos::SpaceAccessibility::__anonfe5a008b0503
assignable	Kokkos_Concepts.hpp	/^  enum { assignable = std::is_same<DstMemorySpace, SrcMemorySpace>::value };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonfe5a008b0103
assignable	Kokkos_Cuda.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon944eb5290103
assignable	Kokkos_Cuda.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon944eb5290403
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from Cuda$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151c03
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from Host$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151f03
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };  \/\/ different execution_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861152203
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150103
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150403
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150a03
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151003
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151303
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151603
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151903
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150703
assignable	Kokkos_CudaSpace.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150d03
assignable	Kokkos_HBWSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon589a69990403
assignable	Kokkos_HBWSpace.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon589a69990103
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from HIP$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981303
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from Host$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981603
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };  \/\/ different exec_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981903
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };  \/\/ different exec_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38982203
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980103
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980703
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980a03
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980d03
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981c03
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981f03
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38982503
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980403
assignable	Kokkos_HIP_Space.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981003
assignable	Kokkos_HPX.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2e1eac7c0503
assignable	Kokkos_LogicalSpaces.hpp	/^  enum { assignable = MemorySpaceAccess<BaseSpace, OtherSpace>::assignable };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anoncffb81260103
assignable	Kokkos_OpenMP.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anone85181db0103
assignable	Kokkos_OpenMPTarget.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon958959a20103
assignable	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2679b92e0103
assignable	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2679b92e0403
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from Host$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21f03
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };  \/\/ Cannot access from SYCL$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21c03
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };  \/\/ different execution_space$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed22203
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20103
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20403
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20a03
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21003
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21303
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21603
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21903
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20703
assignable	Kokkos_SYCL_Space.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20d03
assignable	Kokkos_Serial.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona63965ac0303
assignable	Kokkos_Threads.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon3ff296770103
assignable	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90103
assignable	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { assignable = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90403
assignable	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { assignable = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90703
atan	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> atan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
atan	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 atan(__float128 x) { return ::atanq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
atan2	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 atan2(__float128 x, __float128 y) { return ::atan2q(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
atanh	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> atanh($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
atanh	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 atanh(__float128 x) { return ::atanhq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
atomic	Cuda/Kokkos_Cuda_Locks.hpp	/^  std::int32_t* atomic;$/;"	m	struct:Kokkos::Impl::CudaLockArrays	typeref:typename:std::int32_t *
atomic	HIP/Kokkos_HIP_Locks.hpp	/^  std::int32_t* atomic;$/;"	m	struct:Kokkos::Impl::HIPLockArrays	typeref:typename:std::int32_t *
atomic_add	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_add(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_add	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_add(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { return /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_add	impl/Kokkos_Atomic_Generic_Secondary.hpp	/^KOKKOS_INLINE_FUNCTION void atomic_add(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_add_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_add_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_add_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_add_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_add_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_add_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_and	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_and(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_and	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_and(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { (void) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^KOKKOS_INLINE_FUNCTION void atomic_and(volatile T* const dest, const T src) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_and_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_and_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_and_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_and_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_and_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_and_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_assign	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ void atomic_assign($/;"	f	namespace:Kokkos	typeref:typename:__device__ void
atomic_assign	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_assign(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { atom/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_assign	impl/Kokkos_Atomic_Exchange.hpp	/^__inline__ __device__ void atomic_assign($/;"	f	namespace:Kokkos	typeref:typename:__device__ void
atomic_assign	impl/Kokkos_Atomic_Exchange.hpp	/^__inline__ __device__ void atomic_assign(volatile T* const,$/;"	f	namespace:Kokkos	typeref:typename:__device__ void
atomic_assign	impl/Kokkos_Atomic_Exchange.hpp	/^inline void atomic_assign($/;"	f	namespace:Kokkos	typeref:typename:void
atomic_assign	impl/Kokkos_Atomic_Exchange.hpp	/^inline void atomic_assign(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:void
atomic_assign	impl/Kokkos_Atomic_Exchange.hpp	/^inline void atomic_assign(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:void
atomic_assign	impl/Kokkos_Atomic_Exchange.hpp	/^inline void atomic_assign(volatile T* const dest_v, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:void
atomic_compare_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ T atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_compare_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ int atomic_compare_exchange(volatile int *dest, int compare,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_compare_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ unsigned int atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_compare_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ unsigned long long int atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_compare_exchange	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_compare_exchange(volatile T* const dest, const T compare, const T desired) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_compare_exchange	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_compare_exchange(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> comp/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_compare_exchange(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_compare_exchange(volatile T* const dest_v,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^__inline__ __device__ T atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^__inline__ __device__ int atomic_compare_exchange(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^__inline__ __device__ unsigned int atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^__inline__ __device__ unsigned long long int atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^atomic_compare_exchange(volatile T* const, const Kokkos::Impl::identity_t<T>,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^inline T atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^inline int atomic_compare_exchange(volatile int* const dest, const int compare,$/;"	f	namespace:Kokkos	typeref:typename:int
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^inline long atomic_compare_exchange(volatile long* const dest,$/;"	f	namespace:Kokkos	typeref:typename:long
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^inline unsigned int atomic_compare_exchange(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned int
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^inline unsigned long atomic_compare_exchange(volatile unsigned long* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned long
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^inline unsigned long long atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:unsigned long long
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_compare_exchange(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_compare_exchange(volatile T* const dest_v,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^inline T atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:T
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^inline int atomic_compare_exchange(volatile int* const dest, const int compare,$/;"	f	namespace:Kokkos	typeref:typename:int
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^inline long atomic_compare_exchange(volatile long* const dest,$/;"	f	namespace:Kokkos	typeref:typename:long
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^inline unsigned int atomic_compare_exchange(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned int
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^inline unsigned long atomic_compare_exchange(volatile unsigned long* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned long
atomic_compare_exchange	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^inline unsigned long long atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:unsigned long long
atomic_compare_exchange	impl/Kokkos_Atomic_Windows.hpp	/^inline T atomic_compare_exchange($/;"	f	namespace:Kokkos	typeref:typename:T
atomic_compare_exchange_strong	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^bool atomic_compare_exchange_strong(volatile T* const dest, T& expected, const T desired) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
atomic_compare_exchange_strong	Kokkos_Atomics_Desul_Wrapper.hpp	/^  bool atomic_compare_exchange_strong(T* const dest, T& expected, const T desired, MemOrderSucce/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION bool
atomic_compare_exchange_strong	Kokkos_Atomics_Desul_Wrapper.hpp	/^bool atomic_compare_exchange_strong(T* const dest, desul::Impl::dont_deduce_this_parameter_t<con/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
atomic_compare_exchange_strong	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^KOKKOS_FORCEINLINE_FUNCTION bool atomic_compare_exchange_strong($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
atomic_compare_exchange_strong	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^KOKKOS_INLINE_FUNCTION bool atomic_compare_exchange_strong($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
atomic_compare_exchange_strong	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^KOKKOS_INLINE_FUNCTION bool atomic_compare_exchange_strong($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
atomic_compare_exchange_weak	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^__inline__ __device__ bool atomic_compare_exchange_weak($/;"	f	namespace:Kokkos	typeref:typename:__device__ bool
atomic_compare_exchange_weak	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^bool atomic_compare_exchange_weak($/;"	f	namespace:Kokkos	typeref:typename:bool
atomic_dec	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_dec(volatile T* const dest) { return desul::atomic_dec(const_cast<T*>(dest),desul::M/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_dec	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_dec(T* const dest) { return desul::atomic_dec(dest, desul::MemoryOrderRelaxed(), KOK/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_dec_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_dec_fetch(volatile T* const dest) { return desul::atomic_dec_fetch(const_cast<T*>(dest)/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_dec_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_dec_fetch(T* const dest) { return desul::atomic_dec_fetch(dest, desul::MemoryOrderRelax/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_decrement	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_decrement(volatile T* const dest) { return desul::atomic_dec(const_cast<T*>(dest),de/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_decrement	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_decrement(T* const dest) { return desul::atomic_dec(dest, desul::MemoryOrderRelaxed(/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_decrement	impl/Kokkos_Atomic_Decrement.hpp	/^KOKKOS_INLINE_FUNCTION void atomic_decrement(volatile T* a) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_div	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_div(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_div	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_div(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { return /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_div	impl/Kokkos_Atomic_Generic_Secondary.hpp	/^KOKKOS_INLINE_FUNCTION void atomic_div(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_div_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_div_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_div_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_div_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_div_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_div_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ T atomic_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ float atomic_exchange(volatile float *const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ float
atomic_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ int atomic_exchange(volatile int *const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ unsigned int atomic_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ unsigned long long int atomic_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_exchange	HIP/Kokkos_HIP_Atomic.hpp	/^atomic_exchange(volatile T *const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_exchange	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_exchange(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_exchange	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_exchange(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { retur/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^__inline__ __device__ T atomic_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^__inline__ __device__ T atomic_exchange(volatile T* const,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^__inline__ __device__ int atomic_exchange(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^__inline__ __device__ unsigned int atomic_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^__inline__ __device__ unsigned long long int atomic_exchange($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^atomic_exchange(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^inline T atomic_exchange($/;"	f	namespace:Kokkos	typeref:typename:T
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^inline T atomic_exchange(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^inline T atomic_exchange(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_exchange	impl/Kokkos_Atomic_Exchange.hpp	/^inline T atomic_exchange(volatile T* const dest_v, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_exchange	impl/Kokkos_Atomic_Generic_Secondary.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_exchange(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ T atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ char atomic_fetch_add(volatile char *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ char
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ long long atomic_fetch_add(volatile long long *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ long long
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ short atomic_fetch_add(volatile short *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ short
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^atomic_fetch_add(volatile T *const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ T atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ float atomic_fetch_add(volatile float *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ float
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ int atomic_fetch_add(volatile int *dest, const int &val) {$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ unsigned int atomic_fetch_add(volatile unsigned int *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_add	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ unsigned long long atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long
atomic_fetch_add	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_add (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_add	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^double atomic_fetch_add(volatile double* const dest, double val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION double
atomic_fetch_add	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_add (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_add	Kokkos_Atomics_Desul_Wrapper.hpp	/^double atomic_fetch_add(double* const dest, double val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION double
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^T atomic_fetch_add(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^T atomic_fetch_add(volatile T* const dest_v, std::add_const_t<T> val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^__inline__ __device__ T atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^__inline__ __device__ T atomic_fetch_add(volatile T* const,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^__inline__ __device__ double atomic_fetch_add(volatile double* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ double
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^__inline__ __device__ float atomic_fetch_add(volatile float* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ float
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^__inline__ __device__ int atomic_fetch_add(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^__inline__ __device__ unsigned int atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^__inline__ __device__ unsigned long long int atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^atomic_fetch_add(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^inline T atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^inline T atomic_fetch_add(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^inline int atomic_fetch_add(volatile int* const dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:int
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^inline int atomic_fetch_add(volatile int* dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:int
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^inline long int atomic_fetch_add(volatile long int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:long int
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^inline unsigned int atomic_fetch_add(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned int
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^inline unsigned long int atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:unsigned long int
atomic_fetch_add	impl/Kokkos_Atomic_Fetch_Add.hpp	/^inline unsigned long long int atomic_fetch_add($/;"	f	namespace:Kokkos	typeref:typename:unsigned long long int
atomic_fetch_add	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_add(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_and	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ int atomic_fetch_and(volatile int *const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_and	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ unsigned int atomic_fetch_and($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_and	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ unsigned long long int atomic_fetch_and($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_fetch_and	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_and (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_and	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_and (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^T atomic_fetch_and(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^T atomic_fetch_and(volatile T* const dest_v, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^__inline__ __device__ T atomic_fetch_and(volatile T* const,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^__inline__ __device__ int atomic_fetch_and(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^__inline__ __device__ long atomic_fetch_and(volatile long* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ long
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^__inline__ __device__ unsigned int atomic_fetch_and($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^__inline__ __device__ unsigned long atomic_fetch_and($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^__inline__ __device__ unsigned long long int atomic_fetch_and($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^inline int atomic_fetch_and(volatile int* const dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:int
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^inline long int atomic_fetch_and(volatile long int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:long int
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^inline unsigned int atomic_fetch_and(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned int
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^inline unsigned long int atomic_fetch_and($/;"	f	namespace:Kokkos	typeref:typename:unsigned long int
atomic_fetch_and	impl/Kokkos_Atomic_Fetch_And.hpp	/^inline unsigned long long int atomic_fetch_and($/;"	f	namespace:Kokkos	typeref:typename:unsigned long long int
atomic_fetch_and	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_and(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_dec	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_dec(volatile T* const dest) { return desul::atomic_fetch_dec(const_cast<T*>(dest)/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_dec	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_dec(T* const dest) { return desul::atomic_fetch_dec(dest, desul::MemoryOrderRelax/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_div	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_div (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_div	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_div (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_div	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_div(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_inc	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_inc(volatile T* const dest) { return desul::atomic_fetch_inc(const_cast<T*>(dest)/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_inc	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_inc(T* const dest) { return desul::atomic_fetch_inc(dest, desul::MemoryOrderRelax/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_lshift	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_lshift(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T>/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_lshift	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_lshift(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { r/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_lshift	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_lshift(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_max	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_max (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_max	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_max (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_max	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_max(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_max	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ int atomic_fetch_max(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_max	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ unsigned int atomic_fetch_max($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_max	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ unsigned long long int atomic_fetch_max($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_fetch_max	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ int atomic_fetch_max(volatile int* const dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:__host__ int
atomic_fetch_max	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ unsigned int atomic_fetch_max(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__host__ unsigned int
atomic_fetch_max	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ unsigned long long int atomic_fetch_max($/;"	f	namespace:Kokkos	typeref:typename:__host__ unsigned long long int
atomic_fetch_min	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_min (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_min	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_min (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_min	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_min(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_min	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ int atomic_fetch_min(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_min	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ unsigned int atomic_fetch_min($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_min	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ unsigned long long int atomic_fetch_min($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_fetch_min	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ int atomic_fetch_min(volatile int* const dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:__host__ int
atomic_fetch_min	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ unsigned int atomic_fetch_min(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__host__ unsigned int
atomic_fetch_min	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ unsigned long long int atomic_fetch_min($/;"	f	namespace:Kokkos	typeref:typename:__host__ unsigned long long int
atomic_fetch_mod	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_mod (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_mod	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_mod (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_mod	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_mod(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_mul	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_mul (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_mul	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_mul (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_mul	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_mul(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_nand	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_nand(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_nand	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_nand(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_oper	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_oper($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_oper	impl/Kokkos_Atomic_Generic.hpp	/^atomic_fetch_oper(const Oper& op, volatile T* const dest,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_or	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ int atomic_fetch_or(volatile int *const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_or	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ unsigned int atomic_fetch_or($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_or	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ unsigned long long int atomic_fetch_or($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_fetch_or	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_or  (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_or	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_or  (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^T atomic_fetch_or(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^T atomic_fetch_or(volatile T* const dest_v, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^__inline__ __device__ T atomic_fetch_or(volatile T* const,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^__inline__ __device__ int atomic_fetch_or(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^__inline__ __device__ long atomic_fetch_or(volatile long* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ long
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^__inline__ __device__ unsigned int atomic_fetch_or($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^__inline__ __device__ unsigned long atomic_fetch_or($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^__inline__ __device__ unsigned long long int atomic_fetch_or($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^inline int atomic_fetch_or(volatile int* const dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:int
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^inline long int atomic_fetch_or(volatile long int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:long int
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^inline unsigned int atomic_fetch_or(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned int
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^inline unsigned long int atomic_fetch_or(volatile unsigned long int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned long int
atomic_fetch_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^inline unsigned long long int atomic_fetch_or($/;"	f	namespace:Kokkos	typeref:typename:unsigned long long int
atomic_fetch_or	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_or(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_rshift	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_rshift(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T>/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_rshift	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_rshift(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { r/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_rshift	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_rshift(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_sub	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ T atomic_fetch_sub($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_sub	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ char atomic_fetch_sub(volatile char *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ char
atomic_fetch_sub	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ int atomic_fetch_sub(volatile int *dest, int const &val) {$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_sub	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ long long atomic_fetch_sub(volatile long long *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ long long
atomic_fetch_sub	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ short atomic_fetch_sub(volatile short *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ short
atomic_fetch_sub	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ unsigned int atomic_fetch_sub(volatile unsigned int *dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_sub	HIP/Kokkos_HIP_Atomic.hpp	/^__inline__ __device__ unsigned long long atomic_fetch_sub($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long
atomic_fetch_sub	HIP/Kokkos_HIP_Atomic.hpp	/^inline __device__ T atomic_fetch_sub($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_sub	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_sub (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_sub	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^double atomic_fetch_sub(volatile double* const dest, double val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION double
atomic_fetch_sub	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_sub (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_sub	Kokkos_Atomics_Desul_Wrapper.hpp	/^double atomic_fetch_sub(double* const dest, double val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION double
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^T atomic_fetch_sub(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^T atomic_fetch_sub(volatile T* const dest_v, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^__inline__ __device__ T atomic_fetch_sub($/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^__inline__ __device__ T atomic_fetch_sub(volatile T* const,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^__inline__ __device__ int atomic_fetch_sub(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^__inline__ __device__ unsigned int atomic_fetch_sub($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^__inline__ __device__ unsigned int atomic_fetch_sub(volatile double* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^__inline__ __device__ unsigned int atomic_fetch_sub(volatile float* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^atomic_fetch_sub(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^inline T atomic_fetch_sub($/;"	f	namespace:Kokkos	typeref:typename:T
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^inline int atomic_fetch_sub(volatile int* const dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:int
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^inline long int atomic_fetch_sub(volatile long int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:long int
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^inline unsigned int atomic_fetch_sub(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:unsigned int
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^inline unsigned long int atomic_fetch_sub($/;"	f	namespace:Kokkos	typeref:typename:unsigned long int
atomic_fetch_sub	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^inline unsigned long long int atomic_fetch_sub($/;"	f	namespace:Kokkos	typeref:typename:unsigned long long int
atomic_fetch_sub	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_sub(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_xor	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_fetch_xor (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_xor	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_fetch_xor (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_fetch_xor	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_fetch_xor(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_inc	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_inc(volatile T* const dest) { return desul::atomic_inc(const_cast<T*>(dest),desul::M/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_inc	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_inc(T* const dest) { return desul::atomic_inc(dest, desul::MemoryOrderRelaxed(), KOK/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_inc_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_inc_fetch(volatile T* const dest) { return desul::atomic_inc_fetch(const_cast<T*>(dest)/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_inc_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_inc_fetch(T* const dest) { return desul::atomic_inc_fetch(dest, desul::MemoryOrderRelax/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_increment	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_increment(volatile T* const dest) { return desul::atomic_inc(const_cast<T*>(dest),de/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_increment	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_increment(T* const dest) { return desul::atomic_inc(dest, desul::MemoryOrderRelaxed(/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_increment	impl/Kokkos_Atomic_Increment.hpp	/^KOKKOS_INLINE_FUNCTION void atomic_increment(volatile T* a) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_load	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_load(volatile T* const dest) { return desul::atomic_load(const_cast<T*>(dest), desul::M/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_load	Kokkos_Atomics_Desul_Wrapper.hpp	/^  T atomic_load(const T* const src, MemoryOrder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_load	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_load(T* const dest) { return desul::atomic_load(dest, desul::MemoryOrderRelaxed(), KOKK/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_load	impl/Kokkos_Atomic_Load.hpp	/^KOKKOS_FORCEINLINE_FUNCTION T atomic_load(T* \/*ptr*\/,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T
atomic_load	impl/Kokkos_Atomic_Load.hpp	/^KOKKOS_FORCEINLINE_FUNCTION T atomic_load(T* ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T
atomic_load	impl/Kokkos_Atomic_Load.hpp	/^KOKKOS_FORCEINLINE_FUNCTION T atomic_load(T* ptr,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T
atomic_lshift_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_lshift_fetch(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T>/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_lshift_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_lshift_fetch(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { r/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_lshift_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_lshift_fetch(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_max	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_max(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_max	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_max(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { return /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_max_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_max_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_max_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_max_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_max_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_max_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_max_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ int atomic_max_fetch(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_max_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ unsigned int atomic_max_fetch($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_max_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ unsigned long long int atomic_max_fetch($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_max_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ int atomic_max_fetch(volatile int* const dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:__host__ int
atomic_max_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ unsigned int atomic_max_fetch(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__host__ unsigned int
atomic_max_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ unsigned long long int atomic_max_fetch($/;"	f	namespace:Kokkos	typeref:typename:__host__ unsigned long long int
atomic_min	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_min(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_min	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_min(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { return /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_min_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_min_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_min_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_min_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_min_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_min_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_min_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ int atomic_min_fetch(volatile int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__device__ int
atomic_min_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ unsigned int atomic_min_fetch($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned int
atomic_min_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __device__ unsigned long long int atomic_min_fetch($/;"	f	namespace:Kokkos	typeref:typename:__device__ unsigned long long int
atomic_min_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ int atomic_min_fetch(volatile int* const dest, const int val) {$/;"	f	namespace:Kokkos	typeref:typename:__host__ int
atomic_min_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ unsigned int atomic_min_fetch(volatile unsigned int* const dest,$/;"	f	namespace:Kokkos	typeref:typename:__host__ unsigned int
atomic_min_fetch	impl/Kokkos_Atomic_MinMax.hpp	/^inline __host__ unsigned long long int atomic_min_fetch($/;"	f	namespace:Kokkos	typeref:typename:__host__ unsigned long long int
atomic_mod_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_mod_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_mod_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_mod_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_mod_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_mod_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_mul	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_mul(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_mul	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_mul(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { return /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_mul	impl/Kokkos_Atomic_Generic_Secondary.hpp	/^KOKKOS_INLINE_FUNCTION void atomic_mul(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_mul_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_mul_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_mul_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_mul_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_mul_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_mul_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_nand_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_nand_fetch(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_nand_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_nand_fetch(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_oper_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_oper_fetch($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_oper_fetch	impl/Kokkos_Atomic_Generic.hpp	/^atomic_oper_fetch(const Oper& op, volatile T* const dest,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_or	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_or (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_or	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_or(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val)  { (void) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_or	impl/Kokkos_Atomic_Fetch_Or.hpp	/^KOKKOS_INLINE_FUNCTION void atomic_or(volatile T* const dest, const T src) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_or_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_or_fetch  (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_or_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_or_fetch  (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_or_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_or_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_query_version	Kokkos_Atomic.hpp	/^inline const char* atomic_query_version() {$/;"	f	namespace:Kokkos	typeref:typename:const char *
atomic_query_version	Kokkos_Atomics_Desul_Wrapper.hpp	/^inline const char* atomic_query_version() { return "KOKKOS_DESUL_ATOMICS"; }$/;"	f	namespace:Kokkos	typeref:typename:const char *
atomic_rshift_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_rshift_fetch(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T>/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_rshift_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_rshift_fetch(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { r/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_rshift_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_rshift_fetch(volatile T* const dest,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_store	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_store(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_store	Kokkos_Atomics_Desul_Wrapper.hpp	/^  void atomic_store(T* const src, const T val, MemoryOrder) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_store	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_store(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { retur/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_store	impl/Kokkos_Atomic_Store.hpp	/^KOKKOS_FORCEINLINE_FUNCTION void atomic_store(T* \/*ptr*\/, T \/*val*\/,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
atomic_store	impl/Kokkos_Atomic_Store.hpp	/^KOKKOS_FORCEINLINE_FUNCTION void atomic_store(T* ptr, T val) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
atomic_store	impl/Kokkos_Atomic_Store.hpp	/^KOKKOS_FORCEINLINE_FUNCTION void atomic_store(T* ptr, T val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
atomic_sub	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^void atomic_sub(volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_sub	Kokkos_Atomics_Desul_Wrapper.hpp	/^void atomic_sub(T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { return /;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_sub	impl/Kokkos_Atomic_Generic_Secondary.hpp	/^KOKKOS_INLINE_FUNCTION void atomic_sub(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
atomic_sub_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_sub_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_sub_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_sub_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_sub_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_sub_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_xor_fetch	Kokkos_Atomics_Desul_Volatile_Wrapper.hpp	/^T atomic_xor_fetch (volatile T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> v/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_xor_fetch	Kokkos_Atomics_Desul_Wrapper.hpp	/^T atomic_xor_fetch (T* const dest, desul::Impl::dont_deduce_this_parameter_t<const T> val) { ret/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
atomic_xor_fetch	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_INLINE_FUNCTION T atomic_xor_fetch(volatile T* const dest, const T val) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
attach_texture_object	Cuda/Kokkos_CudaSpace.cpp	/^SharedAllocationRecord<Kokkos::CudaSpace, void>::attach_texture_object($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::CudaSpace	typeref:typename:::cudaTextureObject_t
attach_texture_object	Kokkos_CudaSpace.hpp	/^  inline ::cudaTextureObject_t attach_texture_object() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:::cudaTextureObject_t
attach_texture_object_offset	Kokkos_CudaSpace.hpp	/^  inline int attach_texture_object_offset(const AliasType* const ptr) {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:int
attempt_to_steal_task	impl/Kokkos_TaskQueue.hpp	/^  task_root_type* attempt_to_steal_task() const noexcept { return nullptr; }$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION task_root_type *
attempt_to_steal_task	impl/Kokkos_TaskQueueMultiple.hpp	/^  typename base_t::task_root_type* attempt_to_steal_task() noexcept {$/;"	f	class:Kokkos::Impl::TaskQueueMultiple	typeref:typename:KOKKOS_INLINE_FUNCTION typename base_t::task_root_type *
attempted_alignment	impl/Kokkos_Error.hpp	/^  size_t attempted_alignment() const noexcept { return m_attempted_alignment; }$/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD size_t
attempted_size	impl/Kokkos_Error.hpp	/^  size_t attempted_size() const noexcept { return m_attempted_size; }$/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD size_t
available	Cuda/Kokkos_CudaSpace.cpp	/^bool CudaUVMSpace::available() {$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:bool
available	impl/Kokkos_hwloc.cpp	/^bool available() { return false; }$/;"	f	namespace:Kokkos::hwloc	typeref:typename:bool
available	impl/Kokkos_hwloc.cpp	/^bool available() { return true; }$/;"	f	namespace:Kokkos::hwloc	typeref:typename:bool
b	Kokkos_CopyViews.hpp	/^  ViewTypeB b;$/;"	m	struct:Kokkos::Impl::ViewCopy	typeref:typename:ViewTypeB
backend_details_base_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using backend_details_base_t =$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:GraphNodeBackendDetailsBeforeTypeErasure<ExecutionSpace,Kernel,PredecessorRef>
backtrace	impl/Kokkos_Stacktrace.cpp	/^int backtrace(void**, int) { return 0; }$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
backtrace_symbols	impl/Kokkos_Stacktrace.cpp	/^char** backtrace_symbols(void* const*, int) { return nullptr; }$/;"	f	namespace:Kokkos::Impl	typeref:typename:char **
backup_callbacks	impl/Kokkos_Profiling.cpp	/^static EventSet backup_callbacks;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:EventSet	file:
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static int band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long long band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long long
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static short band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION short
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static signed char band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION signed char
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned char band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned char
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned int band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned int
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long long band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long long
band	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned short band() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned short
barrier	Threads/Kokkos_ThreadsExec.hpp	/^  inline void barrier() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
base_memory_space	Kokkos_MemoryPool.hpp	/^                                                 base_memory_space>::accessible$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0803
base_memory_space	Kokkos_MemoryPool.hpp	/^  using base_memory_space = typename DeviceType::memory_space;$/;"	t	class:Kokkos::MemoryPool	typeref:typename:DeviceType::memory_space
base_t	Cuda/Kokkos_Cuda_Error.hpp	/^  using base_t = RawMemoryAllocationFailure;$/;"	t	class:Kokkos::Experimental::CudaRawMemoryAllocationFailure	typeref:typename:RawMemoryAllocationFailure
base_t	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:PatternImplSpecializationFromTag<PatternTag,Functor,PolicyType,Args...,Kokkos::Cuda>::type
base_t	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  using base_t = CudaParallelLaunchKernelFunc<$/;"	t	struct:Kokkos::Impl::CudaParallelLaunchKernelInvoker	typeref:typename:CudaParallelLaunchKernelFunc<DriverType,LaunchBounds,Experimental::CudaLaunchMechanism::ConstantMemory>
base_t	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  using base_t = CudaParallelLaunchKernelFunc<$/;"	t	struct:Kokkos::Impl::CudaParallelLaunchKernelInvoker	typeref:typename:CudaParallelLaunchKernelFunc<DriverType,LaunchBounds,Experimental::CudaLaunchMechanism::GlobalMemory>
base_t	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  using base_t = CudaParallelLaunchKernelFunc<$/;"	t	struct:Kokkos::Impl::CudaParallelLaunchKernelInvoker	typeref:typename:CudaParallelLaunchKernelFunc<DriverType,LaunchBounds,Experimental::CudaLaunchMechanism::LocalMemory>
base_t	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  using base_t = CudaParallelLaunchKernelInvoker<$/;"	t	struct:Kokkos::Impl::CudaParallelLaunchImpl	typeref:typename:CudaParallelLaunchKernelInvoker<DriverType,Kokkos::LaunchBounds<MaxThreadsPerBlock,MinBlocksPerSM>,LaunchMechanism>
base_t	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  using base_t =$/;"	t	struct:Kokkos::Impl::CudaParallelLaunch	typeref:typename:CudaParallelLaunchImpl<DriverType,LaunchBounds,LaunchMechanism>
base_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using base_t = HIPParallelLaunchKernelFunc<DriverType, LaunchBounds,$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelInvoker	typeref:typename:HIPParallelLaunchKernelFunc<DriverType,LaunchBounds,HIPLaunchMechanism::GlobalMemory>
base_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using base_t = HIPParallelLaunchKernelFunc<DriverType, LaunchBounds,$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelInvoker	typeref:typename:HIPParallelLaunchKernelFunc<DriverType,LaunchBounds,HIPLaunchMechanism::LocalMemory>
base_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using base_t = HIPParallelLaunchKernelInvoker<$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunch	typeref:typename:HIPParallelLaunchKernelInvoker<DriverType,Kokkos::LaunchBounds<MaxThreadsPerBlock,MinBlocksPerSM>,LaunchMechanism>
base_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using base_t =$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelInvoker	typeref:typename:HIPParallelLaunchKernelFunc<DriverType,LaunchBounds,HIPLaunchMechanism::ConstantMemory>
base_t	Kokkos_CudaSpace.hpp	/^  using base_t     = SharedAllocationRecordCommon<Kokkos::CudaHostPinnedSpace>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecordCommon<Kokkos::CudaHostPinnedSpace>
base_t	Kokkos_CudaSpace.hpp	/^  using base_t     = SharedAllocationRecordCommon<Kokkos::CudaUVMSpace>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecordCommon<Kokkos::CudaUVMSpace>
base_t	Kokkos_CudaSpace.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:HostInaccessibleSharedAllocationRecordCommon<Kokkos::CudaSpace>
base_t	Kokkos_HIP_Space.hpp	/^  using base_t = HostInaccessibleSharedAllocationRecordCommon<$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:HostInaccessibleSharedAllocationRecordCommon<Kokkos::Experimental::HIPSpace>
base_t	Kokkos_HIP_Space.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecordCommon<Kokkos::Experimental::HIPHostPinnedSpace>
base_t	Kokkos_HIP_Space.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecordCommon<Kokkos::Experimental::HIPManagedSpace>
base_t	Kokkos_HostSpace.hpp	/^  using base_t     = SharedAllocationRecordCommon<Kokkos::HostSpace>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecordCommon<Kokkos::HostSpace>
base_t	Kokkos_OpenMPTargetSpace.hpp	/^  using base_t = HostInaccessibleSharedAllocationRecordCommon<$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:HostInaccessibleSharedAllocationRecordCommon<Kokkos::Experimental::OpenMPTargetSpace>
base_t	Kokkos_SYCL_Space.hpp	/^  using base_t = HostInaccessibleSharedAllocationRecordCommon<$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:HostInaccessibleSharedAllocationRecordCommon<Kokkos::Experimental::SYCLDeviceUSMSpace>
base_t	Kokkos_SYCL_Space.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecordCommon<Kokkos::Experimental::SYCLHostUSMSpace>
base_t	Kokkos_SYCL_Space.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecordCommon<Kokkos::Experimental::SYCLSharedUSMSpace>
base_t	OpenACC/Kokkos_OpenACCSpace.hpp	/^  using base_t = HostInaccessibleSharedAllocationRecordCommon<$/;"	t	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:HostInaccessibleSharedAllocationRecordCommon<Kokkos::Experimental::OpenACCSpace>
base_t	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using base_t     = ParallelScan<FunctorType, Kokkos::RangePolicy<Traits...>,$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ParallelScan<FunctorType,Kokkos::RangePolicy<Traits...>,Kokkos::Experimental::OpenMPTarget>
base_t	impl/Kokkos_AnalyzePolicy.hpp	/^  using base_t = AnalyzeExecPolicy<void, Traits...>;$/;"	t	struct:Kokkos::Impl::AnalyzeExecPolicy	typeref:typename:AnalyzeExecPolicy<void,Traits...>
base_t	impl/Kokkos_AnalyzePolicy.hpp	/^  using base_t = AnalyzeExecPolicyUseMatcher<void, type_list<TraitSpecs...>,$/;"	t	struct:Kokkos::Impl::Traits	typeref:typename:AnalyzeExecPolicyUseMatcher<void,type_list<TraitSpecs...>,Trait,Traits...>
base_t	impl/Kokkos_AnalyzePolicy.hpp	/^  using base_t = typename TraitSpec::template mixin_matching_trait<$/;"	t	struct:Kokkos::Impl::AnalyzeExecPolicyUseMatcher	typeref:typename:TraitSpec::template mixin_matching_trait<Trait,AnalyzeExecPolicy<void,Traits...>>
base_t	impl/Kokkos_AnalyzePolicy.hpp	/^  using base_t =$/;"	t	struct:Kokkos::Impl::AnalyzeExecPolicy	typeref:typename:AnalyzeExecPolicyUseMatcher<void,execution_policy_trait_specifications,Traits...>
base_t	impl/Kokkos_Combined_Reducer.hpp	/^  using base_t = CombinedReductionFunctorWrapperImpl<$/;"	t	struct:Kokkos::Impl::CombinedReductionFunctorWrapper
base_t	impl/Kokkos_Combined_Reducer.hpp	/^  using base_t =$/;"	t	struct:Kokkos::Impl::CombinedReducer
base_t	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:PatternImplSpecializationFromTag<PatternTag,Functor,PolicyType,Args...,ExecutionSpace>::type
base_t	impl/Kokkos_EBO.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::ExecutionSpaceInstanceStorage	typeref:typename:NoUniqueAddressMemberEmulation<ExecutionSpace,DefaultCtorNotOnDevice>
base_t	impl/Kokkos_EBO.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::MemorySpaceInstanceStorage	typeref:typename:NoUniqueAddressMemberEmulation<MemorySpace,DefaultCtorNotOnDevice>
base_t	impl/Kokkos_EBO.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::NoUniqueAddressMemberEmulation	typeref:typename:StandardLayoutNoUniqueAddressMemberEmulation<T,CtorsNotOnDevice>
base_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using base_t = GraphNodeImpl<ExecutionSpace, Kernel,$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:GraphNodeImpl<ExecutionSpace,Kernel,Kokkos::Experimental::TypeErasedTag>
base_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using base_t =$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:GraphNodeImpl<ExecutionSpace,Kokkos::Experimental::TypeErasedTag,Kokkos::Experimental::TypeErasedTag>
base_t	impl/Kokkos_LIFO.hpp	/^  using base_t    = LockBasedLIFOCommon<T>;$/;"	t	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:LockBasedLIFOCommon<T>
base_t	impl/Kokkos_LIFO.hpp	/^  using base_t    = LockBasedLIFOCommon<T>;$/;"	t	class:Kokkos::Impl::SingleConsumeOperationLIFO	typeref:typename:LockBasedLIFOCommon<T>
base_t	impl/Kokkos_MultipleTaskQueue.hpp	/^  using base_t = TaskQueueMemoryManager<ExecSpace, MemorySpace, MemoryPool>;$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:TaskQueueMemoryManager<ExecSpace,MemorySpace,MemoryPool>
base_t	impl/Kokkos_SharedAlloc.hpp	/^  using base_t        = SharedAllocationRecordCommon<MemorySpace>;$/;"	t	class:Kokkos::Impl::HostInaccessibleSharedAllocationRecordCommon	typeref:typename:SharedAllocationRecordCommon<MemorySpace>
base_t	impl/Kokkos_SingleTaskQueue.hpp	/^  using base_t = TaskQueueMemoryManager<ExecSpace, MemorySpace, MemoryPool>;$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:TaskQueueMemoryManager<ExecSpace,MemorySpace,MemoryPool>
base_t	impl/Kokkos_TaskNode.hpp	/^  using base_t                    = BaseType;$/;"	t	class:Kokkos::Impl::SchedulingInfoStorage	typeref:typename:BaseType
base_t	impl/Kokkos_TaskNode.hpp	/^  using base_t = Base;$/;"	t	class:Kokkos::Impl::TaskResultStorage	typeref:typename:Base
base_t	impl/Kokkos_TaskNode.hpp	/^  using base_t = TaskNode<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:TaskNode<TaskQueueTraits>
base_t	impl/Kokkos_TaskNode.hpp	/^  using base_t = TaskResultStorage<$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:TaskResultStorage<ResultType,SchedulingInfoStorage<RunnableTaskBase<TaskQueueTraits>,typename Scheduler::task_queue_type::task_scheduling_info_type>>
base_t	impl/Kokkos_TaskNode.hpp	/^  using base_t =$/;"	t	class:Kokkos::Impl::AggregateTask	typeref:typename:SchedulingInfoStorage<TaskNode<TaskQueueTraits>,SchedulingInfo>
base_t	impl/Kokkos_TaskQueueMultiple.hpp	/^  using base_t             = TaskQueue<ExecSpace, MemorySpace>;$/;"	t	class:Kokkos::Impl::TaskQueueMultiple	typeref:typename:TaskQueue<ExecSpace,MemorySpace>
base_t	traits/Kokkos_ExecutionSpaceTrait.hpp	/^    using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::ExecutionSpaceTrait::mixin_matching_trait	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_GraphKernelTrait.hpp	/^    using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::GraphKernelTrait::mixin_matching_trait	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_IndexTypeTrait.hpp	/^  using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::IndexTypePolicyMixin	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_IterationPatternTrait.hpp	/^    using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::IterationPatternTrait::mixin_matching_trait	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_LaunchBoundsTrait.hpp	/^    using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::LaunchBoundsTrait::mixin_matching_trait	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_OccupancyControlTrait.hpp	/^  using base_t            = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_OccupancyControlTrait.hpp	/^  using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_ScheduleTrait.hpp	/^    using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::ScheduleTrait::mixin_matching_trait	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_WorkItemPropertyTrait.hpp	/^    using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::WorkItemPropertyTrait::mixin_matching_trait	typeref:typename:AnalyzeNextTrait
base_t	traits/Kokkos_WorkTagTrait.hpp	/^    using base_t = AnalyzeNextTrait;$/;"	t	struct:Kokkos::Impl::WorkTagTrait::mixin_matching_trait	typeref:typename:AnalyzeNextTrait
base_traits	traits/Kokkos_ExecutionSpaceTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::ExecutionSpaceTrait
base_traits	traits/Kokkos_GraphKernelTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::GraphKernelTrait
base_traits	traits/Kokkos_IndexTypeTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::IndexTypeTrait
base_traits	traits/Kokkos_IterationPatternTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::IterationPatternTrait
base_traits	traits/Kokkos_LaunchBoundsTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::LaunchBoundsTrait
base_traits	traits/Kokkos_OccupancyControlTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::OccupancyControlTrait
base_traits	traits/Kokkos_ScheduleTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::ScheduleTrait
base_traits	traits/Kokkos_WorkItemPropertyTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::WorkItemPropertyTrait
base_traits	traits/Kokkos_WorkTagTrait.hpp	/^  struct base_traits {$/;"	s	struct:Kokkos::Impl::WorkTagTrait
base_type	Kokkos_Crs.hpp	/^  using base_type = CountAndFillBase<CrsType, Functor>;$/;"	t	struct:Kokkos::CountAndFill	typeref:typename:CountAndFillBase<CrsType,Functor>
base_type	impl/Kokkos_SharedAlloc.hpp	/^  using base_type = SharedAllocationRecord<MemorySpace, void>;$/;"	t	function:Kokkos::Impl::__anon4cadf70f0110::deallocate	typeref:typename:SharedAllocationRecord<MemorySpace,void>
begin	Kokkos_ExecPolicy.hpp	/^    KOKKOS_INLINE_FUNCTION member_type begin() const { return m_begin; }$/;"	f	struct:Kokkos::RangePolicy::WorkRange	typeref:typename:KOKKOS_INLINE_FUNCTION member_type
begin	Kokkos_ExecPolicy.hpp	/^  KOKKOS_INLINE_FUNCTION member_type begin() const { return m_begin; }$/;"	f	class:Kokkos::RangePolicy	typeref:typename:KOKKOS_INLINE_FUNCTION member_type
begin	Kokkos_Tuners.hpp	/^  auto begin() {$/;"	f	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:auto
begin	Kokkos_Tuners.hpp	/^  const Choice& begin() {$/;"	f	struct:Kokkos::Tools::Experimental::CategoricalTuner	typeref:typename:const Choice &
begin	impl/Kokkos_VLAEmulation.hpp	/^  const_iterator begin() const noexcept { return _vla_pointer(); }$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION const_iterator
begin	impl/Kokkos_VLAEmulation.hpp	/^  iterator begin() noexcept { return _vla_pointer(); }$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION iterator
beginDeepCopy	impl/Kokkos_Profiling.cpp	/^void beginDeepCopy(const SpaceHandle dst_space, const std::string dst_label,$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
beginDeepCopy	impl/Kokkos_Profiling.cpp	/^void beginDeepCopy(const SpaceHandle dst_space, const std::string dst_label,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
beginDeepCopyFunction	impl/Kokkos_Profiling_Interface.hpp	/^using beginDeepCopyFunction   = Kokkos_Profiling_beginDeepCopyFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_beginDeepCopyFunction
beginFence	impl/Kokkos_Profiling.cpp	/^void beginFence(const std::string name, const uint32_t deviceId,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
beginFenceFunction	impl/Kokkos_Profiling_Interface.hpp	/^using beginFenceFunction      = Kokkos_Profiling_beginFenceFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_beginFenceFunction
beginFunction	impl/Kokkos_Profiling_Interface.hpp	/^using beginFunction          = Kokkos_Profiling_beginFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_beginFunction
beginParallelFor	impl/Kokkos_Profiling.cpp	/^void beginParallelFor(const std::string& kernelPrefix, const uint32_t devID,$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
beginParallelFor	impl/Kokkos_Profiling.cpp	/^void beginParallelFor(const std::string& kernelPrefix, const uint32_t devID,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
beginParallelReduce	impl/Kokkos_Profiling.cpp	/^void beginParallelReduce(const std::string& kernelPrefix, const uint32_t devID,$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
beginParallelReduce	impl/Kokkos_Profiling.cpp	/^void beginParallelReduce(const std::string& kernelPrefix, const uint32_t devID,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
beginParallelScan	impl/Kokkos_Profiling.cpp	/^void beginParallelScan(const std::string& kernelPrefix, const uint32_t devID,$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
beginParallelScan	impl/Kokkos_Profiling.cpp	/^void beginParallelScan(const std::string& kernelPrefix, const uint32_t devID,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
begin_context	impl/Kokkos_Profiling.cpp	/^void begin_context(size_t contextId) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
begin_deep_copy	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_beginDeepCopyFunction begin_deep_copy;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_beginDeepCopyFunction
begin_fence	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_beginFenceFunction begin_fence;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_beginFenceFunction
begin_parallel_for	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_beginFunction begin_parallel_for;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_beginFunction
begin_parallel_for	impl/Kokkos_Tools_Generic.hpp	/^void begin_parallel_for(ExecPolicy& policy, FunctorType& functor,$/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:void
begin_parallel_reduce	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_beginFunction begin_parallel_reduce;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_beginFunction
begin_parallel_reduce	impl/Kokkos_Tools_Generic.hpp	/^void begin_parallel_reduce(ExecPolicy& policy, FunctorType& functor,$/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:void
begin_parallel_scan	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_beginFunction begin_parallel_scan;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_beginFunction
begin_parallel_scan	impl/Kokkos_Tools_Generic.hpp	/^void begin_parallel_scan(ExecPolicy& policy, FunctorType& functor,$/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:void
begin_tuning_context	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_contextBeginFunction begin_tuning_context;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Tools_contextBeginFunction
bhalf_impl_t	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^struct bhalf_impl_t {$/;"	s	namespace:Kokkos::Impl
bhalf_impl_t	Kokkos_Half.hpp	/^struct bhalf_impl_t {$/;"	s	namespace:Kokkos::Impl
bhalf_t	Kokkos_Half.hpp	/^using bhalf_t = Kokkos::Experimental::Impl::floating_point_wrapper<$/;"	t	namespace:Kokkos::Experimental	typeref:typename:Kokkos::Experimental::Impl::floating_point_wrapper<Kokkos::Impl::bhalf_impl_t::type>
bhalf_t	Kokkos_Half.hpp	/^using bhalf_t = Kokkos::Impl::bhalf_impl_t::type;$/;"	t	namespace:Kokkos::Experimental	typeref:typename:Kokkos::Impl::bhalf_impl_t::type
bind_this_thread	impl/Kokkos_hwloc.cpp	/^bool bind_this_thread(const std::pair<unsigned, unsigned> coord) {$/;"	f	namespace:Kokkos::hwloc	typeref:typename:bool
bind_this_thread	impl/Kokkos_hwloc.cpp	/^bool bind_this_thread(const std::pair<unsigned, unsigned>) { return false; }$/;"	f	namespace:Kokkos::hwloc	typeref:typename:bool
bind_this_thread	impl/Kokkos_hwloc.cpp	/^unsigned bind_this_thread(const unsigned coordinate_count,$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
bind_this_thread	impl/Kokkos_hwloc.cpp	/^unsigned bind_this_thread(const unsigned, std::pair<unsigned, unsigned>[]) {$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
bit_count	impl/Kokkos_BitOps.hpp	/^int bit_count(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
bit_count_device	impl/Kokkos_BitOps.hpp	/^KOKKOS_IMPL_DEVICE_FUNCTION inline int bit_count_device(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION int
bit_count_fallback	impl/Kokkos_BitOps.hpp	/^int bit_count_fallback(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
bit_count_host	impl/Kokkos_BitOps.hpp	/^KOKKOS_IMPL_HOST_FUNCTION inline int bit_count_host(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_HOST_FUNCTION int
bit_first_zero	impl/Kokkos_BitOps.hpp	/^int bit_first_zero(unsigned i) noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
bit_first_zero_device	impl/Kokkos_BitOps.hpp	/^inline int bit_first_zero_device(unsigned i) noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION int
bit_first_zero_fallback	impl/Kokkos_BitOps.hpp	/^int bit_first_zero_fallback(unsigned i) noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
bit_first_zero_host	impl/Kokkos_BitOps.hpp	/^inline int bit_first_zero_host(unsigned i) noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_HOST_FUNCTION int
bit_scan_forward	impl/Kokkos_BitOps.hpp	/^int bit_scan_forward(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
bit_scan_forward_device	impl/Kokkos_BitOps.hpp	/^KOKKOS_IMPL_DEVICE_FUNCTION inline int bit_scan_forward_device(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION int
bit_scan_forward_fallback	impl/Kokkos_BitOps.hpp	/^int bit_scan_forward_fallback(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
bit_scan_forward_host	impl/Kokkos_BitOps.hpp	/^KOKKOS_IMPL_HOST_FUNCTION inline int bit_scan_forward_host(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_HOST_FUNCTION int
bits_per_int_lg2	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { bits_per_int_lg2 = CB::bits_per_int_lg2 };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0103
bits_per_int_lg2	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { bits_per_int_lg2 = 5 };$/;"	e	enum:Kokkos::Impl::concurrent_bitset::__anon337ce9bb0103
bits_per_int_mask	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { bits_per_int_mask = (1 << bits_per_int_lg2) - 1 };$/;"	e	enum:Kokkos::Impl::concurrent_bitset::__anon337ce9bb0203
blockIdx	impl/KokkosExp_IterateTileGPU.hpp	/^  const EmulateCUDADim3<index_type> blockIdx;$/;"	m	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:const EmulateCUDADim3<index_type>
blockIdx	impl/KokkosExp_IterateTileGPU.hpp	/^  const EmulateCUDADim3<index_type> blockIdx;$/;"	m	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:const EmulateCUDADim3<index_type>
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static int bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long long bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long long
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static short bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION short
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static signed char bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION signed char
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned char bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned char
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned int bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned int
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long long bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long long
bor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned short bor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned short
buffer	impl/Kokkos_Stacktrace.cpp	/^  static void* buffer[capacity];$/;"	m	class:Kokkos::Impl::Stacktrace	typeref:typename:void * []	file:
buffer	impl/Kokkos_Stacktrace.cpp	/^void* Stacktrace::buffer[Stacktrace::capacity];$/;"	m	class:Kokkos::Impl::Stacktrace	typeref:typename:void * []
buffer_bound	impl/Kokkos_ConcurrentBitset.hpp	/^  KOKKOS_INLINE_FUNCTION static constexpr uint32_t buffer_bound($/;"	f	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:KOKKOS_INLINE_FUNCTION uint32_t
buffer_bound_lg2	impl/Kokkos_ConcurrentBitset.hpp	/^  KOKKOS_INLINE_FUNCTION static constexpr uint32_t buffer_bound_lg2($/;"	f	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:KOKKOS_INLINE_FUNCTION uint32_t
buffer_type	Kokkos_HPX.hpp	/^  using buffer_type = Kokkos::View<uint32_t *, Kokkos::HostSpace>;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:Kokkos::View<uint32_t *,Kokkos::HostSpace>
buffer_type	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  using buffer_type = Kokkos::View<uint32_t*, Kokkos::HostSpace>;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:Kokkos::View<uint32_t *,Kokkos::HostSpace>
buffer_type	Threads/Kokkos_Threads_UniqueToken.hpp	/^  using buffer_type = Kokkos::View<uint32_t *, Kokkos::HostSpace>;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:Kokkos::View<uint32_t *,Kokkos::HostSpace>
buffer_type	impl/Kokkos_HostBarrier.hpp	/^  using buffer_type                         = int;$/;"	t	class:Kokkos::Impl::HostBarrier	typeref:typename:int
build	Kokkos_Tuners.hpp	/^  static return_type build(const node_type& in, double fraction_to_traverse,$/;"	f	struct:Kokkos::Tools::Experimental::Impl::GetMultidimensionalPoint	typeref:typename:return_type
build	Kokkos_Tuners.hpp	/^  static return_type build(const node_type& in, double index) {$/;"	f	struct:Kokkos::Tools::Experimental::Impl::GetMultidimensionalPoint	typeref:typename:return_type
call	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void call(View &self, const View &other) {$/;"	f	struct:Kokkos::Experimental::Impl::copy_assignment_operator_invoker	typeref:typename:void
call	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void call(View &self, const View &other) {$/;"	f	struct:Kokkos::Experimental::Impl::copy_constructor_invoker	typeref:typename:void
call	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void call(View &self, const View &other) {$/;"	f	struct:Kokkos::Experimental::Impl::move_assignment_operator_invoker	typeref:typename:void
call	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void call(View &self, const View &other) {$/;"	f	struct:Kokkos::Experimental::Impl::move_constructor_invoker	typeref:typename:void
call_with_tag	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  std::enable_if_t<std::is_void<TagType>::value> call_with_tag($/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
can_bind_threads	impl/Kokkos_hwloc.cpp	/^bool can_bind_threads() { return false; }$/;"	f	namespace:Kokkos::hwloc	typeref:typename:bool
can_bind_threads	impl/Kokkos_hwloc.cpp	/^bool can_bind_threads() {$/;"	f	namespace:Kokkos::hwloc	typeref:typename:bool
candidate_is_array	impl/Kokkos_FunctorAnalysis.hpp	/^    candidate_is_array = std::rank<candidate_type>::value == 1$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::__anona1ab5b321503
candidate_is_void	impl/Kokkos_FunctorAnalysis.hpp	/^    candidate_is_void  = std::is_void<candidate_type>::value,$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::__anona1ab5b321503
candidate_type	impl/Kokkos_FunctorAnalysis.hpp	/^  using candidate_type = typename deduce_value_type<Functor>::type;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:deduce_value_type<Functor>::type
candidates	impl/Kokkos_Profiling_C_Interface.h	/^  union Kokkos_Tools_VariableInfo_SetOrRange candidates;$/;"	m	struct:Kokkos_Tools_VariableInfo	typeref:union:Kokkos_Tools_VariableInfo_SetOrRange
capacity	Kokkos_MemoryPool.hpp	/^  size_t capacity() const noexcept {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
capacity	SYCL/Kokkos_SYCL_Instance.hpp	/^    size_t capacity() const noexcept { return m_capacity; }$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:size_t
capacity	impl/Kokkos_Stacktrace.cpp	/^  static constexpr int capacity = 100;$/;"	m	class:Kokkos::Impl::Stacktrace	typeref:typename:int	file:
capacity_bytes	Kokkos_MemoryPool.hpp	/^    size_t capacity_bytes;        \/\/\/<  Capacity in bytes$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
capacity_superblocks	Kokkos_MemoryPool.hpp	/^    size_t capacity_superblocks;  \/\/\/<  Number of superblocks$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
cas128	impl/Kokkos_Atomic_Assembly.hpp	/^inline cas128_t cas128(volatile cas128_t* ptr, cas128_t cmp, cas128_t swap) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:cas128_t
cas128_t	impl/Kokkos_Atomic_Assembly.hpp	/^  cas128_t() {$/;"	f	struct:Kokkos::Impl::cas128_t	typeref:typename:KOKKOS_INLINE_FUNCTION
cas128_t	impl/Kokkos_Atomic_Assembly.hpp	/^  cas128_t(const cas128_t& a) {$/;"	f	struct:Kokkos::Impl::cas128_t	typeref:typename:KOKKOS_INLINE_FUNCTION
cas128_t	impl/Kokkos_Atomic_Assembly.hpp	/^  cas128_t(volatile cas128_t* a) {$/;"	f	struct:Kokkos::Impl::cas128_t	typeref:typename:KOKKOS_INLINE_FUNCTION
cas128_t	impl/Kokkos_Atomic_Assembly.hpp	/^struct cas128_t {$/;"	s	namespace:Kokkos::Impl
cas128_t	impl/Kokkos_Atomic_Windows.hpp	/^    struct cas128_t {$/;"	s	namespace:Kokkos::Impl
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^    cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned long long>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^    cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned long>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^    cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned short>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,bool>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,double>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,float>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,int>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,long long>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,long>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,short>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned int>::value,T>
cast_from_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned>::value,T>
cast_from_bhalf	Kokkos_Half.hpp	/^cast_from_bhalf(bhalf_t val) {$/;"	f	namespace:Kokkos::Experimental
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned long long>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned long>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned short>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,bool>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,double>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,float>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,int>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,long long>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,long>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,short>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned int>::value,T>
cast_from_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned long long>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned long>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned short>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,bool>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,double>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,float>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,int>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,long long>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,long>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,short>::value,T>
cast_from_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned>::value,T>
cast_from_half	Kokkos_Half.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned long long>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned long>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^    cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned short>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,double>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,float>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,int>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,long long>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,long>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,short>::value,T>
cast_from_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^cast_from_half(half_t val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_same<T,unsigned int>::value,T>
cast_from_wrapper	Kokkos_Half.hpp	/^cast_from_wrapper(const Kokkos::Experimental::bhalf_t& x) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION T
cast_from_wrapper	Kokkos_Half.hpp	/^cast_from_wrapper(const Kokkos::Experimental::half_t& x) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION T
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(bhalf_t val) { return val; }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(bool val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(double val) { return __double2bfloat16(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(double val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(float val) { return __float2bfloat16(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(float val) { return bhalf_t(__float2bfloat16(val)); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(int val) { return __int2bfloat16_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(int val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(long long val) { return __ll2bfloat16_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(long long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(short val) { return __short2bfloat16_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(short val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(unsigned int val) { return __uint2bfloat16_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(unsigned int val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(unsigned long long val) { return __ull2bfloat16_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(unsigned long long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(unsigned long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(unsigned short val) { return __ushort2bfloat16_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^bhalf_t cast_to_bhalf(unsigned short val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(bool val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(double val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(float val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(int val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(long long val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(long val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(short val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(unsigned int val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(unsigned long long val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(unsigned long val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_bhalf	Kokkos_Half.hpp	/^bhalf_t cast_to_bhalf(unsigned short val) { return bhalf_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION bhalf_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(bool val) { return cast_to_half(static_cast<float>(val)); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(double val) { return __double2half(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(double val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(float val) { return __float2half(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(float val) { return half_t(__float2half(val)); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(half_t val) { return val; }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(int val) { return __int2half_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(int val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(long long val) { return __ll2half_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(long long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(short val) { return __short2half_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(short val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(unsigned int val) { return __uint2half_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(unsigned int val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(unsigned long long val) { return __ull2half_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(unsigned long long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(unsigned long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(unsigned short val) { return __ushort2half_rn(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^half_t cast_to_half(unsigned short val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(bool val) { return cast_to_half(static_cast<float>(val)); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(double val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(float val) { return half_t(__float2half(val)); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(half_t val) { return val; }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(int val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(long long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(short val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(unsigned int val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(unsigned long long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(unsigned long val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	HIP/Kokkos_HIP_Half_Conversion.hpp	/^half_t cast_to_half(unsigned short val) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(bool val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(double val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(float val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(int val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(long long val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(long val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(short val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(unsigned int val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(unsigned long long val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(unsigned long val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	Kokkos_Half.hpp	/^half_t cast_to_half(unsigned short val) { return half_t(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(double val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(float val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(half_t val) { return val; }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(int val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(long long val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(long val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(short val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(unsigned int val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(unsigned long long val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(unsigned long val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_half	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^half_t cast_to_half(unsigned short val) { return half_t::impl_type(val); }$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION half_t
cast_to_wrapper	Kokkos_Half.hpp	/^static KOKKOS_INLINE_FUNCTION Kokkos::Experimental::bhalf_t cast_to_wrapper($/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::Experimental::bhalf_t
cast_to_wrapper	Kokkos_Half.hpp	/^static KOKKOS_INLINE_FUNCTION Kokkos::Experimental::half_t cast_to_wrapper($/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::Experimental::half_t
cast_type	KokkosExp_InterOp.hpp	/^  using cast_type = python_view_type_t<Tp>;$/;"	t	function:Kokkos::Experimental::as_python_type	typeref:typename:python_view_type_t<Tp>
category	impl/Kokkos_Profiling_C_Interface.h	/^  enum Kokkos_Tools_VariableInfo_StatisticalCategory category;$/;"	m	struct:Kokkos_Tools_VariableInfo	typeref:enum:Kokkos_Tools_VariableInfo_StatisticalCategory
cbegin	impl/Kokkos_VLAEmulation.hpp	/^  const_iterator cbegin() noexcept { return _vla_pointer(); }$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION const_iterator
cbrt	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 cbrt(__float128 x) { return ::cbrtq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
ceil	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 ceil(__float128 x) { return ::ceilq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
cend	impl/Kokkos_VLAEmulation.hpp	/^  const_iterator cend() noexcept { return _vla_pointer() + m_num_entries; }$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION const_iterator
check	Kokkos_Core_fwd.hpp	/^  KOKKOS_DEPRECATED KOKKOS_FUNCTION static void check() {$/;"	f	struct:Kokkos::Impl::verify_space	typeref:typename:KOKKOS_DEPRECATED KOKKOS_FUNCTION void
check	Kokkos_Core_fwd.hpp	/^  KOKKOS_DEPRECATED KOKKOS_FUNCTION static void check() {}$/;"	f	struct:Kokkos::Impl::verify_space	typeref:typename:KOKKOS_DEPRECATED KOKKOS_FUNCTION void
check	impl/Kokkos_Atomic_Generic.hpp	/^  static constexpr bool check(Op const& op, Scalar1 const& v1,$/;"	f	struct:Kokkos::Impl::_check_early_exit_impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
check	impl/Kokkos_Atomic_Generic.hpp	/^  static constexpr bool check(Op const&, Scalar1 const&,$/;"	f	struct:Kokkos::Impl::_check_early_exit_impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
check_access_member_function_valid_args	Kokkos_View.hpp	/^  static KOKKOS_FUNCTION void check_access_member_function_valid_args(Is...) {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_FUNCTION void
check_arg	impl/Kokkos_Command_Line_Parsing.cpp	/^bool Kokkos::Impl::check_arg(char const* arg, char const* expected) {$/;"	f	class:Kokkos::Impl	typeref:typename:bool
check_arg_bool	impl/Kokkos_Command_Line_Parsing.cpp	/^bool Kokkos::Impl::check_arg_bool(char const* arg, char const* name,$/;"	f	class:Kokkos::Impl	typeref:typename:bool
check_arg_int	impl/Kokkos_Command_Line_Parsing.cpp	/^bool Kokkos::Impl::check_arg_int(char const* arg, char const* name, int& val) {$/;"	f	class:Kokkos::Impl	typeref:typename:bool
check_arg_str	impl/Kokkos_Command_Line_Parsing.cpp	/^bool Kokkos::Impl::check_arg_str(char const* arg, char const* name,$/;"	f	class:Kokkos::Impl	typeref:typename:bool
check_early_exit	impl/Kokkos_Atomic_Generic.hpp	/^  static constexpr bool check_early_exit(Scalar1 const& val1,$/;"	f	struct:Kokkos::Impl::MaxOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
check_early_exit	impl/Kokkos_Atomic_Generic.hpp	/^  static constexpr bool check_early_exit(Scalar1 const& val1,$/;"	f	struct:Kokkos::Impl::MinOper	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
check_early_exit	impl/Kokkos_Atomic_Generic.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool check_early_exit($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
check_env_bool	impl/Kokkos_Command_Line_Parsing.cpp	/^bool Kokkos::Impl::check_env_bool(char const* name, bool& val) {$/;"	f	class:Kokkos::Impl	typeref:typename:bool
check_env_int	impl/Kokkos_Command_Line_Parsing.cpp	/^bool Kokkos::Impl::check_env_int(char const* name, int& val) {$/;"	f	class:Kokkos::Impl	typeref:typename:bool
check_input_args	Kokkos_View.hpp	/^  enum class check_input_args : bool { yes = true, no = false };$/;"	g	class:Kokkos::View	typeref:typename:bool
check_iteration_bounds	impl/KokkosExp_Host_IterateTile.hpp	/^  inline bool check_iteration_bounds(point_type& partial_tile,$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:bool
check_operator_parens_valid_args	Kokkos_View.hpp	/^  static KOKKOS_FUNCTION void check_operator_parens_valid_args(Is...) {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_FUNCTION void
check_reduced_view_shmem_size	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^inline void check_reduced_view_shmem_size(const Policy& policy,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
check_shmem_request	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^inline void check_shmem_request(CudaInternal const* cuda_instance, int shmem) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
check_valid_execution_space	impl/Kokkos_ExecSpaceManager.hpp	/^constexpr bool check_valid_execution_space() {$/;"	f	namespace:__anonc657ed790110	typeref:typename:bool
checked_allocation_with_header	impl/Kokkos_MemorySpace.hpp	/^SharedAllocationHeader *checked_allocation_with_header($/;"	f	namespace:Kokkos::Impl	typeref:typename:SharedAllocationHeader *
checked_allocation_with_header	impl/Kokkos_MemorySpace.hpp	/^SharedAllocationHeader *checked_allocation_with_header(MemorySpace const &space,$/;"	f	namespace:Kokkos::Impl	typeref:typename:SharedAllocationHeader *
checked_narrow_cast	KokkosExp_MDRangePolicy.hpp	/^constexpr To checked_narrow_cast(From arg) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:To
choice_list	Kokkos_Tuners.hpp	/^  using choice_list = std::vector<Choice>;$/;"	t	struct:Kokkos::Tools::Experimental::CategoricalTuner	typeref:typename:std::vector<Choice>
choices	Kokkos_Tuners.hpp	/^  choice_list choices;$/;"	m	struct:Kokkos::Tools::Experimental::CategoricalTuner	typeref:typename:choice_list
chunk_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline int chunk_size() const { return m_chunk_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
chunk_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int chunk_size() const { return m_chunk_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
chunk_size	Kokkos_ExecPolicy.hpp	/^  inline member_type chunk_size() const { return m_granularity; }$/;"	f	class:Kokkos::RangePolicy	typeref:typename:member_type
chunk_size	Kokkos_HPX.hpp	/^  inline int chunk_size() const { return m_chunk_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
chunk_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline int chunk_size() const { return m_chunk_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
chunk_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline int chunk_size() const { return m_chunk_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
chunk_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int chunk_size() const { return m_chunk_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
chunk_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline int chunk_size() const { return m_chunk_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
chunk_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline int chunk_size() const { return m_chunk_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
clamp	Kokkos_MinMaxClamp.hpp	/^constexpr KOKKOS_INLINE_FUNCTION const T& clamp(const T& value, const T& lo,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION const T &
cleanup	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION void cleanup() noexcept {$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION void
clear	Kokkos_Future.hpp	/^  void clear() {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION void
clear	impl/Kokkos_SharedAlloc.hpp	/^  void clear() {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
clear_lock_array	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^void OpenMPTargetExec::clear_lock_array() {$/;"	f	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void
clear_predecessor	impl/Kokkos_TaskNode.hpp	/^  void clear_predecessor() volatile { m_predecessor = nullptr; }$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION void
clear_predecessor	impl/Kokkos_TaskNode.hpp	/^  void clear_predecessor() { m_predecessor = nullptr; }$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION void
clear_scratch	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^void OpenMPTargetExec::clear_scratch() {$/;"	f	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void
clear_thread_data	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMPInternal::clear_thread_data() {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:void
clock_tic	impl/Kokkos_ClockTic.hpp	/^uint64_t clock_tic() noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION uint64_t
clock_tic_device	impl/Kokkos_ClockTic.hpp	/^KOKKOS_IMPL_DEVICE_FUNCTION inline uint64_t clock_tic_device() noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION uint64_t
clock_tic_host	impl/Kokkos_ClockTic.hpp	/^KOKKOS_IMPL_HOST_FUNCTION inline uint64_t clock_tic_host() noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_HOST_FUNCTION uint64_t
closure_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^    using closure_type = Impl::ParallelReduce<FunctorType, Policy, ReducerType>;$/;"	t	function:Kokkos::Impl::ParallelReduce::local_block_size	typeref:typename:Impl::ParallelReduce<FunctorType,Policy,ReducerType>
closure_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^    using closure_type = Impl::ParallelReduce<FunctorType, Policy, ReducerType>;$/;"	t	function:Kokkos::Impl::ParallelReduce::local_block_size	typeref:typename:Impl::ParallelReduce<FunctorType,Policy,ReducerType>
closure_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using closure_type = ClosureType;$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_common	typeref:typename:ClosureType
closure_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::ParallelFor<FunctorType,TeamPolicy<Properties...>>
closure_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::ParallelReduce<FunctorType,TeamPolicy<Properties...>,ReducerType>
closure_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::ParallelReduce<FunctorType,TeamPolicy<Properties...>,reducer_type>
closure_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::ParallelFor<FunctorType,TeamPolicy<Properties...>>
closure_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::ParallelReduce<FunctorType,TeamPolicy<Properties...>,ReducerType>
closure_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::ParallelReduce<FunctorType,TeamPolicy<Properties...>,reducer_type>
closure_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^    using closure_type = ParallelReduce<FunctorType, Policy, ReducerType,$/;"	t	function:Kokkos::Impl::ParallelReduce::local_block_size	typeref:typename:ParallelReduce<FunctorType,Policy,ReducerType,Kokkos::Experimental::HIP>
closure_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::ParallelFor::max_tile_size_product	typeref:typename:ParallelFor<FunctorType,Kokkos::MDRangePolicy<Traits...>,Kokkos::Experimental::HIP>
closure_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::ParallelReduce::max_tile_size_product	typeref:typename:ParallelReduce<FunctorType,Kokkos::MDRangePolicy<Traits...>,ReducerType,Kokkos::Experimental::HIP>
closure_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^      using closure_type =$/;"	t	function:Kokkos::Impl::ParallelReduce::execute	typeref:typename:ParallelReduce<FunctorType,Kokkos::TeamPolicy<Properties...>,ReducerType,Kokkos::Experimental::HIP>
closure_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::ParallelFor::execute	typeref:typename:ParallelFor<FunctorType,Kokkos::TeamPolicy<Properties...>,Kokkos::Experimental::HIP>
closure_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::ParallelFor<FunctorType,TeamPolicy<Properties...>>
closure_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::ParallelReduce<FunctorType,TeamPolicy<Properties...>,ReducerType>
closure_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::ParallelReduce<FunctorType,TeamPolicy<Properties...>,reducer_type>
closure_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::ParallelFor<FunctorType,TeamPolicy<Properties...>>
closure_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::ParallelReduce<FunctorType,TeamPolicy<Properties...>,ReducerType>
closure_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using closure_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::ParallelReduce<FunctorType,TeamPolicy<Properties...>,reducer_type>
closure_type	Kokkos_Crs.hpp	/^    using closure_type = Kokkos::Impl::ParallelFor<self_type, policy_type>;$/;"	t	function:Kokkos::Impl::FillCrsTransposeEntries::FillCrsTransposeEntries	typeref:typename:Kokkos::Impl::ParallelFor<self_type,policy_type>
closure_type	Kokkos_Crs.hpp	/^    using closure_type = Kokkos::Impl::ParallelFor<self_type, policy_type>;$/;"	t	function:Kokkos::Impl::GetCrsTransposeCounts::GetCrsTransposeCounts	typeref:typename:Kokkos::Impl::ParallelFor<self_type,policy_type>
closure_type	Kokkos_Crs.hpp	/^    using closure_type = Kokkos::Impl::ParallelScan<self_type, policy_type>;$/;"	t	function:Kokkos::Impl::CrsRowMapFromCounts::execute	typeref:typename:Kokkos::Impl::ParallelScan<self_type,policy_type>
closure_type	Kokkos_WorkGraphPolicy.hpp	/^      using closure_type = Kokkos::Impl::ParallelFor<self_type, policy_type>;$/;"	t	function:Kokkos::WorkGraphPolicy::WorkGraphPolicy	typeref:typename:Kokkos::Impl::ParallelFor<self_type,policy_type>
combine	Kokkos_Tuners.hpp	/^  auto combine(const std::string& axis_name,$/;"	f	struct:Kokkos::Tools::Experimental::ExtendableTunerMixin	typeref:typename:auto
combine	impl/Kokkos_Core.cpp	/^void combine(Kokkos::InitializationSettings& out,$/;"	f	namespace:__anon5875dff10110	typeref:typename:void
combine	impl/Kokkos_Core.cpp	/^void combine(Kokkos::Tools::InitArguments& out,$/;"	f	namespace:__anon5875dff10110	typeref:typename:void
combined_functor_type	impl/Kokkos_Combined_Reducer.hpp	/^  using combined_functor_type = decltype(combined_functor);$/;"	t	function:Kokkos::parallel_reduce
combined_reducer_type	impl/Kokkos_Combined_Reducer.hpp	/^  using combined_reducer_type = Impl::CombinedReducer<$/;"	t	function:Kokkos::parallel_reduce
common_mixin_t	impl/Kokkos_MultipleTaskQueue.hpp	/^  using common_mixin_t       = TaskQueueCommonMixin<MultipleTaskQueue>;$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:TaskQueueCommonMixin<MultipleTaskQueue>
common_mixin_t	impl/Kokkos_SingleTaskQueue.hpp	/^  using common_mixin_t = TaskQueueCommonMixin<SingleTaskQueue>;$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:TaskQueueCommonMixin<SingleTaskQueue>
common_real_type	Kokkos_Complex.hpp	/^  using common_real_type   = std::common_type_t<RealType1, RealType2>;$/;"	t	function:Kokkos::operator /	typeref:typename:std::common_type_t<RealType1,RealType2>
common_type	Kokkos_Complex.hpp	/^  using common_type = std::common_type_t<RealType1, RealType2>;$/;"	t	function:Kokkos::operator !=	typeref:typename:std::common_type_t<RealType1,RealType2>
common_type	Kokkos_Complex.hpp	/^  using common_type = std::common_type_t<RealType1, RealType2>;$/;"	t	function:Kokkos::operator ==	typeref:typename:std::common_type_t<RealType1,RealType2>
common_view_alloc_prop	Kokkos_View.hpp	/^KOKKOS_INLINE_FUNCTION DeducedCommonPropsType<Views...> common_view_alloc_prop($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION DeducedCommonPropsType<Views...>
complete	impl/Kokkos_TaskQueueCommon.hpp	/^  KOKKOS_FUNCTION void complete($/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_FUNCTION void
complete	impl/Kokkos_TaskQueueCommon.hpp	/^  KOKKOS_FUNCTION void complete(RunnableTaskBase<TaskQueueTraits>&& task,$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_FUNCTION void
complete	impl/Kokkos_TaskQueue_impl.hpp	/^KOKKOS_FUNCTION void TaskQueue<ExecSpace, MemorySpace>::complete($/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION void
completed_work	Kokkos_WorkGraphPolicy.hpp	/^  void completed_work(std::int32_t w) const noexcept {$/;"	f	class:Kokkos::WorkGraphPolicy	typeref:typename:KOKKOS_INLINE_FUNCTION void
complex	Kokkos_Complex.hpp	/^        complex {$/;"	c	namespace:Kokkos
complex	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION complex(const RealType& val) noexcept$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION
complex	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION complex(const complex<RType>& other) noexcept$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION
complex	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION complex(const volatile complex<RType>& src) noexcept$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION
complex	Kokkos_Complex.hpp	/^  complex(const RealType& re, const RealType& im) noexcept : re_(re), im_(im) {}$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION
complex	Kokkos_Complex.hpp	/^  complex(const std::complex<RealType>& src) noexcept$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION
compute_ranges	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  sycl::nd_range<3> compute_ranges() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:sycl::nd_range<3>
concat_type_list	impl/Kokkos_Utilities.hpp	/^struct concat_type_list<type_list<T...>, type_list<U...>, Tail...>$/;"	s	namespace:Kokkos::Impl
concat_type_list_t	impl/Kokkos_Utilities.hpp	/^using concat_type_list_t = typename concat_type_list<T...>::type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:concat_type_list<T...>::type
concurrency	Cuda/Kokkos_Cuda_Instance.cpp	/^int Cuda::concurrency() {$/;"	f	class:Kokkos::Cuda	typeref:typename:int
concurrency	HIP/Kokkos_HIP_Space.cpp	/^int HIP::concurrency() {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:int
concurrency	HPX/Kokkos_HPX.cpp	/^int HPX::concurrency() {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:int
concurrency	Kokkos_Serial.hpp	/^  static int concurrency() { return 1; }$/;"	f	class:Kokkos::Serial	typeref:typename:int
concurrency	OpenACC/Kokkos_OpenACC.hpp	/^  static int concurrency() { return 256000; }  \/\/ FIXME_OPENACC$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:int
concurrency	OpenMP/Kokkos_OpenMP_Instance.cpp	/^int OpenMP::concurrency() { return Impl::g_openmp_hardware_max_threads; }$/;"	f	class:Kokkos::OpenMP	typeref:typename:int
concurrency	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^int OpenMPTarget::concurrency() {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:int
concurrency	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^int OpenMPTargetInternal::concurrency() { return 128000; }$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:int
concurrency	SYCL/Kokkos_SYCL.cpp	/^int SYCL::concurrency() {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:int
concurrency	Threads/Kokkos_ThreadsExec.cpp	/^int Threads::concurrency() { return impl_thread_pool_size(0); }$/;"	f	class:Kokkos::Threads	typeref:typename:int
concurrent_bitset	impl/Kokkos_ConcurrentBitset.hpp	/^struct concurrent_bitset {$/;"	s	namespace:Kokkos::Impl
configure_shmem_preference	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^inline void configure_shmem_preference(KernelFuncPtr const& func,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
conj	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<RealType> conj($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<RealType>
conj	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION constexpr complex<Impl::promote_t<ArithmeticType>> conj($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<Impl::promote_t<ArithmeticType>>
const_data_type	Kokkos_View.hpp	/^  using const_data_type     = typename data_analysis::const_type;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::const_type
const_data_type	impl/Kokkos_ViewUniformType.hpp	/^  using const_data_type = std::add_const_t<typename ViewType::data_type>;$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:std::add_const_t<typename ViewType::data_type>
const_iterator	impl/Kokkos_VLAEmulation.hpp	/^  using const_iterator = std::add_const_t<VLAValueType>*;$/;"	t	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:std::add_const_t<VLAValueType> *
const_nomemspace_type	impl/Kokkos_ViewUniformType.hpp	/^  using const_nomemspace_type =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::View<const_data_type,array_layout,anonymous_device_type,memory_traits>
const_pointer	Kokkos_Array.hpp	/^  using const_pointer   = std::add_const_t<T>*;$/;"	t	struct:Kokkos::Array	typeref:typename:std::add_const_t<T> *
const_reference	Kokkos_Array.hpp	/^  using const_reference = std::add_const_t<T>&;$/;"	t	struct:Kokkos::Array	typeref:typename:std::add_const_t<T> &
const_scalar_array_type	Kokkos_View.hpp	/^  using const_scalar_array_type =$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::const_scalar_array_type
const_type	Kokkos_View.hpp	/^  using const_type =$/;"	t	class:Kokkos::View	typeref:typename:View<typename traits::const_data_type,typename traits::array_layout,typename traits::device_type,typename traits::hooks_policy,typename traits::memory_traits>
const_type	impl/Kokkos_ViewUniformType.hpp	/^  using const_type =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::View<const_data_type,array_layout,device_type,memory_traits>
const_value_type	Kokkos_View.hpp	/^  using const_value_type     = typename data_analysis::const_value_type;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::const_value_type
const_value_type	impl/Kokkos_Atomic_View.hpp	/^  using const_value_type     = typename ViewTraits::const_value_type;$/;"	t	class:Kokkos::Impl::AtomicDataElement	typeref:typename:ViewTraits::const_value_type
const_value_type	impl/Kokkos_Traits.hpp	/^  using const_value_type = std::add_const_t<value_type>;$/;"	t	struct:Kokkos::Impl::if_c	typeref:typename:std::add_const_t<value_type>
constantMemHostStaging	Cuda/Kokkos_Cuda_Instance.cpp	/^unsigned long *CudaInternal::constantMemHostStaging = nullptr;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:unsigned long *
constantMemHostStaging	Cuda/Kokkos_Cuda_Instance.hpp	/^  static unsigned long* constantMemHostStaging;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:unsigned long *
constantMemHostStaging	HIP/Kokkos_HIP_Instance.cpp	/^unsigned long *Impl::HIPInternal::constantMemHostStaging = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:unsigned long *
constantMemHostStaging	HIP/Kokkos_HIP_Instance.hpp	/^  static unsigned long *constantMemHostStaging;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:unsigned long *
constantMemMutex	Cuda/Kokkos_Cuda_Instance.cpp	/^std::mutex CudaInternal::constantMemMutex;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::mutex
constantMemMutex	Cuda/Kokkos_Cuda_Instance.hpp	/^  static std::mutex constantMemMutex;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::mutex
constantMemMutex	HIP/Kokkos_HIP_Instance.cpp	/^std::mutex Impl::HIPInternal::constantMemMutex;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:std::mutex
constantMemMutex	HIP/Kokkos_HIP_Instance.hpp	/^  static std::mutex constantMemMutex;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:std::mutex
constantMemReusable	Cuda/Kokkos_Cuda_Instance.cpp	/^cudaEvent_t CudaInternal::constantMemReusable       = nullptr;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:cudaEvent_t
constantMemReusable	Cuda/Kokkos_Cuda_Instance.hpp	/^  static cudaEvent_t constantMemReusable;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:cudaEvent_t
constantMemReusable	HIP/Kokkos_HIP_Instance.cpp	/^hipEvent_t Impl::HIPInternal::constantMemReusable        = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:hipEvent_t
constantMemReusable	HIP/Kokkos_HIP_Instance.hpp	/^  static hipEvent_t constantMemReusable;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:hipEvent_t
construct_graph	impl/Kokkos_GraphImpl.hpp	/^  static Kokkos::Experimental::Graph<ExecutionSpace> construct_graph($/;"	f	struct:Kokkos::Impl::GraphAccess	typeref:typename:Kokkos::Experimental::Graph<ExecutionSpace>
consume	impl/Kokkos_LIFO.hpp	/^  KOKKOS_INLINE_FUNCTION void consume(Function&& f) {$/;"	f	class:Kokkos::Impl::SingleConsumeOperationLIFO	typeref:typename:KOKKOS_INLINE_FUNCTION void
consume_wait_queue	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION void consume_wait_queue(Function&& f) {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION void
consumed_blocks	Kokkos_MemoryPool.hpp	/^    size_t consumed_blocks;       \/\/\/<  Number of allocations$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
consumed_bytes	Kokkos_MemoryPool.hpp	/^    size_t consumed_bytes;        \/\/\/<  Bytes allocated$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
consumed_superblocks	Kokkos_MemoryPool.hpp	/^    size_t consumed_superblocks;  \/\/\/<  Superblocks assigned to allocations$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
container	SYCL/Kokkos_SYCL.cpp	/^  const C& container;$/;"	m	struct:__anon7e1ce1ec0110::Container	typeref:typename:const C &	file:
context	Kokkos_Tuners.hpp	/^  size_t context;$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:size_t
context	Kokkos_Tuners.hpp	/^  size_t context;$/;"	m	struct:Kokkos::Tools::Experimental::CategoricalTuner	typeref:typename:size_t
contextBeginFunction	impl/Kokkos_Profiling_Interface.hpp	/^using contextBeginFunction         = Kokkos_Tools_contextBeginFunction;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_contextBeginFunction
contextEndFunction	impl/Kokkos_Profiling_Interface.hpp	/^using contextEndFunction           = Kokkos_Tools_contextEndFunction;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_contextEndFunction
contiguous	Kokkos_Array.hpp	/^  struct contiguous {};$/;"	s	struct:Kokkos::Array
contiguous_fill	Kokkos_CopyViews.hpp	/^inline void contiguous_fill($/;"	f	namespace:Kokkos::Impl	typeref:typename:void
contiguous_fill_or_memset	Kokkos_CopyViews.hpp	/^contiguous_fill_or_memset($/;"	f	namespace:Kokkos::Impl
contiguous_fill_or_memset	Kokkos_CopyViews.hpp	/^contiguous_fill_or_memset($/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<!(std::is_trivial<typename ViewTraits<DT,DP...>::value_type>::value && std::is_trivially_copy_assignable<typename ViewTraits<DT,DP...>::value_type>::value)>
contiguous_reference	impl/Kokkos_ViewArray.hpp	/^  using contiguous_reference = Kokkos::Array<scalar_type, (~std::size_t(0)),$/;"	t	namespace:Kokkos::Impl
conv	Cuda/Kokkos_Cuda_Vectorization.hpp	/^      shfl_type conv;$/;"	m	union:Kokkos::Impl::in_place_shfl_op::operator ()::conv_type	typeref:typename:shfl_type
conv	HIP/Kokkos_HIP_Vectorization.hpp	/^      shfl_type conv;$/;"	m	union:Kokkos::Experimental::Impl::in_place_shfl_op::conv_type	typeref:typename:shfl_type
conv_type	Cuda/Kokkos_Cuda_Vectorization.hpp	/^      KOKKOS_FUNCTION conv_type() { conv = 0; }$/;"	f	union:Kokkos::Impl::in_place_shfl_op::operator ()::conv_type	typeref:typename:KOKKOS_FUNCTION
conv_type	Cuda/Kokkos_Cuda_Vectorization.hpp	/^    union conv_type {$/;"	u	function:Kokkos::Impl::in_place_shfl_op::operator ()
conv_type	HIP/Kokkos_HIP_Vectorization.hpp	/^      KOKKOS_FUNCTION conv_type() { conv = 0; }$/;"	f	union:Kokkos::Experimental::Impl::in_place_shfl_op::conv_type	typeref:typename:KOKKOS_FUNCTION
conv_type	HIP/Kokkos_HIP_Vectorization.hpp	/^    union conv_type {$/;"	u	struct:Kokkos::Experimental::Impl::in_place_shfl_op
copy_assign	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void copy_assign(View &, const View &) {}$/;"	f	struct:Kokkos::Experimental::EmptyViewHooks	typeref:typename:void
copy_assign	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void copy_assign(View &self, const View &other) {$/;"	f	struct:Kokkos::Experimental::SubscribableViewHooks	typeref:typename:void
copy_assignment_operator_invoker	View/Hooks/Kokkos_ViewHooks.hpp	/^struct copy_assignment_operator_invoker {$/;"	s	namespace:Kokkos::Experimental::Impl
copy_construct	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void copy_construct(View &, const View &) {}$/;"	f	struct:Kokkos::Experimental::EmptyViewHooks	typeref:typename:void
copy_construct	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void copy_construct(View &self, const View &other) {$/;"	f	struct:Kokkos::Experimental::SubscribableViewHooks	typeref:typename:void
copy_constructor_invoker	View/Hooks/Kokkos_ViewHooks.hpp	/^struct copy_constructor_invoker {$/;"	s	namespace:Kokkos::Experimental::Impl
copy_from	SYCL/Kokkos_SYCL_Instance.hpp	/^    T& copy_from(const T& t) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:T &
copy_subscription_function_type	View/Hooks/Kokkos_ViewHooks.hpp	/^using copy_subscription_function_type = void (*)(View &, const View &);$/;"	t	namespace:Kokkos::Experimental::Impl
copysign	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 copysign(__float128 x, __float128 y) { return ::copysignq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
cos	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> cos($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
cos	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 cos(__float128 x) { return ::cosq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
cosh	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> cosh($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
cosh	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 cosh(__float128 x) { return ::coshq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
count_and_fill_crs	Kokkos_Crs.hpp	/^void count_and_fill_crs(CrsType& crs, typename CrsType::size_type nrows,$/;"	f	namespace:Kokkos	typeref:typename:void
count_closure_type	Kokkos_Crs.hpp	/^      using count_closure_type =$/;"	t	function:Kokkos::CountAndFill::CountAndFill	typeref:typename:Kokkos::Impl::ParallelFor<self_type,count_policy_type>
count_policy_type	Kokkos_Crs.hpp	/^      using count_policy_type = RangePolicy<size_type, execution_space, Count>;$/;"	t	function:Kokkos::CountAndFill::CountAndFill	typeref:typename:RangePolicy<size_type,execution_space,Count>
count_valid_integers	Kokkos_View.hpp	/^constexpr KOKKOS_INLINE_FUNCTION std::size_t count_valid_integers($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION std::size_t
counters	Kokkos_Crs.hpp	/^  counters_type counters;$/;"	m	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:counters_type
counters_type	Kokkos_Crs.hpp	/^  using counters_type = View<index_type*, memory_space>;$/;"	t	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:View<index_type *,memory_space>
counts_type	Kokkos_Crs.hpp	/^  using counts_type  = View<SizeType*, memory_space>;$/;"	t	function:Kokkos::transpose_crs	typeref:typename:View<SizeType *,memory_space>
counts_type	Kokkos_Crs.hpp	/^  using counts_type  = row_map_type;$/;"	t	struct:Kokkos::CountAndFillBase	typeref:typename:row_map_type
cpy_exec_space	Kokkos_CopyViews.hpp	/^      using cpy_exec_space =$/;"	t	function:Kokkos::deep_copy	typeref:typename:std::conditional_t<DstExecCanAccessSrc,dst_execution_space,src_execution_space>
createProfileSection	impl/Kokkos_Profiling.cpp	/^void createProfileSection(const std::string& sectionName, uint32_t* secID) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
createProfileSection	impl/Kokkos_Profiling.cpp	/^void createProfileSection(const std::string& sectionName, uint32_t* secID) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
createProfileSectionFunction	impl/Kokkos_Profiling_Interface.hpp	/^using createProfileSectionFunction =$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_createProfileSectionFunction
create_Cuda_instances	Cuda/Kokkos_Cuda_Instance.hpp	/^inline void create_Cuda_instances(std::vector<Cuda>& instances) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:void
create_HIP_instances	HIP/Kokkos_HIP_Instance.hpp	/^inline void create_HIP_instances(std::vector<HIP> &instances) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:void
create_aggregate_ptr	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  auto create_aggregate_ptr(PredecessorRefs&&...) {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:auto
create_aggregate_ptr	impl/Kokkos_Default_Graph_Impl.hpp	/^  auto create_aggregate_ptr(PredecessorRefs&&...) {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:auto
create_graph	Kokkos_Graph.hpp	/^Graph<ExecutionSpace> create_graph(Closure&& arg_closure) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:Graph<ExecutionSpace>
create_graph	Kokkos_Graph.hpp	/^Graph<ExecutionSpace> create_graph(ExecutionSpace ex, Closure&& arg_closure) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:Graph<ExecutionSpace>
create_instance	OpenMP/Kokkos_OpenMP_Instance.cpp	/^OpenMP OpenMP::create_instance(...) { return OpenMP(); }$/;"	f	class:Kokkos::OpenMP	typeref:typename:OpenMP
create_mirror	Kokkos_CopyViews.hpp	/^create_mirror(Impl::ViewCtorProp<ViewCtorArgs...> const& arg_prop,$/;"	f	namespace:Kokkos
create_mirror	Kokkos_CopyViews.hpp	/^create_mirror(Kokkos::Impl::WithoutInitializing_t wi,$/;"	f	namespace:Kokkos
create_mirror	Kokkos_CopyViews.hpp	/^create_mirror(Kokkos::View<T, P...> const& v) {$/;"	f	namespace:Kokkos
create_mirror	Kokkos_CopyViews.hpp	/^create_mirror(const Kokkos::View<T, P...>& src,$/;"	f	namespace:Kokkos::Impl
create_mirror_view	Kokkos_CopyViews.hpp	/^auto create_mirror_view(const Impl::ViewCtorProp<ViewCtorArgs...>& arg_prop,$/;"	f	namespace:Kokkos	typeref:typename:auto
create_mirror_view	Kokkos_CopyViews.hpp	/^create_mirror_view(const Kokkos::View<T, P...>& src) {$/;"	f	namespace:Kokkos
create_mirror_view	Kokkos_CopyViews.hpp	/^create_mirror_view(const Kokkos::View<T, P...>& src) {$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<!(std::is_same<typename Kokkos::View<T,P...>::memory_space,typename Kokkos::View<T,P...>::HostMirror::memory_space>::value && std::is_same<typename Kokkos::View<T,P...>::data_type,typename Kokkos::View<T,P...>::HostMirror::data_type>::value),typename Kokkos::View<T,P...>::HostMirror>
create_mirror_view	Kokkos_CopyViews.hpp	/^create_mirror_view(const Kokkos::View<T, P...>& src,$/;"	f	namespace:Kokkos::Impl
create_mirror_view	Kokkos_CopyViews.hpp	/^create_mirror_view(const Kokkos::View<T, P...>& src,$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<!Impl::ViewCtorProp<ViewCtorArgs...>::has_memory_space && (std::is_same<typename Kokkos::View<T,P...>::memory_space,typename Kokkos::View<T,P...>::HostMirror::memory_space>::value && std::is_same<typename Kokkos::View<T,P...>::data_type,typename Kokkos::View<T,P...>::HostMirror::data_type>::value),typename Kokkos::View<T,P...>::HostMirror>
create_mirror_view	Kokkos_CopyViews.hpp	/^typename Impl::MirrorViewType<Space, T, P...>::view_type create_mirror_view($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_DEPRECATED_WITH_COMMENT ("")typename Impl::MirrorViewType<Space,T,P...>::view_type
create_mirror_view	Kokkos_CopyViews.hpp	/^typename Kokkos::View<T, P...>::HostMirror create_mirror_view($/;"	f	namespace:Kokkos	typeref:typename:Kokkos::View<T,P...>::HostMirror
create_mirror_view_and_copy	Kokkos_CopyViews.hpp	/^auto create_mirror_view_and_copy($/;"	f	namespace:Kokkos	typeref:typename:auto
create_parallel_launch_graph_node	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  inline static void create_parallel_launch_graph_node($/;"	f	struct:Kokkos::Impl::CudaParallelLaunchKernelInvoker	typeref:typename:void
create_profile_section	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_createProfileSectionFunction create_profile_section;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_createProfileSectionFunction
create_root_node_ptr	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  auto create_root_node_ptr() {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:auto
create_root_node_ptr	impl/Kokkos_Default_Graph_Impl.hpp	/^  auto create_root_node_ptr() {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:auto
create_root_ref	impl/Kokkos_GraphImpl.hpp	/^  static auto create_root_ref($/;"	f	struct:Kokkos::Impl::GraphAccess	typeref:typename:auto
cref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using cref_type = const ValueType&;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_join_no_tag_function	typeref:typename:const ValueType &
cref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using cref_type = const ValueType&;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_join_tag_function	typeref:typename:const ValueType &
cref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using cref_type = const ValueType*;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_join_no_tag_function	typeref:typename:const ValueType *
cref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using cref_type = const ValueType*;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_join_tag_function	typeref:typename:const ValueType *
crs_type	Kokkos_Crs.hpp	/^  using crs_type     = Crs<DataType, Arg1Type, Arg2Type, SizeType>;$/;"	t	function:Kokkos::transpose_crs	typeref:typename:Crs<DataType,Arg1Type,Arg2Type,SizeType>
cuda_abort	Cuda/Kokkos_Cuda_abort.hpp	/^__device__ inline void cuda_abort(const char *const message) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
cuda_deduce_block_size	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^inline int cuda_deduce_block_size(bool early_termination,$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
cuda_device	Cuda/Kokkos_Cuda_Instance.cpp	/^int Cuda::cuda_device() const { return m_space_instance->m_cudaDev; }$/;"	f	class:Kokkos::Cuda	typeref:typename:int
cuda_device_prop	Cuda/Kokkos_Cuda_Instance.cpp	/^const cudaDeviceProp &Cuda::cuda_device_prop() const {$/;"	f	class:Kokkos::Cuda	typeref:typename:const cudaDeviceProp &
cuda_device_synchronize	Cuda/Kokkos_Cuda_Instance.cpp	/^void cuda_device_synchronize(const std::string &name) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
cuda_get_deep_copy_space	Cuda/Kokkos_CudaSpace.cpp	/^const std::unique_ptr<Kokkos::Cuda> &Kokkos::Impl::cuda_get_deep_copy_space($/;"	f	class:Kokkos::Impl	typeref:typename:const std::unique_ptr<Kokkos::Cuda> &
cuda_get_deep_copy_stream	Cuda/Kokkos_CudaSpace.cpp	/^cudaStream_t Kokkos::Impl::cuda_get_deep_copy_stream() {$/;"	f	class:Kokkos::Impl	typeref:typename:cudaStream_t
cuda_get_max_block_size	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^int cuda_get_max_block_size(const CudaInternal* cuda_instance,$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
cuda_get_opt_block_size	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^int cuda_get_opt_block_size(const CudaInternal* cuda_instance,$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
cuda_get_scratch_index	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^__device__ inline int64_t cuda_get_scratch_index(Cuda::size_type league_size,$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ int64_t
cuda_global_unique_token_locks	Cuda/Kokkos_Cuda_Instance.cpp	/^Kokkos::View<uint32_t *, Kokkos::CudaSpace> cuda_global_unique_token_locks($/;"	f	namespace:Kokkos::Impl	typeref:typename:Kokkos::View<uint32_t *,Kokkos::CudaSpace>
cuda_graph_flags_t	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  using cuda_graph_flags_t = unsigned int;$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:unsigned int
cuda_inter_block_reduction	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^__device__ bool cuda_inter_block_reduction($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
cuda_inter_warp_reduction	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^__device__ inline void cuda_inter_warp_reduction($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
cuda_internal_error_abort	Cuda/Kokkos_Cuda_Instance.cpp	/^void cuda_internal_error_abort(cudaError e, const char *name, const char *file,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
cuda_internal_error_throw	Cuda/Kokkos_Cuda_Instance.cpp	/^void cuda_internal_error_throw(cudaError e, const char *name, const char *file,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
cuda_internal_maximum_concurrent_block_count	Cuda/Kokkos_Cuda_Instance.cpp	/^CudaSpace::size_type cuda_internal_maximum_concurrent_block_count() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:CudaSpace::size_type
cuda_internal_maximum_grid_count	Cuda/Kokkos_Cuda_Instance.cpp	/^std::array<Cuda::size_type, 3> cuda_internal_maximum_grid_count() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::array<Cuda::size_type,3>
cuda_internal_maximum_shared_words	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type cuda_internal_maximum_shared_words() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:Cuda::size_type
cuda_internal_maximum_warp_count	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type cuda_internal_maximum_warp_count() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:Cuda::size_type
cuda_internal_multiprocessor_count	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type cuda_internal_multiprocessor_count() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:Cuda::size_type
cuda_internal_safe_call	Cuda/Kokkos_Cuda_Error.hpp	/^inline void cuda_internal_safe_call(cudaError e, const char* name,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
cuda_internal_safe_call_deprecated	Cuda/Kokkos_Cuda_Error.hpp	/^inline void cuda_internal_safe_call_deprecated(cudaError e, const char* name,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_DEPRECATED void
cuda_internal_scratch_flags	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type *cuda_internal_scratch_flags(const Cuda &instance,$/;"	f	namespace:Kokkos::Impl	typeref:typename:Cuda::size_type *
cuda_internal_scratch_space	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type *cuda_internal_scratch_space(const Cuda &instance,$/;"	f	namespace:Kokkos::Impl	typeref:typename:Cuda::size_type *
cuda_internal_scratch_unified	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type *cuda_internal_scratch_unified(const Cuda &instance,$/;"	f	namespace:Kokkos::Impl	typeref:typename:Cuda::size_type *
cuda_intra_block_reduce_scan	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^__device__ void cuda_intra_block_reduce_scan($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
cuda_intra_block_reduction	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^__device__ inline void cuda_intra_block_reduction($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
cuda_intra_warp_reduction	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^__device__ inline void cuda_intra_warp_reduction($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
cuda_kernel_arch	Cuda/Kokkos_Cuda_Instance.cpp	/^int cuda_kernel_arch() {$/;"	f	namespace:Kokkos::Impl::__anon02417da40110	typeref:typename:int
cuda_max_active_blocks_per_sm	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^inline int cuda_max_active_blocks_per_sm(cudaDeviceProp const& properties,$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
cuda_parallel_launch_constant_memory	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^__global__ static void cuda_parallel_launch_constant_memory() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__global__ void
cuda_parallel_launch_global_memory	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^__global__ static void cuda_parallel_launch_global_memory($/;"	f	namespace:Kokkos::Impl	typeref:typename:__global__ void
cuda_parallel_launch_local_memory	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^__global__ static void cuda_parallel_launch_local_memory($/;"	f	namespace:Kokkos::Impl	typeref:typename:__global__ void
cuda_pin_uvm_to_host	Cuda/Kokkos_CudaSpace.cpp	/^bool CudaUVMSpace::cuda_pin_uvm_to_host() {$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:bool
cuda_prefetch_pointer	Cuda/Kokkos_CudaSpace.cpp	/^void cuda_prefetch_pointer(const Cuda &space, const void *ptr, size_t bytes,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
cuda_prefetch_pointer	fwd/Kokkos_Fwd_CUDA.hpp	/^void cuda_prefetch_pointer(const ExecSpace& \/*space*\/, const void* \/*ptr*\/,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
cuda_release_scratch_index	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^__device__ inline void cuda_release_scratch_index(int32_t* scratch_locks,$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
cuda_set_pin_uvm_to_host	Cuda/Kokkos_CudaSpace.cpp	/^void CudaUVMSpace::cuda_set_pin_uvm_to_host(bool val) {$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:void
cuda_set_serial_execution	Cuda/Kokkos_Cuda_Instance.cpp	/^void CudaInternal::cuda_set_serial_execution(bool val) {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:void
cuda_single_inter_block_reduce_scan	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^__device__ bool cuda_single_inter_block_reduce_scan($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
cuda_single_inter_block_reduce_scan2	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^__device__ bool cuda_single_inter_block_reduce_scan2($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
cuda_single_inter_block_reduce_scan_shmem	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^cuda_single_inter_block_reduce_scan_shmem(const FunctorType& functor,$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<DoScan,unsigned>
cuda_stream	Cuda/Kokkos_Cuda_Instance.cpp	/^cudaStream_t Cuda::cuda_stream() const { return m_space_instance->m_stream; }$/;"	f	class:Kokkos::Cuda	typeref:typename:cudaStream_t
cuda_stream_synchronize	Cuda/Kokkos_Cuda_Instance.cpp	/^void cuda_stream_synchronize($/;"	f	namespace:Kokkos::Impl	typeref:typename:void
cuda_stream_synchronize	Cuda/Kokkos_Cuda_Instance.cpp	/^void cuda_stream_synchronize(const cudaStream_t stream, const CudaInternal *ptr,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
cuda_task_queue_execute	Cuda/Kokkos_Cuda_Task.hpp	/^__global__ void cuda_task_queue_execute(Scheduler scheduler,$/;"	f	namespace:Kokkos::Impl::__anonb05892e70110	typeref:typename:__global__ void
cuda_use_serial_execution	Cuda/Kokkos_Cuda_Instance.cpp	/^bool CudaInternal::cuda_use_serial_execution() {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:bool
current_callbacks	impl/Kokkos_Profiling.cpp	/^static EventSet current_callbacks;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:EventSet	file:
cvref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using cvref_type = const volatile ValueType&;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_no_tag_function	typeref:typename:const volatile ValueType &
cvref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using cvref_type = const volatile ValueType&;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_tag_function	typeref:typename:const volatile ValueType &
cvref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using cvref_type = const volatile ValueType*;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_no_tag_function	typeref:typename:const volatile ValueType *
cvref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using cvref_type = const volatile ValueType*;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_tag_function	typeref:typename:const volatile ValueType *
cyl_bessel_h10	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_h10(const CmplxType& z) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_h11	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_h11(const CmplxType& z) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_h20	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_h20(const CmplxType& z) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_h21	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_h21(const CmplxType& z) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_i0	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_i0(const CmplxType& z,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_i1	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_i1(const CmplxType& z,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_j0	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_j0(const CmplxType& z,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_j1	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_j1(const CmplxType& z,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_k0	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_k0(const CmplxType& z,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_k1	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_k1(const CmplxType& z,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_y0	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_y0(const CmplxType& z,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
cyl_bessel_y1	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION CmplxType cyl_bessel_y1(const CmplxType& z,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION CmplxType
d_driverWorkArray	HIP/Kokkos_HIP_Instance.hpp	/^  mutable char *d_driverWorkArray = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:char *
data	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION const_pointer data() const { return const_pointer(0); }$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION const_pointer
data	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr const_pointer data() const {$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION const_pointer
data	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr pointer_type data() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION pointer_type
data	SYCL/Kokkos_SYCL_Instance.hpp	/^    const void* data() const noexcept { return m_data; }$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:const void *
data	SYCL/Kokkos_SYCL_Instance.hpp	/^    void* data() noexcept { return m_data; }$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:void *
data	impl/Kokkos_FixedBufferMemoryPool.hpp	/^      char data[Size];$/;"	m	union:Kokkos::Impl::FixedBlockSizeMemoryPool::Block::__anon19497b0a010a	typeref:typename:char[]
data	impl/Kokkos_SharedAlloc.hpp	/^  void* data() const { return static_cast<void*>(m_alloc_ptr + 1); }$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_INLINE_FUNCTION void *
data_analysis	Kokkos_View.hpp	/^  using data_analysis = Kokkos::Impl::ViewDataAnalysis<DataType, ArrayLayout>;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:Kokkos::Impl::ViewDataAnalysis<DataType,ArrayLayout>
data_type	Kokkos_CopyViews.hpp	/^  using data_type = typename src_view_type::non_const_data_type;$/;"	t	struct:Kokkos::Impl::MirrorType	typeref:typename:src_view_type::non_const_data_type
data_type	Kokkos_CopyViews.hpp	/^  using data_type = typename src_view_type::non_const_data_type;$/;"	t	struct:Kokkos::Impl::MirrorViewType	typeref:typename:src_view_type::non_const_data_type
data_type	Kokkos_Crs.hpp	/^  using data_type       = DataType;$/;"	t	class:Kokkos::Crs	typeref:typename:DataType
data_type	Kokkos_Crs.hpp	/^  using data_type    = typename CrsType::data_type;$/;"	t	struct:Kokkos::CountAndFillBase	typeref:typename:CrsType::data_type
data_type	Kokkos_View.hpp	/^  using data_type           = typename data_analysis::type;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::type
data_type	impl/Kokkos_ViewUniformType.hpp	/^  using data_type       = typename ViewType::data_type;$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:ViewType::data_type
deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaHostPinnedSpace::deallocate(const char *arg_label,$/;"	f	class:Kokkos::CudaHostPinnedSpace	typeref:typename:void
deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaHostPinnedSpace::deallocate(void *const arg_alloc_ptr,$/;"	f	class:Kokkos::CudaHostPinnedSpace	typeref:typename:void
deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaSpace::deallocate(const char *arg_label, void *const arg_alloc_ptr,$/;"	f	class:Kokkos::CudaSpace	typeref:typename:void
deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaSpace::deallocate(void *const arg_alloc_ptr,$/;"	f	class:Kokkos::CudaSpace	typeref:typename:void
deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaUVMSpace::deallocate(const char *arg_label, void *const arg_alloc_ptr,$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:void
deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaUVMSpace::deallocate(void *const arg_alloc_ptr,$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:void
deallocate	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static void deallocate(void* \/*ptr*\/, size_t \/*size*\/) {}$/;"	f	class:Kokkos::Impl::CudaUnmanagedHostAllocator	typeref:typename:void
deallocate	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static void deallocate(void* \/*ptr*\/, size_t \/*size*\/) {}$/;"	f	struct:Kokkos::Impl::CudaUnmanagedAllocator	typeref:typename:void
deallocate	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static void deallocate(void* \/*ptr*\/, size_t \/*size*\/) {}$/;"	f	struct:Kokkos::Impl::CudaUnmanagedUVMAllocator	typeref:typename:void
deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPHostPinnedSpace::deallocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:void
deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPHostPinnedSpace::deallocate(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:void
deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPManagedSpace::deallocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:void
deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPManagedSpace::deallocate(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:void
deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPSpace::deallocate(const char* arg_label, void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:void
deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPSpace::deallocate(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:void
deallocate	Kokkos_LogicalSpaces.hpp	/^  static void deallocate(RecordBase* arg_rec) {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void
deallocate	Kokkos_LogicalSpaces.hpp	/^  void deallocate(const char* arg_label, void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:void
deallocate	Kokkos_LogicalSpaces.hpp	/^  void deallocate(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:void
deallocate	Kokkos_MemoryPool.hpp	/^  void deallocate(void *p, size_t \/* alloc_size *\/) const noexcept {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION void
deallocate	OpenACC/Kokkos_OpenACCSpace.cpp	/^void Kokkos::Experimental::OpenACCSpace::deallocate($/;"	f	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:void
deallocate	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^void OpenMPTargetSpace::deallocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:void
deallocate	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^void OpenMPTargetSpace::deallocate(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:void
deallocate	SYCL/Kokkos_SYCL_Space.cpp	/^void SYCLDeviceUSMSpace::deallocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:void
deallocate	SYCL/Kokkos_SYCL_Space.cpp	/^void SYCLDeviceUSMSpace::deallocate(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:void
deallocate	SYCL/Kokkos_SYCL_Space.cpp	/^void SYCLHostUSMSpace::deallocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:void
deallocate	SYCL/Kokkos_SYCL_Space.cpp	/^void SYCLHostUSMSpace::deallocate(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:void
deallocate	SYCL/Kokkos_SYCL_Space.cpp	/^void SYCLSharedUSMSpace::deallocate(const char* arg_label,$/;"	f	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:void
deallocate	SYCL/Kokkos_SYCL_Space.cpp	/^void SYCLSharedUSMSpace::deallocate(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:void
deallocate	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  void deallocate(void* ptr, size_type \/*alloc_size*\/) const noexcept {$/;"	f	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION void
deallocate	impl/Kokkos_HBWSpace.cpp	/^void HBWSpace::deallocate(const char *arg_label, void *const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::HBWSpace	typeref:typename:void
deallocate	impl/Kokkos_HBWSpace.cpp	/^void HBWSpace::deallocate(void *const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::HBWSpace	typeref:typename:void
deallocate	impl/Kokkos_HBWSpace.cpp	/^void SharedAllocationRecord<Kokkos::Experimental::HBWSpace, void>::deallocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace	typeref:typename:void
deallocate	impl/Kokkos_HostSpace.cpp	/^void HostSpace::deallocate(const char *arg_label, void *const arg_alloc_ptr,$/;"	f	class:Kokkos::HostSpace	typeref:typename:void
deallocate	impl/Kokkos_HostSpace.cpp	/^void HostSpace::deallocate(void *const arg_alloc_ptr,$/;"	f	class:Kokkos::HostSpace	typeref:typename:void
deallocate	impl/Kokkos_MemoryPoolAllocator.hpp	/^  void deallocate(T* ptr, size_t n) { m_pool.deallocate(ptr, n * sizeof(T)); }$/;"	f	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:KOKKOS_INLINE_FUNCTION void
deallocate	impl/Kokkos_SharedAlloc.hpp	/^void deallocate(SharedAllocationRecord<void, void>* record_ptr) {$/;"	f	namespace:Kokkos::Impl::__anon4cadf70f0110	typeref:typename:void
deallocate	impl/Kokkos_SharedAlloc_timpl.hpp	/^void SharedAllocationRecordCommon<MemorySpace>::deallocate($/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:void
deallocate	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  KOKKOS_INLINE_FUNCTION void deallocate($/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:KOKKOS_INLINE_FUNCTION void
deallocate	impl/Kokkos_TaskQueue_impl.hpp	/^KOKKOS_FUNCTION void TaskQueue<ExecSpace, MemorySpace>::deallocate(void *p,$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION void
deallocateData	impl/Kokkos_Profiling.cpp	/^void deallocateData(const SpaceHandle space, const std::string label,$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
deallocateData	impl/Kokkos_Profiling.cpp	/^void deallocateData(const SpaceHandle space, const std::string label,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
deallocateDataFunction	impl/Kokkos_Profiling_Interface.hpp	/^using deallocateDataFunction = Kokkos_Profiling_deallocateDataFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_deallocateDataFunction
deallocate_data	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_deallocateDataFunction deallocate_data;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_deallocateDataFunction
deallocate_tracked	Kokkos_LogicalSpaces.hpp	/^  static void deallocate_tracked(void* const arg_alloc_ptr) {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void
deallocate_tracked	impl/Kokkos_HBWSpace.cpp	/^                            void>::deallocate_tracked(void *const$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace	typeref:typename:void
deallocate_tracked	impl/Kokkos_SharedAlloc_timpl.hpp	/^void SharedAllocationRecordCommon<MemorySpace>::deallocate_tracked($/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:void
dec	impl/Kokkos_Atomic_View.hpp	/^  void dec() const { Kokkos::atomic_decrement(ptr); }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION void
declareMetadata	impl/Kokkos_Profiling.cpp	/^void declareMetadata(const std::string& key, const std::string& value) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
declareMetadataFunction	impl/Kokkos_Profiling_Interface.hpp	/^using declareMetadataFunction = Kokkos_Profiling_declareMetadataFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_declareMetadataFunction
declare_configuration_metadata	impl/Kokkos_Core.cpp	/^void declare_configuration_metadata(const std::string& category,$/;"	f	namespace:__anon5875dff10110	typeref:typename:void
declare_input_type	impl/Kokkos_Profiling.cpp	/^size_t declare_input_type(const std::string& variableName, VariableInfo info) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t
declare_input_type	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_inputTypeDeclarationFunction declare_input_type;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Tools_inputTypeDeclarationFunction
declare_metadata	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_declareMetadataFunction declare_metadata;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_declareMetadataFunction
declare_optimization_goal	impl/Kokkos_Profiling.cpp	/^void declare_optimization_goal(const size_t context,$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
declare_optimization_goal	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_optimizationGoalDeclarationFunction declare_optimization_goal;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Tools_optimizationGoalDeclarationFunction
declare_output_type	impl/Kokkos_Profiling.cpp	/^size_t declare_output_type(const std::string& variableName, VariableInfo info) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t
declare_output_type	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_outputTypeDeclarationFunction declare_output_type;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Tools_outputTypeDeclarationFunction
decrement	impl/Kokkos_SharedAlloc.cpp	/^    void, void>::decrement(SharedAllocationRecord<void, void>* arg_record) {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void> *
decrement	impl/Kokkos_TaskQueue_impl.hpp	/^KOKKOS_FUNCTION void TaskQueue<ExecSpace, MemorySpace>::decrement($/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION void
decrement_and_check_reference_count	impl/Kokkos_TaskNode.hpp	/^  bool decrement_and_check_reference_count() {$/;"	f	class:Kokkos::Impl::ReferenceCountedBase	typeref:typename:KOKKOS_INLINE_FUNCTION bool
decrement_current_context_id	impl/Kokkos_Profiling.cpp	/^void decrement_current_context_id() { --get_context_counter(); }$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
deduce_value_type	impl/Kokkos_FunctorAnalysis.hpp	/^  struct deduce_value_type {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
deduce_value_type	impl/Kokkos_FunctorAnalysis.hpp	/^  struct deduce_value_type<F, REDUCE, void, false> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
deduce_value_type	impl/Kokkos_FunctorAnalysis.hpp	/^  struct deduce_value_type<F, REDUCE, void, true> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
deduce_value_type	impl/Kokkos_FunctorAnalysis.hpp	/^  struct deduce_value_type<F, SCAN, void, false> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
deduce_value_type	impl/Kokkos_FunctorAnalysis.hpp	/^  struct deduce_value_type<F, SCAN, void, true> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
deep_copy	Kokkos_CopyViews.hpp	/^inline void deep_copy($/;"	f	namespace:Kokkos	typeref:typename:void
deep_copy_header_no_exec	Cuda/Kokkos_CudaSpace.cpp	/^void SharedAllocationRecord<Kokkos::CudaSpace, void>::deep_copy_header_no_exec($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::CudaSpace	typeref:typename:void
deepcopy	Kokkos_AnonymousSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10303
deepcopy	Kokkos_AnonymousSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10603
deepcopy	Kokkos_AnonymousSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon04015cc10903
deepcopy	Kokkos_Concepts.hpp	/^  enum { deepcopy = assignable };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonfe5a008b0303
deepcopy	Kokkos_Concepts.hpp	/^  enum { deepcopy = mem_access::deepcopy };$/;"	e	enum:Kokkos::SpaceAccessibility::__anonfe5a008b0603
deepcopy	Kokkos_Cuda.hpp	/^  enum : bool { deepcopy = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon944eb5290303
deepcopy	Kokkos_Cuda.hpp	/^  enum : bool { deepcopy = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon944eb5290603
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150303
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150603
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150903
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150c03
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861150f03
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151203
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151503
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151803
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151b03
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861151e03
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861152103
deepcopy	Kokkos_CudaSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona8b861152403
deepcopy	Kokkos_HBWSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon589a69990303
deepcopy	Kokkos_HBWSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon589a69990603
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38982703
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980303
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980603
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980903
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980c03
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38980f03
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981203
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981503
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981803
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981b03
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38981e03
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38982103
deepcopy	Kokkos_HIP_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon586c38982403
deepcopy	Kokkos_HPX.hpp	/^  enum : bool { deepcopy = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2e1eac7c0703
deepcopy	Kokkos_LogicalSpaces.hpp	/^  enum { deepcopy = MemorySpaceAccess<BaseSpace, OtherSpace>::deepcopy };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anoncffb81260303
deepcopy	Kokkos_OpenMP.hpp	/^  enum : bool { deepcopy = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anone85181db0303
deepcopy	Kokkos_OpenMPTarget.hpp	/^  enum : bool { deepcopy = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon958959a20303
deepcopy	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2679b92e0303
deepcopy	Kokkos_OpenMPTargetSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon2679b92e0603
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20303
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20603
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20903
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20c03
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed20f03
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21203
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21503
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21803
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21b03
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed21e03
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed22103
deepcopy	Kokkos_SYCL_Space.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anonc0cf2ed22403
deepcopy	Kokkos_Serial.hpp	/^  enum : bool { deepcopy = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anona63965ac0503
deepcopy	Kokkos_Threads.hpp	/^  enum : bool { deepcopy = false };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon3ff296770303
deepcopy	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90303
deepcopy	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90603
deepcopy	OpenACC/Kokkos_OpenACCSpace.hpp	/^  enum : bool { deepcopy = true };$/;"	e	enum:Kokkos::Impl::MemorySpaceAccess::__anon0facdfb90903
default_	Kokkos_HPX.hpp	/^  enum class instance_mode { default_, independent };$/;"	e	enum:Kokkos::Experimental::HPX::instance_mode
default_aggregate_kernel_impl_t	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  using default_aggregate_kernel_impl_t =$/;"	t	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:GraphNodeAggregateKernelDefaultImpl<ExecutionSpace>
default_inner_direction	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^struct default_inner_direction<Kokkos::Cuda> {$/;"	s	namespace:Kokkos
default_inner_direction	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^struct default_inner_direction<Kokkos::Experimental::HIP> {$/;"	s	namespace:Kokkos
default_inner_direction	KokkosExp_MDRangePolicy.hpp	/^struct default_inner_direction {$/;"	s	namespace:Kokkos
default_inner_direction	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^struct default_inner_direction<Kokkos::Experimental::SYCL> {$/;"	s	namespace:Kokkos
default_kernel_impl_t	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  using default_kernel_impl_t = GraphNodeKernelDefaultImpl<ExecutionSpace>;$/;"	t	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:GraphNodeKernelDefaultImpl<ExecutionSpace>
default_largest_tile_size	KokkosExp_MDRangePolicy.hpp	/^  int default_largest_tile_size;$/;"	m	struct:Kokkos::Impl::TileSizeProperties	typeref:typename:int
default_launch_mechanism	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^      default_launch_mechanism =$/;"	m	struct:Kokkos::Impl::DeduceCudaLaunchMechanism	typeref:typename:const Experimental::CudaLaunchMechanism
default_launch_mechanism	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static constexpr HIPLaunchMechanism default_launch_mechanism =$/;"	m	struct:Kokkos::Experimental::Impl::DeduceHIPLaunchMechanism	typeref:typename:HIPLaunchMechanism
default_launchbounds	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static constexpr auto default_launchbounds() { return false; }$/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:auto
default_launchbounds	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static constexpr auto default_launchbounds() { return true; }$/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:auto
default_name	Kokkos_ExecPolicy.hpp	/^  std::string default_name;$/;"	m	struct:Kokkos::Impl::ParallelConstructName	typeref:typename:std::string
default_outer_direction	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^struct default_outer_direction<Kokkos::Cuda> {$/;"	s	namespace:Kokkos
default_outer_direction	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^struct default_outer_direction<Kokkos::Experimental::HIP> {$/;"	s	namespace:Kokkos
default_outer_direction	KokkosExp_MDRangePolicy.hpp	/^struct default_outer_direction {$/;"	s	namespace:Kokkos
default_outer_direction	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^struct default_outer_direction<Kokkos::Experimental::SYCL> {$/;"	s	namespace:Kokkos
default_tasking_memory_space_for_execution_space	Kokkos_TaskScheduler_fwd.hpp	/^struct default_tasking_memory_space_for_execution_space {$/;"	s	namespace:Kokkos::Impl
default_tasking_memory_space_for_execution_space	Kokkos_TaskScheduler_fwd.hpp	/^struct default_tasking_memory_space_for_execution_space<Kokkos::Cuda> {$/;"	s	namespace:Kokkos::Impl
default_tasking_memory_space_for_execution_space_t	Kokkos_TaskScheduler_fwd.hpp	/^using default_tasking_memory_space_for_execution_space_t =$/;"	t	namespace:Kokkos::Impl	typeref:typename:default_tasking_memory_space_for_execution_space<ExecSpace>::type
default_team_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  constexpr const static size_t default_team_size = 256;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:const size_t
default_tile_size	KokkosExp_MDRangePolicy.hpp	/^  int default_tile_size;$/;"	m	struct:Kokkos::Impl::TileSizeProperties	typeref:typename:int
demangle	impl/Kokkos_Stacktrace.cpp	/^std::string demangle(const std::string& name) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::string
demangle_and_print_traceback	impl/Kokkos_Stacktrace.cpp	/^void demangle_and_print_traceback(std::ostream& out,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
demangle_and_print_traceback_entry	impl/Kokkos_Stacktrace.cpp	/^void demangle_and_print_traceback_entry($/;"	f	namespace:Kokkos::Impl	typeref:typename:void
denorm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<double> { static constexpr double value = DBL_TRUE_MIN; };$/;"	s	namespace:Kokkos::Experimental::Impl
denorm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<double> { static constexpr double value = __DBL_DENORM_MIN_/;"	s	namespace:Kokkos::Experimental::Impl
denorm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<float> { static constexpr float value = FLT_TRUE_MIN; };$/;"	s	namespace:Kokkos::Experimental::Impl
denorm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<float> { static constexpr float value = __FLT_DENORM_MIN__;/;"	s	namespace:Kokkos::Experimental::Impl
denorm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<long double> { static constexpr long double value = LDBL_TR/;"	s	namespace:Kokkos::Experimental::Impl
denorm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<long double> { static constexpr long double value = __LDBL_/;"	s	namespace:Kokkos::Experimental::Impl
denorm_min_helper	Kokkos_NumericTraits.hpp	/^template <class> struct denorm_min_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
dependence_count	impl/Kokkos_TaskNode.hpp	/^  int32_t dependence_count() const { return this->n_vla_entries(); }$/;"	f	class:Kokkos::Impl::AggregateTask	typeref:typename:KOKKOS_INLINE_FUNCTION int32_t
derived_t	impl/Kokkos_SharedAlloc.hpp	/^  using derived_t     = SharedAllocationRecord<MemorySpace, void>;$/;"	t	class:Kokkos::Impl::HostInaccessibleSharedAllocationRecordCommon	typeref:typename:SharedAllocationRecord<MemorySpace,void>
derived_t	impl/Kokkos_SharedAlloc.hpp	/^  using derived_t     = SharedAllocationRecord<MemorySpace, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:SharedAllocationRecord<MemorySpace,void>
dest_view_type	Kokkos_CopyViews.hpp	/^  using dest_view_type = Kokkos::View<data_type, array_layout, Space>;$/;"	t	struct:Kokkos::Impl::MirrorViewType	typeref:typename:Kokkos::View<data_type,array_layout,Space>
destroy	impl/Kokkos_TaskBase.hpp	/^  KOKKOS_FUNCTION static void destroy(root_type* root) {$/;"	f	class:Kokkos::Impl::Task	typeref:typename:KOKKOS_FUNCTION void
destroy	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_FUNCTION static void destroy(task_base_type* \/*root*\/) {$/;"	f	class:Kokkos::Impl::RunnableTask	typeref:typename:KOKKOS_FUNCTION void
destroy	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static void destroy(TaskBase* \/*task*\/) {}$/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION void
destroy	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static void destroy(TaskBase* task) {$/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION void
destroyProfileSection	impl/Kokkos_Profiling.cpp	/^void destroyProfileSection(const uint32_t secID) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
destroyProfileSection	impl/Kokkos_Profiling.cpp	/^void destroyProfileSection(const uint32_t secID) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
destroyProfileSectionFunction	impl/Kokkos_Profiling_Interface.hpp	/^using destroyProfileSectionFunction =$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_destroyProfileSectionFunction
destroy_profile_section	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_destroyProfileSectionFunction destroy_profile_section;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_destroyProfileSectionFunction
destroy_shared_allocation	impl/Kokkos_SimpleTaskScheduler.hpp	/^  void destroy_shared_allocation() { managed_object->~T(); }$/;"	f	struct:Kokkos::Impl::DefaultDestroy	typeref:typename:KOKKOS_FUNCTION void
destroy_shared_allocation	impl/Kokkos_TaskQueueMultiple_impl.hpp	/^                       MemorySpace>::Destroy::destroy_shared_allocation() {$/;"	f	class:Kokkos::Impl::TaskQueueMultiple::Destroy	typeref:typename:void
destroy_shared_allocation	impl/Kokkos_TaskQueue_impl.hpp	/^void TaskQueue<ExecSpace, MemorySpace>::Destroy::destroy_shared_allocation() {$/;"	f	class:Kokkos::Impl::TaskQueue::Destroy	typeref:typename:void
destroy_type	impl/Kokkos_TaskBase.hpp	/^  using destroy_type  = void (*)(TaskBase*);$/;"	t	class:Kokkos::Impl::TaskBase
destroy_type	impl/Kokkos_TaskNode.hpp	/^  using destroy_type       = void (*)(task_base_type*);$/;"	t	class:Kokkos::Impl::RunnableTaskBase
destruct_delete	impl/Kokkos_Utilities.hpp	/^struct destruct_delete {$/;"	s	namespace:Kokkos::Impl
desul_atomic_compare_exchange	Kokkos_Atomic.hpp	/^KOKKOS_INLINE_FUNCTION T desul_atomic_compare_exchange($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION T
desul_atomic_dec	Kokkos_Atomic.hpp	/^KOKKOS_INLINE_FUNCTION void desul_atomic_dec(T* dest, MemoryOrderSeqCst,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION void
desul_atomic_exchange	Kokkos_Atomic.hpp	/^desul_atomic_exchange(T* dest, Kokkos::Impl::identity_t<const T> val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION T
desul_atomic_exchange	Kokkos_Atomic.hpp	/^desul_atomic_exchange(T* dest, const Kokkos::Impl::identity_t<T> val,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION T
desul_atomic_inc	Kokkos_Atomic.hpp	/^KOKKOS_INLINE_FUNCTION void desul_atomic_inc(T* dest, MemoryOrderSeqCst,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION void
detect_device_arch	Cuda/Kokkos_Cuda_Instance.cpp	/^std::vector<unsigned> Cuda::detect_device_arch() {$/;"	f	class:Kokkos::Cuda	typeref:typename:std::vector<unsigned>
detect_device_count	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type Cuda::detect_device_count() {$/;"	f	class:Kokkos::Cuda	typeref:typename:Cuda::size_type
detect_device_count	HIP/Kokkos_HIP_Instance.cpp	/^HIP::size_type HIP::detect_device_count() {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:HIP::size_type
detected_join_no_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct detected_join_no_tag {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
detected_join_no_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct detected_join_no_tag<$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
detected_join_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct detected_join_tag {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
detected_join_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct detected_join_tag<F, decltype(has_join_tag_function<F>::enable_if($/;"	s	struct:Kokkos::Impl::FunctorAnalysis
detected_or_t	Kokkos_DetectionIdiom.hpp	/^using detected_or_t = typename Impl::detector<Default, void, Op, Args...>::type;$/;"	t	typeref:typename:Impl::detector<Default,void,Op,Args...>::type
detected_t	Kokkos_DetectionIdiom.hpp	/^using detected_t = typename Impl::detector<nonesuch, void, Op, Args...>::type;$/;"	t	typeref:typename:Impl::detector<nonesuch,void,Op,Args...>::type
detected_volatile_join_no_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct detected_volatile_join_no_tag {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
detected_volatile_join_no_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct detected_volatile_join_no_tag<$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
detected_volatile_join_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct detected_volatile_join_tag {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
detected_volatile_join_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct detected_volatile_join_tag<$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
detector	Kokkos_DetectionIdiom.hpp	/^struct detector {$/;"	s	namespace:Kokkos::Impl
dev	Kokkos_Concepts.hpp	/^  struct dev : std::false_type {$/;"	s	struct:Kokkos::is_space
dev_type	OpenACC/Kokkos_OpenACC_Traits.hpp	/^  static constexpr acc_device_t dev_type     = acc_device_nvidia;$/;"	m	struct:Kokkos::Experimental::Impl::OpenACC_Traits	typeref:typename:acc_device_t
deviceID	impl/Kokkos_Profiling_C_Interface.h	/^  size_t deviceID;$/;"	m	struct:Kokkos_Profiling_KokkosPDeviceInfo	typeref:typename:size_t
device_abort	impl/Kokkos_Error.hpp	/^device_abort(const char *const msg) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_ABORT_NORETURN_DEVICE KOKKOS_IMPL_DEVICE_FUNCTION void
device_arch	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type Cuda::device_arch() {$/;"	f	class:Kokkos::Cuda	typeref:typename:Cuda::size_type
device_id	Kokkos_Cuda.hpp	/^  static int device_id(const Cuda& exec) { return exec.cuda_device(); }$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	Kokkos_HIP_Space.hpp	/^  static int device_id(const Kokkos::Experimental::HIP& exec) {$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	Kokkos_HPX.hpp	/^  static int device_id(const Kokkos::Experimental::HPX &) { return 0; }$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	Kokkos_OpenMP.hpp	/^  static int device_id(const OpenMP&) { return 0; }$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	Kokkos_OpenMPTarget.hpp	/^  static int device_id(const Kokkos::Experimental::OpenMPTarget&) {$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	Kokkos_SYCL.hpp	/^  static int device_id(const Kokkos::Experimental::SYCL& exec) {$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	Kokkos_Serial.hpp	/^  static int device_id(const Serial&) { return 0; }$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	Kokkos_Threads.hpp	/^  static int device_id(const Threads&) { return 0; }$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	OpenACC/Kokkos_OpenACC.hpp	/^  static int device_id(const Kokkos::Experimental::OpenACC&) {$/;"	f	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:int
device_id	impl/Kokkos_InitializationSettings.hpp	/^  int device_id;$/;"	m	struct:Kokkos::InitArguments	typeref:typename:int
device_id	impl/Kokkos_Profiling_Interface.hpp	/^  uint32_t device_id;$/;"	m	struct:Kokkos::Tools::Experimental::ExecutionSpaceIdentifier	typeref:typename:uint32_t
device_id	impl/Kokkos_Profiling_Interface.hpp	/^inline uint32_t device_id(ExecutionSpace const& space) noexcept {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:uint32_t
device_id_root	impl/Kokkos_Profiling_Interface.hpp	/^constexpr uint32_t device_id_root() {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:uint32_t
device_memory_space	KokkosExp_InterOp.hpp	/^struct device_memory_space {$/;"	s	namespace:Kokkos::Impl
device_memory_space_t	KokkosExp_InterOp.hpp	/^using device_memory_space_t = typename device_memory_space<Tp>::type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:device_memory_space<Tp>::type
device_type	Kokkos_AnonymousSpace.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::AnonymousSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_Concepts.hpp	/^  using device_type     = Device<execution_space, memory_space>;$/;"	t	struct:Kokkos::Device	typeref:typename:Device<execution_space,memory_space>
device_type	Kokkos_Crs.hpp	/^  using device_type     = typename traits::device_type;$/;"	t	class:Kokkos::Crs	typeref:typename:traits::device_type
device_type	Kokkos_Cuda.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Cuda	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_CudaSpace.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::CudaHostPinnedSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_CudaSpace.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::CudaSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_CudaSpace.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::CudaUVMSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_HBWSpace.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::HBWSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_HIP_Space.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::HIP	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_HIP_Space.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_HIP_Space.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_HIP_Space.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::HIPSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_HPX.hpp	/^  using device_type          = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::HPX	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_HostSpace.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::HostSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_LogicalSpaces.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_OpenMP.hpp	/^  using device_type          = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::OpenMP	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_OpenMPTarget.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_OpenMPTargetSpace.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_SYCL.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::SYCL	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_SYCL_Space.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_SYCL_Space.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_SYCL_Space.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_ScratchSpace.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::ScratchMemorySpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_Serial.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Serial	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_Threads.hpp	/^  using device_type = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Threads	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	Kokkos_View.hpp	/^  using device_type       = Kokkos::Device<ExecutionSpace, MemorySpace>;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:Kokkos::Device<ExecutionSpace,MemorySpace>
device_type	OpenACC/Kokkos_OpenACC.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::OpenACC	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	OpenACC/Kokkos_OpenACCSpace.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	impl/Kokkos_TaskQueue.hpp	/^  using device_type     = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Impl::TaskQueue	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  using device_type          = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	impl/Kokkos_TaskQueueMultiple.hpp	/^  using device_type         = Kokkos::Device<execution_space, memory_space>;$/;"	t	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:Kokkos::Device<execution_space,memory_space>
device_type	impl/Kokkos_ViewUniformType.hpp	/^  using device_type = typename ViewType::device_type;$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:ViewType::device_type
device_type_t	Kokkos_Parallel.hpp	/^using device_type_t = typename T::device_type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:T::device_type
devicetype_from_uint32t	impl/Kokkos_Profiling_Interface.hpp	/^inline DeviceType devicetype_from_uint32t(const uint32_t in) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:DeviceType
difference_type	Kokkos_Array.hpp	/^  using difference_type = ptrdiff_t;$/;"	t	struct:Kokkos::Array	typeref:typename:ptrdiff_t
difference_type	impl/Kokkos_MemoryPoolAllocator.hpp	/^  using difference_type = std::make_signed_t<size_type>;$/;"	t	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:std::make_signed_t<size_type>
digits10_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits10_helper<bool> { static constexpr int value = 0; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits10_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits10_helper<double> { static constexpr int value = DBL_DIG; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits10_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits10_helper<float> { static constexpr int value = FLT_DIG; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits10_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits10_helper<long double> { static constexpr int value = LDBL_DIG; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits10_helper	Kokkos_NumericTraits.hpp	/^template <class> struct digits10_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<bool> { static constexpr int value = 1; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<char> { static constexpr int value = CHAR_BIT - std::is_signed</;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<double> { static constexpr int value = DBL_MANT_DIG; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<float> { static constexpr int value = FLT_MANT_DIG; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<int> { static constexpr int value = CHAR_BIT*sizeof(int)-1; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<long double> { static constexpr int value = LDBL_MANT_DIG; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<long int> { static constexpr int value = CHAR_BIT*sizeof(long i/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<long long int> { static constexpr int value = CHAR_BIT*sizeof(l/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<short> { static constexpr int value = CHAR_BIT*sizeof(short)-1;/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<signed char> { static constexpr int value = CHAR_BIT - 1; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned char> { static constexpr int value = CHAR_BIT; };$/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned int> { static constexpr int value = CHAR_BIT*sizeof(in/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned long int> { static constexpr int value = CHAR_BIT*size/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned long long int> { static constexpr int value = CHAR_BIT/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned short> { static constexpr int value = CHAR_BIT*sizeof(/;"	s	namespace:Kokkos::Experimental::Impl
digits_helper	Kokkos_NumericTraits.hpp	/^template <class> struct digits_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
dimension	Kokkos_Layout.hpp	/^  size_t dimension[ARRAY_LAYOUT_MAX_RANK];$/;"	m	struct:Kokkos::Experimental::LayoutTiled	typeref:typename:size_t[]
dimension	Kokkos_Layout.hpp	/^  size_t dimension[ARRAY_LAYOUT_MAX_RANK];$/;"	m	struct:Kokkos::LayoutLeft	typeref:typename:size_t[]
dimension	Kokkos_Layout.hpp	/^  size_t dimension[ARRAY_LAYOUT_MAX_RANK];$/;"	m	struct:Kokkos::LayoutRight	typeref:typename:size_t[]
dimension	Kokkos_Layout.hpp	/^  size_t dimension[ARRAY_LAYOUT_MAX_RANK];$/;"	m	struct:Kokkos::LayoutStride	typeref:typename:size_t[]
dimension	Kokkos_View.hpp	/^  using dimension    = typename data_analysis::dimension;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::dimension
disable_warnings	impl/Kokkos_InitializationSettings.hpp	/^  bool disable_warnings;$/;"	m	struct:Kokkos::InitArguments	typeref:typename:bool
disband_pool	impl/Kokkos_HostThreadTeam.cpp	/^void HostThreadTeamData::disband_pool() {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:void
disband_team	impl/Kokkos_HostThreadTeam.cpp	/^void HostThreadTeamData::disband_team() {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:void
dispatch_execute_task	Kokkos_HPX.hpp	/^inline void dispatch_execute_task(Closure *closure,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
do_handle_failed_insertion	impl/Kokkos_MultipleTaskQueue.hpp	/^  KOKKOS_INLINE_FUNCTION void do_handle_failed_insertion($/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION void
do_not_use_host_execution_space	Kokkos_Concepts.hpp	/^  using do_not_use_host_execution_space = std::conditional_t<$/;"	t	struct:Kokkos::is_space	typeref:typename:std::conditional_t<std::is_same<execution_space,Kokkos::Cuda>::value||false,Kokkos::DefaultHostExecutionSpace,execution_space>
do_not_use_host_memory_space	Kokkos_Concepts.hpp	/^  using do_not_use_host_memory_space = std::conditional_t<$/;"	t	struct:Kokkos::is_space
do_not_warn_not_recognized_command_line_argument	impl/Kokkos_Command_Line_Parsing.cpp	/^void Kokkos::Impl::do_not_warn_not_recognized_command_line_argument($/;"	f	class:Kokkos::Impl	typeref:typename:void
do_not_warn_regular_expressions	impl/Kokkos_Command_Line_Parsing.cpp	/^std::vector<std::regex> do_not_warn_regular_expressions{$/;"	v	namespace:__anonad3933610210	typeref:typename:std::vector<std::regex>
do_schedule_runnable	impl/Kokkos_MultipleTaskQueue.hpp	/^  KOKKOS_INLINE_FUNCTION void do_schedule_runnable($/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION void
do_shfl_op	Cuda/Kokkos_Cuda_Vectorization.hpp	/^  __device__ KOKKOS_IMPL_FORCEINLINE T do_shfl_op(unsigned mask, T& val,$/;"	f	struct:Kokkos::Impl::in_place_shfl_down_fn	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE T
do_shfl_op	Cuda/Kokkos_Cuda_Vectorization.hpp	/^  __device__ KOKKOS_IMPL_FORCEINLINE T do_shfl_op(unsigned mask, T& val,$/;"	f	struct:Kokkos::Impl::in_place_shfl_fn	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE T
do_shfl_op	Cuda/Kokkos_Cuda_Vectorization.hpp	/^  __device__ KOKKOS_IMPL_FORCEINLINE T do_shfl_op(unsigned mask, T& val,$/;"	f	struct:Kokkos::Impl::in_place_shfl_up_fn	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE T
do_shfl_op	HIP/Kokkos_HIP_Vectorization.hpp	/^  __device__ KOKKOS_IMPL_FORCEINLINE T do_shfl_op(T& val, int lane,$/;"	f	struct:Kokkos::Experimental::Impl::in_place_shfl_down_fn	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE T
do_shfl_op	HIP/Kokkos_HIP_Vectorization.hpp	/^  __device__ KOKKOS_IMPL_FORCEINLINE T do_shfl_op(T& val, int lane,$/;"	f	struct:Kokkos::Experimental::Impl::in_place_shfl_fn	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE T
do_shfl_op	HIP/Kokkos_HIP_Vectorization.hpp	/^  __device__ KOKKOS_IMPL_FORCEINLINE T do_shfl_op(T& val, int lane,$/;"	f	struct:Kokkos::Experimental::Impl::in_place_shfl_up_fn	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE T
domain_offset	impl/Kokkos_ViewMapping.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr size_t domain_offset($/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION size_t
dontComplain	dummy.cpp	/^int dontComplain() {$/;"	f	namespace:Kokkos::AvoidCompilerWarnings	typeref:typename:int
double_value	impl/Kokkos_Profiling_C_Interface.h	/^  double double_value;$/;"	m	union:Kokkos_Tools_VariableValue_ValueUnion	typeref:typename:double
double_value	impl/Kokkos_Profiling_C_Interface.h	/^  double* double_value;$/;"	m	union:Kokkos_Tools_VariableValue_ValueUnionSet	typeref:typename:double *
driver	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::driver() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
driver	impl/Kokkos_Tools_Generic.hpp	/^    using driver     = Kokkos::Impl::ParallelFor<Functor, Policy, exec_space>;$/;"	t	function:Kokkos::Tools::Experimental::Impl::Impl::SimpleTeamSizeCalculator::get_mdrange_max_tile_size_product	typeref:typename:Kokkos::Impl::ParallelFor<Functor,Policy,exec_space>
driver	impl/Kokkos_Tools_Generic.hpp	/^    using driver =$/;"	t	function:Kokkos::Tools::Experimental::Impl::Impl::ComplexReducerSizeCalculator::get_mdrange_max_tile_size_product	typeref:typename:Kokkos::Impl::ParallelReduce<Functor,Policy,ReducerType,exec_space>
driver	impl/Kokkos_Tools_Generic.hpp	/^    using driver =$/;"	t	function:Kokkos::Tools::Experimental::Impl::Impl::SimpleTeamSizeCalculator::get_mdrange_max_tile_size_product	typeref:typename:Kokkos::Impl::ParallelReduce<Functor,Policy,Kokkos::InvalidType,exec_space>
dst_execution_space	Kokkos_CopyViews.hpp	/^  using dst_execution_space = typename DstType::execution_space;$/;"	t	function:Kokkos::Impl::view_copy	typeref:typename:DstType::execution_space
dst_execution_space	Kokkos_CopyViews.hpp	/^  using dst_execution_space = typename dst_type::execution_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:dst_type::execution_space
dst_handle_type	impl/Kokkos_ViewLayoutTiled.hpp	/^    using dst_handle_type = typename dst_map_type::handle_type;$/;"	t	function:Kokkos::Impl::ViewMapping::assign	typeref:typename:dst_map_type::handle_type
dst_map_type	impl/Kokkos_ViewLayoutTiled.hpp	/^    using dst_map_type    = ViewMapping<traits, void>;$/;"	t	function:Kokkos::Impl::ViewMapping::assign	typeref:typename:ViewMapping<traits,void>
dst_memory_space	Kokkos_CopyViews.hpp	/^                                   dst_memory_space>::accessible$/;"	e	enum:Kokkos::Impl::view_copy::__anon6f9042750403
dst_memory_space	Kokkos_CopyViews.hpp	/^                                   dst_memory_space>::accessible$/;"	e	enum:Kokkos::deep_copy::__anon6f9042750603
dst_memory_space	Kokkos_CopyViews.hpp	/^                                   dst_memory_space>::accessible$/;"	e	enum:Kokkos::deep_copy::__anon6f9042751903
dst_memory_space	Kokkos_CopyViews.hpp	/^        Kokkos::SpaceAccessibility<ExecSpace, dst_memory_space>::accessible &&$/;"	e	enum:Kokkos::deep_copy::__anon6f9042751703
dst_memory_space	Kokkos_CopyViews.hpp	/^        Kokkos::SpaceAccessibility<ExecutionSpace, dst_memory_space>::accessible$/;"	e	enum:Kokkos::Impl::view_copy::__anon6f9042750203
dst_memory_space	Kokkos_CopyViews.hpp	/^  using dst_memory_space    = typename DstType::memory_space;$/;"	t	function:Kokkos::Impl::view_copy	typeref:typename:DstType::memory_space
dst_memory_space	Kokkos_CopyViews.hpp	/^  using dst_memory_space    = typename dst_type::memory_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:dst_type::memory_space
dst_memory_space	Kokkos_CopyViews.hpp	/^  using dst_memory_space = typename DstType::memory_space;$/;"	t	function:Kokkos::Impl::view_copy	typeref:typename:DstType::memory_space
dst_memory_space	Kokkos_CopyViews.hpp	/^  using dst_memory_space = typename dst_traits::memory_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:dst_traits::memory_space
dst_memory_space	Kokkos_CopyViews.hpp	/^  using dst_memory_space = typename dst_type::memory_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:dst_type::memory_space
dst_offset_type	impl/Kokkos_ViewLayoutTiled.hpp	/^    using dst_offset_type = typename dst_map_type::offset_type;$/;"	t	function:Kokkos::Impl::ViewMapping::assign	typeref:typename:dst_map_type::offset_type
dst_sub	Kokkos_CopyViews.hpp	/^  dst_subview_type dst_sub;$/;"	m	struct:Kokkos::Impl::CommonSubview	typeref:typename:dst_subview_type
dst_subview_type	Kokkos_CopyViews.hpp	/^  using dst_subview_type = typename Kokkos::Subview<DstType, Arg0, Arg1, Arg2,$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<DstType,Arg0,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6>
dst_subview_type	Kokkos_CopyViews.hpp	/^  using dst_subview_type = typename Kokkos::Subview<DstType, Arg0, Arg1, Arg2>;$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<DstType,Arg0,Arg1,Arg2>
dst_subview_type	Kokkos_CopyViews.hpp	/^  using dst_subview_type = typename Kokkos::Subview<DstType, Arg0, Arg1>;$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<DstType,Arg0,Arg1>
dst_subview_type	Kokkos_CopyViews.hpp	/^  using dst_subview_type = typename Kokkos::Subview<DstType, Arg0>;$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<DstType,Arg0>
dst_subview_type	Kokkos_CopyViews.hpp	/^  using dst_subview_type =$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<DstType,Arg0,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7>
dst_subview_type	Kokkos_CopyViews.hpp	/^  using dst_subview_type =$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<DstType,Arg0,Arg1,Arg2,Arg3,Arg4,Arg5>
dst_subview_type	Kokkos_CopyViews.hpp	/^  using dst_subview_type =$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<DstType,Arg0,Arg1,Arg2,Arg3,Arg4>
dst_subview_type	Kokkos_CopyViews.hpp	/^  using dst_subview_type =$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<DstType,Arg0,Arg1,Arg2,Arg3>
dst_traits	Kokkos_CopyViews.hpp	/^  using dst_traits = ViewTraits<DT, DP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:ViewTraits<DT,DP...>
dst_type	Kokkos_CopyViews.hpp	/^  using dst_type            = View<DT, DP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:View<DT,DP...>
dst_type	Kokkos_CopyViews.hpp	/^  using dst_type         = typename src_type::HostMirror;$/;"	t	function:Kokkos::Impl::create_mirror	typeref:typename:src_type::HostMirror
dst_type	Kokkos_CopyViews.hpp	/^  using dst_type = View<DT, DP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:View<DT,DP...>
dst_value_type	Kokkos_CopyViews.hpp	/^  using dst_value_type      = typename dst_type::value_type;$/;"	t	function:Kokkos::deep_copy	typeref:typename:dst_type::value_type
dualViewModifyFunction	impl/Kokkos_Profiling_Interface.hpp	/^using dualViewModifyFunction  = Kokkos_Profiling_dualViewModifyFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_dualViewModifyFunction
dualViewSyncFunction	impl/Kokkos_Profiling_Interface.hpp	/^using dualViewSyncFunction    = Kokkos_Profiling_dualViewSyncFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_dualViewSyncFunction
dynamic_extent	Kokkos_Extents.hpp	/^constexpr ptrdiff_t dynamic_extent = -1;$/;"	v	namespace:Kokkos::Experimental	typeref:typename:ptrdiff_t
e	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    const typename Policy::member_type e = m_policy.end();$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const typename Policy::member_type
e	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    const typename Policy::member_type e = m_policy.end();$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const typename Policy::member_type
e	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    const typename Policy::member_type e = m_policy.end();$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const typename Policy::member_type
e	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    const typename Policy::member_type e = m_policy.end();$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const typename Policy::member_type
ebo_base_t	impl/Kokkos_EBO.hpp	/^  using ebo_base_t = EBOBaseImpl<T, std::is_empty<T>::value, CtorsNotOnDevice>;$/;"	t	struct:Kokkos::Impl::StandardLayoutNoUniqueAddressMemberEmulation	typeref:typename:EBOBaseImpl<T,std::is_empty<T>::value,CtorsNotOnDevice>
ec	impl/Kokkos_StringManipulation.hpp	/^  errc ec;$/;"	m	struct:Kokkos::Impl::to_chars_result	typeref:typename:errc
element_type	impl/Kokkos_HostSharedPtr.hpp	/^  using element_type = T;$/;"	t	class:Kokkos::Impl::HostSharedPtr	typeref:typename:T
eliminate_warning_for_lock_array	Cuda/Kokkos_Cuda_Locks.hpp	/^inline int eliminate_warning_for_lock_array() { return lock_array_copied; }$/;"	f	namespace:Kokkos::Impl::__anon383deb300110	typeref:typename:int
eliminate_warning_for_lock_array	HIP/Kokkos_HIP_Locks.hpp	/^inline int eliminate_warning_for_lock_array() { return lock_array_copied; }$/;"	f	namespace:Kokkos::Impl::__anona006a1180110	typeref:typename:int
empty	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION static constexpr bool empty() { return false; }$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION bool
empty	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION static constexpr bool empty() { return true; }$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION bool
empty	impl/Kokkos_ChaseLev.hpp	/^  bool empty() const {$/;"	f	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:KOKKOS_INLINE_FUNCTION bool
empty	impl/Kokkos_LIFO.hpp	/^  bool empty() const noexcept {$/;"	f	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:bool
empty	impl/Kokkos_LIFO.hpp	/^  bool empty() const noexcept {$/;"	f	class:Kokkos::Impl::SingleConsumeOperationLIFO	typeref:typename:KOKKOS_INLINE_FUNCTION bool
emulate_fold_comma_operator	impl/Kokkos_Utilities.hpp	/^emulate_fold_comma_operator(Ts&&...) noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION _fold_comma_emulation_return
end	Cuda/Kokkos_Cuda_Team.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
end	Cuda/Kokkos_Cuda_Team.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const iType
end	Cuda/Kokkos_Cuda_Team.hpp	/^  const index_type end;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
end	HIP/Kokkos_HIP_Team.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
end	HIP/Kokkos_HIP_Team.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const iType
end	HIP/Kokkos_HIP_Team.hpp	/^  const index_type end;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
end	Kokkos_ExecPolicy.hpp	/^    KOKKOS_INLINE_FUNCTION member_type end() const { return m_end; }$/;"	f	struct:Kokkos::RangePolicy::WorkRange	typeref:typename:KOKKOS_INLINE_FUNCTION member_type
end	Kokkos_ExecPolicy.hpp	/^  KOKKOS_INLINE_FUNCTION member_type end() const { return m_end; }$/;"	f	class:Kokkos::RangePolicy	typeref:typename:KOKKOS_INLINE_FUNCTION member_type
end	Kokkos_ExecPolicy.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
end	Kokkos_ExecPolicy.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const iType
end	Kokkos_ExecPolicy.hpp	/^  const index_type end;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
end	Kokkos_Tuners.hpp	/^  auto end() { end_context(context); }$/;"	f	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:auto
end	Kokkos_Tuners.hpp	/^  void end() { end_context(context); }$/;"	f	struct:Kokkos::Tools::Experimental::CategoricalTuner	typeref:typename:void
end	Kokkos_Tuners.hpp	/^  void end() {$/;"	f	class:Kokkos::Tools::Experimental::TeamSizeTuner	typeref:typename:void
end	Kokkos_Tuners.hpp	/^  void end() {$/;"	f	struct:Kokkos::Tools::Experimental::MDRangeTuner	typeref:typename:void
end	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
end	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const index_type end;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const index_type
end	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const index_type end;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
end	SYCL/Kokkos_SYCL_Team.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
end	SYCL/Kokkos_SYCL_Team.hpp	/^  const iType end;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const iType
end	SYCL/Kokkos_SYCL_Team.hpp	/^  const index_type end;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
end	impl/Kokkos_VLAEmulation.hpp	/^  const_iterator end() const noexcept { return _vla_pointer() + m_num_entries; }$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION const_iterator
end	impl/Kokkos_VLAEmulation.hpp	/^  iterator end() noexcept { return _vla_pointer() + m_num_entries; }$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION iterator
endDeepCopy	impl/Kokkos_Profiling.cpp	/^void endDeepCopy() { Kokkos::Tools::endDeepCopy(); }$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
endDeepCopy	impl/Kokkos_Profiling.cpp	/^void endDeepCopy() {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
endDeepCopyFunction	impl/Kokkos_Profiling_Interface.hpp	/^using endDeepCopyFunction     = Kokkos_Profiling_endDeepCopyFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_endDeepCopyFunction
endFence	impl/Kokkos_Profiling.cpp	/^void endFence(const uint64_t handle) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
endFenceFunction	impl/Kokkos_Profiling_Interface.hpp	/^using endFenceFunction        = Kokkos_Profiling_endFenceFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_endFenceFunction
endFunction	impl/Kokkos_Profiling_Interface.hpp	/^using endFunction            = Kokkos_Profiling_endFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_endFunction
endParallelFor	impl/Kokkos_Profiling.cpp	/^void endParallelFor(const uint64_t kernelID) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
endParallelFor	impl/Kokkos_Profiling.cpp	/^void endParallelFor(const uint64_t kernelID) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
endParallelReduce	impl/Kokkos_Profiling.cpp	/^void endParallelReduce(const uint64_t kernelID) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
endParallelReduce	impl/Kokkos_Profiling.cpp	/^void endParallelReduce(const uint64_t kernelID) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
endParallelScan	impl/Kokkos_Profiling.cpp	/^void endParallelScan(const uint64_t kernelID) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
endParallelScan	impl/Kokkos_Profiling.cpp	/^void endParallelScan(const uint64_t kernelID) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
end_context	impl/Kokkos_Profiling.cpp	/^void end_context(size_t contextId) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
end_deep_copy	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_endDeepCopyFunction end_deep_copy;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_endDeepCopyFunction
end_fence	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_endFenceFunction end_fence;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_endFenceFunction
end_parallel_for	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_endFunction end_parallel_for;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_endFunction
end_parallel_for	impl/Kokkos_Tools_Generic.hpp	/^void end_parallel_for(ExecPolicy& policy, FunctorType& functor,$/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:void
end_parallel_reduce	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_endFunction end_parallel_reduce;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_endFunction
end_parallel_reduce	impl/Kokkos_Tools_Generic.hpp	/^void end_parallel_reduce(ExecPolicy& policy, FunctorType& functor,$/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:void
end_parallel_scan	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_endFunction end_parallel_scan;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_endFunction
end_parallel_scan	impl/Kokkos_Tools_Generic.hpp	/^void end_parallel_scan(ExecPolicy& policy, FunctorType& functor,$/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:void
end_tuning_context	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_contextEndFunction end_tuning_context;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Tools_contextEndFunction
entries	Kokkos_Crs.hpp	/^  entries_type entries;$/;"	m	class:Kokkos::Crs	typeref:typename:entries_type
entries_type	Kokkos_Crs.hpp	/^  using entries_type = View<DataType*, array_layout, device_type>;$/;"	t	class:Kokkos::Crs	typeref:typename:View<DataType *,array_layout,device_type>
entries_type	Kokkos_Crs.hpp	/^  using entries_type = typename CrsType::entries_type;$/;"	t	struct:Kokkos::CountAndFill	typeref:typename:CrsType::entries_type
environment_argument_mismatch	impl/Kokkos_Profiling.hpp	/^    environment_argument_mismatch$/;"	e	enum:Kokkos::Tools::Impl::InitializationStatus::InitializationResult
epsilon_helper	Kokkos_NumericTraits.hpp	/^template <> struct epsilon_helper<double> { static constexpr double value = DBL_EPSILON; };$/;"	s	namespace:Kokkos::Experimental::Impl
epsilon_helper	Kokkos_NumericTraits.hpp	/^template <> struct epsilon_helper<float> { static constexpr float value = FLT_EPSILON; };$/;"	s	namespace:Kokkos::Experimental::Impl
epsilon_helper	Kokkos_NumericTraits.hpp	/^template <> struct epsilon_helper<long double> {$/;"	s	namespace:Kokkos::Experimental::Impl
epsilon_helper	Kokkos_NumericTraits.hpp	/^template <class> struct epsilon_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
erf	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> erf($/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
erf	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 erf(__float128 x) { return ::erfq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
erfc	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 erfc(__float128 x) { return ::erfcq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
erfcx	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> erfcx($/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
erfcx	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION RealType erfcx(RealType x) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
errc	impl/Kokkos_StringManipulation.hpp	/^enum class errc {$/;"	g	namespace:Kokkos::Impl
error	impl/Kokkos_ViewMapping.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION void error(const ViewDimension<DimArgs...>& dim,$/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
error	impl/Kokkos_ViewMapping.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION void error(const ViewDimension<DimArgs...>&,$/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
error	impl/Kokkos_ViewMapping.hpp	/^  void error(char* buf, int buf_len, unsigned domain_rank, unsigned range_rank,$/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:void
error	impl/Kokkos_ViewMapping.hpp	/^  void error(char*, int, unsigned, unsigned,$/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:void
error_message	impl/Kokkos_Profiling.hpp	/^  std::string error_message;$/;"	m	struct:Kokkos::Tools::Impl::InitializationStatus	typeref:typename:std::string
eventSetsEqual	impl/Kokkos_Profiling.cpp	/^bool eventSetsEqual(const EventSet& l, const EventSet& r) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:bool
exe	Kokkos_Concepts.hpp	/^  struct exe : std::false_type {$/;"	s	struct:Kokkos::is_space
exe_access	Kokkos_Concepts.hpp	/^  using exe_access = Kokkos::Impl::MemorySpaceAccess<$/;"	t	struct:Kokkos::SpaceAccessibility	typeref:typename:Kokkos::Impl::MemorySpaceAccess<typename AccessSpace::execution_space::memory_space,MemorySpace>
exec	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  inline void exec(reference_type update) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
exec	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  void exec() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
exec	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline std::enable_if_t<std::is_void<TagType>::value> exec($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline std::enable_if_t<std::is_void<TagType>::value> exec($/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline std::enable_if_t<std::is_void<TagType>::value> exec($/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  std::enable_if_t<std::is_void<TagType>::value> exec() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline std::enable_if_t<std::is_void<TagType>::value> exec($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline std::enable_if_t<std::is_void<TagType>::value> exec($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  static void exec(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
exec	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  static void exec(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
exec	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  static void exec(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
exec	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  static void exec(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
exec	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  static void exec(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
exec	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  static void exec(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
exec	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  static void exec(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
exec	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  static void exec(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
exec_one	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_one($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_one	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_one($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_one	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^  std::enable_if_t<std::is_void<TagType>::value> exec_one($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_one	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^  std::enable_if_t<std::is_void<TagType>::value> exec_one($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_one	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  std::enable_if_t<std::is_void<TagType>::value> exec_one($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_one_thread	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  inline void exec_one_thread() const noexcept {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
exec_range	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  inline __device__ void exec_range(reference_type update) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
exec_range	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_range	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_range	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_range	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline __device__ std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_range	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  inline __device__ void exec_range(reference_type update) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
exec_range	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_range	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_range	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline __device__ std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_range	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_range	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_range	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_range	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static void exec_range(const FunctorType& functor, const Member ibeg,$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
exec_range	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static void exec_range(const MDRangePolicy& mdr_policy,$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
exec_range	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static void exec_range(const MDRangePolicy& mdr_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
exec_range	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  inline static void exec_range(const MDRangePolicy &mdr_policy,$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
exec_range	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  inline static void exec_range(const MDRangePolicy &mdr_policy,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
exec_range	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_range	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_range	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_range	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> exec_range($/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_range	impl/KokkosExp_IterateTileGPU.hpp	/^  void exec_range() const {$/;"	f	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION void
exec_range	impl/KokkosExp_IterateTileGPU.hpp	/^  void exec_range() const {$/;"	f	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION void
exec_schedule	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  exec_schedule(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_same<Schedule,Kokkos::Dynamic>::value>
exec_schedule	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  exec_schedule(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_same<Schedule,Kokkos::Static>::value>
exec_schedule	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  exec_schedule(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_same<Schedule,Kokkos::Dynamic>::value>
exec_schedule	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  exec_schedule(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_same<Schedule,Kokkos::Static>::value>
exec_schedule	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  exec_schedule(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_same<Schedule,Kokkos::Dynamic>::value>
exec_schedule	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  exec_schedule(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_same<Schedule,Kokkos::Static>::value>
exec_schedule	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  exec_schedule(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_same<Schedule,Kokkos::Dynamic>::value>
exec_schedule	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  exec_schedule(ThreadsExec &exec, const void *arg) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_same<Schedule,Kokkos::Static>::value>
exec_space	Kokkos_UniqueToken.hpp	/^  using exec_space       = typename TeamPolicy::execution_space;$/;"	t	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:TeamPolicy::execution_space
exec_space	Kokkos_UniqueToken.hpp	/^  using exec_space = ExecutionSpace;$/;"	t	class:Kokkos::Experimental::AcquireUniqueToken	typeref:typename:ExecutionSpace
exec_space	impl/Kokkos_Tools_Generic.hpp	/^    using exec_space = typename Policy::execution_space;$/;"	t	function:Kokkos::Tools::Experimental::Impl::Impl::ComplexReducerSizeCalculator::get_mdrange_max_tile_size_product	typeref:typename:Policy::execution_space
exec_space	impl/Kokkos_Tools_Generic.hpp	/^    using exec_space = typename Policy::execution_space;$/;"	t	function:Kokkos::Tools::Experimental::Impl::Impl::SimpleTeamSizeCalculator::get_mdrange_max_tile_size_product	typeref:typename:Policy::execution_space
exec_space_factory_list	impl/Kokkos_ExecSpaceManager.hpp	/^  std::map<std::string, std::unique_ptr<ExecSpaceBase>> exec_space_factory_list;$/;"	m	class:Kokkos::Impl::ExecSpaceManager	typeref:typename:std::map<std::string,std::unique_ptr<ExecSpaceBase>>
exec_space_type	Kokkos_CopyViews.hpp	/^  using exec_space_type = typename ViewType::execution_space;$/;"	t	function:Kokkos::Impl::contiguous_fill_or_memset	typeref:typename:ViewType::execution_space
exec_space_type	Kokkos_CopyViews.hpp	/^  using exec_space_type = typename ViewType::execution_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:ViewType::execution_space
exec_team	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_team($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_team	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_team($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_team	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_team($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_team	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  __device__ inline std::enable_if_t<std::is_void<TagType>::value> exec_team($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ std::enable_if_t<std::is_void<TagType>::value>
exec_team	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static std::enable_if_t<(!std::is_void<TagType>::value)> exec_team($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<(!std::is_void<TagType>::value)>
exec_team	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static std::enable_if_t<(!std::is_void<TagType>::value)> exec_team($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<(!std::is_void<TagType>::value)>
exec_team	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static std::enable_if_t<(std::is_void<TagType>::value)> exec_team($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<(std::is_void<TagType>::value)>
exec_team	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline static std::enable_if_t<(std::is_void<TagType>::value)> exec_team($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<(std::is_void<TagType>::value)>
exec_team	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  exec_team(const FunctorType &functor, Member member) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value && std::is_same<Schedule,Kokkos::Dynamic>::value>
exec_team	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  exec_team(const FunctorType &functor, Member member) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value && std::is_same<Schedule,Kokkos::Static>::value>
exec_team	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> exec_team($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
exec_work	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  exec_work(const FunctorType& functor, const Member iwork) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<WorkTag>::value && std::is_same<Enable,WorkTag>::value>
execute	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline void execute() { Base::impl_execute(); }$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Kokkos_Crs.hpp	/^  value_type execute() {$/;"	f	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:value_type
execute	Kokkos_HPX.hpp	/^  void execute() const { dispatch_execute_task(this, m_mdr_policy.space()); }$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Kokkos_HPX.hpp	/^  void execute() const { dispatch_execute_task(this, m_policy.space()); }$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Kokkos_HPX.hpp	/^  void execute() const { dispatch_execute_task(this, m_policy.space()); }$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute	Kokkos_HPX.hpp	/^  void execute() const { dispatch_execute_task(this, m_policy.space()); }$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute	Kokkos_HPX.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Kokkos_HPX.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Kokkos_Parallel_Reduce.hpp	/^      enable_if_t<is_array_reduction && std::is_pointer<Dummy>::value> execute($/;"	f	struct:Kokkos::Impl::ParallelReduceAdaptor
execute	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  inline static void execute(const FunctorType& \/*f*\/, const PolicyType& \/*p*\/,$/;"	f	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  void execute() const { execute_impl<WorkTag>(); }$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^void TaskQueueSpecialization<Kokkos::Experimental::OpenMPTarget>::execute($/;"	f	class:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget	typeref:typename:void
execute	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  inline void execute() const { this->exec(); }$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^  inline void execute() const noexcept {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  inline void execute() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  inline void execute() {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute_array	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  static void execute_array(const FunctorType& f, const PolicyType& p,$/;"	f	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:void
execute_function_noop	Threads/Kokkos_ThreadsExec.cpp	/^void execute_function_noop(ThreadsExec &, const void *) {}$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
execute_functor	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^  std::enable_if_t<std::is_void<TagType>::value> execute_functor($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor	Kokkos_HPX.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> execute_functor($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor	Kokkos_HPX.hpp	/^  inline static std::enable_if_t<std::is_void<TagType>::value> execute_functor($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor	Kokkos_HPX.hpp	/^  static std::enable_if_t<std::is_void<TagType>::value> execute_functor($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor_range	Kokkos_HPX.hpp	/^  execute_functor_range(const FunctorType &functor, const Member i_begin,$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor_range	Kokkos_HPX.hpp	/^  execute_functor_range(const FunctorType &functor, const Member i_begin,$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor_range	Kokkos_HPX.hpp	/^  execute_functor_range(const FunctorType &functor, const Policy &policy,$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor_range	Kokkos_HPX.hpp	/^  execute_functor_range(const FunctorType &functor, const Policy &policy,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor_range	Kokkos_HPX.hpp	/^  inline std::enable_if_t<std::is_void<TagType>::value> execute_functor_range($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_functor_range	Kokkos_HPX.hpp	/^  static std::enable_if_t<std::is_void<TagType>::value> execute_functor_range($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_void<TagType>::value>
execute_impl	Kokkos_Parallel_Reduce.hpp	/^  static inline void execute_impl(const std::string& label,$/;"	f	struct:Kokkos::Impl::ParallelReduceAdaptor	typeref:typename:void
execute_impl	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  void execute_impl() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute_init_join	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  static void execute_init_join(const FunctorType& f, const PolicyType& p,$/;"	f	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:void
execute_kernel	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  void execute_kernel() final { this->base_t::execute(); }$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:void
execute_kernel	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  void execute_kernel() final {}$/;"	f	struct:Kokkos::Impl::GraphNodeAggregateKernelDefaultImpl	typeref:typename:void
execute_kernel_vtable_base_t	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  using execute_kernel_vtable_base_t =$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:GraphNodeKernelDefaultImpl<ExecutionSpace>
execute_node	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  void execute_node() {$/;"	f	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:void
execute_parallel	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  execute_parallel() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<std::is_same<typename Policy::schedule_type::type,Kokkos::Dynamic>::value>
execute_reducer	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  static void execute_reducer(const FunctorType& f, const PolicyType& p,$/;"	f	struct:Kokkos::Impl::ParallelReduceSpecialize	typeref:typename:void
execute_resize_scratch_in_serial	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::execute_resize_scratch_in_serial() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
execute_sleep	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::execute_sleep(ThreadsExec &exec, const void *) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
execute_task	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^  void execute_task() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute_task	Kokkos_HPX.hpp	/^  inline void execute_task() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute_task	Kokkos_HPX.hpp	/^  inline void execute_task() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
execute_task	Kokkos_HPX.hpp	/^  inline void execute_task() const {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
execute_task	Kokkos_HPX.hpp	/^  inline void execute_task() const {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:void
execute_task	Kokkos_HPX.hpp	/^  void execute_task() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 2> execute_tile($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<Rank==2>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 2> execute_tile(const FunctorType& functor,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<Rank==2>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 3> execute_tile($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<Rank==3>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 3> execute_tile(const FunctorType& functor,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<Rank==3>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 4> execute_tile($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<Rank==4>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 4> execute_tile(const FunctorType& functor,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<Rank==4>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 5> execute_tile($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<Rank==5>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 5> execute_tile(const FunctorType& functor,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<Rank==5>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 6> execute_tile($/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:std::enable_if_t<Rank==6>
execute_tile	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  inline std::enable_if_t<Rank == 6> execute_tile(const FunctorType& functor,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::enable_if_t<Rank==6>
execution_policy	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using execution_policy = TeamPolicyInternal;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal
execution_policy	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using execution_policy = TeamPolicyInternal;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal
execution_policy	KokkosExp_MDRangePolicy.hpp	/^  using execution_policy =$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:MDRangePolicy<Properties...>
execution_policy	Kokkos_ExecPolicy.hpp	/^  using execution_policy = RangePolicy<Properties...>;$/;"	t	class:Kokkos::RangePolicy	typeref:typename:RangePolicy<Properties...>
execution_policy	Kokkos_ExecPolicy.hpp	/^  using execution_policy = TeamPolicy<Properties...>;$/;"	t	class:Kokkos::TeamPolicy	typeref:typename:TeamPolicy<Properties...>
execution_policy	Kokkos_HPX.hpp	/^  using execution_policy = TeamPolicyInternal;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal
execution_policy	Kokkos_WorkGraphPolicy.hpp	/^  using execution_policy = WorkGraphPolicy<Properties...>;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:WorkGraphPolicy<Properties...>
execution_policy	OpenMP/Kokkos_OpenMP_Team.hpp	/^  using execution_policy = TeamPolicyInternal<OpenMP, Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal<OpenMP,Properties...>
execution_policy	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using execution_policy = TeamPolicyInternal;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal
execution_policy	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using execution_policy = TeamPolicyInternal;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal
execution_policy	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using execution_policy = TeamPolicyInternal;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal
execution_policy	Threads/Kokkos_ThreadsTeam.hpp	/^  using execution_policy = TeamPolicyInternal;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal
execution_policy_trait_specifications	traits/Kokkos_Traits_fwd.hpp	/^using execution_policy_trait_specifications =$/;"	t	namespace:Kokkos::Impl	typeref:typename:type_list<ExecutionSpaceTrait,IndexTypeTrait,ScheduleTrait,IterationPatternTrait,WorkItemPropertyTrait,LaunchBoundsTrait,OccupancyControlTrait,GraphKernelTrait,WorkTagTrait>
execution_space	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  using execution_space = Kokkos::Cuda;$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:Kokkos::Cuda
execution_space	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using execution_space = Kokkos::Cuda;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Cuda
execution_space	Cuda/Kokkos_Cuda_Team.hpp	/^  using execution_space      = Kokkos::Cuda;$/;"	t	class:Kokkos::Impl::CudaTeamMember	typeref:typename:Kokkos::Cuda
execution_space	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  using execution_space = Cuda;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:Cuda
execution_space	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using execution_space = Kokkos::Experimental::HIP;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Experimental::HIP
execution_space	HIP/Kokkos_HIP_Team.hpp	/^  using execution_space      = Kokkos::Experimental::HIP;$/;"	t	class:Kokkos::Impl::HIPTeamMember	typeref:typename:Kokkos::Experimental::HIP
execution_space	HIP/Kokkos_HIP_UniqueToken.hpp	/^  using execution_space = HIP;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:HIP
execution_space	Kokkos_AnonymousSpace.hpp	/^  using execution_space = Kokkos::DefaultExecutionSpace;$/;"	t	class:Kokkos::AnonymousSpace	typeref:typename:Kokkos::DefaultExecutionSpace
execution_space	Kokkos_Concepts.hpp	/^  using execution_space = ExecutionSpace;$/;"	t	struct:Kokkos::Device	typeref:typename:ExecutionSpace
execution_space	Kokkos_Concepts.hpp	/^  using execution_space = typename is_exe::space;$/;"	t	struct:Kokkos::is_space	typeref:typename:is_exe::space
execution_space	Kokkos_Crs.hpp	/^    using execution_space = typename CrsType::execution_space;$/;"	t	function:Kokkos::CountAndFill::CountAndFill	typeref:typename:CrsType::execution_space
execution_space	Kokkos_Crs.hpp	/^  using execution_space = typename InCounts::execution_space;$/;"	t	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:InCounts::execution_space
execution_space	Kokkos_Crs.hpp	/^  using execution_space = typename InCrs::execution_space;$/;"	t	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:InCrs::execution_space
execution_space	Kokkos_Crs.hpp	/^  using execution_space = typename InCrs::execution_space;$/;"	t	class:Kokkos::Impl::GetCrsTransposeCounts	typeref:typename:InCrs::execution_space
execution_space	Kokkos_Crs.hpp	/^  using execution_space = typename traits::execution_space;$/;"	t	class:Kokkos::Crs	typeref:typename:traits::execution_space
execution_space	Kokkos_Cuda.hpp	/^  using execution_space = Cuda;$/;"	t	class:Kokkos::Cuda	typeref:typename:Cuda
execution_space	Kokkos_CudaSpace.hpp	/^  using execution_space = Cuda;$/;"	t	class:Kokkos::CudaUVMSpace	typeref:typename:Cuda
execution_space	Kokkos_CudaSpace.hpp	/^  using execution_space = HostSpace::execution_space;$/;"	t	class:Kokkos::CudaHostPinnedSpace	typeref:typename:HostSpace::execution_space
execution_space	Kokkos_CudaSpace.hpp	/^  using execution_space = Kokkos::Cuda;$/;"	t	class:Kokkos::CudaSpace	typeref:typename:Kokkos::Cuda
execution_space	Kokkos_Future.hpp	/^  using execution_space = typename scheduler_type::execution_space;$/;"	t	class:Kokkos::BasicFuture	typeref:typename:scheduler_type::execution_space
execution_space	Kokkos_Future.hpp	/^  using execution_space = typename std::conditional_t<$/;"	t	class:Kokkos::Impl::ResolveFutureArgOrder	typeref:typename:std::conditional_t<Arg1_is_space,Arg1,std::conditional_t<Arg2_is_space,Arg2,void>>::execution_space
execution_space	Kokkos_Graph.hpp	/^  using execution_space = ExecutionSpace;$/;"	t	struct:Kokkos::Experimental::Graph	typeref:typename:ExecutionSpace
execution_space	Kokkos_GraphNode.hpp	/^  using execution_space   = ExecutionSpace;$/;"	t	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:ExecutionSpace
execution_space	Kokkos_HBWSpace.hpp	/^  using execution_space = Kokkos::DefaultHostExecutionSpace;$/;"	t	class:Kokkos::Experimental::HBWSpace	typeref:typename:Kokkos::DefaultHostExecutionSpace
execution_space	Kokkos_HIP_Space.hpp	/^  using execution_space = HIP;$/;"	t	class:Kokkos::Experimental::HIP	typeref:typename:HIP
execution_space	Kokkos_HIP_Space.hpp	/^  using execution_space = HostSpace::execution_space;$/;"	t	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:HostSpace::execution_space
execution_space	Kokkos_HIP_Space.hpp	/^  using execution_space = Kokkos::Experimental::HIP;$/;"	t	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:Kokkos::Experimental::HIP
execution_space	Kokkos_HIP_Space.hpp	/^  using execution_space = Kokkos::Experimental::HIP;$/;"	t	class:Kokkos::Experimental::HIPSpace	typeref:typename:Kokkos::Experimental::HIP
execution_space	Kokkos_HPX.hpp	/^  using execution_space      = HPX;$/;"	t	class:Kokkos::Experimental::HPX	typeref:typename:HPX
execution_space	Kokkos_HPX.hpp	/^  using execution_space = HPX;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:HPX
execution_space	Kokkos_HPX.hpp	/^  using execution_space = Kokkos::Experimental::HPX;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Experimental::HPX
execution_space	Kokkos_HPX.hpp	/^  using execution_space = Kokkos::Experimental::HPX;$/;"	t	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:Kokkos::Experimental::HPX
execution_space	Kokkos_HostSpace.hpp	/^  using execution_space = DefaultHostExecutionSpace;$/;"	t	class:Kokkos::HostSpace	typeref:typename:DefaultHostExecutionSpace
execution_space	Kokkos_LogicalSpaces.hpp	/^  using execution_space =$/;"	t	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:std::conditional_t<std::is_void<DefaultBaseExecutionSpace>::value,typename BaseSpace::execution_space,DefaultBaseExecutionSpace>
execution_space	Kokkos_OpenMP.hpp	/^  using execution_space = OpenMP;$/;"	t	class:Kokkos::OpenMP	typeref:typename:OpenMP
execution_space	Kokkos_OpenMPTarget.hpp	/^  using execution_space = OpenMPTarget;$/;"	t	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:OpenMPTarget
execution_space	Kokkos_OpenMPTargetSpace.hpp	/^  using execution_space = Kokkos::Experimental::OpenMPTarget;$/;"	t	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:Kokkos::Experimental::OpenMPTarget
execution_space	Kokkos_Parallel.hpp	/^  using execution_space = detected_or_t<$/;"	t	struct:Kokkos::Impl::FunctorPolicyExecutionSpace
execution_space	Kokkos_Parallel.hpp	/^  using execution_space =$/;"	t	function:Kokkos::parallel_for	typeref:typename:Impl::FunctorPolicyExecutionSpace<FunctorType,void>::execution_space
execution_space	Kokkos_Parallel.hpp	/^  using execution_space =$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorPolicyExecutionSpace<FunctorType,void>::execution_space
execution_space	Kokkos_Parallel_Reduce.hpp	/^  using execution_space =$/;"	t	struct:Kokkos::Impl::ParallelReducePolicyType	typeref:typename:Impl::FunctorPolicyExecutionSpace<FunctorType,void>::execution_space
execution_space	Kokkos_SYCL.hpp	/^  using execution_space = SYCL;$/;"	t	class:Kokkos::Experimental::SYCL	typeref:typename:SYCL
execution_space	Kokkos_SYCL_Space.hpp	/^  using execution_space = HostSpace::execution_space;$/;"	t	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:HostSpace::execution_space
execution_space	Kokkos_SYCL_Space.hpp	/^  using execution_space = SYCL;$/;"	t	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:SYCL
execution_space	Kokkos_SYCL_Space.hpp	/^  using execution_space = SYCL;$/;"	t	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:SYCL
execution_space	Kokkos_ScratchSpace.hpp	/^  using execution_space = ExecSpace;$/;"	t	class:Kokkos::ScratchMemorySpace	typeref:typename:ExecSpace
execution_space	Kokkos_Serial.hpp	/^  using execution_space = Serial;$/;"	t	class:Kokkos::Serial	typeref:typename:Serial
execution_space	Kokkos_TaskScheduler.hpp	/^  using execution_space     = ExecSpace;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:ExecSpace
execution_space	Kokkos_Threads.hpp	/^  using execution_space = Threads;$/;"	t	class:Kokkos::Threads	typeref:typename:Threads
execution_space	Kokkos_UniqueToken.hpp	/^  using execution_space = ExecutionSpace;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:ExecutionSpace
execution_space	Kokkos_View.hpp	/^                         typename prop::execution_space,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::execution_space> typename prop::
execution_space	Kokkos_View.hpp	/^  using execution_space   = ExecutionSpace;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ExecutionSpace
execution_space	Kokkos_View.hpp	/^  using execution_space = typename Space::execution_space;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:Space::execution_space
execution_space	Kokkos_View.hpp	/^  using execution_space = typename ViewTraits<void, Prop...>::execution_space;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::execution_space
execution_space	Kokkos_View.hpp	/^  using execution_space = void;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:void
execution_space	Kokkos_WorkGraphPolicy.hpp	/^  using execution_space  = typename traits::execution_space;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:traits::execution_space
execution_space	OpenACC/Kokkos_OpenACC.hpp	/^  using execution_space = OpenACC;$/;"	t	class:Kokkos::Experimental::OpenACC	typeref:typename:OpenACC
execution_space	OpenACC/Kokkos_OpenACCSpace.hpp	/^  using execution_space = OpenACC;$/;"	t	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:OpenACC
execution_space	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  using execution_space = OpenMP;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:OpenMP
execution_space	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using execution_space      = Kokkos::Experimental::OpenMPTarget;$/;"	t	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:Kokkos::Experimental::OpenMPTarget
execution_space	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using execution_space = Kokkos::Experimental::OpenMPTarget;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::execute	typeref:typename:Kokkos::Experimental::OpenMPTarget	file:
execution_space	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using execution_space = Kokkos::Experimental::OpenMPTarget;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::iff_single_thread_recursive_execute	typeref:typename:Kokkos::Experimental::OpenMPTarget	file:
execution_space	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  using execution_space = Kokkos::Experimental::OpenMPTarget;$/;"	t	class:Kokkos::Impl::TaskQueueSpecialization	typeref:typename:Kokkos::Experimental::OpenMPTarget
execution_space	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  using execution_space = OpenMPTarget;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:OpenMPTarget
execution_space	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using execution_space = typename Analysis::execution_space;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::execution_space
execution_space	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using execution_space = Kokkos::Experimental::SYCL;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Experimental::SYCL
execution_space	SYCL/Kokkos_SYCL_Team.hpp	/^  using execution_space      = Kokkos::Experimental::SYCL;$/;"	t	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:Kokkos::Experimental::SYCL
execution_space	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  using execution_space = SYCL;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:SYCL
execution_space	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using execution_space = Kokkos::Serial;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Serial
execution_space	Serial/Kokkos_Serial_UniqueToken.hpp	/^  using execution_space = Serial;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:Serial
execution_space	Threads/Kokkos_ThreadsTeam.hpp	/^  using execution_space      = Kokkos::Threads;$/;"	t	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:Kokkos::Threads
execution_space	Threads/Kokkos_Threads_UniqueToken.hpp	/^  using execution_space = Threads;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:Threads
execution_space	impl/Kokkos_FunctorAnalysis.hpp	/^  using execution_space =$/;"	t	struct:Kokkos::Impl::FunctorAnalysis
execution_space	impl/Kokkos_HostThreadTeam.hpp	/^  using execution_space         = HostExecSpace;$/;"	t	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:HostExecSpace
execution_space	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using execution_space = ExecSpace;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:ExecSpace
execution_space	impl/Kokkos_TaskQueue.hpp	/^  using execution_space = ExecSpace;$/;"	t	class:Kokkos::Impl::TaskQueue	typeref:typename:ExecSpace
execution_space	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  using execution_space      = ExecSpace;$/;"	t	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:ExecSpace
execution_space	impl/Kokkos_TaskQueueMultiple.hpp	/^  using execution_space     = ExecSpace;$/;"	t	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:ExecSpace
execution_space	impl/Kokkos_ViewCtor.hpp	/^  using execution_space = typename var_execution_space::type;$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:var_execution_space::type
execution_space	traits/Kokkos_ExecutionSpaceTrait.hpp	/^    using execution_space = ExecSpace;$/;"	t	struct:Kokkos::Impl::ExecutionSpaceTrait::mixin_matching_trait	typeref:typename:ExecSpace
execution_space	traits/Kokkos_ExecutionSpaceTrait.hpp	/^    using execution_space = Kokkos::DefaultExecutionSpace;$/;"	t	struct:Kokkos::Impl::ExecutionSpaceTrait::base_traits	typeref:typename:Kokkos::DefaultExecutionSpace
execution_space_instance	impl/Kokkos_EBO.hpp	/^  ExecutionSpace const& execution_space_instance() const& {$/;"	f	class:Kokkos::Impl::ExecutionSpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION ExecutionSpace const &
execution_space_instance	impl/Kokkos_EBO.hpp	/^  ExecutionSpace& execution_space_instance() & {$/;"	f	class:Kokkos::Impl::ExecutionSpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION ExecutionSpace &
execution_space_instance	impl/Kokkos_EBO.hpp	/^  ExecutionSpace&& execution_space_instance() && {$/;"	f	class:Kokkos::Impl::ExecutionSpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION ExecutionSpace &&
execution_space_instance	impl/Kokkos_GraphNodeImpl.hpp	/^  ExecutionSpace const& execution_space_instance() const {$/;"	f	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:ExecutionSpace const &
execution_space_instance_storage_base_t	impl/Kokkos_Default_Graph_Impl.hpp	/^  using execution_space_instance_storage_base_t =$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:ExecutionSpaceInstanceStorage<ExecutionSpace>
execution_space_instance_storage_t	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  using execution_space_instance_storage_t =$/;"	t	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:ExecutionSpaceInstanceStorage<ExecutionSpace>
execution_space_is_defaulted	traits/Kokkos_ExecutionSpaceTrait.hpp	/^    static constexpr auto execution_space_is_defaulted = false;$/;"	m	struct:Kokkos::Impl::ExecutionSpaceTrait::mixin_matching_trait	typeref:typename:auto
execution_space_is_defaulted	traits/Kokkos_ExecutionSpaceTrait.hpp	/^    static constexpr auto execution_space_is_defaulted = true;$/;"	m	struct:Kokkos::Impl::ExecutionSpaceTrait::base_traits	typeref:typename:auto
execution_space_storage	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using execution_space_storage =$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:Impl::ExecutionSpaceInstanceStorage<execution_space>
execution_space_storage_base_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using execution_space_storage_base_t =$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:ExecutionSpaceInstanceStorage<ExecutionSpace>
execution_space_t	Kokkos_Parallel.hpp	/^using execution_space_t = typename T::execution_space;$/;"	t	namespace:Kokkos::Impl	typeref:typename:T::execution_space
execution_space_type	Kokkos_CopyViews.hpp	/^      using execution_space_type = typename alloc_prop::execution_space;$/;"	t	function:Kokkos::impl_realloc	typeref:typename:alloc_prop::execution_space
exp	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<RealType> exp(const complex<RealType>& x) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<RealType>
exp	Kokkos_Complex.hpp	/^inline complex<RealType> exp(const std::complex<RealType>& c) {$/;"	f	namespace:Kokkos	typeref:typename:complex<RealType>
exp	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 exp(__float128 x) { return ::expq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
exp2	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 exp2(__float128 x) { return ::exp2q(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
expected_task_base_size	impl/Kokkos_TaskBase.hpp	/^constexpr size_t expected_task_base_size =$/;"	v	namespace:Kokkos::Impl	typeref:typename:size_t
experimental_contains_desired_occupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^    static constexpr bool experimental_contains_desired_occupancy = false;$/;"	m	struct:Kokkos::Impl::OccupancyControlTrait::base_traits	typeref:typename:bool
experimental_contains_desired_occupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^  static constexpr bool experimental_contains_desired_occupancy = false;$/;"	m	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:bool
experimental_contains_desired_occupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^  static constexpr bool experimental_contains_desired_occupancy = true;$/;"	m	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:bool
expint1	Kokkos_MathematicalSpecialFunctions.hpp	/^KOKKOS_INLINE_FUNCTION RealType expint1(RealType x) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
expm1	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 expm1(__float128 x) { return ::expm1q(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
extend	Kokkos_Tuners.hpp	/^  auto extend(const std::string& axis_name,$/;"	f	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:extended_problem<Key>
extended_map	Kokkos_Tuners.hpp	/^  using extended_map = std::map<Key, Value>;$/;"	t	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:std::map<Key,Value>
extended_problem	Kokkos_Tuners.hpp	/^  using extended_problem =$/;"	t	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:MultidimensionalSparseTuningProblem<extended_map,MaxDimensionSize,Key,ProblemSpaceInput>
extent	Kokkos_View.hpp	/^  extent(const iType& r) const noexcept {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_integral<iType>::value,size_t>
extent	impl/Kokkos_ViewMapping.hpp	/^  constexpr size_t extent(const unsigned r) const noexcept {$/;"	f	struct:Kokkos::Impl::ViewDimension	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
extent_int	Kokkos_View.hpp	/^  extent_int(const iType& r) const noexcept {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_integral<iType>::value,int>
extract_vector_length	Kokkos_ExecPolicy.hpp	/^extract_vector_length(iType val, Args...) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<std::is_integral<iType>::value,iType>
f	HIP/Kokkos_HIP_Atomic.hpp	/^    T f;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:T
fabs	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 fabs(__float128 x) { return ::fabsq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
failed_head_for	impl/Kokkos_MultipleTaskQueue.hpp	/^  task_base_type*& failed_head_for(runnable_task_base_type const& task) {$/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION task_base_type * &
failure	impl/Kokkos_Profiling.hpp	/^    failure,$/;"	e	enum:Kokkos::Tools::Impl::InitializationStatus::InitializationResult
failure_mode	impl/Kokkos_Error.hpp	/^  FailureMode failure_mode() const noexcept { return m_failure_mode; }$/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD FailureMode
fan_in	Threads/Kokkos_ThreadsExec.hpp	/^  inline void fan_in() const {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
fan_in_reduce	Threads/Kokkos_ThreadsExec.hpp	/^  inline void fan_in_reduce(const FunctorType &f) const {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
fan_size	Threads/Kokkos_ThreadsExec.cpp	/^inline unsigned fan_size(const unsigned rank, const unsigned size) {$/;"	f	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:unsigned
fdim	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 fdim(__float128 x, __float128 y) { return ::fdimq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
feature_values	impl/Kokkos_Profiling.cpp	/^static std::unordered_map<size_t, VariableValue> feature_values;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:std::unordered_map<size_t,VariableValue>	file:
features_per_context	impl/Kokkos_Profiling.cpp	/^    features_per_context;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:std::unordered_map<size_t,std::unordered_set<size_t>>	file:
fence	Cuda/Kokkos_Cuda_Instance.cpp	/^void Cuda::fence(const std::string &name) const {$/;"	f	class:Kokkos::Cuda	typeref:typename:void
fence	Cuda/Kokkos_Cuda_Instance.cpp	/^void CudaInternal::fence() const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:void
fence	Cuda/Kokkos_Cuda_Instance.cpp	/^void CudaInternal::fence(const std::string &name) const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:void
fence	HIP/Kokkos_HIP_Instance.cpp	/^void HIPInternal::fence() const {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:void
fence	HIP/Kokkos_HIP_Instance.cpp	/^void HIPInternal::fence(const std::string &name) const {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:void
fence	HIP/Kokkos_HIP_Space.cpp	/^void HIP::fence(const std::string& name) const {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:void
fence	Kokkos_HPX.hpp	/^  void fence($/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:void
fence	Kokkos_Parallel_Reduce.hpp	/^  static void fence(const ExecutionSpace& ex, const std::string& name,$/;"	f	struct:Kokkos::Impl::ParallelReduceFence	typeref:typename:void
fence	Kokkos_Serial.hpp	/^  void fence(const std::string& name =$/;"	f	class:Kokkos::Serial	typeref:typename:void
fence	OpenACC/Kokkos_OpenACC.cpp	/^void Kokkos::Experimental::OpenACC::fence(std::string const& name) const {$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:void
fence	OpenACC/Kokkos_OpenACC_Instance.cpp	/^void Kokkos::Experimental::Impl::OpenACCInternal::fence($/;"	f	class:Kokkos::Experimental::Impl::OpenACCInternal	typeref:typename:void
fence	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMP::fence(const std::string &name) const {$/;"	f	class:Kokkos::OpenMP	typeref:typename:void
fence	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTarget::fence(const std::string& name) {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:void
fence	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTargetInternal::fence(const std::string& name,$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:void
fence	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTargetInternal::fence(openmp_fence_is_static is_static) {$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:void
fence	SYCL/Kokkos_SYCL.cpp	/^void SYCL::fence(const std::string& name) const {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:void
fence	SYCL/Kokkos_SYCL_Instance.hpp	/^    void fence() {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:void
fence	SYCL/Kokkos_SYCL_Instance.hpp	/^  static void fence(sycl::event& e, const std::string& name,$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:void
fence	SYCL/Kokkos_SYCL_Instance.hpp	/^  static void fence(sycl::queue& q, const std::string& name,$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:void
fence	Threads/Kokkos_ThreadsExec.cpp	/^void Threads::fence(const std::string &name) const {$/;"	f	class:Kokkos::Threads	typeref:typename:void
fence	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::fence() { internal_fence(Impl::fence_is_static::yes); }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
fence	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::fence(const std::string &name) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
fence	impl/Kokkos_Core.cpp	/^void Kokkos::fence() { fence("Kokkos::fence: Unnamed Global Fence"); }$/;"	f	class:Kokkos	typeref:typename:void
fence	impl/Kokkos_Core.cpp	/^void Kokkos::fence(const std::string& name) { fence_internal(name); }$/;"	f	class:Kokkos	typeref:typename:void
fence	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_toolInvokedFenceFunction fence;$/;"	m	struct:Kokkos_Tools_ToolProgrammingInterface	typeref:typename:Kokkos_Tools_toolInvokedFenceFunction
fence_helper	SYCL/Kokkos_SYCL_Instance.cpp	/^void SYCLInternal::fence_helper(WAT& wat, const std::string& name,$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:void
fence_internal	impl/Kokkos_Core.cpp	/^void fence_internal(const std::string& name) {$/;"	f	namespace:__anon5875dff10210	typeref:typename:void
fence_is_static	Kokkos_Threads.hpp	/^enum class fence_is_static { yes, no };$/;"	g	namespace:Kokkos::Impl
fence_t	impl/Kokkos_ExecSpaceManager.hpp	/^using fence_t = std::enable_if_t<$/;"	t	namespace:__anonc657ed790110
fill_closure_type	Kokkos_Crs.hpp	/^      using fill_closure_type =$/;"	t	function:Kokkos::CountAndFill::CountAndFill	typeref:typename:Kokkos::Impl::ParallelFor<self_type,fill_policy_type>
fill_exec_space	Kokkos_CopyViews.hpp	/^    using fill_exec_space = typename dst_traits::memory_space::execution_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:dst_traits::memory_space::execution_space
fill_policy_type	Kokkos_Crs.hpp	/^      using fill_policy_type = RangePolicy<size_type, execution_space, Fill>;$/;"	t	function:Kokkos::CountAndFill::CountAndFill	typeref:typename:RangePolicy<size_type,execution_space,Fill>
fill_tile	Kokkos_Tuners.hpp	/^void fill_tile(std::map<T, Mapped>& cont, int tile_size) {$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
fill_tile	Kokkos_Tuners.hpp	/^void fill_tile(std::vector<T>& cont, int tile_size) {$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
filter_type_list	impl/Kokkos_Utilities.hpp	/^struct filter_type_list<PredicateT, type_list<T...>, ValueT> {$/;"	s	namespace:Kokkos::Impl
filter_type_list_t	impl/Kokkos_Utilities.hpp	/^using filter_type_list_t =$/;"	t	namespace:Kokkos::Impl	typeref:typename:filter_type_list<PredicateT,T,ValueT>::type
final	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline void final() const {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:__device__ void
final	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline void final() const {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:__device__ void
final	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  __device__ inline void final() const {$/;"	f	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:__device__ void
final	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void final(F const* const f, ValueType* dst) {$/;"	f	struct:has_final_no_tag_function	typeref:typename:KOKKOS_INLINE_FUNCTION void
final	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void final(F const* const f, ValueType* dst) {$/;"	f	struct:has_final_tag_function	typeref:typename:KOKKOS_INLINE_FUNCTION void
final	impl/Kokkos_FunctorAnalysis.hpp	/^    static void final(F const* const, ValueType*) {}$/;"	f	struct:DeduceFinalNoTag	typeref:typename:KOKKOS_INLINE_FUNCTION void
finalize	Cuda/Kokkos_Cuda_Instance.cpp	/^void CudaInternal::finalize() {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:void
finalize	HIP/Kokkos_HIP_Instance.cpp	/^void HIPInternal::finalize() {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:void
finalize	OpenACC/Kokkos_OpenACC_Instance.cpp	/^void Kokkos::Experimental::Impl::OpenACCInternal::finalize() {$/;"	f	class:Kokkos::Experimental::Impl::OpenACCInternal	typeref:typename:void
finalize	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMPInternal::finalize() {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:void
finalize	SYCL/Kokkos_SYCL_Instance.cpp	/^void SYCLInternal::finalize() {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:void
finalize	Serial/Kokkos_Serial.cpp	/^void SerialInternal::finalize() {$/;"	f	class:Kokkos::Impl::SerialInternal	typeref:typename:void
finalize	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::finalize() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
finalize	impl/Kokkos_Core.cpp	/^void Kokkos::finalize() { finalize_internal(); }$/;"	f	class:Kokkos	typeref:typename:void
finalize	impl/Kokkos_ExecSpaceManager.hpp	/^  void finalize() final { ExecutionSpace::impl_finalize(); }$/;"	f	struct:Kokkos::Impl::ExecSpaceDerived	typeref:typename:void
finalize	impl/Kokkos_Profiling.cpp	/^void finalize() { Kokkos::Tools::finalize(); }$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
finalize	impl/Kokkos_Profiling.cpp	/^void finalize() {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
finalize	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_finalizeFunction finalize;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_finalizeFunction
finalizeFunction	impl/Kokkos_Profiling_Interface.hpp	/^using finalizeFunction       = Kokkos_Profiling_finalizeFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_finalizeFunction
finalize_all	impl/Kokkos_Core.cpp	/^KOKKOS_DEPRECATED void Kokkos::finalize_all() { finalize_internal(); }$/;"	f	class:Kokkos	typeref:typename:KOKKOS_DEPRECATED void
finalize_hooks	impl/Kokkos_Core.cpp	/^std::stack<hook_function_type, std::list<hook_function_type>> finalize_hooks;$/;"	v	namespace:__anon5875dff10110	typeref:typename:std::stack<hook_function_type,std::list<hook_function_type>>
finalize_host_cuda_lock_arrays	Cuda/Kokkos_Cuda_Locks.cpp	/^void finalize_host_cuda_lock_arrays() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
finalize_host_hip_lock_arrays	HIP/Kokkos_HIP_Locks.cpp	/^void finalize_host_hip_lock_arrays() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
finalize_internal	impl/Kokkos_Core.cpp	/^void finalize_internal() {$/;"	f	namespace:__anon5875dff10210	typeref:typename:void
finalize_spaces	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::ExecSpaceManager::finalize_spaces() {$/;"	f	class:Kokkos::Impl::ExecSpaceManager	typeref:typename:void
find	impl/Kokkos_SharedAlloc.cpp	/^SharedAllocationRecord<void, void>* SharedAllocationRecord<void, void>::find($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord<void,void> *
find_first_non_whitespace	impl/Kokkos_Stacktrace.cpp	/^size_t find_first_non_whitespace(const std::string& s, const size_t start_pos) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:size_t
find_first_whitespace	impl/Kokkos_Stacktrace.cpp	/^size_t find_first_whitespace(const std::string& s, const size_t start_pos) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:size_t
find_main_column	impl/Kokkos_Stacktrace.cpp	/^main_column_info find_main_column(const std::vector<std::string>& traceback) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:main_column_info
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<bool> { static constexpr bool value = true; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<char> { static constexpr char value = CHAR_MAX; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<double> { static constexpr double value = DBL_MAX; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<float> { static constexpr float value = FLT_MAX; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<int> { static constexpr int value = INT_MAX; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<long double> { static constexpr long double value = LDBL_MA/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<long int> { static constexpr long int value = LONG_MAX; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<long long int> { static constexpr long long int value = LLO/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<short> { static constexpr short value = SHRT_MAX; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<signed char> { static constexpr signed char value = SCHAR_M/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned char> { static constexpr unsigned char value = UCH/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned int> { static constexpr unsigned int value = UINT_/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned long int> { static constexpr unsigned long int val/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned long long int> { static constexpr unsigned long lo/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned short> { static constexpr unsigned short value = U/;"	s	namespace:Kokkos::Experimental::Impl
finite_max_helper	Kokkos_NumericTraits.hpp	/^template <class> struct finite_max_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<bool> { static constexpr bool value = false; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<char> { static constexpr char value = CHAR_MIN; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<double> { static constexpr double value = -DBL_MAX; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<float> { static constexpr float value = -FLT_MAX; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<int> { static constexpr int value = INT_MIN; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<long double> { static constexpr long double value = -LDBL_M/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<long int> { static constexpr long int value = LONG_MIN; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<long long int> { static constexpr long long int value = LLO/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<short> { static constexpr short value = SHRT_MIN; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<signed char> { static constexpr signed char value = SCHAR_M/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned char> { static constexpr unsigned char value = 0; /;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned int> { static constexpr unsigned int value = 0; };$/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned long int> { static constexpr unsigned long int val/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned long long int> { static constexpr unsigned long lo/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned short> { static constexpr unsigned short value = 0/;"	s	namespace:Kokkos::Experimental::Impl
finite_min_helper	Kokkos_NumericTraits.hpp	/^template <class> struct finite_min_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
first	Kokkos_Pair.hpp	/^  first_type first;$/;"	m	struct:Kokkos::pair	typeref:typename:first_type
first_is_view	Kokkos_View.hpp	/^  enum : bool { first_is_view = is_view<FirstView>::value };$/;"	e	enum:Kokkos::Impl::DeduceCommonViewAllocProp::__anon8559ec872c03
first_specialize	Kokkos_View.hpp	/^  using first_specialize = typename FirstView::traits::specialize;$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:FirstView::traits::specialize
first_touch_allocate_thread_private_scratch	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::first_touch_allocate_thread_private_scratch(ThreadsExec &exec,$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
first_type	Kokkos_Pair.hpp	/^  using first_type  = T1;$/;"	t	struct:Kokkos::pair	typeref:typename:T1
first_type	Kokkos_Pair.hpp	/^  using first_type = T1&;$/;"	t	struct:Kokkos::pair	typeref:typename:T1 &
first_type	Kokkos_Pair.hpp	/^  using first_type = T1;$/;"	t	struct:Kokkos::pair	typeref:typename:T1
first_value_type	Kokkos_View.hpp	/^  using first_value_type = typename FirstView::traits::value_type;$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:FirstView::traits::value_type
fix_policy	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  Policy fix_policy(Policy policy) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy
fix_policy	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  Policy fix_policy(Policy policy) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy
fixed_size_circular_buffer	impl/Kokkos_ChaseLev.hpp	/^struct fixed_size_circular_buffer {$/;"	s	namespace:Kokkos::Impl
fixed_width_integer_type	Kokkos_Half.hpp	/^  using fixed_width_integer_type = std::conditional_t<$/;"	t	class:Kokkos::Experimental::Impl::floating_point_wrapper
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
floating_point_wrapper	Kokkos_Half.hpp	/^  constexpr floating_point_wrapper(impl_type rhs) : val(rhs) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION 
floating_point_wrapper	Kokkos_Half.hpp	/^  explicit floating_point_wrapper(bool rhs)$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper() : val(0.0F) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(const floating_point_wrapper& rhs) : val(rhs.val) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(const volatile floating_point_wrapper& rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_INLINE_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(double rhs) : val(cast_to_wrapper(rhs, val).val) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(float rhs) : val(cast_to_wrapper(rhs, val).val) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(int rhs) : val(cast_to_wrapper(rhs, val).val) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(long long rhs) : val(cast_to_wrapper(rhs, val).val) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(long rhs) : val(cast_to_wrapper(rhs, val).val) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(short rhs) : val(cast_to_wrapper(rhs, val).val) {}$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(unsigned int rhs)$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(unsigned long long rhs)$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(unsigned long rhs)$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^  floating_point_wrapper(unsigned short rhs)$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION
floating_point_wrapper	Kokkos_Half.hpp	/^class alignas(FloatType) floating_point_wrapper {$/;"	c	namespace:Kokkos::Experimental::Impl
floor	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 floor(__float128 x) { return ::floorq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
flush_all_failed_insertions	impl/Kokkos_MultipleTaskQueue.hpp	/^  void flush_all_failed_insertions() {$/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION void
flush_failed_insertions	impl/Kokkos_MultipleTaskQueue.hpp	/^  KOKKOS_INLINE_FUNCTION void flush_failed_insertions($/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION void
fmax	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 fmax(__float128 x, __float128 y) { return ::fmaxq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
fmin	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 fmin(__float128 x, __float128 y) { return ::fminq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
fmod	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 fmod(__float128 x, __float128 y) { return ::fmodq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
for_each_token	impl/Kokkos_Stacktrace.cpp	/^void for_each_token(const std::string& s, Callback c) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
found_main	impl/Kokkos_Stacktrace.cpp	/^  bool found_main;$/;"	m	struct:Kokkos::Impl::main_column_info	typeref:typename:bool	file:
funcdata_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using funcdata_t = HIPParallelLaunchKernelFuncData<$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:HIPParallelLaunchKernelFuncData<DriverType,Kokkos::LaunchBounds<MaxThreadsPerBlock,MinBlocksPerSM>,HIPLaunchMechanism::ConstantMemory>
funcdata_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using funcdata_t = HIPParallelLaunchKernelFuncData<$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:HIPParallelLaunchKernelFuncData<DriverType,Kokkos::LaunchBounds<MaxThreadsPerBlock,MinBlocksPerSM>,HIPLaunchMechanism::GlobalMemory>
funcdata_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using funcdata_t = HIPParallelLaunchKernelFuncData<$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:HIPParallelLaunchKernelFuncData<DriverType,Kokkos::LaunchBounds<MaxThreadsPerBlock,MinBlocksPerSM>,HIPLaunchMechanism::LocalMemory>
funcdata_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using funcdata_t =$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:HIPParallelLaunchKernelFuncData<DriverType,Kokkos::LaunchBounds<0,0>,HIPLaunchMechanism::ConstantMemory>
funcdata_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using funcdata_t =$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:HIPParallelLaunchKernelFuncData<DriverType,Kokkos::LaunchBounds<0,0>,HIPLaunchMechanism::GlobalMemory>
funcdata_t	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  using funcdata_t =$/;"	t	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:HIPParallelLaunchKernelFuncData<DriverType,Kokkos::LaunchBounds<0,0>,HIPLaunchMechanism::LocalMemory>
function_type	impl/Kokkos_SharedAlloc.hpp	/^  using function_type = void (*)(SharedAllocationRecord<void, void>*);$/;"	t	class:Kokkos::Impl::SharedAllocationRecord
function_type	impl/Kokkos_TaskBase.hpp	/^  using function_type = void (*)(TaskBase*, void*);$/;"	t	class:Kokkos::Impl::TaskBase
function_type	impl/Kokkos_TaskNode.hpp	/^  using function_type      = void (*)(task_base_type*, void*);$/;"	t	class:Kokkos::Impl::RunnableTaskBase
functor	Kokkos_Parallel_Reduce.hpp	/^  static const functor_type& functor(const functor_type& functor) {$/;"	f	struct:Kokkos::Impl::ParallelReduceFunctorType	typeref:typename:const functor_type &
functor_analysis_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using functor_analysis_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,TeamPolicyInternal,FunctorType>
functor_analysis_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using functor_analysis_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,TeamPolicyInternal,FunctorType>
functor_analysis_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using functor_analysis_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,TeamPolicyInternal,FunctorType>
functor_analysis_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using functor_analysis_type =$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::REDUCE,TeamPolicyInternal,FunctorType>
functor_device_type	Kokkos_Parallel.hpp	/^  using functor_device_type     = detected_t<device_type_t, Functor>;$/;"	t	struct:Kokkos::Impl::FunctorPolicyExecutionSpace	typeref:typename:detected_t<device_type_t,Functor>
functor_device_type_execution_space	Kokkos_Parallel.hpp	/^  using functor_device_type_execution_space =$/;"	t	struct:Kokkos::Impl::FunctorPolicyExecutionSpace	typeref:typename:detected_t<execution_space_t,functor_device_type>
functor_execution_space	Kokkos_Parallel.hpp	/^  using functor_execution_space = detected_t<execution_space_t, Functor>;$/;"	t	struct:Kokkos::Impl::FunctorPolicyExecutionSpace	typeref:typename:detected_t<execution_space_t,Functor>
functor_future_type	Kokkos_TaskScheduler.hpp	/^    using functor_future_type =$/;"	t	function:Kokkos::BasicTaskScheduler::_spawn_impl	typeref:typename:future_type_for_functor<std::decay_t<FunctorType>>
functor_future_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^    using functor_future_type =$/;"	t	function:Kokkos::SimpleTaskScheduler::_spawn_impl	typeref:typename:future_type_for_functor<std::decay_t<FunctorType>>
functor_has_space	impl/Kokkos_FunctorAnalysis.hpp	/^  using functor_has_space = has_execution_space<Functor>;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:has_execution_space<Functor>
functor_has_value_t	impl/Kokkos_Combined_Reducer.hpp	/^using functor_has_value_t = typename FunctorType::value_type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:FunctorType::value_type
functor_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorType
functor_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
functor_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorType
functor_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:FunctorType
functor_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:FunctorType
functor_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
functor_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
functor_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorType
functor_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorType
functor_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorType
functor_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:FunctorType
functor_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
functor_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
functor_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorType
functor_type	Kokkos_GraphNode.hpp	/^    using functor_type = Kokkos::Impl::remove_cvref_t<Functor>;$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_reduce	typeref:typename:Kokkos::Impl::remove_cvref_t<Functor>
functor_type	Kokkos_Parallel_Reduce.hpp	/^  using functor_type = FunctorType;$/;"	t	struct:Kokkos::Impl::ParallelReduceFunctorType	typeref:typename:FunctorType
functor_type	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
functor_type	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:FunctorType
functor_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
functor_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:FunctorType
functor_type	impl/Kokkos_TaskBase.hpp	/^  using functor_type = FunctorType;$/;"	t	class:Kokkos::Impl::Task	typeref:typename:FunctorType
functor_type	impl/Kokkos_TaskNode.hpp	/^  using functor_type   = FunctorType;$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:FunctorType
future_type	Kokkos_TaskScheduler.hpp	/^  using future_type = Kokkos::BasicFuture<ValueType, BasicTaskScheduler>;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:Kokkos::BasicFuture<ValueType,BasicTaskScheduler>
future_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using future_type = Kokkos::BasicFuture<ValueType, SimpleTaskScheduler>;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:Kokkos::BasicFuture<ValueType,SimpleTaskScheduler>
future_type_for_functor	Kokkos_TaskScheduler.hpp	/^  using future_type_for_functor = future_type<typename FunctorType::value_type>;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:future_type<typename FunctorType::value_type>
future_type_for_functor	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using future_type_for_functor = future_type<typename FunctorType::value_type>;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:future_type<typename FunctorType::value_type>
g_cuda_space_factory_initialized	Cuda/Kokkos_Cuda_Instance.cpp	/^int g_cuda_space_factory_initialized =$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_device_cuda_lock_arrays	Cuda/Kokkos_Cuda_Locks.cpp	/^__device__ __constant__ CudaLockArrays g_device_cuda_lock_arrays = {nullptr, 0};$/;"	v	namespace:Kokkos::Impl	typeref:typename:__device__ __constant__ CudaLockArrays
g_device_hip_lock_arrays	HIP/Kokkos_HIP_Locks.cpp	/^__device__ __constant__ HIPLockArrays g_device_hip_lock_arrays = {nullptr, 0};$/;"	v	namespace:Kokkos::Impl	typeref:typename:__device__ __constant__ HIPLockArrays
g_hip_space_factory_initialized	HIP/Kokkos_HIP_Space.cpp	/^int g_hip_space_factory_initialized =$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_host_cuda_lock_arrays	Cuda/Kokkos_Cuda_Locks.cpp	/^CudaLockArrays g_host_cuda_lock_arrays = {nullptr, 0};$/;"	v	namespace:Kokkos::Impl	typeref:typename:CudaLockArrays
g_host_hip_lock_arrays	HIP/Kokkos_HIP_Locks.cpp	/^HIPLockArrays g_host_hip_lock_arrays = {nullptr, 0};$/;"	v	namespace:Kokkos::Impl	typeref:typename:HIPLockArrays
g_hpx_space_factory_initialized	HPX/Kokkos_HPX.cpp	/^int g_hpx_space_factory_initialized =$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_is_finalized	impl/Kokkos_Core.cpp	/^bool g_is_finalized   = false;$/;"	v	namespace:__anon5875dff10110	typeref:typename:bool
g_is_initialized	impl/Kokkos_Core.cpp	/^bool g_is_initialized = false;$/;"	v	namespace:__anon5875dff10110	typeref:typename:bool
g_openacc_space_factory_initialized	OpenACC/Kokkos_OpenACC.cpp	/^int g_openacc_space_factory_initialized =$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_openmp_hardware_max_threads	OpenMP/Kokkos_OpenMP_Instance.cpp	/^int g_openmp_hardware_max_threads = 1;$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_openmp_space_factory_initialized	OpenMP/Kokkos_OpenMP_Instance.cpp	/^int g_openmp_space_factory_initialized =$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_openmptarget_space_factory_initialized	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^int g_openmptarget_space_factory_initialized =$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_serial_space_factory_initialized	Serial/Kokkos_Serial.cpp	/^int g_serial_space_factory_initialized =$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_show_warnings	impl/Kokkos_Core.cpp	/^bool g_show_warnings  = true;$/;"	v	namespace:__anon5875dff10110	typeref:typename:bool
g_sycl_space_factory_initialized	SYCL/Kokkos_SYCL.cpp	/^int g_sycl_space_factory_initialized =$/;"	v	namespace:Kokkos::Experimental::Impl	typeref:typename:int
g_threads_space_factory_initialized	Threads/Kokkos_ThreadsExec.cpp	/^int g_threads_space_factory_initialized =$/;"	v	namespace:Kokkos::Impl	typeref:typename:int
g_tune_internals	impl/Kokkos_Core.cpp	/^bool g_tune_internals = false;$/;"	v	namespace:__anon5875dff10110	typeref:typename:bool
generated_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^    using generated_type = decltype(func(0));$/;"	t	function:Kokkos::SimpleTaskScheduler::when_all
generic_report_results	impl/Kokkos_Tools_Generic.hpp	/^void generic_report_results(const std::string& label_in, Map& map,$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
generic_tune_policy	impl/Kokkos_Tools_Generic.hpp	/^void generic_tune_policy(const std::string& label_in, Map& map, Policy& policy,$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
get	Kokkos_ExecPolicy.hpp	/^  std::string const& get() {$/;"	f	struct:Kokkos::Impl::ParallelConstructName	typeref:typename:std::string const &
get	Kokkos_Future.hpp	/^  const typename Impl::TaskResult<ValueType>::reference_type get() const {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION const typename Impl::TaskResult<ValueType>::reference_type
get	Kokkos_HPX.hpp	/^  char *get(std::size_t thread_num) {$/;"	f	class:Kokkos::Impl::thread_buffer	typeref:typename:char *
get	impl/Kokkos_Combined_Reducer.hpp	/^      KOKKOS_INLINE_FUNCTION ValueType& get() & noexcept {$/;"	f	struct:Kokkos::Impl::CombinedReducerValueImpl	typeref:typename:KOKKOS_INLINE_FUNCTION ValueType &
get	impl/Kokkos_Combined_Reducer.hpp	/^  KOKKOS_INLINE_FUNCTION ValueType const& get() const& noexcept {$/;"	f	struct:Kokkos::Impl::CombinedReducerValueImpl	typeref:typename:KOKKOS_INLINE_FUNCTION ValueType const &
get	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION T* get() const noexcept { return m_element_ptr; }$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION T *
get	impl/Kokkos_OptionalRef.hpp	/^  T const volatile* get() const volatile { return m_value; }$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T const volatile *
get	impl/Kokkos_OptionalRef.hpp	/^  T const* get() const { return m_value; }$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T const *
get	impl/Kokkos_OptionalRef.hpp	/^  T volatile* get() volatile { return m_value; }$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T volatile *
get	impl/Kokkos_OptionalRef.hpp	/^  T* get() { return m_value; }$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T *
get	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static reference_type get($/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION reference_type
get	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static reference_type get(TaskBase* task) {$/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION reference_type
get	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static reference_type get(TaskBase*) {}$/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION reference_type
getName	Kokkos_Profiling_ProfileSection.hpp	/^  KOKKOS_DEPRECATED std::string getName() { return secName; }$/;"	f	class:Kokkos::Profiling::ProfilingSection	typeref:typename:KOKKOS_DEPRECATED std::string
getSectionID	Kokkos_Profiling_ProfileSection.hpp	/^  KOKKOS_DEPRECATED uint32_t getSectionID() { return secID; }$/;"	f	class:Kokkos::Profiling::ProfilingSection	typeref:typename:KOKKOS_DEPRECATED uint32_t
get_allocation_size	impl/Kokkos_TaskNode.hpp	/^  CountType get_allocation_size() const noexcept { return m_alloc_size; }$/;"	f	class:Kokkos::Impl::PoolAllocatedObjectBase	typeref:typename:KOKKOS_INLINE_FUNCTION CountType
get_available_cores_per_numa	impl/Kokkos_hwloc.cpp	/^unsigned get_available_cores_per_numa() { return 1; }$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
get_available_cores_per_numa	impl/Kokkos_hwloc.cpp	/^unsigned get_available_cores_per_numa() {$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
get_available_numa_count	impl/Kokkos_hwloc.cpp	/^unsigned get_available_numa_count() { return 1; }$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
get_available_numa_count	impl/Kokkos_hwloc.cpp	/^unsigned get_available_numa_count() {$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
get_available_threads_per_core	impl/Kokkos_hwloc.cpp	/^unsigned get_available_threads_per_core() { return 1; }$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
get_available_threads_per_core	impl/Kokkos_hwloc.cpp	/^unsigned get_available_threads_per_core() {$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
get_block_size_lg2	Kokkos_MemoryPool.hpp	/^  uint32_t get_block_size_lg2(uint32_t n) const noexcept {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION uint32_t
get_callbacks	impl/Kokkos_Profiling.cpp	/^Kokkos::Tools::Experimental::EventSet get_callbacks() {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos::Tools::Experimental::EventSet
get_context_counter	impl/Kokkos_Profiling.cpp	/^static size_t& get_context_counter() {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t &	file:
get_copy_event	SYCL/Kokkos_SYCL_Instance.hpp	/^    sycl::event get_copy_event() const { return m_copy_event; }$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:sycl::event
get_copy_event	SYCL/Kokkos_SYCL_Instance.hpp	/^  sycl::event get_copy_event() const { return {}; }$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:sycl::event
get_copy_event	SYCL/Kokkos_SYCL_Instance.hpp	/^  sycl::event get_copy_event() const {$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:sycl::event
get_crs_row_map_from_counts	Kokkos_Crs.hpp	/^typename OutRowMap::value_type get_crs_row_map_from_counts($/;"	f	namespace:Kokkos	typeref:typename:OutRowMap::value_type
get_crs_transpose_counts	Kokkos_Crs.hpp	/^void get_crs_transpose_counts($/;"	f	namespace:Kokkos	typeref:typename:void
get_ctest_gpu	impl/Kokkos_Core.cpp	/^int Kokkos::Impl::get_ctest_gpu(const char* local_rank_str) {$/;"	f	class:Kokkos::Impl	typeref:typename:int
get_cuda_func_attributes	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  static cudaFuncAttributes get_cuda_func_attributes() {$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchImpl	typeref:typename:cudaFuncAttributes
get_cuda_graph_from_kernel	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^auto const& get_cuda_graph_from_kernel(KernelType const& kernel) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:auto const &
get_cuda_graph_node_from_kernel	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^auto& get_cuda_graph_node_from_kernel(KernelType const& kernel) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:auto &
get_cuda_graph_node_ptr	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  cudaGraphNode_t* get_cuda_graph_node_ptr() const { return m_graph_node_ptr; }$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:cudaGraphNode_t *
get_cuda_graph_ptr	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  cudaGraph_t const* get_cuda_graph_ptr() const { return m_graph_ptr; }$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:cudaGraph_t const *
get_current_context_id	impl/Kokkos_Profiling.cpp	/^size_t get_current_context_id() { return get_context_counter(); }$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t
get_current_max_threads	OpenMP/Kokkos_OpenMP_Instance.cpp	/^int OpenMPInternal::get_current_max_threads() noexcept {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:int
get_deep_copy_stream	HIP/Kokkos_HIP_Space.cpp	/^hipStream_t get_deep_copy_stream() {$/;"	f	namespace:Kokkos::Impl::__anon0e1462230210	typeref:typename:hipStream_t
get_device_count	impl/Kokkos_Core.cpp	/^int get_device_count() {$/;"	f	namespace:__anon5875dff10110	typeref:typename:int
get_error_message	impl/Kokkos_Error.cpp	/^std::string Experimental::RawMemoryAllocationFailure::get_error_message()$/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:std::string
get_execution_space	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  execution_space const& get_execution_space() const noexcept {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:execution_space const &
get_execution_space	Kokkos_Graph.hpp	/^  ExecutionSpace const& get_execution_space() const {$/;"	f	struct:Kokkos::Experimental::Graph	typeref:typename:ExecutionSpace const &
get_execution_space	impl/Kokkos_Default_Graph_Impl.hpp	/^  ExecutionSpace const& get_execution_space() const {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:ExecutionSpace const &
get_execution_space	impl/Kokkos_SimpleTaskScheduler.hpp	/^  execution_space const& get_execution_space() const {$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION execution_space const &
get_failure_mode	Cuda/Kokkos_Cuda_Error.hpp	/^  static FailureMode get_failure_mode(cudaError_t error_code) {$/;"	f	class:Kokkos::Experimental::CudaRawMemoryAllocationFailure	typeref:typename:FailureMode
get_failure_mode	HIP/Kokkos_HIP_Error.hpp	/^  static FailureMode get_failure_mode(hipError_t error_code) {$/;"	f	class:Kokkos::Experimental::HIPRawMemoryAllocationFailure	typeref:typename:FailureMode
get_functor	SYCL/Kokkos_SYCL_Instance.hpp	/^  const Functor& get_functor() const { return m_functor.m_f; }$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:const Functor &
get_functor	SYCL/Kokkos_SYCL_Instance.hpp	/^  const Functor& get_functor() const { return m_functor; }$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:const Functor &
get_functor	SYCL/Kokkos_SYCL_Instance.hpp	/^  std::reference_wrapper<const Functor> get_functor() const {$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:std::reference_wrapper<const Functor>
get_gpu	impl/Kokkos_Core.cpp	/^int Kokkos::Impl::get_gpu(const InitializationSettings& settings) {$/;"	f	class:Kokkos::Impl	typeref:typename:int
get_graph_node_kernel_type	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^struct get_graph_node_kernel_type$/;"	s	namespace:Kokkos::Impl
get_graph_node_kernel_type	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^struct get_graph_node_kernel_type<KernelType, Kokkos::ParallelReduceTag>$/;"	s	namespace:Kokkos::Impl
get_graph_weak_ptr	Kokkos_GraphNode.hpp	/^  std::weak_ptr<graph_impl_t> get_graph_weak_ptr() const {$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:std::weak_ptr<graph_impl_t>
get_graph_weak_ptr	impl/Kokkos_GraphImpl.hpp	/^  static auto get_graph_weak_ptr(NodeRef&& node_ref) {$/;"	f	struct:Kokkos::Impl::GraphAccess	typeref:typename:auto
get_header	impl/Kokkos_SharedAlloc.hpp	/^  KOKKOS_INLINE_FUNCTION static const SharedAllocationHeader* get_header($/;"	f	class:Kokkos::Impl::SharedAllocationHeader	typeref:typename:KOKKOS_INLINE_FUNCTION const SharedAllocationHeader *
get_hip_func_attributes	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static hipFuncAttributes get_hip_func_attributes() {$/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:hipFuncAttributes
get_hip_func_attributes	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static hipFuncAttributes get_hip_func_attributes(void const *kernel_func) {$/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFuncData	typeref:typename:hipFuncAttributes
get_hpx_adjusted_chunk_size	Kokkos_HPX.hpp	/^typename Policy::member_type get_hpx_adjusted_chunk_size(Policy const &policy) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:Policy::member_type
get_indirect_kernel_mem	SYCL/Kokkos_SYCL_Instance.cpp	/^SYCLInternal::IndirectKernelMem& SYCLInternal::get_indirect_kernel_mem() {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:SYCLInternal::IndirectKernelMem &
get_instance	impl/Kokkos_Core.cpp	/^Kokkos::Impl::ExecSpaceManager& Kokkos::Impl::ExecSpaceManager::get_instance() {$/;"	f	class:Kokkos::Impl::ExecSpaceManager	typeref:typename:Kokkos::Impl::ExecSpaceManager &
get_kernel	impl/Kokkos_GraphNodeImpl.hpp	/^  Kernel const& get_kernel() const& { return m_kernel; }$/;"	f	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:Kernel const &
get_kernel	impl/Kokkos_GraphNodeImpl.hpp	/^  Kernel& get_kernel() & { return m_kernel; }$/;"	f	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:Kernel &
get_kernel_func	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  get_kernel_func() {$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchKernelFunc	typeref:typename:std::decay_t<decltype (cuda_parallel_launch_constant_memory<DriverType,MaxThreadsPerBlock,MinBlocksPerSM>)>
get_kernel_func	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  get_kernel_func() {$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchKernelFunc	typeref:typename:std::decay_t<decltype (cuda_parallel_launch_constant_memory<DriverType>)>
get_kernel_func	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  get_kernel_func() {$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchKernelFunc	typeref:typename:std::decay_t<decltype (cuda_parallel_launch_global_memory<DriverType>)>
get_kernel_func	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  get_kernel_func() {$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchKernelFunc	typeref:typename:std::decay_t<decltype (cuda_parallel_launch_local_memory<DriverType,MaxThreadsPerBlock,MinBlocksPerSM>)>
get_kernel_func	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  get_kernel_func() {$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchKernelFunc	typeref:typename:std::decay_t<decltype (cuda_parallel_launch_local_memory<DriverType>)>
get_kernel_func	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  static void* get_kernel_func() {$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchKernelFunc	typeref:typename:void *
get_kernel_func	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static auto get_kernel_func() {$/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:auto
get_label	Kokkos_HBWSpace.hpp	/^  inline std::string get_label() const {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:std::string
get_label	Kokkos_LogicalSpaces.hpp	/^  inline std::string get_label() const {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:std::string
get_label	impl/Kokkos_SharedAlloc.hpp	/^  std::string get_label() const {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:std::string
get_label	impl/Kokkos_SharedAlloc.hpp	/^  virtual std::string get_label() const { return std::string("Unmanaged"); }$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:std::string
get_label	impl/Kokkos_SharedAlloc_timpl.hpp	/^HostInaccessibleSharedAllocationRecordCommon<MemorySpace>::get_label() const {$/;"	f	class:Kokkos::Impl::HostInaccessibleSharedAllocationRecordCommon	typeref:typename:std::string
get_label	impl/Kokkos_SharedAlloc_timpl.hpp	/^std::string SharedAllocationRecordCommon<MemorySpace>::get_label() const {$/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:std::string
get_length	impl/Kokkos_FunctorAnalysis.hpp	/^  get_length(FF const& f) {$/;"	f	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<IsArray,unsigned>
get_lock_array	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^int* OpenMPTargetExec::get_lock_array(int num_teams) {$/;"	f	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:int *
get_max_blocksize_impl	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned get_max_blocksize_impl() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
get_max_team_size	impl/Kokkos_Tools_Generic.hpp	/^  int get_max_team_size(const Policy& policy, const Functor& functor,$/;"	f	struct:Kokkos::Tools::Experimental::Impl::Impl::ComplexReducerSizeCalculator	typeref:typename:int
get_max_team_size	impl/Kokkos_Tools_Generic.hpp	/^  int get_max_team_size(const Policy& policy, const Functor& functor,$/;"	f	struct:Kokkos::Tools::Experimental::Impl::Impl::SimpleTeamSizeCalculator	typeref:typename:int
get_mdrange_max_tile_size_product	impl/Kokkos_Tools_Generic.hpp	/^  int get_mdrange_max_tile_size_product(const Policy& policy,$/;"	f	struct:Kokkos::Tools::Experimental::Impl::Impl::ComplexReducerSizeCalculator	typeref:typename:int
get_mdrange_max_tile_size_product	impl/Kokkos_Tools_Generic.hpp	/^  int get_mdrange_max_tile_size_product(const Policy& policy,$/;"	f	struct:Kokkos::Tools::Experimental::Impl::Impl::SimpleTeamSizeCalculator	typeref:typename:int
get_memory_pool	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  memory_pool const& get_memory_pool() const { return m_pool; }$/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:KOKKOS_INLINE_FUNCTION memory_pool const &
get_memory_pool	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  memory_pool& get_memory_pool() { return m_pool; }$/;"	f	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:KOKKOS_INLINE_FUNCTION memory_pool &
get_name	Kokkos_LogicalSpaces.hpp	/^  static constexpr const char* get_name() {$/;"	f	struct:Kokkos::Experimental::DefaultMemorySpaceNamer	typeref:typename:const char *
get_new_context_id	impl/Kokkos_Profiling.cpp	/^size_t get_new_context_id() { return ++get_context_counter(); }$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t
get_new_variable_id	impl/Kokkos_Profiling.cpp	/^size_t get_new_variable_id() { return get_variable_counter(); }$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t
get_next_driver	HIP/Kokkos_HIP_Instance.cpp	/^char *HIPInternal::get_next_driver(size_t driverTypeSize) const {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:char *
get_node_impl	Kokkos_GraphNode.hpp	/^  node_impl_t& get_node_impl() const { return *m_node_impl.get(); }$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:node_impl_t &
get_node_ptr	Kokkos_GraphNode.hpp	/^  std::shared_ptr<node_impl_t> const& get_node_ptr() const& {$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:std::shared_ptr<node_impl_t> const &
get_node_ptr	Kokkos_GraphNode.hpp	/^  std::shared_ptr<node_impl_t> get_node_ptr() && {$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:std::shared_ptr<node_impl_t>
get_node_ptr	impl/Kokkos_GraphImpl.hpp	/^  static auto get_node_ptr(NodeRef&& node_ref) {$/;"	f	struct:Kokkos::Impl::GraphAccess	typeref:typename:auto
get_point	Kokkos_Tuners.hpp	/^  auto get_point(Coordinates... coordinates) {$/;"	f	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:auto
get_point	Kokkos_Tuners.hpp	/^  auto get_point(Coordinates... coordinates) {$/;"	f	struct:Kokkos::Tools::Experimental::ExtendableTunerMixin	typeref:typename:auto
get_point	Kokkos_Tuners.hpp	/^auto get_point(const PointType& point, const ArrayType& indices) {$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:auto
get_point_helper	Kokkos_Tuners.hpp	/^auto get_point_helper(const PointType& in, const ArrayType& indices,$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:auto
get_policy	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  Policy const& get_policy() const { return m_policy; }$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy const &
get_policy	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  Policy const& get_policy() const { return m_rp; }$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy const &
get_policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  Policy const& get_policy() const { return m_policy; }$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy const &
get_policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  Policy const& get_policy() const { return m_policy; }$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy const &
get_policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  Policy const& get_policy() const { return m_policy; }$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy const &
get_policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  Policy const& get_policy() const { return m_policy; }$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy const &
get_policy	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  Policy const& get_policy() const { return m_policy; }$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy const &
get_policy	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  Policy const& get_policy() const { return m_policy; }$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy const &
get_policy	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  Policy const& get_policy() const { return m_policy; }$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy const &
get_predecessor	impl/Kokkos_TaskNode.hpp	/^  task_base_type& get_predecessor() const {$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION task_base_type &
get_preferred_blocksize_impl	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned get_preferred_blocksize_impl() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
get_priority	impl/Kokkos_TaskNode.hpp	/^  TaskPriority get_priority() const noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION TaskPriority
get_process_id	impl/Kokkos_Core.cpp	/^unsigned get_process_id() {$/;"	f	namespace:__anon5875dff10110	typeref:typename:unsigned
get_recommended_team_size	impl/Kokkos_Tools_Generic.hpp	/^  int get_recommended_team_size(const Policy& policy, const Functor& functor,$/;"	f	struct:Kokkos::Tools::Experimental::Impl::Impl::ComplexReducerSizeCalculator	typeref:typename:int
get_recommended_team_size	impl/Kokkos_Tools_Generic.hpp	/^  int get_recommended_team_size(const Policy& policy, const Functor& functor,$/;"	f	struct:Kokkos::Tools::Experimental::Impl::Impl::SimpleTeamSizeCalculator	typeref:typename:int
get_record	Kokkos_LogicalSpaces.hpp	/^  static SharedAllocationRecord* get_record(void* alloc_ptr) {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord *
get_record	impl/Kokkos_HBWSpace.cpp	/^    *SharedAllocationRecord<Kokkos::Experimental::HBWSpace, void>::get_record($/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace	typeref:typename:SharedAllocationRecord<Kokkos::Experimental::HBWSpace,void> *
get_record	impl/Kokkos_SharedAlloc.hpp	/^  constexpr SharedAllocationRecord<MemorySpace, void>* get_record() const$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:SharedAllocationRecord<MemorySpace,void> *
get_record	impl/Kokkos_SharedAlloc_timpl.hpp	/^auto HostInaccessibleSharedAllocationRecordCommon<MemorySpace>::get_record($/;"	f	class:Kokkos::Impl::HostInaccessibleSharedAllocationRecordCommon	typeref:typename:derived_t *
get_record	impl/Kokkos_SharedAlloc_timpl.hpp	/^auto SharedAllocationRecordCommon<MemorySpace>::get_record(void* alloc_ptr)$/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:derived_t *
get_respawn_flag	impl/Kokkos_TaskNode.hpp	/^  bool get_respawn_flag() const { return m_is_respawning; }$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
get_root_value	Kokkos_Tuners.hpp	/^  const ValueType& get_root_value(const size_t index) const {$/;"	f	struct:Kokkos::Tools::Experimental::Impl::ValueHierarchyNode	typeref:typename:const ValueType &
get_scratch_ptr	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^void* OpenMPTargetExec::get_scratch_ptr() { return m_scratch_ptr; }$/;"	f	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void *
get_scratch_size	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static auto get_scratch_size() {$/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFunc	typeref:typename:auto
get_scratch_size	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static unsigned int get_scratch_size($/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelFuncData	typeref:typename:unsigned int
get_shmem	Kokkos_ScratchSpace.hpp	/^  KOKKOS_INLINE_FUNCTION void* get_shmem(const IntType& size,$/;"	f	class:Kokkos::ScratchMemorySpace	typeref:typename:KOKKOS_INLINE_FUNCTION void *
get_shmem_aligned	Kokkos_ScratchSpace.hpp	/^  KOKKOS_INLINE_FUNCTION void* get_shmem_aligned(const IntType& size,$/;"	f	class:Kokkos::ScratchMemorySpace	typeref:typename:KOKKOS_INLINE_FUNCTION void *
get_shmem_common	Kokkos_ScratchSpace.hpp	/^  KOKKOS_INLINE_FUNCTION void* get_shmem_common(const IntType& size,$/;"	f	class:Kokkos::ScratchMemorySpace	typeref:typename:KOKKOS_INLINE_FUNCTION void *
get_shmem_per_sm_prefer_l1	Cuda/Kokkos_Cuda_BlockSize_Deduction.hpp	/^inline size_t get_shmem_per_sm_prefer_l1(cudaDeviceProp const& properties) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:size_t
get_steal_target	Threads/Kokkos_ThreadsExec.hpp	/^  inline int get_steal_target() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
get_steal_target	Threads/Kokkos_ThreadsExec.hpp	/^  inline int get_steal_target(int team_size) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
get_sub_value	Kokkos_Tuners.hpp	/^  const ContainedType& get_sub_value(const size_t index) const {$/;"	f	struct:Kokkos::Tools::Experimental::Impl::ValueHierarchyNode	typeref:typename:const ContainedType &
get_task_type	impl/Kokkos_TaskNode.hpp	/^  TaskType get_task_type() const noexcept { return m_task_type; }$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION TaskType
get_team_queue	impl/Kokkos_TaskQueue.hpp	/^  team_queue_type& get_team_queue(int \/*team_rank*\/) { return *this; }$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION team_queue_type &
get_team_queue	impl/Kokkos_TaskQueueMultiple.hpp	/^  team_queue_type& get_team_queue(int arg_league_rank) noexcept {$/;"	f	class:Kokkos::Impl::TaskQueueMultiple	typeref:typename:KOKKOS_INLINE_FUNCTION team_queue_type &
get_team_queue	impl/Kokkos_TaskQueueMultiple.hpp	/^  team_queue_type& get_team_queue(int iteam) {$/;"	f	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:KOKKOS_INLINE_FUNCTION team_queue_type &
get_team_scheduler	Kokkos_TaskScheduler.hpp	/^  team_scheduler_type get_team_scheduler(int team_rank) const {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION team_scheduler_type
get_team_scheduler	impl/Kokkos_SimpleTaskScheduler.hpp	/^  SimpleTaskScheduler get_team_scheduler(int rank_in_league) const noexcept {$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION SimpleTaskScheduler
get_this_thread_coordinate	impl/Kokkos_hwloc.cpp	/^std::pair<unsigned, unsigned> get_this_thread_coordinate() {$/;"	f	namespace:Kokkos::hwloc	typeref:typename:std::pair<unsigned,unsigned>
get_thread	Threads/Kokkos_ThreadsExec.cpp	/^ThreadsExec *ThreadsExec::get_thread(const int init_thread_rank) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:ThreadsExec *
get_thread_count	Threads/Kokkos_ThreadsExec.cpp	/^int ThreadsExec::get_thread_count() { return s_thread_pool_size[0]; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
get_thread_data	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  HostThreadTeamData* get_thread_data() const noexcept {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:HostThreadTeamData *
get_thread_data	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  HostThreadTeamData* get_thread_data(int i) const noexcept {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:HostThreadTeamData *
get_tile_size_properties	KokkosExp_MDRangePolicy.hpp	/^TileSizeProperties get_tile_size_properties(const ExecutionSpace&) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:TileSizeProperties
get_tuner	Kokkos_Tuners.hpp	/^  TunerType get_tuner() const { return tuner; }$/;"	f	class:Kokkos::Tools::Experimental::TeamSizeTuner	typeref:typename:TunerType
get_tuner	Kokkos_Tuners.hpp	/^  TunerType get_tuner() const { return tuner; }$/;"	f	struct:Kokkos::Tools::Experimental::MDRangeTuner	typeref:typename:TunerType
get_type	impl/Kokkos_Traits.hpp	/^struct get_type {$/;"	s	namespace:Kokkos::Impl
get_type	impl/Kokkos_Traits.hpp	/^struct get_type<0, T, Pack...> {$/;"	s	namespace:Kokkos::Impl
get_type	impl/Kokkos_Traits.hpp	/^struct get_type<I, T, Pack...> {$/;"	s	namespace:Kokkos::Impl
get_usage_statistics	Kokkos_MemoryPool.hpp	/^  void get_usage_statistics(usage_statistics &stats) const {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:void
get_variable_counter	impl/Kokkos_Profiling.cpp	/^static size_t& get_variable_counter() {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t &	file:
get_visible_devices	impl/Kokkos_Core.cpp	/^std::vector<int> Kokkos::Impl::get_visible_devices($/;"	f	class:Kokkos::Impl	typeref:typename:std::vector<int>
get_work_index	Threads/Kokkos_ThreadsExec.hpp	/^  inline long get_work_index(int team_size = 0) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:long
get_work_index_begin	Threads/Kokkos_ThreadsExec.hpp	/^  inline long get_work_index_begin() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:long
get_work_index_end	Threads/Kokkos_ThreadsExec.hpp	/^  inline long get_work_index_end() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:long
get_work_partition	impl/Kokkos_HostThreadTeam.hpp	/^  std::pair<int64_t, int64_t> get_work_partition() noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:std::pair<int64_t,int64_t>
get_work_stealing	impl/Kokkos_HostThreadTeam.cpp	/^int HostThreadTeamData::get_work_stealing() noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
get_work_stealing_chunk	impl/Kokkos_HostThreadTeam.hpp	/^  std::pair<int64_t, int64_t> get_work_stealing_chunk() noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:std::pair<int64_t,int64_t>
global_launch_impl_t	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^    using global_launch_impl_t = CudaParallelLaunchKernelInvoker<$/;"	t	function:Kokkos::Impl::CudaParallelLaunchKernelInvoker::create_parallel_launch_graph_node	typeref:typename:CudaParallelLaunchKernelInvoker<DriverType,LaunchBounds,Experimental::CudaLaunchMechanism::GlobalMemory>
global_lock	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::global_lock() { host_internal_cppthread_mutex.lock(); }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
global_unlock	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::global_unlock() { host_internal_cppthread_mutex.unlock(); }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
gnu_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto gnu_constant = __ATOMIC_ACQUIRE;$/;"	m	struct:Kokkos::Impl::memory_order_acquire_t	typeref:typename:auto
gnu_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto gnu_constant = __ATOMIC_ACQ_REL;$/;"	m	struct:Kokkos::Impl::memory_order_acq_rel_t	typeref:typename:auto
gnu_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto gnu_constant = __ATOMIC_RELAXED;$/;"	m	struct:Kokkos::Impl::memory_order_relaxed_t	typeref:typename:auto
gnu_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto gnu_constant = __ATOMIC_RELEASE;$/;"	m	struct:Kokkos::Impl::memory_order_release_t	typeref:typename:auto
gnu_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto gnu_constant = __ATOMIC_SEQ_CST;$/;"	m	struct:Kokkos::Impl::memory_order_seq_cst_t	typeref:typename:auto
goal	impl/Kokkos_Profiling_C_Interface.h	/^  enum Kokkos_Tools_OptimizationType goal;$/;"	m	struct:Kokkos_Tools_OptimzationGoal	typeref:enum:Kokkos_Tools_OptimizationType
grange0	SYCL/Kokkos_SYCL_Team.hpp	/^  const iType grange0 = loop_boundaries.member.item().get_local_range(0);$/;"	v	namespace:Kokkos	typeref:typename:const iType
grange1	SYCL/Kokkos_SYCL_Team.hpp	/^  const iType grange1 = loop_boundaries.member.item().get_local_range(1);$/;"	v	namespace:Kokkos	typeref:typename:const iType
grange1	SYCL/Kokkos_SYCL_Team.hpp	/^  const int grange1 = loop_boundaries.member.item().get_local_range(1);$/;"	v	namespace:Kokkos	typeref:typename:const int
graph	Kokkos_Graph.hpp	/^  using graph           = Graph;$/;"	t	struct:Kokkos::Experimental::Graph	typeref:typename:Graph
graph_impl_t	Kokkos_GraphNode.hpp	/^  using graph_impl_t = Kokkos::Impl::GraphImpl<ExecutionSpace>;$/;"	t	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:Kokkos::Impl::GraphImpl<ExecutionSpace>
graph_kernel	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using graph_kernel = CudaGraphNodeAggregateKernel;$/;"	t	struct:Kokkos::Impl::CudaGraphNodeAggregateKernel	typeref:typename:CudaGraphNodeAggregateKernel
graph_kernel	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using graph_kernel = GraphNodeKernelImpl;$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:GraphNodeKernelImpl
graph_kernel	Kokkos_GraphNode.hpp	/^  using graph_kernel      = Kernel;$/;"	t	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:Kernel
graph_kernel	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  using graph_kernel = GraphNodeAggregateKernelDefaultImpl;$/;"	t	struct:Kokkos::Impl::GraphNodeAggregateKernelDefaultImpl	typeref:typename:GraphNodeAggregateKernelDefaultImpl
graph_kernel	impl/Kokkos_Default_GraphNodeKernel.hpp	/^  using graph_kernel = GraphNodeKernelImpl;$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:GraphNodeKernelImpl
graph_node_kernel_t	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using graph_node_kernel_t =$/;"	t	function:Kokkos::Impl::allocate_driver_storage_for_kernel	typeref:typename:get_graph_node_kernel_type<KernelType>::type
graph_node_kernel_t	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using graph_node_kernel_t =$/;"	t	function:Kokkos::Impl::get_cuda_graph_from_kernel	typeref:typename:get_graph_node_kernel_type<KernelType>::type
graph_node_kernel_t	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using graph_node_kernel_t =$/;"	t	function:Kokkos::Impl::get_cuda_graph_node_from_kernel	typeref:typename:get_graph_node_kernel_type<KernelType>::type
graph_predecessor	Kokkos_GraphNode.hpp	/^  using graph_predecessor = Predecessor;$/;"	t	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:Predecessor
graph_type	Kokkos_WorkGraphPolicy.hpp	/^  using graph_type = Kokkos::Crs<index_type, execution_space, void, index_type>;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:Kokkos::Crs<index_type,execution_space,void,index_type>
gridDim	impl/KokkosExp_IterateTileGPU.hpp	/^  const EmulateCUDADim3<index_type> gridDim;$/;"	m	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:const EmulateCUDADim3<index_type>
gridDim	impl/KokkosExp_IterateTileGPU.hpp	/^  const EmulateCUDADim3<index_type> gridDim;$/;"	m	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:const EmulateCUDADim3<index_type>
half_impl_t	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^struct half_impl_t {$/;"	s	namespace:Kokkos::Impl
half_impl_t	HIP/Kokkos_HIP_Half_Impl_Type.hpp	/^struct half_impl_t {$/;"	s	namespace:Kokkos::Impl
half_impl_t	Kokkos_Half.hpp	/^struct half_impl_t {$/;"	s	namespace:Kokkos::Impl
half_impl_t	SYCL/Kokkos_SYCL_Half_Impl_Type.hpp	/^struct half_impl_t {$/;"	s	namespace:Kokkos::Impl
half_t	Kokkos_Half.hpp	/^using half_t = Kokkos::Experimental::Impl::floating_point_wrapper<$/;"	t	namespace:Kokkos::Experimental	typeref:typename:Kokkos::Experimental::Impl::floating_point_wrapper<Kokkos::Impl::half_impl_t::type>
half_t	Kokkos_Half.hpp	/^using half_t = Kokkos::Impl::half_impl_t::type;$/;"	t	namespace:Kokkos::Experimental	typeref:typename:Kokkos::Impl::half_impl_t::type
handle_failed_ready_queue_insertion	impl/Kokkos_MultipleTaskQueue.hpp	/^  void handle_failed_ready_queue_insertion($/;"	f	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION void
handle_failed_ready_queue_insertion	impl/Kokkos_TaskQueueCommon.hpp	/^  KOKKOS_INLINE_FUNCTION void handle_failed_ready_queue_insertion($/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION void
handle_type	impl/Kokkos_ViewArray.hpp	/^  using handle_type = typename Traits::value_type::pointer;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Traits::value_type::pointer
has_condition	impl/Kokkos_Traits.hpp	/^struct has_condition {$/;"	s	namespace:Kokkos::Impl
has_condition	impl/Kokkos_Traits.hpp	/^struct has_condition<DefaultType, Condition, S, Pack...> {$/;"	s	namespace:Kokkos::Impl
has_execution_space	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_execution_space {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_execution_space	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_execution_space<$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_execution_space	impl/Kokkos_ViewCtor.hpp	/^  enum { has_execution_space = var_execution_space::value };$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00303
has_final_no_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_final_no_tag_function<F, \/*is_array*\/ false> {$/;"	s
has_final_no_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_final_no_tag_function<F, \/*is_array*\/ true> {$/;"	s
has_final_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_final_tag_function<F, \/*is_array*\/ false> {$/;"	s
has_final_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_final_tag_function<F, \/*is_array*\/ true> {$/;"	s
has_init_no_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_init_no_tag_function<F, \/*is_array*\/ false> {$/;"	s	namespace:Kokkos
has_init_no_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_init_no_tag_function<F, \/*is_array*\/ true> {$/;"	s	namespace:Kokkos
has_init_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_init_tag_function<F, \/*is_array*\/ false> {$/;"	s	namespace:Kokkos
has_init_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_init_tag_function<F, \/*is_array*\/ true> {$/;"	s	namespace:Kokkos
has_join_no_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_join_no_tag_function<F, \/*is_array*\/ false> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_join_no_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_join_no_tag_function<F, \/*is_array*\/ true> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_join_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_join_tag_function<F, \/*is_array*\/ false> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_join_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_join_tag_function<F, \/*is_array*\/ true> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_label	impl/Kokkos_ViewCtor.hpp	/^  enum { has_label = Kokkos::Impl::has_type<std::string, P...>::value };$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00503
has_member_shmem_size	Kokkos_Concepts.hpp	/^class has_member_shmem_size {$/;"	c	namespace:Kokkos::Impl
has_member_team_shmem_size	Kokkos_Concepts.hpp	/^class has_member_team_shmem_size {$/;"	c	namespace:Kokkos::Impl
has_memory_space	impl/Kokkos_ViewCtor.hpp	/^  enum { has_memory_space = var_memory_space::value };$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00203
has_pointer	impl/Kokkos_ViewCtor.hpp	/^  enum : bool { has_pointer = true };$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00103
has_pointer	impl/Kokkos_ViewCtor.hpp	/^  enum { has_pointer = var_pointer::value };$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00403
has_predecessor	impl/Kokkos_TaskNode.hpp	/^  bool has_predecessor() const { return m_predecessor != nullptr; }$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION bool
has_predecessor	impl/Kokkos_TaskPolicyData.hpp	/^  static constexpr bool has_predecessor() noexcept {$/;"	f	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION bool
has_record	impl/Kokkos_SharedAlloc.hpp	/^  KOKKOS_INLINE_FUNCTION bool has_record() const {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_INLINE_FUNCTION bool
has_type	impl/Kokkos_Traits.hpp	/^struct has_type {$/;"	s	namespace:Kokkos::Impl
has_type	impl/Kokkos_Traits.hpp	/^struct has_type<T, S, Pack...> {$/;"	s	namespace:Kokkos::Impl
has_value	impl/Kokkos_OptionalRef.hpp	/^  bool has_value() const volatile { return m_value != nullptr; }$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION bool
has_value	impl/Kokkos_OptionalRef.hpp	/^  bool has_value() const { return m_value != nullptr; }$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION bool
has_value	impl/Kokkos_OptionalRef.hpp	/^  bool has_value() volatile { return m_value != nullptr; }$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION bool
has_value	impl/Kokkos_OptionalRef.hpp	/^  bool has_value() { return m_value != nullptr; }$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION bool
has_value_type	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_value_type {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_value_type	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_value_type<F,$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_volatile_join_no_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^      has_volatile_join_no_tag_function<F, \/*is_array*\/ false> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_volatile_join_no_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^      has_volatile_join_no_tag_function<F, \/*is_array*\/ true> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_volatile_join_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^      has_volatile_join_tag_function<F, \/*is_array*\/ false> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_volatile_join_tag_function	impl/Kokkos_FunctorAnalysis.hpp	/^      has_volatile_join_tag_function<F, \/*is_array*\/ true> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_work_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_work_tag {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
has_work_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct has_work_tag<P, typename std::is_void<typename P::work_tag>::type> {$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
have_tuning_tool	impl/Kokkos_Profiling.cpp	/^bool have_tuning_tool() {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:bool
head	impl/Kokkos_SharedAlloc.hpp	/^  const SharedAllocationHeader* head() const { return m_alloc_ptr; }$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_INLINE_FUNCTION const SharedAllocationHeader *
heavy_weight	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^      HintHeavyWeight_t heavy_weight =$/;"	m	struct:Kokkos::Impl::DeduceCudaLaunchMechanism	typeref:typename:const Kokkos::Experimental::WorkItemProperty::HintHeavyWeight_t
heavy_weight	HIP/Kokkos_HIP_KernelLaunch.hpp	/^      heavy_weight = Kokkos::Experimental::WorkItemProperty::HintHeavyWeight;$/;"	m	struct:Kokkos::Experimental::Impl::DeduceHIPLaunchMechanism	typeref:typename:Kokkos::Experimental::WorkItemProperty::HintHeavyWeight_t
help	impl/Kokkos_Profiling.hpp	/^  PossiblyUnsetOption help = unset;$/;"	m	struct:Kokkos::Tools::InitArguments	typeref:typename:PossiblyUnsetOption
help_request	impl/Kokkos_Profiling.hpp	/^    help_request,$/;"	e	enum:Kokkos::Tools::Impl::InitializationStatus::InitializationResult
helper	Kokkos_Tuners.hpp	/^  using helper = GetMultidimensionalPoint<$/;"	t	function:Kokkos::Tools::Experimental::Impl::get_point_helper
hip_abort	HIP/Kokkos_HIP_Abort.hpp	/^[[noreturn]] __device__ __attribute__((noinline)) inline void hip_abort($/;"	f	namespace:Kokkos::Impl	typeref:typename:[[noreturn]]__device__ void
hip_device	HIP/Kokkos_HIP_Space.cpp	/^int HIP::hip_device() const { return impl_internal_space_instance()->m_hipDev; }$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:int
hip_device_prop	HIP/Kokkos_HIP_Space.cpp	/^hipDeviceProp_t const& HIP::hip_device_prop() {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:hipDeviceProp_t const &
hip_device_synchronize	HIP/Kokkos_HIP_Instance.cpp	/^void hip_device_synchronize(const std::string &name) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
hip_driver_check_page_migration	HIP/Kokkos_HIP_Space.cpp	/^bool hip_driver_check_page_migration(int deviceId) {$/;"	f	namespace:__anon0e1462230110	typeref:typename:bool
hip_get_max_blocksize	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned hip_get_max_blocksize() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
hip_get_max_blocksize	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned hip_get_max_blocksize(HIPInternal const *hip_instance,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
hip_get_max_team_blocksize	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned hip_get_max_team_blocksize(HIPInternal const *hip_instance,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
hip_get_preferred_blocksize	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned hip_get_preferred_blocksize() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
hip_get_preferred_blocksize	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned hip_get_preferred_blocksize(HIPInternal const *hip_instance,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
hip_get_preferred_team_blocksize	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned hip_get_preferred_team_blocksize(HIPInternal const *hip_instance,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
hip_get_scratch_index	HIP/Kokkos_HIP_Parallel_Team.hpp	/^__device__ inline int64_t hip_get_scratch_index($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ int64_t
hip_global_unique_token_locks	HIP/Kokkos_HIP_Instance.cpp	/^hip_global_unique_token_locks(bool deallocate) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:Kokkos::View<uint32_t *,Kokkos::Experimental::HIPSpace>
hip_inter_block_shuffle_reduction	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^__device__ inline bool hip_inter_block_shuffle_reduction($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
hip_inter_warp_shuffle_reduction	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^__device__ inline void hip_inter_warp_shuffle_reduction($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
hip_internal_error_throw	HIP/Kokkos_HIP_Instance.cpp	/^void hip_internal_error_throw(hipError_t e, const char *name, const char *file,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
hip_internal_get_block_size	HIP/Kokkos_HIP_BlockSize_Deduction.hpp	/^unsigned hip_internal_get_block_size(const HIPInternal *hip_instance,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:unsigned
hip_internal_maximum_grid_count	HIP/Kokkos_HIP_Instance.cpp	/^hip_internal_maximum_grid_count() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:std::array<Kokkos::Experimental::HIP::size_type,3>
hip_internal_maximum_warp_count	HIP/Kokkos_HIP_Instance.cpp	/^Kokkos::Experimental::HIP::size_type hip_internal_maximum_warp_count() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:Kokkos::Experimental::HIP::size_type
hip_internal_multiprocessor_count	HIP/Kokkos_HIP_Instance.cpp	/^Kokkos::Experimental::HIP::size_type hip_internal_multiprocessor_count() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:Kokkos::Experimental::HIP::size_type
hip_internal_safe_call	HIP/Kokkos_HIP_Error.hpp	/^inline void hip_internal_safe_call(hipError_t e, const char* name,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
hip_internal_safe_call_deprecated	HIP/Kokkos_HIP_Error.hpp	/^inline void hip_internal_safe_call_deprecated(hipError_t e, const char* name,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_DEPRECATED void
hip_internal_scratch_flags	HIP/Kokkos_HIP_Instance.cpp	/^Kokkos::Experimental::HIP::size_type *hip_internal_scratch_flags($/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:Kokkos::Experimental::HIP::size_type *
hip_internal_scratch_space	HIP/Kokkos_HIP_Instance.cpp	/^Kokkos::Experimental::HIP::size_type *hip_internal_scratch_space($/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:Kokkos::Experimental::HIP::size_type *
hip_intra_block_reduce_scan	HIP/Kokkos_HIP_ReduceScan.hpp	/^__device__ void hip_intra_block_reduce_scan($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
hip_intra_block_shuffle_reduction	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^__device__ inline void hip_intra_block_shuffle_reduction($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
hip_intra_warp_shuffle_reduction	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^__device__ inline void hip_intra_warp_shuffle_reduction($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
hip_parallel_launch	HIP/Kokkos_HIP_KernelLaunch.hpp	/^void hip_parallel_launch(const DriverType &driver, const dim3 &grid,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:void
hip_parallel_launch_constant_memory	HIP/Kokkos_HIP_KernelLaunch.hpp	/^__global__ static void hip_parallel_launch_constant_memory() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:__global__ void
hip_parallel_launch_global_memory	HIP/Kokkos_HIP_KernelLaunch.hpp	/^__global__ static void hip_parallel_launch_global_memory($/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:__global__ void
hip_parallel_launch_local_memory	HIP/Kokkos_HIP_KernelLaunch.hpp	/^__global__ static void hip_parallel_launch_local_memory($/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:__global__ void
hip_release_scratch_index	HIP/Kokkos_HIP_Parallel_Team.hpp	/^__device__ inline void hip_release_scratch_index(int32_t* scratch_locks,$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
hip_single_inter_block_reduce_scan	HIP/Kokkos_HIP_ReduceScan.hpp	/^__device__ bool hip_single_inter_block_reduce_scan($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
hip_single_inter_block_reduce_scan_impl	HIP/Kokkos_HIP_ReduceScan.hpp	/^__device__ bool hip_single_inter_block_reduce_scan_impl($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
hip_single_inter_block_reduce_scan_shmem	HIP/Kokkos_HIP_ReduceScan.hpp	/^hip_single_inter_block_reduce_scan_shmem(const FunctorType& functor,$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<DoScan,unsigned>
hip_stream	HIP/Kokkos_HIP_Space.cpp	/^hipStream_t HIP::hip_stream() const { return m_space_instance->m_stream; }$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:hipStream_t
hook_function_type	impl/Kokkos_Core.cpp	/^using hook_function_type = std::function<void()>;$/;"	t	namespace:__anon5875dff10110	file:
hooks_policy	Kokkos_View.hpp	/^                         typename prop::hooks_policy,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::hooks_policy> typename prop::
hooks_policy	Kokkos_View.hpp	/^  using hooks_policy      = HooksPolicy;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:HooksPolicy
hooks_policy	Kokkos_View.hpp	/^  using hooks_policy    = HooksPolicy;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:HooksPolicy
hooks_policy	Kokkos_View.hpp	/^  using hooks_policy    = typename ViewTraits<void, Prop...>::hooks_policy;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::hooks_policy
hooks_policy	Kokkos_View.hpp	/^  using hooks_policy    = void;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:void
hooks_policy	Kokkos_View.hpp	/^  using hooks_policy  = typename ViewTraits<void, Prop...>::hooks_policy;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::hooks_policy
hooks_policy	Kokkos_View.hpp	/^  using hooks_policy = typename traits::hooks_policy;$/;"	t	class:Kokkos::View	typeref:typename:traits::hooks_policy
hooks_policy	View/Hooks/Kokkos_ViewHooks.hpp	/^  using hooks_policy = EmptyViewHooks;$/;"	t	struct:Kokkos::Experimental::EmptyViewHooks	typeref:typename:EmptyViewHooks
hooks_policy	View/Hooks/Kokkos_ViewHooks.hpp	/^  using hooks_policy = SubscribableViewHooks<Subscribers...>;$/;"	t	struct:Kokkos::Experimental::SubscribableViewHooks	typeref:typename:SubscribableViewHooks<Subscribers...>
host_abort	impl/Kokkos_Error.cpp	/^void host_abort(const char *const message) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
host_execution_space	Kokkos_Concepts.hpp	/^  using host_execution_space KOKKOS_DEPRECATED =$/;"	t	struct:Kokkos::is_space	typeref:typename:do_not_use_host_execution_space
host_internal_cppthread_mutex	Threads/Kokkos_ThreadsExec.cpp	/^std::mutex host_internal_cppthread_mutex;$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:std::mutex
host_memory_space	Kokkos_Concepts.hpp	/^  using host_memory_space KOKKOS_DEPRECATED = do_not_use_host_memory_space;$/;"	t	struct:Kokkos::is_space	typeref:typename:do_not_use_host_memory_space
host_mirror_space	Kokkos_Concepts.hpp	/^  using host_mirror_space KOKKOS_DEPRECATED = std::conditional_t<$/;"	t	struct:Kokkos::is_space
host_mirror_space	Kokkos_View.hpp	/^  using host_mirror_space = HostMirrorSpace;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:HostMirrorSpace
host_mirror_type	Kokkos_View.hpp	/^  using host_mirror_type =$/;"	t	class:Kokkos::View	typeref:typename:View<typename traits::non_const_data_type,typename traits::array_layout,typename traits::host_mirror_space,typename traits::hooks_policy>
host_thread_team_member	impl/Kokkos_HostThreadTeam.hpp	/^  using host_thread_team_member = HostThreadTeamMember;$/;"	t	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:HostThreadTeamMember
host_thread_yield	impl/Kokkos_Spinwait.cpp	/^void host_thread_yield(const uint32_t i, const WaitMode mode) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
hostspace_fence	impl/Kokkos_HostSpace_deepcopy.cpp	/^void hostspace_fence(const DefaultHostExecutionSpace& exec) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
hostspace_parallel_deepcopy	impl/Kokkos_HostSpace_deepcopy.cpp	/^void hostspace_parallel_deepcopy(void* dst, const void* src, ptrdiff_t n) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
hostspace_parallel_deepcopy_async	impl/Kokkos_HostSpace_deepcopy.cpp	/^void hostspace_parallel_deepcopy_async(const DefaultHostExecutionSpace& exec,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
hostspace_parallel_deepcopy_async	impl/Kokkos_HostSpace_deepcopy.cpp	/^void hostspace_parallel_deepcopy_async(void* dst, const void* src,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
human_memory_size	impl/Kokkos_Error.cpp	/^std::string human_memory_size(size_t arg_bytes) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::string
hwloc	Kokkos_hwloc.hpp	/^namespace hwloc {$/;"	n	namespace:Kokkos
hwloc	impl/Kokkos_hwloc.cpp	/^namespace hwloc {$/;"	n	namespace:Kokkos	file:
hypot	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 hypot(__float128 x, __float128 y) { return ::hypotq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
i	HIP/Kokkos_HIP_Atomic.hpp	/^    int i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:int
i	HIP/Kokkos_HIP_Atomic.hpp	/^    int i;$/;"	m	union:Kokkos::atomic_fetch_add::U	typeref:typename:int
i	HIP/Kokkos_HIP_Atomic.hpp	/^    int i;$/;"	m	union:Kokkos::atomic_fetch_sub::U	typeref:typename:int
i	HIP/Kokkos_HIP_Atomic.hpp	/^    unsigned long long i;$/;"	m	union:Kokkos::atomic_fetch_add::U	typeref:typename:unsigned long long
i	HIP/Kokkos_HIP_Atomic.hpp	/^    unsigned long long i;$/;"	m	union:Kokkos::atomic_fetch_sub::U	typeref:typename:unsigned long long
i	HIP/Kokkos_HIP_Atomic.hpp	/^    unsigned long long int i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:unsigned long long int
i	HIP/Kokkos_HIP_Team.hpp	/^  for (iType i = loop_boundaries.start + threadIdx.x; i < loop_boundaries.end;$/;"	v	namespace:Kokkos	typeref:typename:iType
i	HIP/Kokkos_HIP_Team.hpp	/^  for (iType i = loop_boundaries.start + threadIdx.y * blockDim.x + threadIdx.x;$/;"	v	namespace:Kokkos	typeref:typename:iType
i	HIP/Kokkos_HIP_Team.hpp	/^  for (iType i = loop_boundaries.start + threadIdx.y; i < loop_boundaries.end;$/;"	v	namespace:Kokkos	typeref:typename:iType
i	Kokkos_HPX.hpp	/^    for (Member i = i_begin; i < i_end; ++i) {$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Member
i	Kokkos_HPX.hpp	/^    for (Member i = i_begin; i < i_end; ++i) {$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:Member
i	Kokkos_HPX.hpp	/^    for (Member i = i_begin; i < i_end; ++i) {$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:Member
i	Kokkos_HPX.hpp	/^    for (Member i = i_begin; i < i_end; ++i) {$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Member
i	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^    for (iType i = loop_boundaries.start; i < loop_boundaries.end; i++) {$/;"	v	namespace:Kokkos	typeref:typename:iType
i	SYCL/Kokkos_SYCL_Team.hpp	/^  for (iType i = loop_boundaries.start + tidx0 * grange1 + tidx1;$/;"	v	namespace:Kokkos	typeref:typename:iType
i	SYCL/Kokkos_SYCL_Team.hpp	/^  for (iType i = loop_boundaries.start + tidx1; i < loop_boundaries.end;$/;"	v	namespace:Kokkos	typeref:typename:iType
i	SYCL/Kokkos_SYCL_Team.hpp	/^  for (iType i = loop_boundaries.start +$/;"	v	namespace:Kokkos	typeref:typename:iType
i	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    for (typename Policy::member_type i = m_policy.begin(); i < e; ++i) {$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
i	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    for (typename Policy::member_type i = m_policy.begin(); i < e; ++i) {$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
i	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    for (typename Policy::member_type i = m_policy.begin(); i < e; ++i) {$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::member_type
i	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    for (typename Policy::member_type i = m_policy.begin(); i < e; ++i) {$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Policy::member_type
i	Threads/Kokkos_ThreadsTeam.hpp	/^  for (iType i = loop_boundaries.start; i < loop_boundaries.end;$/;"	v	namespace:Kokkos	typeref:typename:iType
i	Threads/Kokkos_Threads_Parallel_Range.hpp	/^    for (Member i = ibeg; i < iend; ++i) {$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Member
i	Threads/Kokkos_Threads_Parallel_Range.hpp	/^    for (Member i = ibeg; i < iend; ++i) {$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:Member
i	Threads/Kokkos_Threads_Parallel_Range.hpp	/^    for (Member i = ibeg; i < iend; ++i) {$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:Member
i	Threads/Kokkos_Threads_Parallel_Range.hpp	/^    for (Member i = ibeg; i < iend; ++i) {$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Member
i	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^    Impl::cas128_t i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:Impl::cas128_t
i	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^    int i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:int
i	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^    long i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:long
i	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^    Impl::cas128_t i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:Impl::cas128_t
i	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^    int i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:int
i	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^    long i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:long
i	impl/Kokkos_Atomic_Exchange.hpp	/^    Impl::cas128_t i;$/;"	m	union:Kokkos::atomic_assign::U	typeref:typename:Impl::cas128_t
i	impl/Kokkos_Atomic_Exchange.hpp	/^    Impl::cas128_t i;$/;"	m	union:Kokkos::atomic_exchange::U	typeref:typename:Impl::cas128_t
i	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    Impl::cas128_t i;$/;"	m	union:Kokkos::atomic_fetch_add::U	typeref:typename:Impl::cas128_t
i	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    int i;$/;"	m	union:Kokkos::atomic_fetch_add::U	typeref:typename:int
i	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    int i;$/;"	m	union:Kokkos::atomic_fetch_add::U1	typeref:typename:int
i	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    long i;$/;"	m	union:Kokkos::atomic_fetch_add::U	typeref:typename:long
i	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    unsigned long long int i;$/;"	m	union:Kokkos::atomic_fetch_add::U2	typeref:typename:unsigned long long int
i	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^    int i;$/;"	m	union:Kokkos::atomic_fetch_sub::U	typeref:typename:int
i	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^    long i;$/;"	m	union:Kokkos::atomic_fetch_sub::U	typeref:typename:long
i	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^    unsigned long long int i;$/;"	m	union:Kokkos::atomic_fetch_sub::U	typeref:typename:unsigned long long int
i	impl/Kokkos_Atomic_Generic.hpp	/^    int i;$/;"	m	union:Kokkos::Impl::atomic_fetch_oper::U	typeref:typename:int
i	impl/Kokkos_Atomic_Generic.hpp	/^    int i;$/;"	m	union:Kokkos::Impl::atomic_oper_fetch::U	typeref:typename:int
i	impl/Kokkos_Atomic_Generic.hpp	/^    unsigned long long int i;$/;"	m	union:Kokkos::Impl::atomic_fetch_oper::U	typeref:typename:unsigned long long int
i	impl/Kokkos_Atomic_Generic.hpp	/^    unsigned long long int i;$/;"	m	union:Kokkos::Impl::atomic_oper_fetch::U	typeref:typename:unsigned long long int
i	impl/Kokkos_Atomic_Windows.hpp	/^    CHAR i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:CHAR
i	impl/Kokkos_Atomic_Windows.hpp	/^    Impl::cas128_t i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:Impl::cas128_t
i	impl/Kokkos_Atomic_Windows.hpp	/^    LONG i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:LONG
i	impl/Kokkos_Atomic_Windows.hpp	/^    LONGLONG i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:LONGLONG
i	impl/Kokkos_Atomic_Windows.hpp	/^    SHORT i;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:SHORT
i	impl/Kokkos_HostThreadTeam.hpp	/^  for (iType i = loop_boundaries.start; i < loop_boundaries.end;$/;"	v	namespace:Kokkos	typeref:typename:iType
i0	Kokkos_View.hpp	/^      size_t i0 = arg_layout.dimension[0];$/;"	m	class:Kokkos::View	typeref:typename:size_t
i1	Kokkos_View.hpp	/^      size_t i1 = arg_layout.dimension[1];$/;"	m	class:Kokkos::View	typeref:typename:size_t
i2	Kokkos_View.hpp	/^      size_t i2 = arg_layout.dimension[2];$/;"	m	class:Kokkos::View	typeref:typename:size_t
i3	Kokkos_View.hpp	/^      size_t i3 = arg_layout.dimension[3];$/;"	m	class:Kokkos::View	typeref:typename:size_t
i4	Kokkos_View.hpp	/^      size_t i4 = arg_layout.dimension[4];$/;"	m	class:Kokkos::View	typeref:typename:size_t
i5	Kokkos_View.hpp	/^      size_t i5 = arg_layout.dimension[5];$/;"	m	class:Kokkos::View	typeref:typename:size_t
i6	Kokkos_View.hpp	/^      size_t i6 = arg_layout.dimension[6];$/;"	m	class:Kokkos::View	typeref:typename:size_t
i7	Kokkos_View.hpp	/^      size_t i7 = arg_layout.dimension[7];$/;"	m	class:Kokkos::View	typeref:typename:size_t
iType	Cuda/Kokkos_Cuda_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamThreadRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	Cuda/Kokkos_Cuda_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	Cuda/Kokkos_Cuda_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::ThreadVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	HIP/Kokkos_HIP_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamThreadRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	HIP/Kokkos_HIP_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	HIP/Kokkos_HIP_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::ThreadVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	Kokkos_HPX.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamThreadRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	Kokkos_HPX.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	Kokkos_HPX.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::ThreadVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamThreadRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::ThreadVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	SYCL/Kokkos_SYCL_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamThreadRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	SYCL/Kokkos_SYCL_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	SYCL/Kokkos_SYCL_Team.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::ThreadVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	Threads/Kokkos_ThreadsTeam.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamThreadRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	Threads/Kokkos_ThreadsTeam.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::TeamVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	Threads/Kokkos_ThreadsTeam.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::ThreadVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
iType	impl/Kokkos_HostThreadTeam.hpp	/^  using iType = std::common_type_t<iType1, iType2>;$/;"	t	function:Kokkos::ThreadVectorRange	typeref:typename:std::common_type_t<iType1,iType2>
ibegin	Kokkos_ExecPolicy.hpp	/^  KOKKOS_INLINE_FUNCTION static iType ibegin(const iType& arg_begin,$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION iType
ibegin	Kokkos_ExecPolicy.hpp	/^  KOKKOS_INLINE_FUNCTION static iType ibegin(const iType& arg_begin,$/;"	f	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION iType
id	Cuda/Kokkos_Cuda_Instance.cpp	/^constexpr DeviceType DeviceTypeTraits<Cuda>::id;$/;"	m	class:Kokkos::Tools::Experimental::DeviceTypeTraits<Cuda>	typeref:typename:DeviceType
id	HIP/Kokkos_HIP_Space.cpp	/^constexpr DeviceType DeviceTypeTraits<Kokkos::Experimental::HIP>::id;$/;"	m	class:Kokkos::Tools::Experimental::DeviceTypeTraits<Kokkos::Experimental::HIP>	typeref:typename:DeviceType
id	HPX/Kokkos_HPX.cpp	/^constexpr DeviceType DeviceTypeTraits<Kokkos::Experimental::HPX>::id;$/;"	m	class:Kokkos::Tools::Experimental::DeviceTypeTraits<Kokkos::Experimental::HPX>	typeref:typename:DeviceType
id	Kokkos_Cuda.hpp	/^  static constexpr DeviceType id = DeviceType::Cuda;$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	Kokkos_HIP_Space.hpp	/^  static constexpr DeviceType id = DeviceType::HIP;$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	Kokkos_HPX.hpp	/^  static constexpr DeviceType id = DeviceType::HPX;$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	Kokkos_OpenMP.hpp	/^  static constexpr DeviceType id = DeviceType::OpenMP;$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	Kokkos_OpenMPTarget.hpp	/^  static constexpr DeviceType id =$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	Kokkos_SYCL.hpp	/^  static constexpr DeviceType id = DeviceType::SYCL;$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	Kokkos_Serial.hpp	/^  static constexpr DeviceType id = DeviceType::Serial;$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	Kokkos_Threads.hpp	/^  static constexpr DeviceType id = DeviceType::Threads;$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	OpenACC/Kokkos_OpenACC.hpp	/^  static constexpr DeviceType id =$/;"	m	struct:Kokkos::Tools::Experimental::DeviceTypeTraits	typeref:typename:DeviceType
id	OpenMP/Kokkos_OpenMP_Instance.cpp	/^constexpr DeviceType DeviceTypeTraits<OpenMP>::id;$/;"	m	class:Kokkos::Tools::Experimental::DeviceTypeTraits<OpenMP>	typeref:typename:DeviceType
id	Serial/Kokkos_Serial.cpp	/^constexpr DeviceType DeviceTypeTraits<Serial>::id;$/;"	m	class:Kokkos::Tools::Experimental::DeviceTypeTraits<Serial>	typeref:typename:DeviceType
id	Threads/Kokkos_ThreadsExec.cpp	/^constexpr DeviceType DeviceTypeTraits<Threads>::id;$/;"	m	class:Kokkos::Tools::Experimental::DeviceTypeTraits<Threads>	typeref:typename:DeviceType
idForInstance	impl/Kokkos_Profiling.hpp	/^uint32_t idForInstance(const uintptr_t instance) {$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:uint32_t
id_in_sg	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const auto id_in_sg = sg.get_local_id()[0];$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:const auto
identifier_from_devid	impl/Kokkos_Profiling_Interface.hpp	/^inline ExecutionSpaceIdentifier identifier_from_devid(const uint32_t in) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:ExecutionSpaceIdentifier
identity	impl/Kokkos_Utilities.hpp	/^struct identity {$/;"	s	namespace:Kokkos::Impl
identity_t	impl/Kokkos_Utilities.hpp	/^using identity_t = typename identity<T>::type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:identity<T>::type
idx_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using idx_type  = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Policy::index_type
iend	Kokkos_ExecPolicy.hpp	/^  KOKKOS_INLINE_FUNCTION static iType iend(const iType& arg_begin,$/;"	f	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION iType
iend	Kokkos_ExecPolicy.hpp	/^  KOKKOS_INLINE_FUNCTION static iType iend(const iType& arg_begin,$/;"	f	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:KOKKOS_INLINE_FUNCTION iType
if_c	impl/Kokkos_Traits.hpp	/^struct if_c {$/;"	s	namespace:Kokkos::Impl
if_c	impl/Kokkos_Traits.hpp	/^struct if_c<false, TrueType, void> {$/;"	s	namespace:Kokkos::Impl
if_c	impl/Kokkos_Traits.hpp	/^struct if_c<true, TrueType, FalseType> {$/;"	s	namespace:Kokkos::Impl
if_c	impl/Kokkos_Traits.hpp	/^struct if_c<true, void, FalseType> {$/;"	s	namespace:Kokkos::Impl
iff_single_thread_recursive_execute	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^    iff_single_thread_recursive_execute($/;"	f	class:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget	typeref:typename:void
ignore	impl/Kokkos_FixedBufferMemoryPool.hpp	/^      char ignore;$/;"	m	union:Kokkos::Impl::FixedBlockSizeMemoryPool::Block::__anon19497b0a010a	typeref:typename:char
ileague	Serial/Kokkos_Serial_Parallel_Team.hpp	/^    for (int ileague = 0; ileague < m_league; ++ileague) {$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
ileague	Serial/Kokkos_Serial_Parallel_Team.hpp	/^    for (int ileague = 0; ileague < m_league; ++ileague) {$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
im_	Kokkos_Complex.hpp	/^  RealType im_{};$/;"	m	class:Kokkos::complex	typeref:typename:RealType
imag	Kokkos_Complex.hpp	/^  RealType imag() const volatile noexcept { return im_; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
imag	Kokkos_Complex.hpp	/^  constexpr RealType imag() const noexcept { return im_; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
imag	Kokkos_Complex.hpp	/^  constexpr RealType& imag() noexcept { return im_; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION RealType &
imag	Kokkos_Complex.hpp	/^  constexpr void imag(RealType v) noexcept { im_ = v; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION void
imag	Kokkos_Complex.hpp	/^  volatile RealType& imag() volatile noexcept { return im_; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION volatile RealType &
imag	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION RealType imag(const complex<RealType>& x) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
imag	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION constexpr Impl::promote_t<ArithmeticType> imag($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::promote_t<ArithmeticType>
impl_acquire	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  __device__ size_type impl_acquire() const {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:__device__ size_type
impl_acquire	HIP/Kokkos_HIP_UniqueToken.hpp	/^  __device__ size_type impl_acquire() const {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:__device__ size_type
impl_acquire	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  size_type impl_acquire() const {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
impl_allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaHostPinnedSpace::impl_allocate($/;"	f	class:Kokkos::CudaHostPinnedSpace	typeref:typename:void *
impl_allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaSpace::impl_allocate($/;"	f	class:Kokkos::CudaSpace	typeref:typename:void *
impl_allocate	Cuda/Kokkos_CudaSpace.cpp	/^void *CudaUVMSpace::impl_allocate($/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:void *
impl_allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPHostPinnedSpace::impl_allocate($/;"	f	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:void *
impl_allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPManagedSpace::impl_allocate($/;"	f	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:void *
impl_allocate	HIP/Kokkos_HIP_Space.cpp	/^void* HIPSpace::impl_allocate($/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:void *
impl_allocate	Kokkos_LogicalSpaces.hpp	/^  void* impl_allocate(const char* arg_label, const size_t arg_alloc_size,$/;"	f	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:void *
impl_allocate	OpenACC/Kokkos_OpenACCSpace.cpp	/^void *Kokkos::Experimental::OpenACCSpace::impl_allocate($/;"	f	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:void *
impl_allocate	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^void* OpenMPTargetSpace::impl_allocate($/;"	f	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:void *
impl_allocate	impl/Kokkos_HBWSpace.cpp	/^void *HBWSpace::impl_allocate($/;"	f	class:Kokkos::Experimental::HBWSpace	typeref:typename:void *
impl_allocate	impl/Kokkos_HostSpace.cpp	/^void *HostSpace::impl_allocate($/;"	f	class:Kokkos::HostSpace	typeref:typename:void *
impl_allocate_common	Cuda/Kokkos_CudaSpace.cpp	/^void *impl_allocate_common(const Cuda &exec_space, const char *arg_label,$/;"	f	namespace:Kokkos::__anonebf75d1c0310	typeref:typename:void *
impl_auto_team_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline bool impl_auto_team_size() const { return m_tune_team; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_team_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline bool impl_auto_team_size() const { return m_tune_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_team_size	Kokkos_HPX.hpp	/^  inline bool impl_auto_team_size() noexcept { return false; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_team_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline bool impl_auto_team_size() const { return m_tune_team; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_team_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline bool impl_auto_team_size() const { return m_tune_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_team_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline bool impl_auto_team_size() const { return m_tune_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_team_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline bool impl_auto_team_size() const { return false; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_team_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline bool impl_auto_team_size() const { return m_tune_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_vector_length	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline bool impl_auto_vector_length() const { return m_tune_vector; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_vector_length	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline bool impl_auto_vector_length() const { return m_tune_vector_length; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_vector_length	Kokkos_HPX.hpp	/^  inline bool impl_auto_vector_length() noexcept { return false; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_vector_length	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline bool impl_auto_vector_length() const { return m_tune_vector; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_vector_length	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline bool impl_auto_vector_length() const { return m_tune_vector_length; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_vector_length	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline bool impl_auto_vector_length() const { return m_tune_vector_length; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_vector_length	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline bool impl_auto_vector_length() const { return false; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_auto_vector_length	Threads/Kokkos_ThreadsTeam.hpp	/^  inline bool impl_auto_vector_length() const { return m_tune_vector_length; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
impl_avoid_sfinae_warning	Cuda/Kokkos_Cuda_Team.hpp	/^  bool impl_avoid_sfinae_warning() const noexcept {$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:bool
impl_avoid_sfinae_warning	HIP/Kokkos_HIP_Team.hpp	/^  bool impl_avoid_sfinae_warning() const noexcept {$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:bool
impl_avoid_sfinae_warning	SYCL/Kokkos_SYCL_Team.hpp	/^  bool impl_avoid_sfinae_warning() const noexcept {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:bool
impl_backoff_wait_until_equal	impl/Kokkos_HostBarrier.cpp	/^void HostBarrier::impl_backoff_wait_until_equal($/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:void
impl_change_tile_size	KokkosExp_MDRangePolicy.hpp	/^  void impl_change_tile_size(const point_type& tile) {$/;"	f	struct:Kokkos::MDRangePolicy	typeref:typename:void
impl_deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaHostPinnedSpace::impl_deallocate($/;"	f	class:Kokkos::CudaHostPinnedSpace	typeref:typename:void
impl_deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaSpace::impl_deallocate($/;"	f	class:Kokkos::CudaSpace	typeref:typename:void
impl_deallocate	Cuda/Kokkos_CudaSpace.cpp	/^void CudaUVMSpace::impl_deallocate($/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:void
impl_deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPHostPinnedSpace::impl_deallocate($/;"	f	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:void
impl_deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPManagedSpace::impl_deallocate($/;"	f	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:void
impl_deallocate	HIP/Kokkos_HIP_Space.cpp	/^void HIPSpace::impl_deallocate($/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:void
impl_deallocate	Kokkos_LogicalSpaces.hpp	/^  void impl_deallocate(const char* arg_label, void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:void
impl_deallocate	OpenACC/Kokkos_OpenACCSpace.cpp	/^void Kokkos::Experimental::OpenACCSpace::impl_deallocate($/;"	f	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:void
impl_deallocate	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^void OpenMPTargetSpace::impl_deallocate($/;"	f	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:void
impl_deallocate	impl/Kokkos_HBWSpace.cpp	/^void HBWSpace::impl_deallocate($/;"	f	class:Kokkos::Experimental::HBWSpace	typeref:typename:void
impl_deallocate	impl/Kokkos_HostSpace.cpp	/^void HostSpace::impl_deallocate($/;"	f	class:Kokkos::HostSpace	typeref:typename:void
impl_decrement_active_parallel_region_count	Kokkos_HPX.hpp	/^  static void impl_decrement_active_parallel_region_count() {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:void
impl_default_instance_id	Kokkos_HPX.hpp	/^  static constexpr uint32_t impl_default_instance_id() { return 1; }$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:uint32_t
impl_execute	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline void impl_execute() {$/;"	f	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:void
impl_execute	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  void impl_execute($/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:void
impl_execute	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  void impl_execute(const PostFunctor& post_functor) {$/;"	f	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:void
impl_finalize	Cuda/Kokkos_Cuda_Instance.cpp	/^void Cuda::impl_finalize() { Impl::CudaInternal::singleton().finalize(); }$/;"	f	class:Kokkos::Cuda	typeref:typename:void
impl_finalize	HIP/Kokkos_HIP_Space.cpp	/^void HIP::impl_finalize() { Impl::HIPInternal::singleton().finalize(); }$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:void
impl_finalize	HPX/Kokkos_HPX.cpp	/^void HPX::impl_finalize() {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:void
impl_finalize	OpenACC/Kokkos_OpenACC.cpp	/^void Kokkos::Experimental::OpenACC::impl_finalize() {$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:void
impl_finalize	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMP::impl_finalize() { Impl::OpenMPInternal::singleton().finalize(); }$/;"	f	class:Kokkos::OpenMP	typeref:typename:void
impl_finalize	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTarget::impl_finalize() {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:void
impl_finalize	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTargetInternal::impl_finalize() {$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:void
impl_finalize	SYCL/Kokkos_SYCL.cpp	/^void SYCL::impl_finalize() { Impl::SYCLInternal::singleton().finalize(); }$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:void
impl_finalize	Serial/Kokkos_Serial.cpp	/^void Serial::impl_finalize() { Impl::SerialInternal::singleton().finalize(); }$/;"	f	class:Kokkos::Serial	typeref:typename:void
impl_finalize	Threads/Kokkos_ThreadsExec.hpp	/^inline void Threads::impl_finalize() { Impl::ThreadsExec::finalize(); }$/;"	f	class:Kokkos::Threads	typeref:typename:void
impl_get_buffer	Kokkos_HPX.hpp	/^  Kokkos::Impl::thread_buffer &impl_get_buffer() const noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:Kokkos::Impl::thread_buffer &
impl_get_current_max_threads	OpenMP/Kokkos_OpenMP_Instance.cpp	/^int OpenMP::impl_get_current_max_threads() noexcept {$/;"	f	class:Kokkos::OpenMP	typeref:typename:int
impl_get_desired_occupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^  Kokkos::Experimental::DesiredOccupancy impl_get_desired_occupancy() const {$/;"	f	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:Kokkos::Experimental::DesiredOccupancy
impl_get_executor	Kokkos_HPX.hpp	/^  static hpx::execution::parallel_executor impl_get_executor() {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:hpx::execution::parallel_executor
impl_get_future	Kokkos_HPX.hpp	/^  hpx::shared_future<void> &impl_get_future() const noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:hpx::shared_future<void> &
impl_get_future_mutex	Kokkos_HPX.hpp	/^  hpx::spinlock &impl_get_future_mutex() const noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:hpx::spinlock &
impl_get_instance_id	Cuda/Kokkos_Cuda_Instance.cpp	/^uint32_t CudaInternal::impl_get_instance_id() const { return m_instance_id; }$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:uint32_t
impl_get_instance_id	HIP/Kokkos_HIP_Instance.cpp	/^uint32_t HIPInternal::impl_get_instance_id() const noexcept {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:uint32_t
impl_get_instance_id	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^uint32_t OpenMPTargetInternal::impl_get_instance_id() const noexcept {$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:uint32_t
impl_get_instance_id	SYCL/Kokkos_SYCL_Instance.cpp	/^uint32_t SYCLInternal::impl_get_instance_id() const { return m_instance_id; }$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:uint32_t
impl_get_occupancy_control	traits/Kokkos_OccupancyControlTrait.hpp	/^    static constexpr occupancy_control impl_get_occupancy_control() {$/;"	f	struct:Kokkos::Impl::OccupancyControlTrait::base_traits	typeref:typename:occupancy_control
impl_get_occupancy_control	traits/Kokkos_OccupancyControlTrait.hpp	/^  constexpr occupancy_control impl_get_occupancy_control() const {$/;"	f	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:occupancy_control
impl_hardware_thread_id	Kokkos_HPX.hpp	/^  static int impl_hardware_thread_id() noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:int
impl_hardware_thread_id	Kokkos_Serial.hpp	/^  KOKKOS_INLINE_FUNCTION static unsigned impl_hardware_thread_id() {$/;"	f	class:Kokkos::Serial	typeref:typename:KOKKOS_INLINE_FUNCTION unsigned
impl_hardware_thread_id	Kokkos_Threads.hpp	/^  KOKKOS_INLINE_FUNCTION static unsigned impl_hardware_thread_id() {$/;"	f	class:Kokkos::Threads	typeref:typename:KOKKOS_INLINE_FUNCTION unsigned
impl_hardware_thread_id	OpenMP/Kokkos_OpenMP_Instance.hpp	/^int OpenMP::impl_hardware_thread_id() noexcept {$/;"	f	class:Kokkos::OpenMP	typeref:typename:KOKKOS_INLINE_FUNCTION int
impl_increment_active_parallel_region_count	Kokkos_HPX.hpp	/^  static void impl_increment_active_parallel_region_count() {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:void
impl_initialize	Cuda/Kokkos_Cuda_Instance.cpp	/^void Cuda::impl_initialize(InitializationSettings const &settings) {$/;"	f	class:Kokkos::Cuda	typeref:typename:void
impl_initialize	HIP/Kokkos_HIP_Space.cpp	/^void HIP::impl_initialize(InitializationSettings const& settings) {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:void
impl_initialize	HPX/Kokkos_HPX.cpp	/^void HPX::impl_initialize(InitializationSettings const &settings) {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:void
impl_initialize	OpenACC/Kokkos_OpenACC.cpp	/^void Kokkos::Experimental::OpenACC::impl_initialize($/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:void
impl_initialize	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMP::impl_initialize(InitializationSettings const &settings) {$/;"	f	class:Kokkos::OpenMP	typeref:typename:void
impl_initialize	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTarget::impl_initialize(InitializationSettings const& settings) {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:void
impl_initialize	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTargetInternal::impl_initialize() {$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:void
impl_initialize	SYCL/Kokkos_SYCL.cpp	/^void SYCL::impl_initialize(InitializationSettings const& settings) {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:void
impl_initialize	Serial/Kokkos_Serial.cpp	/^void Serial::impl_initialize(InitializationSettings const&) {$/;"	f	class:Kokkos::Serial	typeref:typename:void
impl_initialize	Threads/Kokkos_ThreadsExec.hpp	/^inline void Threads::impl_initialize(InitializationSettings const &settings) {$/;"	f	class:Kokkos::Threads	typeref:typename:void
impl_instance	Threads/Kokkos_ThreadsExec.cpp	/^Threads &Threads::impl_instance(int) {$/;"	f	class:Kokkos::Threads	typeref:typename:Threads &
impl_instance_id	Cuda/Kokkos_Cuda_Instance.cpp	/^uint32_t Cuda::impl_instance_id() const noexcept {$/;"	f	class:Kokkos::Cuda	typeref:typename:uint32_t
impl_instance_id	HIP/Kokkos_HIP_Space.cpp	/^uint32_t HIP::impl_instance_id() const noexcept {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:uint32_t
impl_instance_id	Kokkos_HPX.hpp	/^  uint32_t impl_instance_id() const noexcept { return m_instance_id; }$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:uint32_t
impl_instance_id	Kokkos_OpenMP.hpp	/^  uint32_t impl_instance_id() const noexcept { return 1; }$/;"	f	class:Kokkos::OpenMP	typeref:typename:uint32_t
impl_instance_id	Kokkos_SYCL.hpp	/^  uint32_t impl_instance_id() const noexcept {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:uint32_t
impl_instance_id	Kokkos_Serial.hpp	/^  uint32_t impl_instance_id() const noexcept { return 1; }$/;"	f	class:Kokkos::Serial	typeref:typename:uint32_t
impl_instance_id	Kokkos_Threads.hpp	/^  uint32_t impl_instance_id() const noexcept { return 1; }$/;"	f	class:Kokkos::Threads	typeref:typename:uint32_t
impl_instance_id	OpenACC/Kokkos_OpenACC.cpp	/^uint32_t Kokkos::Experimental::OpenACC::impl_instance_id() const noexcept {$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:uint32_t
impl_instance_id	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^uint32_t OpenMPTarget::impl_instance_id() const noexcept {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:uint32_t
impl_internal_space_instance	Kokkos_Cuda.hpp	/^  inline Impl::CudaInternal* impl_internal_space_instance() const {$/;"	f	class:Kokkos::Cuda	typeref:typename:Impl::CudaInternal *
impl_internal_space_instance	Kokkos_HIP_Space.hpp	/^  inline Impl::HIPInternal* impl_internal_space_instance() const {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:Impl::HIPInternal *
impl_internal_space_instance	Kokkos_OpenMP.hpp	/^  Impl::OpenMPInternal* impl_internal_space_instance() const {$/;"	f	class:Kokkos::OpenMP	typeref:typename:Impl::OpenMPInternal *
impl_internal_space_instance	Kokkos_OpenMPTarget.hpp	/^  inline Impl::OpenMPTargetInternal* impl_internal_space_instance() const {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:Impl::OpenMPTargetInternal *
impl_internal_space_instance	Kokkos_SYCL.hpp	/^  inline Impl::SYCLInternal* impl_internal_space_instance() const {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:Impl::SYCLInternal *
impl_internal_space_instance	Kokkos_Serial.hpp	/^  Impl::SerialInternal* impl_internal_space_instance() const {$/;"	f	class:Kokkos::Serial	typeref:typename:Impl::SerialInternal *
impl_is_initialized	Cuda/Kokkos_Cuda_Instance.cpp	/^int Cuda::impl_is_initialized() {$/;"	f	class:Kokkos::Cuda	typeref:typename:int
impl_is_initialized	HIP/Kokkos_HIP_Space.cpp	/^int HIP::impl_is_initialized() {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:int
impl_is_initialized	HPX/Kokkos_HPX.cpp	/^bool HPX::impl_is_initialized() noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:bool
impl_is_initialized	OpenACC/Kokkos_OpenACC.cpp	/^bool Kokkos::Experimental::OpenACC::impl_is_initialized() {$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:bool
impl_is_initialized	OpenMP/Kokkos_OpenMP_Instance.hpp	/^inline bool OpenMP::impl_is_initialized() noexcept {$/;"	f	class:Kokkos::OpenMP	typeref:typename:bool
impl_is_initialized	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^int OpenMPTarget::impl_is_initialized() {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:int
impl_is_initialized	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^int OpenMPTargetInternal::impl_is_initialized() {$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:int
impl_is_initialized	SYCL/Kokkos_SYCL.cpp	/^bool SYCL::impl_is_initialized() {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:bool
impl_is_initialized	Serial/Kokkos_Serial.cpp	/^bool Serial::impl_is_initialized() {$/;"	f	class:Kokkos::Serial	typeref:typename:bool
impl_is_initialized	Threads/Kokkos_ThreadsExec.hpp	/^inline int Threads::impl_is_initialized() {$/;"	f	class:Kokkos::Threads	typeref:typename:int
impl_map	Kokkos_View.hpp	/^  impl_map() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION const Kokkos::Impl::ViewMapping<traits,typename traits::specialize> &
impl_max_hardware_threads	Kokkos_HPX.hpp	/^  static int impl_max_hardware_threads() noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:int
impl_max_hardware_threads	Kokkos_Serial.hpp	/^  inline static unsigned impl_max_hardware_threads() {$/;"	f	class:Kokkos::Serial	typeref:typename:unsigned
impl_max_hardware_threads	Kokkos_Threads.hpp	/^  inline static unsigned impl_max_hardware_threads() {$/;"	f	class:Kokkos::Threads	typeref:typename:unsigned
impl_max_hardware_threads	OpenMP/Kokkos_OpenMP_Instance.hpp	/^inline int OpenMP::impl_max_hardware_threads() noexcept {$/;"	f	class:Kokkos::OpenMP	typeref:typename:int
impl_range_policy	KokkosExp_MDRangePolicy.hpp	/^  using impl_range_policy =$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:RangePolicy<typename traits::execution_space,typename traits::schedule_type,typename traits::index_type>
impl_realloc	Kokkos_CopyViews.hpp	/^impl_realloc(Kokkos::View<T, P...>& v, const size_t n0, const size_t n1,$/;"	f	namespace:Kokkos
impl_realloc	Kokkos_CopyViews.hpp	/^impl_realloc(Kokkos::View<T, P...>& v,$/;"	f	namespace:Kokkos
impl_realloc	Kokkos_CopyViews.hpp	/^impl_realloc(Kokkos::View<T, P...>& v,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<!(std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutLeft>::value||std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutRight>::value||std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutStride>::value||is_layouttiled<typename Kokkos::View<T,P...>::array_layout>::value)>
impl_reduce_scratch	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION void* impl_reduce_scratch() const {$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void *
impl_resize	Kokkos_CopyViews.hpp	/^impl_resize(const Impl::ViewCtorProp<ViewCtorArgs...>& arg_prop,$/;"	f	namespace:Kokkos
impl_resize	Kokkos_CopyViews.hpp	/^impl_resize(const Impl::ViewCtorProp<ViewCtorArgs...>& arg_prop,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<!(std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutLeft>::value||std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutRight>::value||std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutStride>::value||is_layouttiled<typename Kokkos::View<T,P...>::array_layout>::value)>
impl_set_desired_occupancy	traits/Kokkos_OccupancyControlTrait.hpp	/^  void impl_set_desired_occupancy(occupancy_control desired_occupancy) {$/;"	f	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:void
impl_set_team_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline void impl_set_team_size(size_t team_size) { m_team_size = team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_team_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline void impl_set_team_size(size_t size) { m_team_size = size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_team_size	Kokkos_HPX.hpp	/^  inline void impl_set_team_size(int) noexcept {}$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_team_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline void impl_set_team_size(size_t new_team_size) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_team_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline void impl_set_team_size(const size_t size) { m_team_size = size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_team_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline void impl_set_team_size(size_t size) { m_team_size = size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_team_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline void impl_set_team_size(size_t) {}$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_team_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline void impl_set_team_size(size_t size) { init(m_league_size, size); }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_vector_length	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline void impl_set_vector_length(size_t vector_length) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_vector_length	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline void impl_set_vector_length(size_t size) { m_vector_length = size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_vector_length	Kokkos_HPX.hpp	/^  inline void impl_set_vector_length(int) noexcept {}$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_vector_length	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline void impl_set_vector_length(size_t) {}$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_vector_length	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline void impl_set_vector_length(const size_t length) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_vector_length	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline void impl_set_vector_length(size_t size) { m_vector_length = size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_vector_length	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline void impl_set_vector_length(size_t) {}$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_set_vector_length	Threads/Kokkos_ThreadsTeam.hpp	/^  inline void impl_set_vector_length(size_t \/**size*\/) {}$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
impl_singleton	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^OpenMPTargetInternal* OpenMPTargetInternal::impl_singleton() {$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:OpenMPTargetInternal *
impl_static_fence	Cuda/Kokkos_Cuda_Instance.cpp	/^void Cuda::impl_static_fence(const std::string &name) {$/;"	f	class:Kokkos::Cuda	typeref:typename:void
impl_static_fence	HIP/Kokkos_HIP_Space.cpp	/^void HIP::impl_static_fence(const std::string& name) {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:void
impl_static_fence	Kokkos_HPX.hpp	/^  static void impl_static_fence(const std::string &name) {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:void
impl_static_fence	Kokkos_Serial.hpp	/^  static void impl_static_fence(const std::string& name) {$/;"	f	class:Kokkos::Serial	typeref:typename:void
impl_static_fence	OpenACC/Kokkos_OpenACC.cpp	/^void Kokkos::Experimental::OpenACC::impl_static_fence(std::string const& name) {$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:void
impl_static_fence	OpenMP/Kokkos_OpenMP_Instance.hpp	/^inline void OpenMP::impl_static_fence(std::string const& name) {$/;"	f	class:Kokkos::OpenMP	typeref:typename:void
impl_static_fence	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTarget::impl_static_fence(const std::string& name) {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:void
impl_static_fence	SYCL/Kokkos_SYCL.cpp	/^void SYCL::impl_static_fence(const std::string& name) {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:void
impl_static_fence	Threads/Kokkos_ThreadsExec.hpp	/^inline void Threads::impl_static_fence(const std::string &name) {$/;"	f	class:Kokkos::Threads	typeref:typename:void
impl_sycl_info	SYCL/Kokkos_SYCL.cpp	/^std::ostream& SYCL::impl_sycl_info(std::ostream& os,$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:std::ostream &
impl_t	Kokkos_Graph.hpp	/^  using impl_t                       = Kokkos::Impl::GraphImpl<ExecutionSpace>;$/;"	t	struct:Kokkos::Experimental::Graph	typeref:typename:Kokkos::Impl::GraphImpl<ExecutionSpace>
impl_thread_pool_rank	Kokkos_HPX.hpp	/^  static int impl_thread_pool_rank() noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:int
impl_thread_pool_rank	Kokkos_Serial.hpp	/^  KOKKOS_INLINE_FUNCTION static int impl_thread_pool_rank() { return 0; }$/;"	f	class:Kokkos::Serial	typeref:typename:KOKKOS_INLINE_FUNCTION int
impl_thread_pool_rank	Kokkos_Threads.hpp	/^  static KOKKOS_FUNCTION int impl_thread_pool_rank() {$/;"	f	class:Kokkos::Threads	typeref:typename:KOKKOS_FUNCTION int
impl_thread_pool_rank	OpenMP/Kokkos_OpenMP_Instance.hpp	/^int OpenMP::impl_thread_pool_rank() noexcept {$/;"	f	class:Kokkos::OpenMP	typeref:typename:KOKKOS_INLINE_FUNCTION int
impl_thread_pool_rank_host	Threads/Kokkos_ThreadsExec.cpp	/^int Threads::impl_thread_pool_rank_host() {$/;"	f	class:Kokkos::Threads	typeref:typename:int
impl_thread_pool_size	Kokkos_HPX.hpp	/^  static int impl_thread_pool_size() noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:int
impl_thread_pool_size	Kokkos_HPX.hpp	/^  static int impl_thread_pool_size(int depth) {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:int
impl_thread_pool_size	Kokkos_Serial.hpp	/^  inline static int impl_thread_pool_size(int = 0) { return 1; }$/;"	f	class:Kokkos::Serial	typeref:typename:int
impl_thread_pool_size	OpenMP/Kokkos_OpenMP_Instance.hpp	/^inline int OpenMP::impl_thread_pool_size() noexcept {$/;"	f	class:Kokkos::OpenMP	typeref:typename:int
impl_thread_pool_size	OpenMP/Kokkos_OpenMP_Instance.hpp	/^inline int OpenMP::impl_thread_pool_size(int depth) {$/;"	f	class:Kokkos::OpenMP	typeref:typename:int
impl_thread_pool_size	Threads/Kokkos_ThreadsExec.cpp	/^int Threads::impl_thread_pool_size(int depth) {$/;"	f	class:Kokkos::Threads	typeref:typename:int
impl_track	Kokkos_View.hpp	/^  const Kokkos::Impl::SharedAllocationTracker& impl_track() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION const Kokkos::Impl::SharedAllocationTracker &
impl_tune_tile_size	KokkosExp_MDRangePolicy.hpp	/^  bool impl_tune_tile_size() const { return m_tune_tile_size; }$/;"	f	struct:Kokkos::MDRangePolicy	typeref:typename:bool
impl_type	Kokkos_Half.hpp	/^  using impl_type = FloatType;$/;"	t	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:FloatType
impl_vector_length	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline int impl_vector_length() const { return m_vector_length; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
impl_vector_length	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int impl_vector_length() const { return m_vector_length; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
impl_vector_length	Kokkos_HPX.hpp	/^  inline int impl_vector_length() noexcept { return 1; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
impl_vector_length	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int impl_vector_length() const { return 1; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
impl_vector_length	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline int impl_vector_length() const { return m_vector_length; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
impl_vector_length	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int impl_vector_length() const { return m_vector_length; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
impl_vector_length	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline int impl_vector_length() const { return 1; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
impl_vector_length	Threads/Kokkos_ThreadsTeam.hpp	/^  inline int impl_vector_length() const { return 1; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
impl_wait_until_equal_host	impl/Kokkos_HostBarrier.hpp	/^  static void impl_wait_until_equal_host(int* ptr, const int v,$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:void
implementation_base_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using implementation_base_t = GraphNodeBackendSpecificDetails<ExecutionSpace>;$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:GraphNodeBackendSpecificDetails<ExecutionSpace>
in	Kokkos_Crs.hpp	/^  InCrs in;$/;"	m	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:InCrs
in	Kokkos_Crs.hpp	/^  InCrs in;$/;"	m	class:Kokkos::Impl::GetCrsTransposeCounts	typeref:typename:InCrs
in_parallel	Kokkos_Cuda.hpp	/^  KOKKOS_INLINE_FUNCTION static int in_parallel() {$/;"	f	class:Kokkos::Cuda	typeref:typename:KOKKOS_INLINE_FUNCTION int
in_parallel	Kokkos_HIP_Space.hpp	/^  KOKKOS_INLINE_FUNCTION static int in_parallel() {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:KOKKOS_INLINE_FUNCTION int
in_parallel	Kokkos_HPX.hpp	/^  static bool in_parallel(HPX const & = HPX()) noexcept { return false; }$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:bool
in_parallel	Kokkos_HPX.hpp	/^  static bool in_parallel(HPX const &instance = HPX()) noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:bool
in_parallel	Kokkos_OpenMPTarget.hpp	/^  inline static bool in_parallel() { return omp_in_parallel(); }$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:bool
in_parallel	Kokkos_SYCL.hpp	/^  KOKKOS_INLINE_FUNCTION static int in_parallel() {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:KOKKOS_INLINE_FUNCTION int
in_parallel	Kokkos_Serial.hpp	/^  inline static int in_parallel() { return false; }$/;"	f	class:Kokkos::Serial	typeref:typename:int
in_parallel	OpenACC/Kokkos_OpenACC.hpp	/^  static bool in_parallel() { return acc_on_device(acc_device_not_host); }$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:bool
in_parallel	OpenMP/Kokkos_OpenMP_Instance.hpp	/^inline bool OpenMP::in_parallel(OpenMP const&) noexcept {$/;"	f	class:Kokkos::OpenMP	typeref:typename:bool
in_parallel	Threads/Kokkos_ThreadsExec.cpp	/^int ThreadsExec::in_parallel() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
in_parallel	Threads/Kokkos_ThreadsExec.hpp	/^inline int Threads::in_parallel() { return Impl::ThreadsExec::in_parallel(); }$/;"	f	class:Kokkos::Threads	typeref:typename:int
in_place_shfl	Cuda/Kokkos_Cuda_Vectorization.hpp	/^__device__ KOKKOS_IMPL_FORCEINLINE void in_place_shfl(Args&&... args) noexcept {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE void
in_place_shfl	HIP/Kokkos_HIP_Vectorization.hpp	/^__device__ KOKKOS_IMPL_FORCEINLINE void in_place_shfl(Args&&... args) noexcept {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE void
in_place_shfl_down	Cuda/Kokkos_Cuda_Vectorization.hpp	/^__device__ KOKKOS_IMPL_FORCEINLINE void in_place_shfl_down($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE void
in_place_shfl_down	HIP/Kokkos_HIP_Vectorization.hpp	/^__device__ KOKKOS_IMPL_FORCEINLINE void in_place_shfl_down($/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE void
in_place_shfl_down_fn	Cuda/Kokkos_Cuda_Vectorization.hpp	/^struct in_place_shfl_down_fn : in_place_shfl_op<in_place_shfl_down_fn> {$/;"	s	namespace:Kokkos::Impl
in_place_shfl_down_fn	HIP/Kokkos_HIP_Vectorization.hpp	/^struct in_place_shfl_down_fn : in_place_shfl_op<in_place_shfl_down_fn> {$/;"	s	namespace:Kokkos::Experimental::Impl
in_place_shfl_fn	Cuda/Kokkos_Cuda_Vectorization.hpp	/^struct in_place_shfl_fn : in_place_shfl_op<in_place_shfl_fn> {$/;"	s	namespace:Kokkos::Impl
in_place_shfl_fn	HIP/Kokkos_HIP_Vectorization.hpp	/^struct in_place_shfl_fn : in_place_shfl_op<in_place_shfl_fn> {$/;"	s	namespace:Kokkos::Experimental::Impl
in_place_shfl_op	Cuda/Kokkos_Cuda_Vectorization.hpp	/^struct in_place_shfl_op {$/;"	s	namespace:Kokkos::Impl
in_place_shfl_op	HIP/Kokkos_HIP_Vectorization.hpp	/^struct in_place_shfl_op {$/;"	s	namespace:Kokkos::Experimental::Impl
in_place_shfl_up	Cuda/Kokkos_Cuda_Vectorization.hpp	/^__device__ KOKKOS_IMPL_FORCEINLINE void in_place_shfl_up($/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE void
in_place_shfl_up	HIP/Kokkos_HIP_Vectorization.hpp	/^__device__ KOKKOS_IMPL_FORCEINLINE void in_place_shfl_up($/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE void
in_place_shfl_up_fn	Cuda/Kokkos_Cuda_Vectorization.hpp	/^struct in_place_shfl_up_fn : in_place_shfl_op<in_place_shfl_up_fn> {$/;"	s	namespace:Kokkos::Impl
in_place_shfl_up_fn	HIP/Kokkos_HIP_Vectorization.hpp	/^struct in_place_shfl_up_fn : in_place_shfl_op<in_place_shfl_up_fn> {$/;"	s	namespace:Kokkos::Experimental::Impl
inc	impl/Kokkos_Atomic_View.hpp	/^  void inc() const { Kokkos::atomic_increment(ptr); }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION void
increment	Kokkos_ExecPolicy.hpp	/^  enum { increment = 1 };$/;"	e	enum:Kokkos::Impl::TeamThreadRangeBoundariesStruct::__anond4a736210403
increment	Kokkos_ExecPolicy.hpp	/^  enum { increment = 1 };$/;"	e	enum:Kokkos::Impl::TeamVectorRangeBoundariesStruct::__anond4a736210503
increment	Kokkos_ExecPolicy.hpp	/^  enum { increment = 1 };$/;"	e	enum:Kokkos::Impl::ThreadVectorRangeBoundariesStruct::__anond4a736210603
increment	impl/Kokkos_SharedAlloc.cpp	/^void SharedAllocationRecord<void, void>::increment($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void
increment_reference_count	impl/Kokkos_TaskNode.hpp	/^  void increment_reference_count() {$/;"	f	class:Kokkos::Impl::ReferenceCountedBase	typeref:typename:KOKKOS_INLINE_FUNCTION void
independent	Kokkos_HPX.hpp	/^  enum class instance_mode { default_, independent };$/;"	e	enum:Kokkos::Experimental::HPX::instance_mode
index_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using index_type       = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::index_type
index_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using index_type       = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::index_type
index_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using index_type   = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::index_type
index_type	Cuda/Kokkos_Cuda_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:iType
index_type	Cuda/Kokkos_Cuda_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:iType
index_type	Cuda/Kokkos_Cuda_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:iType
index_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using index_type       = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::index_type
index_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using index_type       = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::index_type
index_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using index_type     = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::index_type
index_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using index_type     = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Policy::index_type
index_type	HIP/Kokkos_HIP_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:iType
index_type	HIP/Kokkos_HIP_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:iType
index_type	HIP/Kokkos_HIP_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:iType
index_type	KokkosExp_MDRangePolicy.hpp	/^  using index_type       = typename traits::index_type;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:traits::index_type
index_type	Kokkos_Concepts.hpp	/^  using index_type = IndexType;$/;"	t	struct:Kokkos::IndexType	typeref:typename:IndexType
index_type	Kokkos_Crs.hpp	/^  using index_type      = typename InCounts::size_type;$/;"	t	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:InCounts::size_type
index_type	Kokkos_Crs.hpp	/^  using index_type      = typename InCrs::size_type;$/;"	t	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:InCrs::size_type
index_type	Kokkos_Crs.hpp	/^  using index_type      = typename InCrs::size_type;$/;"	t	class:Kokkos::Impl::GetCrsTransposeCounts	typeref:typename:InCrs::size_type
index_type	Kokkos_ExecPolicy.hpp	/^  using index_type       = typename traits::index_type;$/;"	t	class:Kokkos::RangePolicy	typeref:typename:traits::index_type
index_type	Kokkos_ExecPolicy.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:iType
index_type	Kokkos_ExecPolicy.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:iType
index_type	Kokkos_ExecPolicy.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:iType
index_type	Kokkos_ExecPolicy.hpp	/^  using index_type = typename traits::index_type;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:traits::index_type
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MaxFirstLoc	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MaxLoc	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MinFirstLoc	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MinLoc	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type  = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::MinMaxLoc	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::FirstLoc	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::LastLoc	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::StdIsPartitioned	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_Parallel_Reduce.hpp	/^  using index_type = std::remove_cv_t<Index>;$/;"	t	struct:Kokkos::StdPartitionPoint	typeref:typename:std::remove_cv_t<Index>
index_type	Kokkos_WorkGraphPolicy.hpp	/^  using index_type       = typename traits::index_type;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:traits::index_type
index_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:iType
index_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:iType
index_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:iType
index_type	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    using index_type = typename Policy::index_type;$/;"	t	struct:Kokkos::Impl::ParallelFor::BarePolicy	typeref:typename:Policy::index_type
index_type	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  using index_type       = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::index_type
index_type	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^              using index_type       = typename Policy::index_type;$/;"	t	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anond8fa09340302::__anond8fa09340402	typeref:typename:Policy::index_type
index_type	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^          using index_type = typename Policy::index_type;$/;"	t	function:Kokkos::Impl::ParallelReduce::sycl_direct_launch::__anond8fa09340702::__anond8fa09340802	typeref:typename:Policy::index_type
index_type	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    using index_type = typename Policy::index_type;$/;"	t	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:Policy::index_type
index_type	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using index_type     = typename Policy::index_type;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Policy::index_type
index_type	SYCL/Kokkos_SYCL_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:iType
index_type	SYCL/Kokkos_SYCL_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:iType
index_type	SYCL/Kokkos_SYCL_Team.hpp	/^  using index_type = iType;$/;"	t	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:iType
index_type	impl/KokkosExp_Host_IterateTile.hpp	/^  using index_type = typename RP::index_type;$/;"	t	struct:Kokkos::Impl::HostIterateTile	typeref:typename:RP::index_type
index_type	impl/KokkosExp_IterateTileGPU.hpp	/^  using index_type         = typename PolicyType::index_type;$/;"	t	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:PolicyType::index_type
index_type	impl/KokkosExp_IterateTileGPU.hpp	/^  using index_type = typename PolicyType::index_type;$/;"	t	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:PolicyType::index_type
index_type	traits/Kokkos_IndexTypeTrait.hpp	/^    using index_type = dependent_policy_trait_default;$/;"	t	struct:Kokkos::Impl::IndexTypeTrait::base_traits	typeref:typename:dependent_policy_trait_default
index_type	traits/Kokkos_IndexTypeTrait.hpp	/^  using index_type = Kokkos::IndexType<IntegralIndexType>;$/;"	t	struct:Kokkos::Impl::IndexTypePolicyMixin	typeref:typename:Kokkos::IndexType<IntegralIndexType>
index_type_is_defaulted	traits/Kokkos_IndexTypeTrait.hpp	/^    static constexpr bool index_type_is_defaulted = true;$/;"	m	struct:Kokkos::Impl::IndexTypeTrait::base_traits	typeref:typename:bool
index_type_is_defaulted	traits/Kokkos_IndexTypeTrait.hpp	/^  static constexpr bool index_type_is_defaulted = false;$/;"	m	struct:Kokkos::Impl::IndexTypePolicyMixin	typeref:typename:bool
infinity_helper	Kokkos_NumericTraits.hpp	/^template <> struct infinity_helper<double> { static constexpr double value = HUGE_VAL; };$/;"	s	namespace:Kokkos::Experimental::Impl
infinity_helper	Kokkos_NumericTraits.hpp	/^template <> struct infinity_helper<float> { static constexpr float value = HUGE_VALF; };$/;"	s	namespace:Kokkos::Experimental::Impl
infinity_helper	Kokkos_NumericTraits.hpp	/^template <> struct infinity_helper<long double> { static constexpr long double value = HUGE_VALL/;"	s	namespace:Kokkos::Experimental::Impl
infinity_helper	Kokkos_NumericTraits.hpp	/^template <class> struct infinity_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
info_storage_type	impl/Kokkos_TaskNode.hpp	/^    using info_storage_type =$/;"	t	function:Kokkos::Impl::RunnableTaskBase::scheduling_info_as	typeref:typename:SchedulingInfoStorage<RunnableTaskBase,SchedulingInfo>
init	Kokkos_Crs.hpp	/^  void init(value_type& update) const { update = 0; }$/;"	f	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_HPX.hpp	/^  inline void init(const int league_size_request, const int team_size_request) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::BAnd	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::BOr	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::FirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::LAnd	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::LOr	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::LastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::Max	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MaxFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::Min	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MinFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MinLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MinMax	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::MinMaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::Prod	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::StdIsPartitioned	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::StdPartitionPoint	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	Kokkos_Parallel_Reduce.hpp	/^  void init(value_type& val) const {$/;"	f	struct:Kokkos::Sum	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline void init(const int league_size_request, const int team_size_request) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
init	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline void init(const int league_size_request, const int team_size_request,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
init	Threads/Kokkos_ThreadsTeam.hpp	/^  inline void init(const int league_size_request, const int team_size_request) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
init	impl/Kokkos_Combined_Reducer.hpp	/^  KOKKOS_FUNCTION constexpr void init(value_type& dest) const noexcept {$/;"	f	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:KOKKOS_FUNCTION void
init	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void init(F const* const f, ValueType* dst) {$/;"	f	struct:Kokkos::DeduceInitNoTag	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void init(F const* const f, ValueType* dst) {$/;"	f	struct:Kokkos::has_init_no_tag_function	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void init(F const* const f, ValueType* dst) {$/;"	f	struct:Kokkos::has_init_tag_function	typeref:typename:KOKKOS_INLINE_FUNCTION void
init	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_initFunction init;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_initFunction
initFunction	impl/Kokkos_Profiling_Interface.hpp	/^using initFunction           = Kokkos_Profiling_initFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_initFunction
init_helper	KokkosExp_MDRangePolicy.hpp	/^  void init_helper(Impl::TileSizeProperties properties) {$/;"	f	struct:Kokkos::MDRangePolicy	typeref:typename:void
init_lock_array_hbw_space	impl/Kokkos_HBWSpace.cpp	/^void init_lock_array_hbw_space() {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:void
init_lock_array_host_space	impl/Kokkos_HostSpace.cpp	/^void init_lock_array_host_space() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
init_lock_array_kernel_atomic	Cuda/Kokkos_Cuda_Locks.cpp	/^__global__ void init_lock_array_kernel_atomic() {$/;"	f	namespace:Kokkos::__anon383dd5eb0110	typeref:typename:__global__ void
init_lock_array_kernel_atomic	HIP/Kokkos_HIP_Locks.cpp	/^__global__ void init_lock_array_kernel_atomic() {$/;"	f	namespace:Kokkos::__anona0068bd30110	typeref:typename:__global__ void
initial	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline void initial() const {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:__device__ void
initial	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline void initial() const {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:__device__ void
initial	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  __device__ inline void initial() const {$/;"	f	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:__device__ void
initial_team_scheduler_info	impl/Kokkos_MultipleTaskQueue.hpp	/^  team_scheduler_info_type initial_team_scheduler_info(int rank_in_league) const$/;"	f	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION team_scheduler_info_type
initial_team_scheduler_info	impl/Kokkos_SingleTaskQueue.hpp	/^  constexpr team_scheduler_info_type initial_team_scheduler_info(int) const$/;"	f	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION team_scheduler_info_type
initialize	Cuda/Kokkos_Cuda_Instance.cpp	/^void CudaInternal::initialize(int cuda_device_id, cudaStream_t stream,$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:void
initialize	HIP/Kokkos_HIP_Instance.cpp	/^void HIPInternal::initialize(int hip_device_id, hipStream_t stream,$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:void
initialize	OpenACC/Kokkos_OpenACC_Instance.cpp	/^void Kokkos::Experimental::Impl::OpenACCInternal::initialize($/;"	f	class:Kokkos::Experimental::Impl::OpenACCInternal	typeref:typename:void
initialize	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMPInternal::initialize(int thread_count) {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:void
initialize	SYCL/Kokkos_SYCL_Instance.cpp	/^void SYCLInternal::initialize(const sycl::device& d) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:void
initialize	SYCL/Kokkos_SYCL_Instance.cpp	/^void SYCLInternal::initialize(const sycl::queue& q) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:void
initialize	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  void initialize() {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:void
initialize	Serial/Kokkos_Serial.cpp	/^void SerialInternal::initialize() {$/;"	f	class:Kokkos::Impl::SerialInternal	typeref:typename:void
initialize	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::initialize(int thread_count_arg) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
initialize	impl/Kokkos_Core.cpp	/^void Kokkos::initialize(InitializationSettings const& settings) {$/;"	f	class:Kokkos	typeref:typename:void
initialize	impl/Kokkos_Core.cpp	/^void Kokkos::initialize(int& argc, char* argv[]) {$/;"	f	class:Kokkos	typeref:typename:void
initialize	impl/Kokkos_ExecSpaceManager.hpp	/^  void initialize(InitializationSettings const& settings) final {$/;"	f	struct:Kokkos::Impl::ExecSpaceDerived	typeref:typename:void
initialize	impl/Kokkos_Profiling.cpp	/^void initialize(const InitArguments& arguments) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
initialize	impl/Kokkos_Profiling.cpp	/^void initialize(const std::string& profileLibrary) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
initialize	impl/Kokkos_Profiling.cpp	/^void initialize(const std::string& profileLibrary) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
initialize	impl/Kokkos_Profiling.cpp	/^void initialize(int argc, char* argv[]) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
initialize	impl/Kokkos_ViewCtor.hpp	/^    initialize = !Kokkos::Impl::has_type<WithoutInitializing_t, P...>::value$/;"	e	enum:Kokkos::Impl::ViewCtorProp::__anon595f3ce00703
initialize_backends	impl/Kokkos_Core.cpp	/^void initialize_backends(const Kokkos::InitializationSettings& settings) {$/;"	f	namespace:__anon5875dff10210	typeref:typename:void
initialize_finalize_t	impl/Kokkos_ExecSpaceManager.hpp	/^using initialize_finalize_t = std::enable_if_t<$/;"	t	namespace:__anonc657ed790110
initialize_host_cuda_lock_arrays	Cuda/Kokkos_Cuda_Locks.cpp	/^void initialize_host_cuda_lock_arrays() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
initialize_host_hip_lock_arrays	HIP/Kokkos_HIP_Locks.cpp	/^void initialize_host_hip_lock_arrays() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
initialize_internal	impl/Kokkos_Core.cpp	/^void initialize_internal(const Kokkos::InitializationSettings& settings) {$/;"	f	namespace:__anon5875dff10210	typeref:typename:void
initialize_profiling	impl/Kokkos_Core.cpp	/^void initialize_profiling(const Kokkos::Tools::InitArguments& args) {$/;"	f	namespace:__anon5875dff10210	typeref:typename:void
initialize_scheduling_info_from_predecessor	impl/Kokkos_TaskQueueCommon.hpp	/^  KOKKOS_INLINE_FUNCTION void initialize_scheduling_info_from_predecessor($/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION void
initialize_scheduling_info_from_team_scheduler_info	impl/Kokkos_TaskQueueCommon.hpp	/^  initialize_scheduling_info_from_team_scheduler_info($/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION void
initialize_space_factory	impl/Kokkos_ExecSpaceManager.hpp	/^int initialize_space_factory(std::string name) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
initialize_spaces	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::ExecSpaceManager::initialize_spaces($/;"	f	class:Kokkos::Impl::ExecSpaceManager	typeref:typename:void
initialize_team_queues	impl/Kokkos_TaskQueue.hpp	/^  void initialize_team_queues(int \/*pool_size*\/) const noexcept {}$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION void
initialize_team_queues	impl/Kokkos_TaskQueueMultiple.hpp	/^  void initialize_team_queues(int arg_count,$/;"	f	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:void
initialize_team_queues	impl/Kokkos_TaskQueueMultiple.hpp	/^  void initialize_team_queues(int arg_league_size) const noexcept {$/;"	f	class:Kokkos::Impl::TaskQueueMultiple	typeref:typename:void
initialize_tools_subsystem	impl/Kokkos_Profiling.cpp	/^InitializationStatus initialize_tools_subsystem($/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:InitializationStatus
initialized	impl/Kokkos_TaskQueueMultiple.hpp	/^    team_queue_type initialized;$/;"	m	union:Kokkos::Impl::LeagueQueueCollection::optional_queue	typeref:typename:team_queue_type
initialized	impl/Kokkos_TaskQueueMultiple.hpp	/^  constexpr bool initialized() const noexcept {$/;"	f	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:KOKKOS_INLINE_FUNCTION bool
inner_direction	KokkosExp_MDRangePolicy.hpp	/^  static constexpr auto inner_direction =$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:auto
inner_direction	Kokkos_Rank.hpp	/^  static constexpr Iterate inner_direction = InnerDir;$/;"	m	struct:Kokkos::Rank	typeref:typename:Iterate
inner_direction	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    static constexpr Iterate inner_direction = Policy::inner_direction;$/;"	m	struct:Kokkos::Impl::ParallelFor::BarePolicy	typeref:typename:Iterate
inner_direction	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    static constexpr Iterate inner_direction = Policy::inner_direction;$/;"	m	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:Iterate
inner_iteration_pattern	Kokkos_CopyViews.hpp	/^  static const Kokkos::Iterate inner_iteration_pattern =$/;"	m	struct:Kokkos::Impl::ViewCopy	typeref:typename:const Kokkos::Iterate
inner_iteration_pattern	Kokkos_Layout.hpp	/^  static const Kokkos::Iterate inner_iteration_pattern = Kokkos::Iterate::Left;$/;"	m	struct:Kokkos::layout_iterate_type_selector	typeref:typename:const Kokkos::Iterate
inner_iteration_pattern	Kokkos_Layout.hpp	/^  static const Kokkos::Iterate inner_iteration_pattern = Kokkos::Iterate::Right;$/;"	m	struct:Kokkos::layout_iterate_type_selector	typeref:typename:const Kokkos::Iterate
inner_iteration_pattern	Kokkos_Layout.hpp	/^  static const Kokkos::Iterate inner_iteration_pattern =$/;"	m	struct:Kokkos::layout_iterate_type_selector	typeref:typename:const Kokkos::Iterate
inner_pattern	Kokkos_Layout.hpp	/^  static constexpr Iterate inner_pattern = InnerP;$/;"	m	struct:Kokkos::Experimental::LayoutTiled	typeref:typename:Iterate
inner_pattern	impl/Kokkos_ViewLayoutTiled.hpp	/^    Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::inner_pattern;$/;"	m	class:Kokkos::Impl::ViewOffset< Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:Kokkos::Iterate
inputTypeDeclarationFunction	impl/Kokkos_Profiling_Interface.hpp	/^using inputTypeDeclarationFunction = Kokkos_Tools_inputTypeDeclarationFunction;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_inputTypeDeclarationFunction
input_type	Kokkos_TaskScheduler.hpp	/^    using input_type = decltype(func(0));$/;"	t	function:Kokkos::BasicTaskScheduler::when_all
instance_data	Kokkos_HPX.hpp	/^    instance_data(hpx::shared_future<void> future) : m_future(future) {}$/;"	f	struct:Kokkos::Experimental::HPX::instance_data
instance_data	Kokkos_HPX.hpp	/^  struct instance_data {$/;"	s	class:Kokkos::Experimental::HPX
instance_id	OpenACC/Kokkos_OpenACC_Instance.cpp	/^uint32_t Kokkos::Experimental::Impl::OpenACCInternal::instance_id() const$/;"	f	class:Kokkos::Experimental::Impl::OpenACCInternal	typeref:typename:uint32_t
instance_id	impl/Kokkos_Profiling_Interface.hpp	/^  uint32_t instance_id;$/;"	m	struct:Kokkos::Tools::Experimental::ExecutionSpaceIdentifier	typeref:typename:uint32_t
instance_mode	Kokkos_HPX.hpp	/^  enum class instance_mode { default_, independent };$/;"	g	class:Kokkos::Experimental::HPX
int_for_synchronization_reason	impl/Kokkos_Profiling.hpp	/^inline uint32_t int_for_synchronization_reason($/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:uint32_t
int_log2	impl/Kokkos_BitOps.hpp	/^int int_log2(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
int_log2_device	impl/Kokkos_BitOps.hpp	/^inline int int_log2_device(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_DEVICE_FUNCTION int
int_log2_fallback	impl/Kokkos_BitOps.hpp	/^int int_log2_fallback(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
int_log2_host	impl/Kokkos_BitOps.hpp	/^inline int int_log2_host(unsigned i) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_IMPL_HOST_FUNCTION int
int_value	impl/Kokkos_Profiling_C_Interface.h	/^  int64_t int_value;$/;"	m	union:Kokkos_Tools_VariableValue_ValueUnion	typeref:typename:int64_t
int_value	impl/Kokkos_Profiling_C_Interface.h	/^  int64_t* int_value;$/;"	m	union:Kokkos_Tools_VariableValue_ValueUnionSet	typeref:typename:int64_t *
integral_nonzero_constant	impl/Kokkos_Traits.hpp	/^  KOKKOS_INLINE_FUNCTION integral_nonzero_constant(const T& v) : value(v) {}$/;"	f	struct:Kokkos::Impl::integral_nonzero_constant	typeref:typename:KOKKOS_INLINE_FUNCTION
integral_nonzero_constant	impl/Kokkos_Traits.hpp	/^  KOKKOS_INLINE_FUNCTION integral_nonzero_constant(const T&) {}$/;"	f	struct:Kokkos::Impl::integral_nonzero_constant	typeref:typename:KOKKOS_INLINE_FUNCTION
integral_nonzero_constant	impl/Kokkos_Traits.hpp	/^struct integral_nonzero_constant {$/;"	s	namespace:Kokkos::Impl
integral_nonzero_constant	impl/Kokkos_Traits.hpp	/^struct integral_nonzero_constant<T, zero, false> {$/;"	s	namespace:Kokkos::Impl
integral_power_of_two	impl/Kokkos_Traits.hpp	/^constexpr unsigned integral_power_of_two(const size_t N) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION unsigned
integral_power_of_two_assume_valid	impl/Kokkos_Traits.hpp	/^constexpr unsigned integral_power_of_two_assume_valid(const size_t N) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION unsigned
integral_power_of_two_that_contains	impl/Kokkos_BitOps.hpp	/^unsigned integral_power_of_two_that_contains(const unsigned N) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION unsigned
intermediate	Threads/Kokkos_ThreadsTeam.hpp	/^  ValueType intermediate;$/;"	v	namespace:Kokkos	typeref:typename:ValueType
internal_cppthread_driver	Threads/Kokkos_ThreadsExec.cpp	/^void internal_cppthread_driver() {$/;"	f	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:void
internal_fence	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::internal_fence(Impl::fence_is_static is_static) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
internal_fence	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::internal_fence(const std::string &name,$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
internal_policy	Kokkos_ExecPolicy.hpp	/^  using internal_policy = Impl::TeamPolicyInternal<$/;"	t	class:Kokkos::TeamPolicy	typeref:typename:Impl::TeamPolicyInternal<typename Impl::PolicyTraits<Properties...>::execution_space,Properties...>
internal_team_size_common	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int internal_team_size_common(const FunctorType& f,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_common	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int internal_team_size_common(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_common_reduce	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int internal_team_size_common_reduce(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_max	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int internal_team_size_max(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_max	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int internal_team_size_max(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_max_for	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int internal_team_size_max_for(const FunctorType& \/*f*\/) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_max_reduce	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int internal_team_size_max_reduce(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_recommended	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int internal_team_size_recommended(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_recommended	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int internal_team_size_recommended(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_recommended_for	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int internal_team_size_recommended_for(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
internal_team_size_recommended_reduce	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int internal_team_size_recommended_reduce(const FunctorType& f) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
intrusive_node_base_type	impl/Kokkos_LIFO.hpp	/^  using intrusive_node_base_type = SimpleSinglyLinkedListNode<>;$/;"	t	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:SimpleSinglyLinkedListNode<>
intrusive_task_base_type	impl/Kokkos_ChaseLev.hpp	/^  using intrusive_task_base_type = typename ready_queue_type<Task>::node_type;$/;"	t	struct:Kokkos::Impl::TaskQueueTraitsChaseLev	typeref:typename:ready_queue_type<Task>::node_type
intrusive_task_base_type	impl/Kokkos_LIFO.hpp	/^  using intrusive_task_base_type =$/;"	t	struct:Kokkos::Impl::TaskQueueTraitsLockBased	typeref:typename:ready_queue_type<Task>::intrusive_node_base_type
ints_type	Kokkos_WorkGraphPolicy.hpp	/^  using ints_type = Kokkos::View<std::int32_t*, memory_space>;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:Kokkos::View<std::int32_t *,memory_space>
invoke	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void invoke(ViewType &, const ViewType &) {}$/;"	f	struct:Kokkos::Experimental::Impl::invoke_subscriber_impl	typeref:typename:void
invoke	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void invoke(ViewType &self, const ViewType &other) {$/;"	f	struct:Kokkos::Experimental::Impl::invoke_subscriber_impl	typeref:typename:void
invoke_kernel	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  static void invoke_kernel(DriverType const& driver, dim3 const& grid,$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchKernelInvoker	typeref:typename:void
invoke_kernel	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static void invoke_kernel(DriverType const *driver, dim3 const &grid,$/;"	f	struct:Kokkos::Experimental::Impl::HIPParallelLaunchKernelInvoker	typeref:typename:void
invoke_kokkosp_callback	impl/Kokkos_Profiling.cpp	/^inline void invoke_kokkosp_callback($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
invoke_subscriber_impl	View/Hooks/Kokkos_ViewHooks.hpp	/^struct invoke_subscriber_impl<Invoker, Subscriber, RemSubscribers...> {$/;"	s	namespace:Kokkos::Experimental::Impl
invoke_subscriber_impl	View/Hooks/Kokkos_ViewHooks.hpp	/^struct invoke_subscriber_impl<Invoker> {$/;"	s	namespace:Kokkos::Experimental::Impl
is_aggregate	impl/Kokkos_TaskNode.hpp	/^  bool is_aggregate() const noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_aligned	Kokkos_MemoryTraits.hpp	/^  enum : bool { is_aligned = (unsigned(0) != (T & unsigned(Kokkos::Aligned))) };$/;"	e	enum:Kokkos::MemoryTraits::__anonda37d41c0503
is_allocated	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr bool is_allocated() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_always_assignable	Kokkos_View.hpp	/^using is_always_assignable = is_always_assignable_impl<$/;"	t	namespace:Kokkos	typeref:typename:is_always_assignable_impl<std::remove_reference_t<View1>,std::remove_const_t<std::remove_reference_t<View2>>>
is_always_assignable_v	Kokkos_View.hpp	/^inline constexpr bool is_always_assignable_v =$/;"	v	namespace:Kokkos	typeref:typename:bool
is_array_layout	Kokkos_Concepts.hpp	/^using is_array_layout KOKKOS_DEPRECATED = Kokkos::is_array_layout<T>;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::is_array_layout<T>
is_array_layout_tiled	impl/Kokkos_ViewLayoutTiled.hpp	/^struct is_array_layout_tiled : public std::false_type {};$/;"	s	namespace:Kokkos
is_array_reduction	Kokkos_Parallel_Reduce.hpp	/^  static constexpr bool is_array_reduction =$/;"	m	struct:Kokkos::Impl::ParallelReduceAdaptor	typeref:typename:bool
is_array_type	impl/KokkosExp_IterateTileGPU.hpp	/^struct is_array_type : std::false_type {$/;"	s	namespace:Kokkos::Impl::Reduce
is_array_type	impl/KokkosExp_IterateTileGPU.hpp	/^struct is_array_type<T*> : std::true_type {$/;"	s	namespace:Kokkos::Impl::Reduce
is_array_type	impl/KokkosExp_IterateTileGPU.hpp	/^struct is_array_type<T[]> : std::true_type {$/;"	s	namespace:Kokkos::Impl::Reduce
is_assignable	Kokkos_View.hpp	/^  enum : bool { is_assignable = false };$/;"	e	enum:Kokkos::Impl::ViewMapping::__anon8559ec870203
is_assignable	Kokkos_View.hpp	/^constexpr bool is_assignable(const Kokkos::View<ViewTDst...>& dst,$/;"	f	namespace:Kokkos	typeref:typename:bool
is_assignable_data_type	Kokkos_View.hpp	/^  enum : bool { is_assignable_data_type = false };$/;"	e	enum:Kokkos::Impl::ViewMapping::__anon8559ec870103
is_asynchronous	Kokkos_HPX.hpp	/^  static bool is_asynchronous(HPX const & = HPX()) noexcept {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:bool
is_asynchronous	OpenMP/Kokkos_OpenMP_Instance.hpp	/^inline bool OpenMP::is_asynchronous(OpenMP const& \/*instance*\/) noexcept {$/;"	f	class:Kokkos::OpenMP	typeref:typename:bool
is_atomic	Kokkos_MemoryTraits.hpp	/^  enum : bool { is_atomic = (unsigned(0) != (T & unsigned(Kokkos::Atomic))) };$/;"	e	enum:Kokkos::MemoryTraits::__anonda37d41c0303
is_compatible_type_erasure	impl/Kokkos_GraphImpl_Utilities.hpp	/^struct is_compatible_type_erasure : std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_compatible_type_erasure	impl/Kokkos_GraphImpl_Utilities.hpp	/^struct is_compatible_type_erasure<$/;"	s	namespace:Kokkos::Impl
is_compatible_type_erasure	impl/Kokkos_GraphImpl_Utilities.hpp	/^struct is_compatible_type_erasure<Kokkos::Experimental::TypeErasedTag,$/;"	s	namespace:Kokkos::Impl
is_compatible_type_erasure	impl/Kokkos_GraphImpl_Utilities.hpp	/^struct is_compatible_type_erasure<T, Kokkos::Experimental::TypeErasedTag>$/;"	s	namespace:Kokkos::Impl
is_compatible_type_erasure	impl/Kokkos_GraphImpl_Utilities.hpp	/^struct is_compatible_type_erasure<T, T> : std::true_type {};$/;"	s	namespace:Kokkos::Impl
is_consumed	impl/Kokkos_LIFO.hpp	/^  bool is_consumed() const noexcept {$/;"	f	class:Kokkos::Impl::SingleConsumeOperationLIFO	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_contiguous_reference	impl/Kokkos_ViewArray.hpp	/^    is_contiguous_reference =$/;"	e	enum:Kokkos::Impl::__anon883e8ee70403
is_cuda_type_space	Kokkos_CudaSpace.hpp	/^struct Impl::is_cuda_type_space<CudaHostPinnedSpace> : public std::true_type {};$/;"	s	class:Kokkos::Impl
is_cuda_type_space	Kokkos_CudaSpace.hpp	/^struct Impl::is_cuda_type_space<CudaSpace> : public std::true_type {};$/;"	s	class:Kokkos::Impl
is_cuda_type_space	Kokkos_CudaSpace.hpp	/^struct Impl::is_cuda_type_space<CudaUVMSpace> : public std::true_type {};$/;"	s	class:Kokkos::Impl
is_cuda_type_space	Kokkos_CudaSpace.hpp	/^struct is_cuda_type_space : public std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_default_map	Kokkos_View.hpp	/^  static constexpr bool is_default_map =$/;"	m	class:Kokkos::View	typeref:typename:bool
is_default_memory_trait	Kokkos_MemoryTraits.hpp	/^struct is_default_memory_trait : std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_detected	Kokkos_DetectionIdiom.hpp	/^using is_detected =$/;"	t	typeref:typename:Impl::detector<nonesuch,void,Op,Args...>::value_t
is_detected_convertible	Kokkos_DetectionIdiom.hpp	/^using is_detected_convertible =$/;"	t	typeref:typename:std::is_convertible<detected_t<Op,Args...>,To>
is_detected_convertible_v	Kokkos_DetectionIdiom.hpp	/^inline constexpr bool is_detected_convertible_v =$/;"	v	typeref:typename:bool
is_detected_exact	Kokkos_DetectionIdiom.hpp	/^using is_detected_exact = std::is_same<Expected, detected_t<Op, Args...>>;$/;"	t	typeref:typename:std::is_same<Expected,detected_t<Op,Args...>>
is_detected_exact_v	Kokkos_DetectionIdiom.hpp	/^inline constexpr bool is_detected_exact_v =$/;"	v	typeref:typename:bool
is_detected_v	Kokkos_DetectionIdiom.hpp	/^inline constexpr bool is_detected_v = is_detected<Op, Args...>::value;$/;"	v	typeref:typename:bool
is_dev	Kokkos_Concepts.hpp	/^  using is_dev = typename is_space<T>::template dev<std::remove_cv_t<T>>;$/;"	t	struct:Kokkos::is_space	typeref:typename:is_space<T>::template dev<std::remove_cv_t<T>>
is_device	Kokkos_Concepts.hpp	/^using is_device = typename Impl::is_device_helper<std::remove_cv_t<T>>::type;$/;"	t	namespace:Kokkos	typeref:typename:Impl::is_device_helper<std::remove_cv_t<T>>::type
is_device_copyable	SYCL/Kokkos_SYCL_Instance.hpp	/^struct sycl::is_device_copyable<$/;"	m	class:sycl	typeref:typename:struct
is_device_helper	Kokkos_Concepts.hpp	/^struct is_device_helper : std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_done	impl/Kokkos_TaskQueueCommon.hpp	/^  bool is_done() const noexcept {$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_dyn_rank_view_dup	KokkosExp_InterOp.hpp	/^struct is_dyn_rank_view_dup : public std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_dynamic	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^      is_dynamic = std::is_same<typename Policy::schedule_type::type,$/;"	e	enum:Kokkos::Impl::ParallelReduce::execute::__anona5536d250103
is_dynamic	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^      is_dynamic = std::is_same<typename Policy::schedule_type::type,$/;"	e	enum:Kokkos::Impl::ParallelReduce::execute::__anona5536d250203
is_dynamic	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    enum { is_dynamic = std::is_same<SchedTag, Kokkos::Dynamic>::value };$/;"	e	enum:Kokkos::Impl::ParallelFor::execute::__anona5536d250403
is_dynamic	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    enum { is_dynamic = std::is_same<SchedTag, Kokkos::Dynamic>::value };$/;"	e	enum:Kokkos::Impl::ParallelReduce::execute::__anona5536d250603
is_empty_launch	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^inline bool is_empty_launch(dim3 const& grid, dim3 const& block) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool
is_enqueued	impl/Kokkos_LinkedListNode.hpp	/^  bool is_enqueued() const noexcept {$/;"	f	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_enqueued	impl/Kokkos_LinkedListNode.hpp	/^  bool is_enqueued() const volatile noexcept {$/;"	f	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_exe	Kokkos_Concepts.hpp	/^  using is_exe = typename is_space<T>::template exe<std::remove_cv_t<T>>;$/;"	t	struct:Kokkos::is_space	typeref:typename:is_space<T>::template exe<std::remove_cv_t<T>>
is_execution_policy	Kokkos_Concepts.hpp	/^using is_execution_policy KOKKOS_DEPRECATED = Kokkos::is_execution_policy<T>;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::is_execution_policy<T>
is_execution_space	Kokkos_Concepts.hpp	/^using is_execution_space KOKKOS_DEPRECATED = Kokkos::is_execution_space<T>;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::is_execution_space<T>
is_extent_constructible	Kokkos_Layout.hpp	/^  enum : bool { is_extent_constructible = false };$/;"	e	enum:Kokkos::LayoutStride::__anon2adfd90a0403
is_extent_constructible	Kokkos_Layout.hpp	/^  enum : bool { is_extent_constructible = true };$/;"	e	enum:Kokkos::Experimental::LayoutTiled::__anon2adfd90a0d03
is_extent_constructible	Kokkos_Layout.hpp	/^  enum : bool { is_extent_constructible = true };$/;"	e	enum:Kokkos::LayoutLeft::__anon2adfd90a0203
is_extent_constructible	Kokkos_Layout.hpp	/^  enum : bool { is_extent_constructible = true };$/;"	e	enum:Kokkos::LayoutRight::__anon2adfd90a0303
is_finalized	impl/Kokkos_Core.cpp	/^KOKKOS_ATTRIBUTE_NODISCARD bool Kokkos::is_finalized() noexcept {$/;"	f	class:Kokkos	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD bool
is_future	Kokkos_Future.hpp	/^struct is_future : public std::false_type {};$/;"	s	namespace:Kokkos
is_future	Kokkos_Future.hpp	/^struct is_future<BasicFuture<ValueType, Scheduler>, ExecSpace>$/;"	s	namespace:Kokkos
is_graph_kernel	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^    using is_graph_kernel = std::true_type;$/;"	t	struct:Kokkos::Impl::CudaGraphNodeAggregateKernel::Policy	typeref:typename:std::true_type
is_graph_kernel	impl/Kokkos_Default_GraphNodeKernel.hpp	/^    using is_graph_kernel = std::true_type;$/;"	t	struct:Kokkos::Impl::GraphNodeAggregateKernelDefaultImpl::Policy	typeref:typename:std::true_type
is_graph_kernel	traits/Kokkos_GraphKernelTrait.hpp	/^    using is_graph_kernel = std::false_type;$/;"	t	struct:Kokkos::Impl::GraphKernelTrait::base_traits	typeref:typename:std::false_type
is_graph_kernel	traits/Kokkos_GraphKernelTrait.hpp	/^    using is_graph_kernel = std::true_type;$/;"	t	struct:Kokkos::Impl::GraphKernelTrait::mixin_matching_trait	typeref:typename:std::true_type
is_hip_type_space	Kokkos_HIP_Space.hpp	/^struct Impl::is_hip_type_space<Experimental::HIPHostPinnedSpace>$/;"	s	class:Kokkos::Impl
is_hip_type_space	Kokkos_HIP_Space.hpp	/^struct Impl::is_hip_type_space<Experimental::HIPManagedSpace>$/;"	s	class:Kokkos::Impl
is_hip_type_space	Kokkos_HIP_Space.hpp	/^struct Impl::is_hip_type_space<Experimental::HIPSpace> : public std::true_type {$/;"	s	class:Kokkos::Impl
is_hip_type_space	Kokkos_HIP_Space.hpp	/^struct is_hip_type_space : public std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_hostspace	Kokkos_View.hpp	/^  enum { is_hostspace = std::is_same<MemorySpace, HostSpace>::value };$/;"	e	enum:Kokkos::ViewTraits::__anon8559ec870503
is_initialized	Cuda/Kokkos_Cuda_Instance.hpp	/^  int is_initialized() const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:int
is_initialized	HIP/Kokkos_HIP_Instance.hpp	/^  int is_initialized() const { return m_hipDev >= 0; }$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
is_initialized	OpenACC/Kokkos_OpenACC_Instance.cpp	/^bool Kokkos::Experimental::Impl::OpenACCInternal::is_initialized() const {$/;"	f	class:Kokkos::Experimental::Impl::OpenACCInternal	typeref:typename:bool
is_initialized	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  bool is_initialized() const { return m_initialized; }$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:bool
is_initialized	SYCL/Kokkos_SYCL_Instance.hpp	/^  int is_initialized() const { return m_queue.has_value(); }$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:int
is_initialized	Serial/Kokkos_Serial.cpp	/^bool SerialInternal::is_initialized() { return m_is_initialized; }$/;"	f	class:Kokkos::Impl::SerialInternal	typeref:typename:bool
is_initialized	Threads/Kokkos_ThreadsExec.cpp	/^int ThreadsExec::is_initialized() { return nullptr != s_threads_exec[0]; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
is_initialized	impl/Kokkos_Core.cpp	/^KOKKOS_ATTRIBUTE_NODISCARD bool Kokkos::is_initialized() noexcept {$/;"	f	class:Kokkos	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD bool
is_inner_left	impl/Kokkos_ViewLayoutTiled.hpp	/^  static constexpr bool is_inner_left = (InnerP == Kokkos::Iterate::Left);$/;"	m	class:Kokkos::Impl::ViewMapping	typeref:typename:bool
is_integral_extent	impl/Kokkos_ViewMapping.hpp	/^struct is_integral_extent {$/;"	s	namespace:Kokkos::Impl
is_integral_extent_type	impl/Kokkos_ViewMapping.hpp	/^struct is_integral_extent_type {$/;"	s	namespace:Kokkos::Impl
is_integral_power_of_two	impl/Kokkos_Traits.hpp	/^constexpr bool is_integral_power_of_two(const size_t N) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_layout_left	Kokkos_View.hpp	/^  static constexpr bool is_layout_left =$/;"	m	class:Kokkos::View	typeref:typename:bool
is_layout_right	Kokkos_View.hpp	/^  static constexpr bool is_layout_right =$/;"	m	class:Kokkos::View	typeref:typename:bool
is_layout_stride	Kokkos_View.hpp	/^  static constexpr bool is_layout_stride =$/;"	m	class:Kokkos::View	typeref:typename:bool
is_layouttiled	Kokkos_Layout.hpp	/^struct is_layouttiled : std::false_type {};$/;"	s	namespace:Kokkos
is_less_than_value_initialized_variable	KokkosExp_MDRangePolicy.hpp	/^is_less_than_value_initialized_variable(T arg) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<std::is_signed<T>::value,bool>
is_managed	Kokkos_View.hpp	/^  enum { is_managed = MemoryTraits::is_unmanaged == 0 };$/;"	e	enum:Kokkos::ViewTraits::__anon8559ec870603
is_mem	Kokkos_Concepts.hpp	/^  using is_mem = typename is_space<T>::template mem<std::remove_cv_t<T>>;$/;"	t	struct:Kokkos::is_space	typeref:typename:is_space<T>::template mem<std::remove_cv_t<T>>
is_memory_space	Kokkos_Concepts.hpp	/^using is_memory_space KOKKOS_DEPRECATED = Kokkos::is_memory_space<T>;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::is_memory_space<T>
is_memory_traits	Kokkos_Concepts.hpp	/^using is_memory_traits KOKKOS_DEPRECATED = Kokkos::is_memory_traits<T>;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::is_memory_traits<T>
is_more_type_erased	impl/Kokkos_GraphImpl_Utilities.hpp	/^struct is_more_type_erased : std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_more_type_erased	impl/Kokkos_GraphImpl_Utilities.hpp	/^struct is_more_type_erased<Kokkos::Experimental::TypeErasedTag, T>$/;"	s	namespace:Kokkos::Impl
is_more_type_erased	impl/Kokkos_GraphImpl_Utilities.hpp	/^struct is_more_type_erased<Kokkos::Experimental::TypeErasedTag,$/;"	s	namespace:Kokkos::Impl
is_null	Kokkos_Future.hpp	/^  bool is_null() const { return nullptr == m_task; }$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_outer_left	impl/Kokkos_ViewLayoutTiled.hpp	/^  static constexpr bool is_outer_left = (OuterP == Kokkos::Iterate::Left);$/;"	m	class:Kokkos::Impl::ViewMapping	typeref:typename:bool
is_pair_like	Kokkos_Pair.hpp	/^struct is_pair_like : std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_process	Threads/Kokkos_ThreadsExec.cpp	/^bool ThreadsExec::is_process() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:bool
is_random_access	Kokkos_MemoryTraits.hpp	/^    is_random_access = (unsigned(0) != (T & unsigned(Kokkos::RandomAccess)))$/;"	e	enum:Kokkos::MemoryTraits::__anonda37d41c0203
is_random_access	Kokkos_View.hpp	/^  enum { is_random_access = MemoryTraits::is_random_access == 1 };$/;"	e	enum:Kokkos::ViewTraits::__anon8559ec870703
is_ready	Kokkos_Future.hpp	/^  int is_ready() const noexcept {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION int
is_reducer_type	Kokkos_Parallel_Reduce.hpp	/^using is_reducer_type KOKKOS_DEPRECATED_WITH_COMMENT($/;"	t	namespace:Kokkos	typeref:typename:Kokkos::is_reducer<T>
is_restrict	Kokkos_MemoryTraits.hpp	/^    is_restrict = (unsigned(0) != (T & unsigned(Kokkos::Restrict)))$/;"	e	enum:Kokkos::MemoryTraits::__anonda37d41c0403
is_runnable	impl/Kokkos_TaskNode.hpp	/^  bool is_runnable() const noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_runnable	impl/Kokkos_TaskNode.hpp	/^  bool is_runnable() const volatile noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_same_memspace	Kokkos_CopyViews.hpp	/^    is_same_memspace =$/;"	e	enum:Kokkos::Impl::MirrorType::__anon6f9042751b03
is_same_memspace	Kokkos_CopyViews.hpp	/^    is_same_memspace =$/;"	e	enum:Kokkos::Impl::MirrorViewType::__anon6f9042751a03
is_sane	impl/Kokkos_SharedAlloc.cpp	/^bool SharedAllocationRecord<void, void>::is_sane($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:bool
is_scheduler	Kokkos_TaskScheduler_fwd.hpp	/^struct is_scheduler : public std::false_type {};$/;"	s	namespace:Kokkos
is_single_runnable	impl/Kokkos_TaskNode.hpp	/^  bool is_single_runnable() const noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_space	Kokkos_Concepts.hpp	/^struct is_space {$/;"	s	namespace:Kokkos
is_space	Kokkos_Concepts.hpp	/^using is_space KOKKOS_DEPRECATED = Kokkos::is_space<T>;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::is_space<T>
is_specialization_of	impl/Kokkos_Utilities.hpp	/^struct is_specialization_of : std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_specialization_of	impl/Kokkos_Utilities.hpp	/^struct is_specialization_of<Template<Args...>, Template> : std::true_type {};$/;"	s	namespace:Kokkos::Impl
is_sycl_type_space	Kokkos_SYCL_Space.hpp	/^struct is_sycl_type_space : public std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_sycl_type_space	Kokkos_SYCL_Space.hpp	/^struct is_sycl_type_space<Kokkos::Experimental::SYCLDeviceUSMSpace>$/;"	s	namespace:Kokkos::Impl
is_sycl_type_space	Kokkos_SYCL_Space.hpp	/^struct is_sycl_type_space<Kokkos::Experimental::SYCLHostUSMSpace>$/;"	s	namespace:Kokkos::Impl
is_sycl_type_space	Kokkos_SYCL_Space.hpp	/^struct is_sycl_type_space<Kokkos::Experimental::SYCLSharedUSMSpace>$/;"	s	namespace:Kokkos::Impl
is_team_runnable	impl/Kokkos_TaskNode.hpp	/^  bool is_team_runnable() const noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
is_unmanaged	Kokkos_MemoryTraits.hpp	/^    is_unmanaged = (unsigned(0) != (T & unsigned(Kokkos::Unmanaged)))$/;"	e	enum:Kokkos::MemoryTraits::__anonda37d41c0103
is_unsigned_int	impl/Kokkos_Command_Line_Parsing.cpp	/^bool Kokkos::Impl::is_unsigned_int(const char* str) {$/;"	f	class:Kokkos::Impl	typeref:typename:bool
is_valid_device_id	impl/Kokkos_Core.cpp	/^bool is_valid_device_id(int x) { return x >= 0; }$/;"	f	namespace:__anon5875dff10110	typeref:typename:bool
is_valid_map_device_id_by	impl/Kokkos_Core.cpp	/^bool is_valid_map_device_id_by(std::string const& x) {$/;"	f	namespace:__anon5875dff10110	typeref:typename:bool
is_valid_num_threads	impl/Kokkos_Core.cpp	/^bool is_valid_num_threads(int x) { return x > 0; }$/;"	f	namespace:__anon5875dff10110	typeref:typename:bool
is_view	Kokkos_View.hpp	/^  enum : bool { is_view = (first_is_view && next_is_view) };$/;"	e	enum:Kokkos::Impl::DeduceCommonViewAllocProp::__anon8559ec872e03
is_view	Kokkos_View.hpp	/^  enum : bool { is_view = is_view<FirstView>::value };$/;"	e	enum:Kokkos::Impl::DeduceCommonViewAllocProp::__anon8559ec872b03
is_view	Kokkos_View.hpp	/^struct is_view : public std::false_type {};$/;"	s	namespace:Kokkos
is_view	Kokkos_View.hpp	/^using is_view KOKKOS_DEPRECATED_WITH_COMMENT("Use Kokkos::is_view instead!") =$/;"	t	namespace:Kokkos::Impl	typeref:typename:Kokkos::is_view<T>
is_view_ctor_property	impl/Kokkos_ViewCtor.hpp	/^struct is_view_ctor_property : public std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_view_ctor_property	impl/Kokkos_ViewCtor.hpp	/^struct is_view_ctor_property<AllowPadding_t> : public std::true_type {};$/;"	s	namespace:Kokkos::Impl
is_view_ctor_property	impl/Kokkos_ViewCtor.hpp	/^struct is_view_ctor_property<WithoutInitializing_t> : public std::true_type {};$/;"	s	namespace:Kokkos::Impl
is_view_label	impl/Kokkos_ViewCtor.hpp	/^struct is_view_label : public std::false_type {};$/;"	s	namespace:Kokkos::Impl
is_view_label	impl/Kokkos_ViewCtor.hpp	/^struct is_view_label<char[N]> : public std::true_type {};$/;"	s	namespace:Kokkos::Impl
is_view_label	impl/Kokkos_ViewCtor.hpp	/^struct is_view_label<const char[N]> : public std::true_type {};$/;"	s	namespace:Kokkos::Impl
is_view_label	impl/Kokkos_ViewCtor.hpp	/^struct is_view_label<std::string> : public std::true_type {};$/;"	s	namespace:Kokkos::Impl
isfinite	impl/Kokkos_QuadPrecisionMath.hpp	/^inline bool isfinite(__float128 x) { return !::isinfq(x); }  \/\/ isfiniteq not provided$/;"	f	namespace:Kokkos	typeref:typename:bool
isinf	impl/Kokkos_QuadPrecisionMath.hpp	/^inline bool isinf(__float128 x) { return ::isinfq(x); }$/;"	f	namespace:Kokkos	typeref:typename:bool
isnan	impl/Kokkos_QuadPrecisionMath.hpp	/^inline bool isnan(__float128 x) { return ::isnanq(x); }$/;"	f	namespace:Kokkos	typeref:typename:bool
item	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION const sycl::nd_item<2>& item() const { return m_item; }$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const sycl::nd_item<2> &
iterate	Kokkos_CopyViews.hpp	/^  static const Kokkos::Iterate iterate = Kokkos::Iterate::Left;$/;"	m	struct:Kokkos::Impl::ViewFillLayoutSelector	typeref:typename:const Kokkos::Iterate
iterate	Kokkos_CopyViews.hpp	/^  static const Kokkos::Iterate iterate = Kokkos::Iterate::Right;$/;"	m	struct:Kokkos::Impl::ViewFillLayoutSelector	typeref:typename:const Kokkos::Iterate
iterate_through_league	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  __device__ inline void iterate_through_league(int const threadid,$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type = Kokkos::Rank<2, ViewFillLayoutSelector<Layout>::iterate,$/;"	t	struct:Kokkos::Impl::ViewFill	typeref:typename:Kokkos::Rank<2,ViewFillLayoutSelector<Layout>::iterate,ViewFillLayoutSelector<Layout>::iterate>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type = Kokkos::Rank<3, ViewFillLayoutSelector<Layout>::iterate,$/;"	t	struct:Kokkos::Impl::ViewFill	typeref:typename:Kokkos::Rank<3,ViewFillLayoutSelector<Layout>::iterate,ViewFillLayoutSelector<Layout>::iterate>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type = Kokkos::Rank<4, ViewFillLayoutSelector<Layout>::iterate,$/;"	t	struct:Kokkos::Impl::ViewFill	typeref:typename:Kokkos::Rank<4,ViewFillLayoutSelector<Layout>::iterate,ViewFillLayoutSelector<Layout>::iterate>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type = Kokkos::Rank<5, ViewFillLayoutSelector<Layout>::iterate,$/;"	t	struct:Kokkos::Impl::ViewFill	typeref:typename:Kokkos::Rank<5,ViewFillLayoutSelector<Layout>::iterate,ViewFillLayoutSelector<Layout>::iterate>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type = Kokkos::Rank<6, ViewFillLayoutSelector<Layout>::iterate,$/;"	t	struct:Kokkos::Impl::ViewFill	typeref:typename:Kokkos::Rank<6,ViewFillLayoutSelector<Layout>::iterate,ViewFillLayoutSelector<Layout>::iterate>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type =$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:Kokkos::Rank<2,outer_iteration_pattern,inner_iteration_pattern>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type =$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:Kokkos::Rank<3,outer_iteration_pattern,inner_iteration_pattern>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type =$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:Kokkos::Rank<4,outer_iteration_pattern,inner_iteration_pattern>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type =$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:Kokkos::Rank<5,outer_iteration_pattern,inner_iteration_pattern>
iterate_type	Kokkos_CopyViews.hpp	/^  using iterate_type =$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:Kokkos::Rank<6,outer_iteration_pattern,inner_iteration_pattern>
iterate_type	Kokkos_HPX.hpp	/^  using iterate_type =$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::Impl::HostIterateTile<MDRangePolicy,FunctorType,WorkTag,void>
iterate_type	Kokkos_HPX.hpp	/^  using iterate_type =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::HostIterateTile<MDRangePolicy,FunctorType,WorkTag,reference_type>
iterate_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using iterate_type = typename Kokkos::Impl::HostIterateTile<$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::Impl::HostIterateTile<MDRangePolicy,FunctorType,typename MDRangePolicy::work_tag,void>
iterate_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using iterate_type =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::HostIterateTile<MDRangePolicy,FunctorType,WorkTag,reference_type>
iterate_type	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using iterate_type = typename Kokkos::Impl::HostIterateTile<$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::Impl::HostIterateTile<MDRangePolicy,FunctorType,typename MDRangePolicy::work_tag,void>
iterate_type	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using iterate_type =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::HostIterateTile<MDRangePolicy,FunctorType,WorkTag,reference_type>
iterate_type	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using iterate_type = typename Kokkos::Impl::HostIterateTile<$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::Impl::HostIterateTile<MDRangePolicy,FunctorType,typename MDRangePolicy::work_tag,void>
iterate_type	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using iterate_type =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::HostIterateTile<MDRangePolicy,FunctorType,WorkTag,reference_type>
iteration_pattern	KokkosExp_MDRangePolicy.hpp	/^  using iteration_pattern = typename traits::iteration_pattern;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:traits::iteration_pattern
iteration_pattern	Kokkos_Rank.hpp	/^  using iteration_pattern = Rank<N, OuterDir, InnerDir>;$/;"	t	struct:Kokkos::Rank	typeref:typename:Rank<N,OuterDir,InnerDir>
iteration_pattern	traits/Kokkos_IterationPatternTrait.hpp	/^    using iteration_pattern = IterPattern;$/;"	t	struct:Kokkos::Impl::IterationPatternTrait::mixin_matching_trait	typeref:typename:IterPattern
iteration_pattern	traits/Kokkos_IterationPatternTrait.hpp	/^    using iteration_pattern = void;  \/\/ TODO set default iteration pattern$/;"	t	struct:Kokkos::Impl::IterationPatternTrait::base_traits	typeref:typename:void
iterations_till_backoff	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int iterations_till_backoff    = 64;$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
iterator	impl/Kokkos_VLAEmulation.hpp	/^  using iterator       = VLAValueType*;$/;"	t	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:VLAValueType *
iwork	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    for (Member iwork = ibeg; iwork < iend; ++iwork) {$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:Member
iwork	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    for (Member iwork = ibeg; iwork < iend; ++iwork) {$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:Member
iwork	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    for (Member iwork = ibeg; iwork < iend; ++iwork) {$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Member
iwork	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    for (auto iwork = m_policy.begin(); iwork < m_policy.end(); ++iwork) {$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:auto
join	Cuda/Kokkos_Cuda_Team.hpp	/^  static void join(value_type& update, const value_type& input) {$/;"	f	struct:Kokkos::Impl::CudaJoinFunctor	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	HIP/Kokkos_HIP_Team.hpp	/^  static void join(value_type& update, const value_type& input) {$/;"	f	struct:Kokkos::Impl::HIPJoinFunctor	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Crs.hpp	/^  void join(value_type& update, const value_type& input) const {$/;"	f	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const { dest *= src; }$/;"	f	struct:Kokkos::Prod	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const { dest += src; }$/;"	f	struct:Kokkos::Sum	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::BAnd	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::BOr	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::FirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::LAnd	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::LOr	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::LastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::Max	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MaxFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::Min	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MinFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MinLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MinMax	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::MinMaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::StdIsPartitioned	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	Kokkos_Parallel_Reduce.hpp	/^  void join(value_type& dest, const value_type& src) const {$/;"	f	struct:Kokkos::StdPartitionPoint	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	impl/Kokkos_Combined_Reducer.hpp	/^  KOKKOS_FUNCTION constexpr void join(value_type& dest,$/;"	f	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:KOKKOS_FUNCTION void
join	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void join(F const* const f, ValueType* dst,$/;"	f	struct:Kokkos::Impl::FunctorAnalysis::DeduceJoinNoTag	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void join(F const* const f, ValueType* dst,$/;"	f	struct:Kokkos::Impl::FunctorAnalysis::has_join_no_tag_function	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void join(F const* const f, ValueType* dst,$/;"	f	struct:Kokkos::Impl::FunctorAnalysis::has_join_tag_function	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void join(F const* const f, ValueType* dst,$/;"	f	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_no_tag_function	typeref:typename:KOKKOS_INLINE_FUNCTION void
join	impl/Kokkos_FunctorAnalysis.hpp	/^    KOKKOS_INLINE_FUNCTION static void join(F const* const f, ValueType* dst,$/;"	f	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_tag_function	typeref:typename:KOKKOS_INLINE_FUNCTION void
keep_exe	Kokkos_HostSpace.hpp	/^    keep_exe = Kokkos::Impl::MemorySpaceAccess<$/;"	e	enum:Kokkos::Impl::HostMirror::__anon2d16c4960103
keep_mem	Kokkos_HostSpace.hpp	/^    keep_mem =$/;"	e	enum:Kokkos::Impl::HostMirror::__anon2d16c4960203
kernel_name_context_variable_id	impl/Kokkos_Profiling.cpp	/^static size_t kernel_name_context_variable_id;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t	file:
kernel_type	impl/Kokkos_GraphNodeImpl.hpp	/^  using kernel_type = Kernel;$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:Kernel
kernel_type_context_variable_id	impl/Kokkos_Profiling.cpp	/^static size_t kernel_type_context_variable_id;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:size_t	file:
kokkos_cuda_internal_cas_acq_rel_32	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^#define kokkos_cuda_internal_cas_acq_rel_32(/;"	d
kokkos_cuda_internal_cas_acquire_32	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^#define kokkos_cuda_internal_cas_acquire_32(/;"	d
kokkos_cuda_internal_cas_relaxed_32	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^#define kokkos_cuda_internal_cas_relaxed_32(/;"	d
kokkos_cuda_internal_cas_release_32	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^#define kokkos_cuda_internal_cas_release_32(/;"	d
kokkos_cuda_internal_fence_acq_rel	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^#define kokkos_cuda_internal_fence_acq_rel(/;"	d
kokkos_cuda_internal_fence_seq_cst	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^#define kokkos_cuda_internal_fence_seq_cst(/;"	d
kokkos_free	Kokkos_Core.hpp	/^inline void kokkos_free(void* arg_alloc) {$/;"	f	namespace:Kokkos	typeref:typename:void
kokkos_impl_cuda_constant_memory_buffer	Cuda/Kokkos_Cuda_Instance.cpp	/^__device__ __constant__ unsigned long kokkos_impl_cuda_constant_memory_buffer$/;"	v	typeref:typename:__device__ __constant__ unsigned long[]
kokkos_impl_cuda_constant_memory_buffer	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^__device__ __constant__ unsigned long kokkos_impl_cuda_constant_memory_buffer$/;"	v	typeref:typename:__device__ __constant__ unsigned long[]
kokkos_impl_cuda_pin_uvm_to_host	Cuda/Kokkos_CudaSpace.cpp	/^bool kokkos_impl_cuda_pin_uvm_to_host() {$/;"	f	typeref:typename:bool
kokkos_impl_cuda_pin_uvm_to_host_v	Cuda/Kokkos_CudaSpace.cpp	/^bool CudaUVMSpace::kokkos_impl_cuda_pin_uvm_to_host_v = false;$/;"	m	class:Kokkos::CudaUVMSpace	typeref:typename:bool
kokkos_impl_cuda_pin_uvm_to_host_v	Kokkos_CudaSpace.hpp	/^  static bool kokkos_impl_cuda_pin_uvm_to_host_v;$/;"	m	class:Kokkos::CudaUVMSpace	typeref:typename:bool
kokkos_impl_cuda_set_pin_uvm_to_host	Cuda/Kokkos_CudaSpace.cpp	/^void kokkos_impl_cuda_set_pin_uvm_to_host(bool val) {$/;"	f	typeref:typename:void
kokkos_impl_cuda_set_serial_execution	Cuda/Kokkos_Cuda_Instance.cpp	/^void kokkos_impl_cuda_set_serial_execution(bool val) {$/;"	f	typeref:typename:void
kokkos_impl_cuda_shared_memory	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^inline __device__ T* kokkos_impl_cuda_shared_memory() {$/;"	f	typeref:typename:__device__ T *
kokkos_impl_cuda_use_serial_execution	Cuda/Kokkos_Cuda_Instance.cpp	/^bool kokkos_impl_cuda_use_serial_execution() {$/;"	f	typeref:typename:bool
kokkos_impl_cuda_use_serial_execution_v	Cuda/Kokkos_Cuda_Instance.cpp	/^bool CudaInternal::kokkos_impl_cuda_use_serial_execution_v = false;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:bool
kokkos_impl_cuda_use_serial_execution_v	Cuda/Kokkos_Cuda_Instance.hpp	/^  static bool kokkos_impl_cuda_use_serial_execution_v;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:bool
kokkos_impl_hip_constant_memory_buffer	HIP/Kokkos_HIP_Instance.cpp	/^__device__ __constant__ unsigned long kokkos_impl_hip_constant_memory_buffer$/;"	v	typeref:typename:__device__ __constant__ unsigned long[]
kokkos_impl_hip_constant_memory_buffer	HIP/Kokkos_HIP_KernelLaunch.hpp	/^__device__ __constant__ unsigned long kokkos_impl_hip_constant_memory_buffer$/;"	v	typeref:typename:__device__ __constant__ unsigned long[]
kokkos_impl_hip_shared_memory	HIP/Kokkos_HIP_KernelLaunch.hpp	/^inline __device__ T *kokkos_impl_hip_shared_memory() {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:__device__ T *
kokkos_malloc	Kokkos_Core.hpp	/^inline void* kokkos_malloc(const size_t arg_alloc_size) {$/;"	f	namespace:Kokkos	typeref:typename:void *
kokkos_malloc	Kokkos_Core.hpp	/^inline void* kokkos_malloc(const std::string& arg_alloc_label,$/;"	f	namespace:Kokkos	typeref:typename:void *
kokkos_omp_on_host	Kokkos_Macros.hpp	/^static constexpr bool kokkos_omp_on_host() { return false; }$/;"	f	typeref:typename:bool
kokkos_omp_on_host	Kokkos_Macros.hpp	/^static constexpr bool kokkos_omp_on_host() { return true; }$/;"	f	typeref:typename:bool
kokkos_realloc	Kokkos_Core.hpp	/^inline void* kokkos_realloc(void* arg_alloc, const size_t arg_alloc_size) {$/;"	f	namespace:Kokkos	typeref:typename:void *
kokkos_terminate_handler	impl/Kokkos_Stacktrace.cpp	/^void kokkos_terminate_handler() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
kokkos_value_categorical	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_categorical,  \/\/ unordered distinct objects$/;"	e	enum:Kokkos_Tools_VariableInfo_StatisticalCategory
kokkos_value_double	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_double,$/;"	e	enum:Kokkos_Tools_VariableInfo_ValueType
kokkos_value_int64	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_int64,$/;"	e	enum:Kokkos_Tools_VariableInfo_ValueType
kokkos_value_interval	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_interval,  \/\/ ordered distinct objects for which distance matters$/;"	e	enum:Kokkos_Tools_VariableInfo_StatisticalCategory
kokkos_value_ordinal	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_ordinal,      \/\/ ordered distinct objects$/;"	e	enum:Kokkos_Tools_VariableInfo_StatisticalCategory
kokkos_value_range	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_range,     \/\/ I am somewhere in [2,12)$/;"	e	enum:Kokkos_Tools_VariableInfo_CandidateValueType
kokkos_value_ratio	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_ratio  \/\/ ordered distinct objects for which distance matters,$/;"	e	enum:Kokkos_Tools_VariableInfo_StatisticalCategory
kokkos_value_set	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_set,       \/\/ I am one of [2,3,4,5]$/;"	e	enum:Kokkos_Tools_VariableInfo_CandidateValueType
kokkos_value_string	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_string,$/;"	e	enum:Kokkos_Tools_VariableInfo_ValueType
kokkos_value_unbounded	impl/Kokkos_Profiling_C_Interface.h	/^  kokkos_value_unbounded  \/\/ I am [text\/int\/float], but we don't know at$/;"	e	enum:Kokkos_Tools_VariableInfo_CandidateValueType
label	Kokkos_View.hpp	/^  inline const std::string label() const {$/;"	f	class:Kokkos::View	typeref:typename:const std::string
label	impl/Kokkos_SharedAlloc.hpp	/^  const char* label() const { return m_label; }$/;"	f	class:Kokkos::Impl::SharedAllocationHeader	typeref:typename:KOKKOS_INLINE_FUNCTION const char *
label_ref	Kokkos_ExecPolicy.hpp	/^  std::string const& label_ref;$/;"	m	struct:Kokkos::Impl::ParallelConstructName	typeref:typename:std::string const &
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static bool land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static int land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long long land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long long
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static short land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION short
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static signed char land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION signed char
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned char land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned char
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned int land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned int
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long long land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long long
land	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned short land() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned short
last_value_type	Kokkos_Crs.hpp	/^  using last_value_type =$/;"	t	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:Kokkos::View<value_type,typename InCounts::device_type>
launch_bounds	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using launch_bounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
launch_bounds	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using launch_bounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::launch_bounds
launch_bounds	KokkosExp_MDRangePolicy.hpp	/^  using launch_bounds     = typename traits::launch_bounds;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:traits::launch_bounds
launch_bounds	Kokkos_Concepts.hpp	/^  using launch_bounds = LaunchBounds;$/;"	t	struct:Kokkos::LaunchBounds	typeref:typename:LaunchBounds
launch_bounds	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using launch_bounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::launch_bounds
launch_bounds	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using launch_bounds = typename Policy::launch_bounds;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::launch_bounds
launch_bounds	traits/Kokkos_LaunchBoundsTrait.hpp	/^    using launch_bounds = LaunchBoundParam;$/;"	t	struct:Kokkos::Impl::LaunchBoundsTrait::mixin_matching_trait	typeref:typename:LaunchBoundParam
launch_bounds	traits/Kokkos_LaunchBoundsTrait.hpp	/^    using launch_bounds = LaunchBounds<>;$/;"	t	struct:Kokkos::Impl::LaunchBoundsTrait::base_traits	typeref:typename:LaunchBounds<>
launch_bounds_is_defaulted	traits/Kokkos_LaunchBoundsTrait.hpp	/^    static constexpr bool launch_bounds_is_defaulted = false;$/;"	m	struct:Kokkos::Impl::LaunchBoundsTrait::mixin_matching_trait	typeref:typename:bool
launch_bounds_is_defaulted	traits/Kokkos_LaunchBoundsTrait.hpp	/^    static constexpr bool launch_bounds_is_defaulted = true;$/;"	m	struct:Kokkos::Impl::LaunchBoundsTrait::base_traits	typeref:typename:bool
launch_kernel	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  inline static void launch_kernel(const DriverType& driver, const dim3& grid,$/;"	f	struct:Kokkos::Impl::CudaParallelLaunchImpl	typeref:typename:void
launch_mechanism	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^  static constexpr const Experimental::CudaLaunchMechanism launch_mechanism =$/;"	m	struct:Kokkos::Impl::DeduceCudaLaunchMechanism	typeref:typename:const Experimental::CudaLaunchMechanism
launch_mechanism	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  HIPLaunchMechanism launch_mechanism = l;$/;"	m	struct:Kokkos::Experimental::Impl::HIPDispatchProperties	typeref:typename:HIPLaunchMechanism
launch_mechanism	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static constexpr HIPLaunchMechanism launch_mechanism =$/;"	m	struct:Kokkos::Experimental::Impl::DeduceHIPLaunchMechanism	typeref:typename:HIPLaunchMechanism
launch_mechanism	Kokkos_Cuda.hpp	/^  CudaLaunchMechanism launch_mechanism = l;$/;"	m	struct:Kokkos::Impl::Experimental::CudaDispatchProperties	typeref:typename:CudaLaunchMechanism
layout	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr typename traits::array_layout layout()$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION typename traits::array_layout
layout_iterate_type_selector	Kokkos_Layout.hpp	/^struct layout_iterate_type_selector {$/;"	s	namespace:Kokkos
layout_iterate_type_selector	Kokkos_Layout.hpp	/^struct layout_iterate_type_selector<Kokkos::LayoutLeft> {$/;"	s	namespace:Kokkos
layout_iterate_type_selector	Kokkos_Layout.hpp	/^struct layout_iterate_type_selector<Kokkos::LayoutRight> {$/;"	s	namespace:Kokkos
layout_iterate_type_selector	Kokkos_Layout.hpp	/^struct layout_iterate_type_selector<Kokkos::LayoutStride> {$/;"	s	namespace:Kokkos
layout_type	impl/Kokkos_PhysicalLayout.hpp	/^  LayoutType layout_type;$/;"	m	struct:Kokkos::Impl::PhysicalLayout	typeref:typename:LayoutType
league_rank	Cuda/Kokkos_Cuda_Task.hpp	/^  __device__ int league_rank() const {$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__device__ int
league_rank	Cuda/Kokkos_Cuda_Task.hpp	/^  __host__ int league_rank() const { return 0; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__host__ int
league_rank	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int league_rank() const { return m_league_rank; }$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_rank	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int league_rank() const { return m_league_rank; }$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_rank	Kokkos_HPX.hpp	/^    for (int league_rank = league_rank_begin; league_rank < league_rank_end;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
league_rank	Kokkos_HPX.hpp	/^    for (int league_rank = league_rank_begin; league_rank < league_rank_end;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
league_rank	Kokkos_HPX.hpp	/^  KOKKOS_INLINE_FUNCTION int league_rank() const noexcept {$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_rank	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION int league_rank() const { return m_league_rank; }$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_rank	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int league_rank() const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_rank	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION int league_rank() const { return m_league_rank; }$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_rank	impl/Kokkos_HostThreadTeam.hpp	/^  int league_rank() const noexcept { return m_league_rank; }$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
league_size	Cuda/Kokkos_Cuda_Task.hpp	/^  __device__ int league_size() const { return blockDim.z * gridDim.x; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__device__ int
league_size	Cuda/Kokkos_Cuda_Task.hpp	/^  __host__ int league_size() const { return 0; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__host__ int
league_size	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
league_size	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_size	Kokkos_HPX.hpp	/^  KOKKOS_INLINE_FUNCTION int league_size() const noexcept {$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_size	Kokkos_HPX.hpp	/^  inline int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
league_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
league_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
league_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
league_size	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int league_size() const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
league_size	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
league_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline int league_size() const { return m_league_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
league_size	impl/Kokkos_HostThreadTeam.hpp	/^  int league_size() const noexcept { return m_league_size; }$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
length	impl/Kokkos_Stacktrace.cpp	/^  static int length;$/;"	m	class:Kokkos::Impl::Stacktrace	typeref:typename:int	file:
length	impl/Kokkos_Stacktrace.cpp	/^int Stacktrace::length = 0;$/;"	m	class:Kokkos::Impl::Stacktrace	typeref:typename:int
level	Kokkos_ExecPolicy.hpp	/^  int level;$/;"	m	struct:Kokkos::ScratchRequest	typeref:typename:int
lgamma	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 lgamma(__float128 x) { return ::lgammaq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
lhs_traits	Kokkos_View.hpp	/^  using lhs_traits = ViewTraits<LT, LP...>;$/;"	t	function:Kokkos::operator ==	typeref:typename:ViewTraits<LT,LP...>
lib	impl/Kokkos_Profiling.hpp	/^  std::string lib          = unset_string_option;$/;"	m	struct:Kokkos::Tools::InitArguments	typeref:typename:std::string
light_weight	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^      HintLightWeight_t light_weight =$/;"	m	struct:Kokkos::Impl::DeduceCudaLaunchMechanism	typeref:typename:const Kokkos::Experimental::WorkItemProperty::HintLightWeight_t
light_weight	HIP/Kokkos_HIP_KernelLaunch.hpp	/^      light_weight = Kokkos::Experimental::WorkItemProperty::HintLightWeight;$/;"	m	struct:Kokkos::Experimental::Impl::DeduceHIPLaunchMechanism	typeref:typename:Kokkos::Experimental::WorkItemProperty::HintLightWeight_t
lines	impl/Kokkos_Stacktrace.cpp	/^  static std::vector<std::string> lines() {$/;"	f	class:Kokkos::Impl::Stacktrace	typeref:typename:std::vector<std::string>	file:
load_fence	Kokkos_Atomics_Desul_Wrapper.hpp	/^void load_fence() { return desul::atomic_thread_fence(desul::MemoryOrderAcquire(), KOKKOS_DESUL_/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
load_fence	impl/Kokkos_Memory_Fence.hpp	/^void load_fence() {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
loc	Kokkos_Parallel_Reduce.hpp	/^  Index loc;$/;"	m	struct:Kokkos::ValLocScalar	typeref:typename:Index
local_block_size	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  inline unsigned local_block_size(const FunctorType& f) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:unsigned
local_block_size	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline unsigned local_block_size(const FunctorType& f) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:unsigned
local_block_size	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline unsigned local_block_size(const FunctorType& f) {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:unsigned
local_block_size	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline unsigned local_block_size(const FunctorType& f) {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:unsigned
local_block_size	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  inline unsigned local_block_size(const FunctorType& f) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:unsigned
local_block_size	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline unsigned local_block_size(const FunctorType& f) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:unsigned
local_block_size	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline unsigned local_block_size(const FunctorType& f) {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:unsigned
local_block_size	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline unsigned local_block_size(const FunctorType& f) {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:unsigned
local_deep_copy	Kokkos_CopyViews.hpp	/^void KOKKOS_INLINE_FUNCTION local_deep_copy($/;"	f	namespace:Kokkos::Experimental	typeref:typename:void KOKKOS_INLINE_FUNCTION
local_deep_copy_contiguous	Kokkos_CopyViews.hpp	/^local_deep_copy_contiguous(const TeamType& team, const View<DT, DP...>& dst,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:void KOKKOS_INLINE_FUNCTION
local_deep_copy_contiguous	Kokkos_CopyViews.hpp	/^void KOKKOS_INLINE_FUNCTION local_deep_copy_contiguous($/;"	f	namespace:Kokkos::Experimental	typeref:typename:void KOKKOS_INLINE_FUNCTION
local_id	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const auto local_id = item.get_local_linear_id();$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:const auto
local_range	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const auto local_range =$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:const auto
local_scratch	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* local_scratch() const noexcept { return m_scratch + m_thread_local; }$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
lock	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  void lock() { omp_set_lock(&m_lock); }$/;"	f	class:Kokkos::Experimental::MasterLock	typeref:typename:void
lock_address_cuda_space	Cuda/Kokkos_Cuda_Locks.hpp	/^__device__ inline bool lock_address_cuda_space(void* ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
lock_address_hbw_space	impl/Kokkos_HBWSpace.cpp	/^bool lock_address_hbw_space(void *ptr) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:bool
lock_address_hip_space	HIP/Kokkos_HIP_Locks.hpp	/^__device__ inline bool lock_address_hip_space(void* ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ bool
lock_address_host_space	impl/Kokkos_HostSpace.cpp	/^bool lock_address_host_space(void *ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool
lock_array_copied	Cuda/Kokkos_Cuda_Locks.hpp	/^static int lock_array_copied = 0;$/;"	v	namespace:Kokkos::Impl::__anon383deb300110	typeref:typename:int
lock_array_copied	HIP/Kokkos_HIP_Locks.hpp	/^static int lock_array_copied = 0;$/;"	v	namespace:Kokkos::Impl::__anona006a1180110	typeref:typename:int
log	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> log($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
log	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 log(__float128 x) { return ::logq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
log10	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> log10($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
log10	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 log10(__float128 x) { return ::log10q(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
log1p	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 log1p(__float128 x) { return ::log1pq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
log2	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 log2(__float128 x) { return ::log2q(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
log2_iterations_till_sleep	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int log2_iterations_till_sleep = 6;$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
log2_iterations_till_yield	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int log2_iterations_till_yield = 4;$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
logb	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 logb(__float128 x) { return ::logbq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
lookup_function	impl/Kokkos_Profiling.cpp	/^void lookup_function(void* dlopen_handle, const std::string& basename,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static bool lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static int lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long long lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long long
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static short lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION short
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static signed char lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION signed char
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned char lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned char
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned int lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned int
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long long lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long long
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long
lor	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned short lor() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned short
lower	impl/Kokkos_Atomic_Assembly.hpp	/^  uint64_t lower;$/;"	m	struct:Kokkos::Impl::cas128_t	typeref:typename:uint64_t
lower	impl/Kokkos_Atomic_Windows.hpp	/^  LONGLONG lower;$/;"	m	struct:Kokkos::Impl::cas128_t	typeref:typename:LONGLONG
lower	impl/Kokkos_Profiling_C_Interface.h	/^  union Kokkos_Tools_VariableValue_ValueUnion lower;$/;"	m	struct:Kokkos_Tools_ValueRange	typeref:union:Kokkos_Tools_VariableValue_ValueUnion
m_active_parallel_region_count	Kokkos_HPX.hpp	/^  static uint32_t m_active_parallel_region_count;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:uint32_t
m_active_parallel_region_count_cond	HPX/Kokkos_HPX.cpp	/^hpx::condition_variable_any HPX::m_active_parallel_region_count_cond;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:hpx::condition_variable_any
m_active_parallel_region_count_cond	Kokkos_HPX.hpp	/^  static hpx::condition_variable_any m_active_parallel_region_count_cond;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:hpx::condition_variable_any
m_active_parallel_region_count_mutex	HPX/Kokkos_HPX.cpp	/^hpx::spinlock HPX::m_active_parallel_region_count_mutex;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:hpx::spinlock
m_active_parallel_region_count_mutex	Kokkos_HPX.hpp	/^  static hpx::spinlock m_active_parallel_region_count_mutex;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:hpx::spinlock
m_alloc_mech	Kokkos_HBWSpace.hpp	/^  AllocationMechanism m_alloc_mech;$/;"	m	class:Kokkos::Experimental::HBWSpace	typeref:typename:AllocationMechanism
m_alloc_mech	Kokkos_HostSpace.hpp	/^  AllocationMechanism m_alloc_mech;$/;"	m	class:Kokkos::HostSpace	typeref:typename:AllocationMechanism
m_alloc_ptr	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationHeader* const m_alloc_ptr;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationHeader * const
m_alloc_size	impl/Kokkos_SharedAlloc.hpp	/^  size_t const m_alloc_size;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:size_t const
m_alloc_size	impl/Kokkos_TaskBase.hpp	/^  int32_t m_alloc_size  = 0;$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:int32_t
m_alloc_size	impl/Kokkos_TaskNode.hpp	/^  pool_allocation_size_type m_alloc_size;$/;"	m	class:Kokkos::Impl::PoolAllocatedObjectBase	typeref:typename:pool_allocation_size_type
m_apply	impl/Kokkos_TaskBase.hpp	/^  function_type m_apply = nullptr;  \/\/\/< Apply function pointer$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:function_type
m_apply	impl/Kokkos_TaskNode.hpp	/^  function_type m_apply;$/;"	m	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:function_type
m_array	impl/Kokkos_ChaseLev.hpp	/^  CircularBufferT m_array;$/;"	m	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:CircularBufferT
m_attempted_alignment	impl/Kokkos_Error.hpp	/^  size_t m_attempted_alignment;$/;"	m	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:size_t
m_attempted_size	impl/Kokkos_Error.hpp	/^  size_t m_attempted_size;$/;"	m	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:size_t
m_begin	Kokkos_ExecPolicy.hpp	/^    member_type m_begin;$/;"	m	struct:Kokkos::RangePolicy::WorkRange	typeref:typename:member_type
m_begin	Kokkos_ExecPolicy.hpp	/^  typename traits::index_type m_begin;$/;"	m	class:Kokkos::RangePolicy	typeref:typename:traits::index_type
m_begin	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  typename Policy::index_type m_begin;$/;"	m	struct:Kokkos::Impl::FunctorWrapperRangePolicyParallelFor	typeref:typename:Policy::index_type
m_begin	impl/Kokkos_ViewMapping.hpp	/^  size_t m_begin[DomainRank];$/;"	m	struct:Kokkos::Impl::SubviewExtents	typeref:typename:size_t[]
m_bottom	impl/Kokkos_ChaseLev.hpp	/^  size_type m_bottom = 0;$/;"	m	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:size_type
m_buffer	Kokkos_HPX.hpp	/^    Kokkos::Impl::thread_buffer m_buffer;$/;"	m	struct:Kokkos::Experimental::HPX::instance_data	typeref:typename:Kokkos::Impl::thread_buffer
m_buffer	Kokkos_HPX.hpp	/^  std::reference_wrapper<Kokkos::Impl::thread_buffer> m_buffer;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:std::reference_wrapper<Kokkos::Impl::thread_buffer>
m_buffer	Kokkos_HPX.hpp	/^  uint32_t volatile *m_buffer;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:uint32_t volatile *
m_buffer	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  uint32_t volatile* m_buffer;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:uint32_t volatile *
m_buffer	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  uint32_t volatile* m_buffer;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:uint32_t volatile *
m_buffer	Threads/Kokkos_Threads_UniqueToken.hpp	/^  uint32_t volatile *m_buffer;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:uint32_t volatile *
m_buffer	impl/Kokkos_ChaseLev.hpp	/^  ObservingRawPtr<node_type*> m_buffer = nullptr;$/;"	m	struct:Kokkos::Impl::non_owning_variable_size_circular_buffer	typeref:typename:ObservingRawPtr<node_type * >
m_buffer	impl/Kokkos_HostBarrier.hpp	/^  int* m_buffer{nullptr};$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int *
m_buffer_view	Kokkos_HPX.hpp	/^  buffer_type m_buffer_view;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:buffer_type
m_buffer_view	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  buffer_type m_buffer_view;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:buffer_type
m_buffer_view	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^      m_buffer_view;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:Kokkos::View<uint32_t *,::Kokkos::Experimental::OpenMPTargetSpace>
m_buffer_view	Threads/Kokkos_Threads_UniqueToken.hpp	/^  buffer_type m_buffer_view;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:buffer_type
m_cache_line_size	Kokkos_HPX.hpp	/^  static constexpr std::size_t m_cache_line_size = 64;$/;"	m	class:Kokkos::Impl::thread_buffer	typeref:typename:std::size_t
m_capacity	SYCL/Kokkos_SYCL_Instance.hpp	/^    size_t m_capacity = 0;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:size_t
m_chunk_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_chunk_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_chunk_size	Kokkos_HPX.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_chunk_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_chunk_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_chunk_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_chunk_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_chunk_size	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_chunk_size	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_chunk_size;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_comp	Kokkos_Parallel_Reduce.hpp	/^  ComparatorType m_comp;$/;"	m	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:ComparatorType
m_comp	Kokkos_Parallel_Reduce.hpp	/^  ComparatorType m_comp;$/;"	m	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:ComparatorType
m_comp	Kokkos_Parallel_Reduce.hpp	/^  ComparatorType m_comp;$/;"	m	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:ComparatorType
m_control	impl/Kokkos_HostSharedPtr.hpp	/^  Control* m_control = nullptr;$/;"	m	class:Kokkos::Impl::HostSharedPtr	typeref:typename:Control *
m_copy_event	SYCL/Kokkos_SYCL_Instance.hpp	/^    sycl::event m_copy_event;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:sycl::event
m_count	Kokkos_HPX.hpp	/^  int m_count;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
m_count	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  int m_count;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
m_count	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  uint32_t m_count;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:uint32_t
m_count	Threads/Kokkos_Threads_UniqueToken.hpp	/^  int m_count;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
m_count	impl/Kokkos_SharedAlloc.hpp	/^  int m_count;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:int
m_count_alloc	impl/Kokkos_TaskQueue.hpp	/^  int m_count_alloc = 0;  \/\/ Current number of allocations$/;"	m	class:Kokkos::Impl::TaskQueue	typeref:typename:int
m_count_alloc	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  int m_count_alloc = 0;$/;"	m	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:int
m_counter	impl/Kokkos_HostSharedPtr.hpp	/^    int m_counter;$/;"	m	struct:Kokkos::Impl::HostSharedPtr::Control	typeref:typename:int
m_counts	Kokkos_Crs.hpp	/^  counts_type m_counts;$/;"	m	struct:Kokkos::CountAndFillBase	typeref:typename:counts_type
m_crs	Kokkos_Crs.hpp	/^  CrsType m_crs;$/;"	m	struct:Kokkos::CountAndFillBase	typeref:typename:CrsType
m_cudaArch	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_cudaArch;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_cudaDev	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_cudaDev;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_cudaDevCount	Cuda/Kokkos_Cuda_Instance.cpp	/^  int m_cudaDevCount;$/;"	m	class:Kokkos::Impl::__anon02417da40510::CudaInternalDevices	typeref:typename:int	file:
m_cudaProp	Cuda/Kokkos_Cuda_Instance.cpp	/^  struct cudaDeviceProp m_cudaProp[MAXIMUM_DEVICE_COUNT];$/;"	m	class:Kokkos::Impl::__anon02417da40510::CudaInternalDevices	typeref:struct:cudaDeviceProp[]	file:
m_current_steal_target	Threads/Kokkos_ThreadsExec.hpp	/^  int m_current_steal_target;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
m_cycleId	HIP/Kokkos_HIP_Instance.hpp	/^  mutable int m_cycleId = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
m_data	Kokkos_HPX.hpp	/^  char *m_data;$/;"	m	class:Kokkos::Impl::thread_buffer	typeref:typename:char *
m_data	SYCL/Kokkos_SYCL_Instance.hpp	/^    void* m_data = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:void *
m_data	impl/Kokkos_HostThreadTeam.hpp	/^  HostThreadTeamData& m_data;$/;"	m	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:HostThreadTeamData &
m_data_offset	Kokkos_MemoryPool.hpp	/^  int32_t m_data_offset;  \/\/ Offset to 0th superblock data$/;"	m	class:Kokkos::MemoryPool	typeref:typename:int32_t
m_dealloc	impl/Kokkos_SharedAlloc.hpp	/^  function_type const m_dealloc;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:function_type const
m_default_buffer	HPX/Kokkos_HPX.cpp	/^Kokkos::Impl::thread_buffer HPX::m_default_buffer;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:Kokkos::Impl::thread_buffer
m_default_buffer	Kokkos_HPX.hpp	/^  static Kokkos::Impl::thread_buffer m_default_buffer;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:Kokkos::Impl::thread_buffer
m_default_instance_data	HPX/Kokkos_HPX.cpp	/^HPX::instance_data HPX::m_default_instance_data;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:HPX::instance_data
m_default_instance_data	Kokkos_HPX.hpp	/^  static instance_data m_default_instance_data;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:instance_data
m_default_level	Kokkos_ScratchSpace.hpp	/^  mutable int m_default_level = 0;$/;"	m	class:Kokkos::ScratchMemorySpace	typeref:typename:int
m_deleter	impl/Kokkos_HostSharedPtr.hpp	/^    std::function<void(T*)> m_deleter;$/;"	m	struct:Kokkos::Impl::HostSharedPtr::Control	typeref:typename:std::function<void (T *)>
m_dep_count	impl/Kokkos_TaskBase.hpp	/^  int32_t m_dep_count;  \/\/\/< Aggregate's number of dependences$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:int32_t
m_destroy	impl/Kokkos_SharedAlloc.hpp	/^  DestroyFunctor m_destroy;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:DestroyFunctor
m_device	Kokkos_CudaSpace.hpp	/^  int m_device;  \/\/\/< Which Cuda device$/;"	m	class:Kokkos::CudaSpace	typeref:typename:int
m_device	Kokkos_CudaSpace.hpp	/^  int m_device;  \/\/\/< Which Cuda device$/;"	m	class:Kokkos::CudaUVMSpace	typeref:typename:int
m_device	Kokkos_HIP_Space.hpp	/^  int m_device;  \/\/\/< Which HIP device$/;"	m	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:int
m_device	Kokkos_HIP_Space.hpp	/^  int m_device;  \/\/\/< Which HIP device$/;"	m	class:Kokkos::Experimental::HIPSpace	typeref:typename:int
m_deviceProp	Cuda/Kokkos_Cuda_Instance.hpp	/^  cudaDeviceProp m_deviceProp;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:cudaDeviceProp
m_deviceProp	HIP/Kokkos_HIP_Instance.hpp	/^  hipDeviceProp_t m_deviceProp;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:hipDeviceProp_t
m_driver_storage	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  mutable Kokkos::OwningRawPtr<base_t> m_driver_storage = nullptr;$/;"	m	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:Kokkos::OwningRawPtr<base_t>
m_ebo_object	impl/Kokkos_EBO.hpp	/^  T m_ebo_object;$/;"	m	struct:Kokkos::Impl::EBOBaseImpl	typeref:typename:T
m_element_ptr	impl/Kokkos_HostSharedPtr.hpp	/^  T* m_element_ptr   = nullptr;$/;"	m	class:Kokkos::Impl::HostSharedPtr	typeref:typename:T *
m_end	Kokkos_ExecPolicy.hpp	/^    member_type m_end;$/;"	m	struct:Kokkos::RangePolicy::WorkRange	typeref:typename:member_type
m_end	Kokkos_ExecPolicy.hpp	/^  typename traits::index_type m_end;$/;"	m	class:Kokkos::RangePolicy	typeref:typename:traits::index_type
m_end_L0	Kokkos_ScratchSpace.hpp	/^  char* m_end_L0          = nullptr;$/;"	m	class:Kokkos::ScratchMemorySpace	typeref:typename:char *
m_end_L1	Kokkos_ScratchSpace.hpp	/^  char* m_end_L1          = nullptr;$/;"	m	class:Kokkos::ScratchMemorySpace	typeref:typename:char *
m_error_code	Cuda/Kokkos_Cuda_Error.hpp	/^  cudaError_t m_error_code = cudaSuccess;$/;"	m	class:Kokkos::Experimental::CudaRawMemoryAllocationFailure	typeref:typename:cudaError_t
m_error_code	HIP/Kokkos_HIP_Error.hpp	/^  hipError_t m_error_code = hipSuccess;$/;"	m	class:Kokkos::Experimental::HIPRawMemoryAllocationFailure	typeref:typename:hipError_t
m_exec	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  const Kokkos::Experimental::SYCL& m_exec;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const Kokkos::Experimental::SYCL &
m_exec	Threads/Kokkos_ThreadsTeam.hpp	/^  ThreadsExec* const m_exec;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:ThreadsExec * const
m_execution_space	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  execution_space m_execution_space;$/;"	m	struct:Kokkos::Impl::GraphImpl	typeref:typename:execution_space
m_f	SYCL/Kokkos_SYCL_Instance.hpp	/^    Functor m_f;$/;"	m	union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper	typeref:typename:Functor
m_failed_heads	impl/Kokkos_MultipleTaskQueue.hpp	/^  task_base_type* m_failed_heads[NumPriorities][2];$/;"	m	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:task_base_type * [][2]
m_failure_mode	impl/Kokkos_Error.hpp	/^  FailureMode m_failure_mode;$/;"	m	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:FailureMode
m_final	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  size_type m_final;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:size_type
m_final	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  size_type m_final;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:size_type
m_final	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  size_type m_final               = false;$/;"	m	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:size_type
m_first_block	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  Kokkos::OwningRawPtr<Block> m_first_block      = nullptr;$/;"	m	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:Kokkos::OwningRawPtr<Block>
m_first_free_idx	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  size_type m_first_free_idx                     = 0;$/;"	m	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:size_type
m_force_synchronous	Kokkos_HPX.hpp	/^  bool m_force_synchronous;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:bool
m_free_indices	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  Kokkos::OwningRawPtr<size_type> m_free_indices = nullptr;$/;"	m	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:Kokkos::OwningRawPtr<size_type>
m_func	impl/KokkosExp_Host_IterateTile.hpp	/^  Functor const& m_func;$/;"	m	struct:Kokkos::Impl::HostIterateTile	typeref:typename:Functor const &
m_func	impl/KokkosExp_IterateTileGPU.hpp	/^  const Functor& m_func;$/;"	m	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:const Functor &
m_func	impl/KokkosExp_IterateTileGPU.hpp	/^  const Functor& m_func;$/;"	m	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:const Functor &
m_functor	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const FunctorType
m_functor	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const FunctorType
m_functor	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
m_functor	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:const FunctorType
m_functor	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  FunctorType const m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType const
m_functor	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^  FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
m_functor	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^  FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
m_functor	Kokkos_Crs.hpp	/^  Functor m_functor;$/;"	m	struct:Kokkos::CountAndFillBase	typeref:typename:Functor
m_functor	Kokkos_HPX.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Kokkos_HPX.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Kokkos_HPX.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const FunctorType
m_functor	Kokkos_HPX.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const FunctorType
m_functor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const FunctorType
m_functor	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const FunctorType
m_functor	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^  FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
m_functor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const FunctorType
m_functor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	SYCL/Kokkos_SYCL_Instance.hpp	/^  const Functor m_functor;$/;"	m	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:const Functor
m_functor	SYCL/Kokkos_SYCL_Instance.hpp	/^  } m_functor;$/;"	m	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper
m_functor	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:const FunctorType
m_functor	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  FunctorType const m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType const
m_functor	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^  FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
m_functor	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const FunctorType
m_functor	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const FunctorType
m_functor	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const FunctorType
m_functor	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  const FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const FunctorType
m_functor	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  FunctorType m_functor;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:FunctorType
m_functor	impl/Kokkos_Combined_Reducer.hpp	/^  Functor m_functor;$/;"	m	struct:Kokkos::Impl::CombinedReductionFunctorWrapperImpl	typeref:typename:Functor
m_functor_wrapper	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  FunctorWrapper m_functor_wrapper;$/;"	m	struct:Kokkos::Impl::FunctorWrapperRangePolicyParallelFor	typeref:typename:FunctorWrapper
m_future	Kokkos_HPX.hpp	/^    hpx::shared_future<void> m_future = hpx::make_ready_future<void>();$/;"	m	struct:Kokkos::Experimental::HPX::instance_data	typeref:typename:hpx::shared_future<void>
m_future	Kokkos_HPX.hpp	/^  std::reference_wrapper<hpx::shared_future<void>> m_future;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:std::reference_wrapper<hpx::shared_future<void>>
m_future_mutex	Kokkos_HPX.hpp	/^    hpx::spinlock m_future_mutex;$/;"	m	struct:Kokkos::Experimental::HPX::instance_data	typeref:typename:hpx::spinlock
m_future_mutex	Kokkos_HPX.hpp	/^  std::reference_wrapper<hpx::spinlock> m_future_mutex;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:std::reference_wrapper<hpx::spinlock>
m_glb_scratch	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  void* m_glb_scratch;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:void *
m_global_scratch_ptr	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  sycl::device_ptr<char> m_global_scratch_ptr;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:sycl::device_ptr<char>
m_global_scratch_ptr	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  sycl::device_ptr<char> m_global_scratch_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:sycl::device_ptr<char>
m_granularity	Kokkos_ExecPolicy.hpp	/^  typename traits::index_type m_granularity;$/;"	m	class:Kokkos::RangePolicy	typeref:typename:traits::index_type
m_granularity_mask	Kokkos_ExecPolicy.hpp	/^  typename traits::index_type m_granularity_mask;$/;"	m	class:Kokkos::RangePolicy	typeref:typename:traits::index_type
m_graph	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  cudaGraph_t m_graph          = nullptr;$/;"	m	struct:Kokkos::Impl::GraphImpl	typeref:typename:cudaGraph_t
m_graph	Kokkos_WorkGraphPolicy.hpp	/^  graph_type const m_graph;$/;"	m	class:Kokkos::WorkGraphPolicy	typeref:typename:graph_type const
m_graph_exec	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  cudaGraphExec_t m_graph_exec = nullptr;$/;"	m	struct:Kokkos::Impl::GraphImpl	typeref:typename:cudaGraphExec_t
m_graph_impl	Kokkos_GraphNode.hpp	/^  std::weak_ptr<graph_impl_t> m_graph_impl;$/;"	m	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:std::weak_ptr<graph_impl_t>
m_graph_node_ptr	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  Kokkos::ObservingRawPtr<cudaGraphNode_t> m_graph_node_ptr = nullptr;$/;"	m	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:Kokkos::ObservingRawPtr<cudaGraphNode_t>
m_graph_ptr	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  Kokkos::ObservingRawPtr<const cudaGraph_t> m_graph_ptr    = nullptr;$/;"	m	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:Kokkos::ObservingRawPtr<const cudaGraph_t>
m_grid_x	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  int m_grid_x                    = 0;$/;"	m	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:int
m_group_rank	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  int m_group_rank;  \/\/\/< Which "team" subset of thread pool$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:int
m_has_executed	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  bool m_has_executed = false;$/;"	m	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:bool
m_head	impl/Kokkos_LIFO.hpp	/^  OwningRawPtr<node_type> m_head = reinterpret_cast<node_type*>(EndTag);$/;"	m	struct:Kokkos::Impl::LockBasedLIFOCommon	typeref:typename:OwningRawPtr<node_type>
m_hint_offset	Kokkos_MemoryPool.hpp	/^  int32_t m_hint_offset;  \/\/ Offset to K * #block_size array of hints$/;"	m	class:Kokkos::MemoryPool	typeref:typename:int32_t
m_hipArch	HIP/Kokkos_HIP_Instance.hpp	/^  int m_hipArch                       = -1;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
m_hipDev	HIP/Kokkos_HIP_Instance.hpp	/^  int m_hipDev                        = -1;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
m_hipDevCount	HIP/Kokkos_HIP_Instance.cpp	/^  int m_hipDevCount;$/;"	m	class:Kokkos::Experimental::__anon18c94a8c0110::HIPInternalDevices	typeref:typename:int	file:
m_hipProp	HIP/Kokkos_HIP_Instance.cpp	/^  struct hipDeviceProp_t m_hipProp[MAXIMUM_DEVICE_COUNT];$/;"	m	class:Kokkos::Experimental::__anon18c94a8c0110::HIPInternalDevices	typeref:struct:hipDeviceProp_t[]	file:
m_hpx_initialized	HPX/Kokkos_HPX.cpp	/^bool HPX::m_hpx_initialized = false;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:bool
m_hpx_initialized	Kokkos_HPX.hpp	/^  static bool m_hpx_initialized;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:bool
m_impl_handle	impl/Kokkos_ViewArray.hpp	/^  handle_type m_impl_handle;$/;"	v	namespace:Kokkos::Impl	typeref:typename:handle_type
m_impl_offset	impl/Kokkos_ViewArray.hpp	/^  offset_type m_impl_offset;$/;"	v	namespace:Kokkos::Impl	typeref:typename:offset_type
m_impl_ptr	Kokkos_Graph.hpp	/^  std::shared_ptr<impl_t> m_impl_ptr = nullptr;$/;"	m	struct:Kokkos::Experimental::Graph	typeref:typename:std::shared_ptr<impl_t>
m_in	Kokkos_Crs.hpp	/^  InCounts m_in;$/;"	m	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:InCounts
m_independent_instance_data	Kokkos_HPX.hpp	/^  mutable std::shared_ptr<instance_data> m_independent_instance_data;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:std::shared_ptr<instance_data>
m_index	impl/Kokkos_ViewMapping.hpp	/^  unsigned m_index[InternalRangeRank];$/;"	m	struct:Kokkos::Impl::SubviewExtents	typeref:typename:unsigned[]
m_indirectKernelMem	SYCL/Kokkos_SYCL_Instance.hpp	/^  std::vector<IndirectKernelMem> m_indirectKernelMem{m_usm_pool_size};$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::vector<IndirectKernelMem>
m_info	impl/Kokkos_TaskQueueCommon.hpp	/^    TeamSchedulerInfo const& m_info;$/;"	m	struct:Kokkos::Impl::TaskQueueCommonMixin::_schedule_waiting_tasks_operation	typeref:typename:TeamSchedulerInfo const &
m_initialized	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  bool m_initialized = false;$/;"	m	class:Kokkos::Impl::OpenMPInternal	typeref:typename:bool
m_instance	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  OpenMPInternal* m_instance;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:OpenMPInternal *
m_instance	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  OpenMPInternal* m_instance;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:OpenMPInternal *
m_instance	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  OpenMPInternal* m_instance;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:OpenMPInternal *
m_instance	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  OpenMPInternal* m_instance;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:OpenMPInternal *
m_instance_id	Cuda/Kokkos_Cuda_Instance.hpp	/^  uint32_t m_instance_id;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:uint32_t
m_instance_id	HIP/Kokkos_HIP_Instance.hpp	/^  uint32_t m_instance_id = Kokkos::Tools::Experimental::Impl::idForInstance<$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:uint32_t
m_instance_id	Kokkos_HPX.hpp	/^  uint32_t m_instance_id = impl_default_instance_id();$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:uint32_t
m_instance_id	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^  uint32_t m_instance_id = Kokkos::Tools::Experimental::Impl::idForInstance<$/;"	m	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:uint32_t
m_instance_id	SYCL/Kokkos_SYCL_Instance.hpp	/^    uint32_t m_instance_id;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:uint32_t
m_instance_id	SYCL/Kokkos_SYCL_Instance.hpp	/^  uint32_t m_instance_id = Kokkos::Tools::Experimental::Impl::idForInstance<$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:uint32_t
m_internal_implementation_private_member_data	Kokkos_Array.hpp	/^  T m_internal_implementation_private_member_data[N];$/;"	m	struct:Kokkos::Array	typeref:typename:T[]
m_invalid_thread	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_invalid_thread;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_is_aggregate	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  bool m_is_aggregate = false;$/;"	m	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:bool
m_is_initialized	Kokkos_Serial.hpp	/^  bool m_is_initialized = false;$/;"	m	class:Kokkos::Impl::SerialInternal	typeref:typename:bool
m_is_initialized	OpenACC/Kokkos_OpenACC_Instance.hpp	/^  bool m_is_initialized = false;$/;"	m	class:Kokkos::Experimental::Impl::OpenACCInternal	typeref:typename:bool
m_is_initialized	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^  bool m_is_initialized  = false;$/;"	m	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:bool
m_is_respawning	impl/Kokkos_TaskNode.hpp	/^  bool m_is_respawning = false;$/;"	m	class:Kokkos::Impl::TaskNode	typeref:typename:bool
m_is_root	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  bool m_is_root      = false;$/;"	m	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:bool
m_item	SYCL/Kokkos_SYCL_Team.hpp	/^  sycl::nd_item<2> m_item;$/;"	m	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:sycl::nd_item<2>
m_iter_L0	Kokkos_ScratchSpace.hpp	/^  mutable char* m_iter_L0 = nullptr;$/;"	m	class:Kokkos::ScratchMemorySpace	typeref:typename:char *
m_iter_L1	Kokkos_ScratchSpace.hpp	/^  mutable char* m_iter_L1 = nullptr;$/;"	m	class:Kokkos::ScratchMemorySpace	typeref:typename:char *
m_kernel	impl/Kokkos_GraphNodeImpl.hpp	/^  Kernel m_kernel;$/;"	m	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:Kernel
m_kernelFunctor	SYCL/Kokkos_SYCL_Instance.hpp	/^  std::reference_wrapper<const Functor> m_kernelFunctor;$/;"	m	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:std::reference_wrapper<const Functor>
m_kernel_ptr	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  Kokkos::ObservingRawPtr<default_kernel_impl_t> m_kernel_ptr = nullptr;$/;"	m	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:Kokkos::ObservingRawPtr<default_kernel_impl_t>
m_label	impl/Kokkos_SharedAlloc.hpp	/^  char m_label[maximum_label_length];$/;"	m	class:Kokkos::Impl::SharedAllocationHeader	typeref:typename:char[]
m_label	impl/Kokkos_SharedAlloc.hpp	/^  std::string m_label;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:std::string
m_last_event	SYCL/Kokkos_SYCL_Instance.hpp	/^    sycl::event m_last_event;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:sycl::event
m_last_free_idx	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  size_type m_last_free_idx                      = 0;$/;"	m	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:size_type
m_last_value	Kokkos_Crs.hpp	/^  last_value_type m_last_value;$/;"	m	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:last_value_type
m_league	Kokkos_HPX.hpp	/^  const int m_league;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const int
m_league	Kokkos_HPX.hpp	/^  const int m_league;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const int
m_league	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const int m_league;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const int
m_league	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const int m_league;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const int
m_league_chunk_end	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_league_chunk_end;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_league_end	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_league_end;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_league_rank	Cuda/Kokkos_Cuda_Team.hpp	/^  int m_league_rank;$/;"	m	class:Kokkos::Impl::CudaTeamMember	typeref:typename:int
m_league_rank	HIP/Kokkos_HIP_Team.hpp	/^  int m_league_rank;$/;"	m	class:Kokkos::Impl::HIPTeamMember	typeref:typename:int
m_league_rank	Kokkos_HPX.hpp	/^  int m_league_rank;$/;"	m	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:int
m_league_rank	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_league_rank;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:int
m_league_rank	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_league_rank;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_league_rank	impl/Kokkos_HostThreadTeam.hpp	/^  int const m_league_rank;$/;"	m	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:int const
m_league_rank	impl/Kokkos_HostThreadTeam.hpp	/^  int m_league_rank;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_league_rank	impl/Kokkos_TaskQueueMultiple.hpp	/^  int m_league_rank = static_cast<int>(KOKKOS_INVALID_INDEX);$/;"	m	class:Kokkos::Impl::TaskQueueMultiple	typeref:typename:int
m_league_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const size_type m_league_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const size_type
m_league_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const size_type m_league_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const size_type
m_league_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_league_size	Cuda/Kokkos_Cuda_Team.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::CudaTeamMember	typeref:typename:int
m_league_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  const size_type m_league_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const size_type
m_league_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_league_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_type const m_league_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:size_type const
m_league_size	HIP/Kokkos_HIP_Team.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::HIPTeamMember	typeref:typename:int
m_league_size	Kokkos_HPX.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_league_size	Kokkos_HPX.hpp	/^  int m_league_size;$/;"	m	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:int
m_league_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_league_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:int
m_league_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_league_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  const size_type m_league_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const size_type
m_league_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_league_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_type const m_league_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:size_type const
m_league_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_league_size	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_league_size	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_league_size	impl/Kokkos_HostThreadTeam.hpp	/^  int const m_league_size;$/;"	m	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:int const
m_league_size	impl/Kokkos_HostThreadTeam.hpp	/^  int m_league_size;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_length	impl/Kokkos_ViewMapping.hpp	/^  size_t m_length[InternalRangeRank];$/;"	m	struct:Kokkos::Impl::SubviewExtents	typeref:typename:size_t[]
m_level	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  int m_level;$/;"	m	class:Kokkos::Impl::OpenMPInternal	typeref:typename:int
m_lock	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  omp_lock_t m_lock;$/;"	m	class:Kokkos::Experimental::MasterLock	typeref:typename:omp_lock_t
m_lock_array	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^int* OpenMPTargetExec::m_lock_array           = nullptr;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:int *
m_lock_array	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  static int* m_lock_array;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:int *
m_lock_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^int64_t OpenMPTargetExec::m_lock_size         = 0;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:int64_t
m_lock_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  static int64_t m_lock_size;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:int64_t
m_locks	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  Kokkos::View<uint32_t*, Kokkos::CudaSpace> m_locks;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:Kokkos::View<uint32_t *,Kokkos::CudaSpace>
m_locks	HIP/Kokkos_HIP_UniqueToken.hpp	/^  View<uint32_t*, HIPSpace> m_locks;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:View<uint32_t *,HIPSpace>
m_locks	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  Kokkos::View<uint32_t*, SYCLDeviceUSMSpace> m_locks;$/;"	m	class:Kokkos::Experimental::UniqueToken	typeref:typename:Kokkos::View<uint32_t *,SYCLDeviceUSMSpace>
m_lower	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    const typename Policy::point_type m_lower;$/;"	m	struct:Kokkos::Impl::ParallelFor::BarePolicy	typeref:typename:const typename Policy::point_type
m_lower	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    const typename Policy::point_type m_lower;$/;"	m	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:const typename Policy::point_type
m_manage_stream	Cuda/Kokkos_Cuda_Instance.hpp	/^  bool m_manage_stream;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:bool
m_manage_stream	HIP/Kokkos_HIP_Instance.hpp	/^  bool m_manage_stream = false;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:bool
m_map	Kokkos_View.hpp	/^  map_type m_map;$/;"	m	class:Kokkos::View	typeref:typename:map_type
m_maxBlock	Cuda/Kokkos_Cuda_Instance.hpp	/^  std::array<size_type, 3> m_maxBlock;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::array<size_type,3>
m_maxBlocksPerSM	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_maxBlocksPerSM;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_maxConcurrency	Cuda/Kokkos_Cuda_Instance.hpp	/^  uint32_t m_maxConcurrency;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:uint32_t
m_maxConcurrency	SYCL/Kokkos_SYCL_Instance.hpp	/^  uint32_t m_maxConcurrency   = 0;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:uint32_t
m_maxDriverCycles	HIP/Kokkos_HIP_Instance.hpp	/^  const int m_maxDriverCycles = 100;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:const int
m_maxDriverTypeSize	HIP/Kokkos_HIP_Instance.hpp	/^  mutable size_t m_maxDriverTypeSize = 1024 * 10;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:size_t
m_maxSharedWords	Cuda/Kokkos_Cuda_Instance.hpp	/^  unsigned m_maxSharedWords;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:unsigned
m_maxSharedWords	HIP/Kokkos_HIP_Instance.hpp	/^  unsigned m_maxSharedWords           = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:unsigned
m_maxShmemPerBlock	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_maxShmemPerBlock;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_maxShmemPerBlock	HIP/Kokkos_HIP_Instance.hpp	/^  int m_maxShmemPerBlock = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
m_maxShmemPerBlock	SYCL/Kokkos_SYCL_Instance.hpp	/^  uint64_t m_maxShmemPerBlock = 0;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:uint64_t
m_maxThreadsPerBlock	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_maxThreadsPerBlock;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_maxThreadsPerSM	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_maxThreadsPerSM;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_maxThreadsPerSM	HIP/Kokkos_HIP_Instance.hpp	/^  int m_maxThreadsPerSM  = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
m_maxWarpCount	Cuda/Kokkos_Cuda_Instance.hpp	/^  unsigned m_maxWarpCount;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:unsigned
m_maxWarpCount	HIP/Kokkos_HIP_Instance.hpp	/^  unsigned m_maxWarpCount             = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:unsigned
m_maxWavesPerCU	HIP/Kokkos_HIP_Instance.hpp	/^  unsigned m_maxWavesPerCU            = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:unsigned
m_maxWorkgroupSize	SYCL/Kokkos_SYCL_Instance.hpp	/^  size_t m_maxWorkgroupSize   = 0;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:size_t
m_max_alloc	impl/Kokkos_TaskQueue.hpp	/^  int m_max_alloc;        \/\/ Maximum number of allocations$/;"	m	class:Kokkos::Impl::TaskQueue	typeref:typename:int
m_max_alloc	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  int m_max_alloc   = 0;$/;"	m	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:int
m_max_block_size_lg2	Kokkos_MemoryPool.hpp	/^  uint32_t m_max_block_size_lg2;$/;"	m	class:Kokkos::MemoryPool	typeref:typename:uint32_t
m_mdr_policy	Kokkos_HPX.hpp	/^  const MDRangePolicy m_mdr_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const MDRangePolicy
m_mdr_policy	Kokkos_HPX.hpp	/^  const MDRangePolicy m_mdr_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const MDRangePolicy
m_mdr_policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const MDRangePolicy m_mdr_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const MDRangePolicy
m_mdr_policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const MDRangePolicy m_mdr_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const MDRangePolicy
m_mdr_policy	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  const MDRangePolicy m_mdr_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const MDRangePolicy
m_mdr_policy	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  const MDRangePolicy m_mdr_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const MDRangePolicy
m_mdr_policy	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  const MDRangePolicy m_mdr_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const MDRangePolicy
m_mdr_policy	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  const MDRangePolicy m_mdr_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const MDRangePolicy
m_mechanism	impl/Kokkos_Error.hpp	/^  AllocationMechanism m_mechanism;$/;"	m	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:AllocationMechanism
m_memory	impl/Kokkos_TaskQueue.hpp	/^  memory_pool m_memory;$/;"	m	class:Kokkos::Impl::TaskQueue	typeref:typename:memory_pool
m_min_block_size_lg2	Kokkos_MemoryPool.hpp	/^  uint32_t m_min_block_size_lg2;$/;"	m	class:Kokkos::MemoryPool	typeref:typename:uint32_t
m_multiProcCount	Cuda/Kokkos_Cuda_Instance.hpp	/^  unsigned m_multiProcCount;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:unsigned
m_multiProcCount	HIP/Kokkos_HIP_Instance.hpp	/^  unsigned m_multiProcCount           = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:unsigned
m_multiplier	Kokkos_ScratchSpace.hpp	/^  mutable int m_multiplier    = 0;$/;"	m	class:Kokkos::ScratchMemorySpace	typeref:typename:int
m_mutex	SYCL/Kokkos_SYCL_Instance.hpp	/^    mutable std::mutex m_mutex;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:std::mutex
m_mutexScratchSpace	SYCL/Kokkos_SYCL_Instance.hpp	/^  mutable std::mutex m_mutexScratchSpace;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::mutex
m_mutexSharedMemory	HIP/Kokkos_HIP_Instance.hpp	/^  mutable std::mutex m_mutexSharedMemory;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:std::mutex
m_mutexWorkArray	HIP/Kokkos_HIP_Instance.hpp	/^  mutable std::mutex m_mutexWorkArray;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:std::mutex
m_n_team_scratch	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_n_team_scratch = 10;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_name	Kokkos_CudaSpace.hpp	/^  static constexpr const char* m_name = "Cuda";$/;"	m	class:Kokkos::CudaSpace	typeref:typename:const char *
m_name	Kokkos_CudaSpace.hpp	/^  static constexpr const char* m_name = "CudaHostPinned";$/;"	m	class:Kokkos::CudaHostPinnedSpace	typeref:typename:const char *
m_name	Kokkos_CudaSpace.hpp	/^  static constexpr const char* m_name = "CudaUVM";$/;"	m	class:Kokkos::CudaUVMSpace	typeref:typename:const char *
m_name	Kokkos_HostSpace.hpp	/^  static constexpr const char* m_name = "Host";$/;"	m	class:Kokkos::HostSpace	typeref:typename:const char *
m_next	impl/Kokkos_LinkedListNode.hpp	/^  pointer_type m_next = reinterpret_cast<pointer_type>(NotEnqueuedValue);$/;"	m	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:pointer_type
m_next	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationRecord* m_next;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord *
m_next	impl/Kokkos_TaskBase.hpp	/^  TaskBase* m_next      = nullptr;  \/\/\/< next in linked list of ready tasks$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:TaskBase *
m_next_instance_id	Kokkos_HPX.hpp	/^  static std::atomic<uint32_t> m_next_instance_id;$/;"	m	class:Kokkos::Experimental::HPX	typeref:typename:std::atomic<uint32_t>
m_node_impl	Kokkos_GraphNode.hpp	/^  std::shared_ptr<node_impl_t> m_node_impl;$/;"	m	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:std::shared_ptr<node_impl_t>
m_num_blocks	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  size_type m_num_blocks                         = 0;$/;"	m	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:size_type
m_num_entries	impl/Kokkos_VLAEmulation.hpp	/^  vla_entry_count_type m_num_entries;$/;"	m	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:vla_entry_count_type
m_num_threads	Kokkos_HPX.hpp	/^  std::size_t m_num_threads;$/;"	m	class:Kokkos::Impl::thread_buffer	typeref:typename:std::size_t
m_num_tiles	KokkosExp_MDRangePolicy.hpp	/^  index_type m_num_tiles      = 1;$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:index_type
m_num_tiles	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    const typename Policy::index_type m_num_tiles;$/;"	m	struct:Kokkos::Impl::ParallelFor::BarePolicy	typeref:typename:const typename Policy::index_type
m_num_tiles	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    const typename Policy::index_type m_num_tiles;$/;"	m	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:const typename Policy::index_type
m_numa_core_rank	Threads/Kokkos_ThreadsExec.hpp	/^  int m_numa_core_rank;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
m_numa_rank	Threads/Kokkos_ThreadsExec.hpp	/^  int m_numa_rank;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
m_occ	traits/Kokkos_OccupancyControlTrait.hpp	/^  int m_occ = 100;$/;"	m	struct:Kokkos::Experimental::DesiredOccupancy	typeref:typename:int
m_offset	Cuda/Kokkos_Cuda_View.hpp	/^  int m_offset;$/;"	m	struct:Kokkos::Impl::CudaTextureFetch	typeref:typename:int
m_offset	Kokkos_ScratchSpace.hpp	/^  mutable int m_offset        = 0;$/;"	m	class:Kokkos::ScratchMemorySpace	typeref:typename:int
m_old	Kokkos_Timer.hpp	/^  struct timeval m_old;$/;"	m	class:Kokkos::Timer	typeref:struct:timeval
m_other_queues	impl/Kokkos_TaskQueueMultiple.hpp	/^  queue_collection_t* m_other_queues = nullptr;$/;"	m	class:Kokkos::Impl::TaskQueueMultiple	typeref:typename:queue_collection_t *
m_out	Kokkos_Crs.hpp	/^  OutRowMap m_out;$/;"	m	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:OutRowMap
m_policy	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  const Policy m_policy;  \/\/ used for workrange and nwork$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const Policy
m_policy	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const Policy
m_policy	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy
m_policy	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  const Policy m_policy;  \/\/ used for workrange and nwork$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:const Policy
m_policy	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  Policy const m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy const
m_policy	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^  Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy
m_policy	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^  Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy
m_policy	Kokkos_HPX.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Kokkos_HPX.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Kokkos_HPX.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const Policy
m_policy	Kokkos_HPX.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const Policy
m_policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const Policy m_policy;  \/\/ construct as RangePolicy( 0, num_tiles$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const Policy m_policy;  \/\/ construct as RangePolicy( 0, num_tiles$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const Policy
m_policy	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const Policy
m_policy	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^  Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy
m_policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const Policy
m_policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  } m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const struct Kokkos::Impl::ParallelFor::BarePolicy
m_policy	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const BarePolicy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const BarePolicy
m_policy	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:const Policy
m_policy	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  Policy const m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy const
m_policy	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^  Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy
m_policy	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  const Policy m_policy;  \/\/ construct as RangePolicy( 0, num_tiles$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  const Policy m_policy;  \/\/ construct as RangePolicy( 0, num_tiles$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const Policy
m_policy	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const Policy
m_policy	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_policy	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  const Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Policy
m_policy	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  Policy m_policy;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy
m_policy	impl/KokkosExp_IterateTileGPU.hpp	/^  const PolicyType& m_policy;$/;"	m	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:const PolicyType &
m_policy	impl/KokkosExp_IterateTileGPU.hpp	/^  const PolicyType& m_policy;$/;"	m	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:const PolicyType &
m_pool	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  HostThreadTeamData* m_pool[OpenMPTraits::MAX_THREAD_COUNT];$/;"	m	class:Kokkos::Impl::OpenMPInternal	typeref:typename:HostThreadTeamData * []
m_pool	impl/Kokkos_MemoryPoolAllocator.hpp	/^  memory_pool m_pool;$/;"	m	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:memory_pool
m_pool	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  memory_pool m_pool;$/;"	m	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:memory_pool
m_pool_base	Threads/Kokkos_ThreadsExec.hpp	/^  ThreadsExec *const *m_pool_base;  \/\/\/< Base for pool fan-in$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:ThreadsExec * const *
m_pool_fan_size	Threads/Kokkos_ThreadsExec.hpp	/^  int m_pool_fan_size;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
m_pool_members	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { m_pool_members = 0 };$/;"	e	enum:Kokkos::Impl::HostThreadTeamData::__anon9705f8ea0503
m_pool_next	SYCL/Kokkos_SYCL_Instance.hpp	/^  size_t m_pool_next{0};$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:size_t
m_pool_rank	Threads/Kokkos_ThreadsExec.hpp	/^  int m_pool_rank;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
m_pool_rank	impl/Kokkos_HostThreadTeam.hpp	/^  int m_pool_rank;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_pool_rank_rev	Threads/Kokkos_ThreadsExec.hpp	/^  int m_pool_rank_rev;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
m_pool_reduce	impl/Kokkos_HostThreadTeam.hpp	/^    m_pool_reduce = static_cast<int>(m_team_rendezvous) +$/;"	e	enum:Kokkos::Impl::HostThreadTeamData::__anon9705f8ea0803
m_pool_rendezvous	impl/Kokkos_HostThreadTeam.hpp	/^    m_pool_rendezvous =$/;"	e	enum:Kokkos::Impl::HostThreadTeamData::__anon9705f8ea0603
m_pool_rendezvous_step	impl/Kokkos_HostThreadTeam.hpp	/^  int mutable m_pool_rendezvous_step;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_pool_scratch	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* m_pool_scratch;  \/\/ == pool[0]->m_scratch$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
m_pool_size	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  int m_pool_size;$/;"	m	class:Kokkos::Impl::OpenMPInternal	typeref:typename:int
m_pool_size	Threads/Kokkos_ThreadsExec.hpp	/^  int m_pool_size;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
m_pool_size	impl/Kokkos_HostThreadTeam.hpp	/^  int m_pool_size;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_pool_state	Threads/Kokkos_ThreadsExec.hpp	/^  int volatile m_pool_state;  \/\/\/< State for global synchronizations$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int volatile
m_predecessor	impl/Kokkos_TaskNode.hpp	/^  task_base_type* m_predecessor = nullptr;$/;"	m	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:task_base_type *
m_predecessor	impl/Kokkos_TaskPolicyData.hpp	/^  DepFutureType m_predecessor;$/;"	m	struct:Kokkos::Impl::TaskPolicyWithPredecessor	typeref:typename:DepFutureType
m_predecessor	impl/Kokkos_TaskPolicyData.hpp	/^  predecessor_future_type m_predecessor;$/;"	m	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:predecessor_future_type
m_predecessor	impl/Kokkos_TaskQueueCommon.hpp	/^    TaskNode<TaskQueueTraits> const& m_predecessor;$/;"	m	struct:Kokkos::Impl::TaskQueueCommonMixin::_schedule_waiting_tasks_operation	typeref:typename:TaskNode<TaskQueueTraits> const &
m_predecessor_ref	impl/Kokkos_GraphNodeImpl.hpp	/^  PredecessorRef m_predecessor_ref;$/;"	m	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:PredecessorRef
m_prev	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationRecord* m_prev;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord *
m_priority	impl/Kokkos_TaskBase.hpp	/^  int16_t m_priority;   \/\/\/< Priority of runnable task$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:int16_t
m_priority	impl/Kokkos_TaskNode.hpp	/^  priority_type m_priority;  \/\/ size 2$/;"	m	class:Kokkos::Impl::TaskNode	typeref:typename:priority_type
m_priority	impl/Kokkos_TaskPolicyData.hpp	/^  Kokkos::TaskPriority m_priority;$/;"	m	struct:Kokkos::Impl::TaskPolicyWithPredecessor	typeref:typename:Kokkos::TaskPriority
m_priority	impl/Kokkos_TaskPolicyData.hpp	/^  Kokkos::TaskPriority m_priority;$/;"	m	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:Kokkos::TaskPriority
m_prod_tile_dims	KokkosExp_MDRangePolicy.hpp	/^  index_type m_prod_tile_dims = 1;$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:index_type
m_prod_tile_dims	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    const typename Policy::index_type m_prod_tile_dims;$/;"	m	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:const typename Policy::index_type
m_ptr	Cuda/Kokkos_Cuda_View.hpp	/^  const ValueType* m_ptr;$/;"	m	struct:Kokkos::Impl::CudaLDGFetch	typeref:typename:const ValueType *
m_ptr	Cuda/Kokkos_Cuda_View.hpp	/^  const ValueType* m_ptr;$/;"	m	struct:Kokkos::Impl::CudaTextureFetch	typeref:typename:const ValueType *
m_q	SYCL/Kokkos_SYCL_Instance.hpp	/^    std::optional<sycl::queue> m_q;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:std::optional<sycl::queue>
m_queue	Kokkos_SYCL_Space.hpp	/^  sycl::queue m_queue;$/;"	m	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:sycl::queue
m_queue	Kokkos_SYCL_Space.hpp	/^  sycl::queue m_queue;$/;"	m	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:sycl::queue
m_queue	Kokkos_SYCL_Space.hpp	/^  sycl::queue m_queue;$/;"	m	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:sycl::queue
m_queue	Kokkos_TaskScheduler.hpp	/^  queue_type* m_queue;$/;"	m	class:Kokkos::BasicTaskScheduler	typeref:typename:queue_type *
m_queue	Kokkos_WorkGraphPolicy.hpp	/^  ints_type m_queue;$/;"	m	class:Kokkos::WorkGraphPolicy	typeref:typename:ints_type
m_queue	SYCL/Kokkos_SYCL_Instance.hpp	/^  std::optional<sycl::queue> m_queue;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::optional<sycl::queue>
m_queue	impl/Kokkos_SimpleTaskScheduler.hpp	/^  task_queue_type* m_queue = nullptr;$/;"	m	class:Kokkos::SimpleTaskScheduler	typeref:typename:task_queue_type *
m_queue	impl/Kokkos_TaskBase.hpp	/^  queue_type* m_queue   = nullptr;  \/\/\/< Pointer to the scheduler$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:queue_type *
m_queue	impl/Kokkos_TaskQueue.hpp	/^    TaskQueue* m_queue;$/;"	m	struct:Kokkos::Impl::TaskQueue::Destroy	typeref:typename:TaskQueue *
m_queue	impl/Kokkos_TaskQueueCommon.hpp	/^    Derived& m_queue;$/;"	m	struct:Kokkos::Impl::TaskQueueCommonMixin::_schedule_waiting_tasks_operation	typeref:typename:Derived &
m_queue	impl/Kokkos_TaskQueueMultiple.hpp	/^    TaskQueueMultiple* m_queue;$/;"	m	struct:Kokkos::Impl::TaskQueueMultiple::Destroy	typeref:typename:TaskQueueMultiple *
m_queues	impl/Kokkos_TaskQueueMultiple.hpp	/^  } m_queues[max_num_queues];$/;"	m	class:Kokkos::Impl::LeagueQueueCollection	typeref:union:Kokkos::Impl::LeagueQueueCollection::optional_queue[]
m_rank_zero_queue	impl/Kokkos_TaskQueueMultiple.hpp	/^  team_queue_type* m_rank_zero_queue = nullptr;$/;"	m	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:team_queue_type *
m_ready	impl/Kokkos_TaskQueue.hpp	/^  task_root_type* volatile m_ready[NumQueue][2];$/;"	m	class:Kokkos::Impl::TaskQueue	typeref:typename:task_root_type * volatile[][2]
m_ready_count	impl/Kokkos_TaskQueue.hpp	/^  int m_ready_count;      \/\/ Number of ready or executing$/;"	m	class:Kokkos::Impl::TaskQueue	typeref:typename:int
m_ready_count	impl/Kokkos_TaskQueueCommon.hpp	/^  int32_t m_ready_count = 0;$/;"	m	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:int32_t
m_ready_queue_base	impl/Kokkos_TaskNode.hpp	/^  TaskQueueBase* m_ready_queue_base;$/;"	m	class:Kokkos::Impl::TaskNode	typeref:typename:TaskQueueBase *
m_ready_queues	impl/Kokkos_MultipleTaskQueue.hpp	/^  ready_queue_type m_ready_queues[NumPriorities][2];$/;"	m	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:ready_queue_type[][2]
m_ready_queues	impl/Kokkos_SingleTaskQueue.hpp	/^  ready_queue_type m_ready_queues[NumQueue][2];$/;"	m	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:ready_queue_type[][2]
m_record	impl/Kokkos_SharedAlloc.hpp	/^  Record* m_record;$/;"	m	class:Kokkos::Impl::SharedAllocationHeader	typeref:typename:Record *
m_record	impl/Kokkos_SharedAlloc.hpp	/^  Record* m_record;$/;"	m	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:Record *
m_record_bits	impl/Kokkos_SharedAlloc.hpp	/^  uintptr_t m_record_bits;$/;"	m	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:uintptr_t
m_reduce_scratch	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  void* m_reduce_scratch;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:void *
m_reducer	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Kokkos_HPX.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  const ReducerType m_reducer;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const ReducerType
m_reducer	impl/Kokkos_Combined_Reducer.hpp	/^  Reducer m_reducer;$/;"	m	struct:Kokkos::Impl::CombinedReducerStorageImpl	typeref:typename:Reducer
m_ref_count	impl/Kokkos_TaskBase.hpp	/^  int32_t m_ref_count   = 0;$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:int32_t
m_ref_count	impl/Kokkos_TaskNode.hpp	/^  reference_count_size_type m_ref_count = 0;$/;"	m	class:Kokkos::Impl::ReferenceCountedBase	typeref:typename:reference_count_size_type
m_regsPerSM	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_regsPerSM;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_regsPerSM	HIP/Kokkos_HIP_Instance.hpp	/^  int m_regsPerSM;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
m_result_ptr	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Kokkos_HPX.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Kokkos_HPX.hpp	/^  pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:pointer_type
m_result_ptr	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:pointer_type
m_result_ptr	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  const pointer_type m_result_ptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const pointer_type
m_result_ptr_device_accessible	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  const bool m_result_ptr_device_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_device_accessible	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const bool m_result_ptr_device_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_device_accessible	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const bool m_result_ptr_device_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_device_accessible	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  const bool m_result_ptr_device_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_device_accessible	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const bool m_result_ptr_device_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_device_accessible	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  const bool m_result_ptr_device_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_device_accessible	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const bool m_result_ptr_device_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_device_accessible	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  const bool m_result_ptr_device_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_host_accessible	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  const bool m_result_ptr_host_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_host_accessible	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const bool m_result_ptr_host_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_host_accessible	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  const bool m_result_ptr_host_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_host_accessible	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  const bool m_result_ptr_host_accessible;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const bool
m_result_ptr_num_elems	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const int m_result_ptr_num_elems;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const int
m_result_ptr_on_device	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  bool m_result_ptr_on_device;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:bool
m_result_ptr_on_device	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  bool m_result_ptr_on_device;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:bool
m_returnvalue	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  ReturnType& m_returnvalue;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ReturnType &
m_returnvalue	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  ReturnType& m_returnvalue;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ReturnType &
m_returnvalue	Kokkos_HPX.hpp	/^  ReturnType &m_returnvalue;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ReturnType &
m_returnvalue	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  ReturnType& m_returnvalue;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ReturnType &
m_returnvalue	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  value_type& m_returnvalue;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:value_type &
m_returnvalue	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  ReturnType& m_returnvalue;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ReturnType &
m_returnvalue	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  ReturnType& m_returnvalue;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ReturnType &
m_returnvalue	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  ReturnType &m_returnvalue;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:ReturnType &
m_root	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationRecord* const m_root;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:SharedAllocationRecord * const
m_rp	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  const Policy m_rp;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Policy
m_rp	impl/KokkosExp_Host_IterateTile.hpp	/^  RP const& m_rp;$/;"	m	struct:Kokkos::Impl::HostIterateTile	typeref:typename:RP const &
m_run_serial	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  bool m_run_serial;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:bool
m_run_serial	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  bool m_run_serial;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:bool
m_sb_count	Kokkos_MemoryPool.hpp	/^  int32_t m_sb_count;$/;"	m	class:Kokkos::MemoryPool	typeref:typename:int32_t
m_sb_size_lg2	Kokkos_MemoryPool.hpp	/^  uint32_t m_sb_size_lg2;$/;"	m	class:Kokkos::MemoryPool	typeref:typename:uint32_t
m_sb_state_array	Kokkos_MemoryPool.hpp	/^  uint32_t *m_sb_state_array;$/;"	m	class:Kokkos::MemoryPool	typeref:typename:uint32_t *
m_sb_state_size	Kokkos_MemoryPool.hpp	/^  uint32_t m_sb_state_size;$/;"	m	class:Kokkos::MemoryPool	typeref:typename:uint32_t
m_scheduler	Cuda/Kokkos_Cuda_Task.hpp	/^  Scheduler m_scheduler;$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:Scheduler
m_scheduler	impl/Kokkos_TaskPolicyData.hpp	/^  Scheduler m_scheduler;$/;"	m	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:Scheduler
m_scheduler	impl/Kokkos_TaskTeamMember.hpp	/^  Scheduler m_scheduler;$/;"	m	class:Kokkos::Impl::TaskTeamMemberAdapter	typeref:typename:Scheduler
m_scratch	Threads/Kokkos_ThreadsExec.hpp	/^  void *m_scratch;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:void *
m_scratch	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* m_scratch;       \/\/ per-thread buffer$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
m_scratch	impl/Kokkos_HostThreadTeam.hpp	/^  scratch_memory_space m_scratch;$/;"	m	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:scratch_memory_space
m_scratchFlags	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable size_type* m_scratchFlags;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:size_type *
m_scratchFlags	HIP/Kokkos_HIP_Instance.hpp	/^  size_type *m_scratchFlags = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:size_type *
m_scratchFlags	SYCL/Kokkos_SYCL_Instance.hpp	/^  sycl::device_ptr<size_type> m_scratchFlags = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:sycl::device_ptr<size_type>
m_scratchFlagsCount	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable std::size_t m_scratchFlagsCount;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::size_t
m_scratchFlagsCount	HIP/Kokkos_HIP_Instance.hpp	/^  std::size_t m_scratchFlagsCount = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:std::size_t
m_scratchFlagsCount	SYCL/Kokkos_SYCL_Instance.hpp	/^  std::size_t m_scratchFlagsCount            = 0;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::size_t
m_scratchFunctor	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable size_type* m_scratchFunctor;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:size_type *
m_scratchFunctorSize	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable std::size_t m_scratchFunctorSize;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::size_t
m_scratchSpace	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable size_type* m_scratchSpace;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:size_type *
m_scratchSpace	HIP/Kokkos_HIP_Instance.hpp	/^  size_type *m_scratchSpace = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:size_type *
m_scratchSpace	SYCL/Kokkos_SYCL_Instance.hpp	/^  sycl::device_ptr<size_type> m_scratchSpace = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:sycl::device_ptr<size_type>
m_scratchSpaceCount	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable std::size_t m_scratchSpaceCount;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::size_t
m_scratchSpaceCount	HIP/Kokkos_HIP_Instance.hpp	/^  std::size_t m_scratchSpaceCount = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:std::size_t
m_scratchSpaceCount	SYCL/Kokkos_SYCL_Instance.hpp	/^  std::size_t m_scratchSpaceCount            = 0;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::size_t
m_scratchUnified	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable size_type* m_scratchUnified;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:size_type *
m_scratchUnifiedCount	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable std::size_t m_scratchUnifiedCount;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::size_t
m_scratchUnifiedSupported	Cuda/Kokkos_Cuda_Instance.hpp	/^  size_type m_scratchUnifiedSupported;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:size_type
m_scratch_flags	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  size_type* m_scratch_flags;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_flags	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  Cuda::size_type* m_scratch_flags;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:Cuda::size_type *
m_scratch_flags	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  size_type* m_scratch_flags;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:size_type *
m_scratch_flags	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  size_type* m_scratch_flags;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:size_type *
m_scratch_flags	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_type* m_scratch_flags;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_flags	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  size_type* m_scratch_flags;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_flags	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  size_type* m_scratch_flags      = nullptr;$/;"	m	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:size_type *
m_scratch_flags	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  size_type* m_scratch_flags = nullptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_flags	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_type* m_scratch_flags;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_lock	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  std::scoped_lock<std::mutex> m_scratch_lock;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:std::scoped_lock<std::mutex>
m_scratch_lock	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  std::scoped_lock<std::mutex> m_scratch_lock;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::scoped_lock<std::mutex>
m_scratch_lock_guard	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  std::lock_guard<std::mutex> m_scratch_lock_guard;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:std::lock_guard<std::mutex>
m_scratch_lock_guard	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  std::lock_guard<std::mutex> m_scratch_lock_guard;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::lock_guard<std::mutex>
m_scratch_locks	Cuda/Kokkos_Cuda_Instance.hpp	/^  std::int32_t* m_scratch_locks;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::int32_t *
m_scratch_locks	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int32_t* m_scratch_locks;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int32_t *
m_scratch_locks	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int32_t* m_scratch_locks;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int32_t *
m_scratch_locks	HIP/Kokkos_HIP_Instance.hpp	/^  std::int32_t *m_scratch_locks;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:std::int32_t *
m_scratch_locks	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int32_t* m_scratch_locks;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int32_t *
m_scratch_locks	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int32_t* m_scratch_locks;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int32_t *
m_scratch_pool_id	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_scratch_pool_id = -1;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_scratch_pool_id	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_scratch_pool_id = -1;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
m_scratch_ptr	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  void* m_scratch_ptr[2];$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:void * [2]
m_scratch_ptr	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  void* m_scratch_ptr[2];$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:void * [2]
m_scratch_ptr	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  void* m_scratch_ptr[2];$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:void * [2]
m_scratch_ptr	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  void* m_scratch_ptr[2];$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:void * [2]
m_scratch_ptr	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^void* OpenMPTargetExec::m_scratch_ptr         = nullptr;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void *
m_scratch_ptr	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  static void* m_scratch_ptr;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void *
m_scratch_reduce_end	Threads/Kokkos_ThreadsExec.hpp	/^  int m_scratch_reduce_end;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:int
m_scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_t m_scratch_size[2];$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:size_t[2]
m_scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_t m_scratch_size[2];$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_t[2]
m_scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_t m_scratch_size[2];$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:size_t[2]
m_scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_t m_scratch_size[2];$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_t[2]
m_scratch_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^int64_t OpenMPTargetExec::m_scratch_size      = 0;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:int64_t
m_scratch_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  static int64_t m_scratch_size;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:int64_t
m_scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_t m_scratch_size[2];$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:size_t[2]
m_scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_t m_scratch_size[2];$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_t[2]
m_scratch_size	impl/Kokkos_HostThreadTeam.hpp	/^  size_t m_scratch_size;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
m_scratch_space	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  size_type* m_scratch_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_space	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  word_size_type* m_scratch_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:word_size_type *
m_scratch_space	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  word_size_type* m_scratch_space;$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:word_size_type *
m_scratch_space	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  word_size_type* m_scratch_space;$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:word_size_type *
m_scratch_space	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_type* m_scratch_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_space	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  size_type* m_scratch_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_space	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  size_type* m_scratch_space = nullptr;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_space	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  word_size_type* m_scratch_space = nullptr;$/;"	m	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:word_size_type *
m_scratch_space	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_type* m_scratch_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_scratch_space	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  pointer_type m_scratch_space = nullptr;$/;"	m	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:pointer_type
m_scratch_thread_end	Threads/Kokkos_ThreadsExec.hpp	/^  size_t m_scratch_thread_end;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:size_t
m_self_exec	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  PoolExec* const m_self_exec;  \/\/\/< This thread's thread pool data structure$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:PoolExec * const
m_shared	Kokkos_HPX.hpp	/^  const std::size_t m_shared;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const std::size_t
m_shared	Kokkos_HPX.hpp	/^  const std::size_t m_shared;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const std::size_t
m_shared	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const size_t m_shared;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const size_t
m_shared	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  size_t m_shared;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_t
m_shared	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  const size_t m_shared;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const size_t
m_shared	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  const size_t m_shared;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const size_t
m_shared_memory_lock	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  std::lock_guard<std::mutex> m_shared_memory_lock;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::lock_guard<std::mutex>
m_shared_memory_lock	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  std::lock_guard<std::mutex> m_shared_memory_lock;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::lock_guard<std::mutex>
m_shared_memory_lock	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  std::lock_guard<std::mutex> m_shared_memory_lock;$/;"	m	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:std::lock_guard<std::mutex>
m_shared_memory_lock	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  std::scoped_lock<std::mutex> m_shared_memory_lock;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:std::scoped_lock<std::mutex>
m_shared_memory_lock	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  std::scoped_lock<std::mutex> m_shared_memory_lock;$/;"	m	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:std::scoped_lock<std::mutex>
m_shmemPerSM	Cuda/Kokkos_Cuda_Instance.hpp	/^  int m_shmemPerSM;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int
m_shmemPerSM	HIP/Kokkos_HIP_Instance.hpp	/^  int m_shmemPerSM       = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
m_shmem_begin	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_shmem_begin;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_shmem_begin	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_type m_shmem_begin;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type
m_shmem_begin	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int m_shmem_begin;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_shmem_begin	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_type m_shmem_begin;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type
m_shmem_begin	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int m_shmem_begin;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_shmem_begin	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_type m_shmem_begin;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type
m_shmem_block_index	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_shmem_block_index;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:int
m_shmem_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_shmem_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_type m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type
m_shmem_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_shmem_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_type m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type
m_shmem_size	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const int m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const int
m_shmem_size	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  const size_t m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const size_t
m_shmem_size	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const size_t m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const size_t
m_shmem_size	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const size_t m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const size_t
m_shmem_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_shmem_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_type m_shmem_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type
m_sinks	impl/Kokkos_Default_Graph_Impl.hpp	/^  std::set<std::shared_ptr<node_details_t>> m_sinks;$/;"	m	struct:Kokkos::Impl::GraphImpl	typeref:typename:std::set<std::shared_ptr<node_details_t>>
m_size	Kokkos_Array.hpp	/^  size_t m_size;$/;"	v	namespace:Kokkos	typeref:struct:Array size_t
m_size	impl/Kokkos_ChaseLev.hpp	/^  size_type m_size                     = 0;$/;"	m	struct:Kokkos::Impl::non_owning_variable_size_circular_buffer	typeref:typename:size_type
m_size	impl/Kokkos_HostBarrier.hpp	/^  int m_size{0};$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
m_size	impl/Kokkos_TaskQueueMultiple.hpp	/^  int m_size = static_cast<int>(KOKKOS_INVALID_INDEX);$/;"	m	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:int
m_size_per_thread	Kokkos_HPX.hpp	/^  std::size_t m_size_per_thread;$/;"	m	class:Kokkos::Impl::thread_buffer	typeref:typename:std::size_t
m_size_total	Kokkos_HPX.hpp	/^  std::size_t m_size_total;$/;"	m	class:Kokkos::Impl::thread_buffer	typeref:typename:std::size_t
m_space	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  typename traits::execution_space m_space;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:traits::execution_space
m_space	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  typename traits::execution_space m_space;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:traits::execution_space
m_space	KokkosExp_MDRangePolicy.hpp	/^  typename traits::execution_space m_space;$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:traits::execution_space
m_space	Kokkos_CudaSpace.hpp	/^  const Kokkos::CudaHostPinnedSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::CudaHostPinnedSpace
m_space	Kokkos_CudaSpace.hpp	/^  const Kokkos::CudaSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::CudaSpace
m_space	Kokkos_CudaSpace.hpp	/^  const Kokkos::CudaUVMSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::CudaUVMSpace
m_space	Kokkos_ExecPolicy.hpp	/^  typename traits::execution_space m_space;$/;"	m	class:Kokkos::RangePolicy	typeref:typename:traits::execution_space
m_space	Kokkos_HBWSpace.hpp	/^  const Kokkos::Experimental::HBWSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::HBWSpace
m_space	Kokkos_HIP_Space.hpp	/^  const Kokkos::Experimental::HIPHostPinnedSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::HIPHostPinnedSpace
m_space	Kokkos_HIP_Space.hpp	/^  const Kokkos::Experimental::HIPManagedSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::HIPManagedSpace
m_space	Kokkos_HIP_Space.hpp	/^  const Kokkos::Experimental::HIPSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::HIPSpace
m_space	Kokkos_HPX.hpp	/^    HPX const &m_space;$/;"	m	struct:Kokkos::Experimental::HPX::reset_on_exit_parallel	typeref:typename:HPX const &
m_space	Kokkos_HostSpace.hpp	/^  const Kokkos::HostSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::HostSpace
m_space	Kokkos_LogicalSpaces.hpp	/^  const SpaceType m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const SpaceType
m_space	Kokkos_OpenMPTargetSpace.hpp	/^  const Kokkos::Experimental::OpenMPTargetSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::OpenMPTargetSpace
m_space	Kokkos_SYCL_Space.hpp	/^  const Kokkos::Experimental::SYCLDeviceUSMSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::SYCLDeviceUSMSpace
m_space	Kokkos_SYCL_Space.hpp	/^  const Kokkos::Experimental::SYCLHostUSMSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::SYCLHostUSMSpace
m_space	Kokkos_SYCL_Space.hpp	/^  const Kokkos::Experimental::SYCLSharedUSMSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::SYCLSharedUSMSpace
m_space	Kokkos_Tuners.hpp	/^  StoredProblemSpace m_space;$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:StoredProblemSpace
m_space	OpenACC/Kokkos_OpenACCSpace.hpp	/^  const Kokkos::Experimental::OpenACCSpace m_space;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:const Kokkos::Experimental::OpenACCSpace
m_space	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  const Kokkos::Experimental::SYCL& m_space;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const Kokkos::Experimental::SYCL &
m_space	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const Kokkos::Experimental::SYCL& m_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const Kokkos::Experimental::SYCL &
m_space	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  typename traits::execution_space m_space;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:traits::execution_space
m_space_instance	Kokkos_Cuda.hpp	/^  Kokkos::Impl::HostSharedPtr<Impl::CudaInternal> m_space_instance;$/;"	m	class:Kokkos::Cuda	typeref:typename:Kokkos::Impl::HostSharedPtr<Impl::CudaInternal>
m_space_instance	Kokkos_HIP_Space.hpp	/^  Kokkos::Impl::HostSharedPtr<Impl::HIPInternal> m_space_instance;$/;"	m	class:Kokkos::Experimental::HIP	typeref:typename:Kokkos::Impl::HostSharedPtr<Impl::HIPInternal>
m_space_instance	Kokkos_OpenMP.hpp	/^  Impl::OpenMPInternal* m_space_instance;$/;"	m	class:Kokkos::OpenMP	typeref:typename:Impl::OpenMPInternal *
m_space_instance	Kokkos_OpenMPTarget.hpp	/^  Impl::OpenMPTargetInternal* m_space_instance;$/;"	m	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:Impl::OpenMPTargetInternal *
m_space_instance	Kokkos_SYCL.hpp	/^  Kokkos::Impl::HostSharedPtr<Impl::SYCLInternal> m_space_instance;$/;"	m	class:Kokkos::Experimental::SYCL	typeref:typename:Kokkos::Impl::HostSharedPtr<Impl::SYCLInternal>
m_space_instance	Kokkos_Serial.hpp	/^  Impl::SerialInternal* m_space_instance;$/;"	m	class:Kokkos::Serial	typeref:typename:Impl::SerialInternal *
m_space_instance	OpenACC/Kokkos_OpenACC.hpp	/^  Impl::OpenACCInternal* m_space_instance = nullptr;$/;"	m	class:Kokkos::Experimental::OpenACC	typeref:typename:Impl::OpenACCInternal *
m_staging	SYCL/Kokkos_SYCL_Instance.hpp	/^    std::unique_ptr<char[]> m_staging;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:std::unique_ptr<char[]>
m_steal_rank	impl/Kokkos_HostThreadTeam.hpp	/^  int m_steal_rank;  \/\/ work stealing rank$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_stealing	Threads/Kokkos_ThreadsExec.hpp	/^  bool m_stealing;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:bool
m_step	impl/Kokkos_HostBarrier.hpp	/^  mutable int m_step{0};$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
m_storage	SYCL/Kokkos_SYCL_Instance.hpp	/^  std::reference_wrapper<Storage> m_storage;$/;"	m	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:std::reference_wrapper<Storage>
m_stream	Cuda/Kokkos_Cuda_Instance.hpp	/^  cudaStream_t m_stream;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:cudaStream_t
m_stream	HIP/Kokkos_HIP_Instance.hpp	/^  hipStream_t m_stream   = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:hipStream_t
m_streamCount	Cuda/Kokkos_Cuda_Instance.hpp	/^  size_type m_streamCount;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:size_type
m_stride	impl/Kokkos_ViewArray.hpp	/^  size_t m_stride = 0;$/;"	v	namespace:Kokkos::Impl	typeref:typename:size_t
m_syclDev	SYCL/Kokkos_SYCL_Instance.hpp	/^  int m_syclDev = 0;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:int
m_sync_mask	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  int64_t m_sync_mask;$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:int64_t
m_sync_step	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  int mutable m_sync_step;$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:int
m_sync_value	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  int64_t mutable m_sync_value;$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:int64_t
m_tag	impl/KokkosExp_Host_IterateTile.hpp	/^  std::conditional_t<std::is_void<Tag>::value, int, Tag> m_tag;$/;"	m	struct:Kokkos::Impl::HostIterateTile	typeref:typename:std::conditional_t<std::is_void<Tag>::value,int,Tag>
m_task	Kokkos_Future.hpp	/^  task_base* m_task;$/;"	m	class:Kokkos::BasicFuture	typeref:typename:task_base *
m_task_type	impl/Kokkos_TaskBase.hpp	/^  int16_t m_task_type;  \/\/\/< Type of task$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:int16_t
m_task_type	impl/Kokkos_TaskNode.hpp	/^  TaskType m_task_type;      \/\/ size 2$/;"	m	class:Kokkos::Impl::TaskNode	typeref:typename:TaskType
m_team_alloc	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int m_team_alloc;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_alloc	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_team_alloc;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_alloc	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_team_alloc;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_alloc	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_team_alloc;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_team_alloc	impl/Kokkos_HostThreadTeam.hpp	/^  int m_team_alloc;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_team_base	Threads/Kokkos_ThreadsTeam.hpp	/^  ThreadsExec* const* m_team_base;  \/\/\/< Base for team fan-in$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:ThreadsExec * const *
m_team_base	impl/Kokkos_HostThreadTeam.hpp	/^  int m_team_base;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_team_begin	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_type m_team_begin;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type
m_team_begin	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_type m_team_begin;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type
m_team_exec	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  PoolExec* const m_team_exec;  \/\/\/< Team thread's thread pool data structure$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:PoolExec * const
m_team_iter	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int m_team_iter;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_iter	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_team_iter;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_iter	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_team_iter;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_rank	Kokkos_HPX.hpp	/^  int m_team_rank;$/;"	m	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:int
m_team_rank	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_team_rank;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:int
m_team_rank	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  int m_team_rank;   \/\/\/< Which thread within a team$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:int
m_team_rank	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_team_rank;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_team_rank	impl/Kokkos_HostThreadTeam.hpp	/^  int m_team_rank;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_team_rank_rev	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_team_rank_rev;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_team_reduce	Cuda/Kokkos_Cuda_Team.hpp	/^  mutable void* m_team_reduce;$/;"	m	class:Kokkos::Impl::CudaTeamMember	typeref:typename:void *
m_team_reduce	HIP/Kokkos_HIP_Team.hpp	/^  mutable void* m_team_reduce;$/;"	m	class:Kokkos::Impl::HIPTeamMember	typeref:typename:void *
m_team_reduce	SYCL/Kokkos_SYCL_Team.hpp	/^  mutable sycl::local_ptr<void> m_team_reduce;$/;"	m	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:sycl::local_ptr<void>
m_team_reduce	impl/Kokkos_HostThreadTeam.hpp	/^  size_t m_team_reduce;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
m_team_reduce_size	Cuda/Kokkos_Cuda_Team.hpp	/^  int m_team_reduce_size;$/;"	m	class:Kokkos::Impl::CudaTeamMember	typeref:typename:int
m_team_reduce_size	HIP/Kokkos_HIP_Team.hpp	/^  int m_team_reduce_size;$/;"	m	class:Kokkos::Impl::HIPTeamMember	typeref:typename:int
m_team_reduce_size	SYCL/Kokkos_SYCL_Team.hpp	/^  int m_team_reduce_size;$/;"	m	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:int
m_team_rendezvous	impl/Kokkos_HostThreadTeam.hpp	/^    m_team_rendezvous = static_cast<int>(m_pool_rendezvous) +$/;"	e	enum:Kokkos::Impl::HostThreadTeamData::__anon9705f8ea0703
m_team_rendezvous_step	impl/Kokkos_HostThreadTeam.hpp	/^  int mutable m_team_rendezvous_step;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_team_scratch	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* m_team_scratch;  \/\/ == pool[ 0 + m_team_base ]->m_scratch$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
m_team_scratch_current_size	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable int64_t m_team_scratch_current_size[10];$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:int64_t[10]
m_team_scratch_current_size	HIP/Kokkos_HIP_Instance.hpp	/^  mutable int64_t m_team_scratch_current_size = 0;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int64_t
m_team_scratch_current_size	SYCL/Kokkos_SYCL_Instance.hpp	/^  int64_t m_team_scratch_current_size       = 0;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:int64_t
m_team_scratch_mutex	HIP/Kokkos_HIP_Instance.hpp	/^  mutable std::mutex m_team_scratch_mutex;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:std::mutex
m_team_scratch_mutex	SYCL/Kokkos_SYCL_Instance.hpp	/^  mutable std::mutex m_team_scratch_mutex;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::mutex
m_team_scratch_pool	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable std::atomic_int m_team_scratch_pool[10];$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:std::atomic_int[10]
m_team_scratch_ptr	Cuda/Kokkos_Cuda_Instance.hpp	/^  mutable void* m_team_scratch_ptr[10];$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:void * [10]
m_team_scratch_ptr	HIP/Kokkos_HIP_Instance.hpp	/^  mutable void *m_team_scratch_ptr            = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:void *
m_team_scratch_ptr	SYCL/Kokkos_SYCL_Instance.hpp	/^  sycl::device_ptr<void> m_team_scratch_ptr = nullptr;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:sycl::device_ptr<void>
m_team_scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_t m_team_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_team_scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_t m_team_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_team_scratch_size	Kokkos_HPX.hpp	/^  std::size_t m_team_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:std::size_t[2]
m_team_scratch_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  size_t m_team_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_team_scratch_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  size_t m_team_scratch_size[2];$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:size_t[2]
m_team_scratch_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  std::array<size_t, 2> m_team_scratch_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:std::array<size_t,2>
m_team_scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_t m_team_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_team_scratch_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  size_t m_team_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_team_scratch_size	Threads/Kokkos_ThreadsTeam.hpp	/^  size_t m_team_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_team_shared	Cuda/Kokkos_Cuda_Team.hpp	/^  scratch_memory_space m_team_shared;$/;"	m	class:Kokkos::Impl::CudaTeamMember	typeref:typename:scratch_memory_space
m_team_shared	HIP/Kokkos_HIP_Team.hpp	/^  scratch_memory_space m_team_shared;$/;"	m	class:Kokkos::Impl::HIPTeamMember	typeref:typename:scratch_memory_space
m_team_shared	Kokkos_HPX.hpp	/^  scratch_memory_space m_team_shared;$/;"	m	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:scratch_memory_space
m_team_shared	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  scratch_memory_space m_team_shared;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:scratch_memory_space
m_team_shared	SYCL/Kokkos_SYCL_Team.hpp	/^  scratch_memory_space m_team_shared;$/;"	m	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:scratch_memory_space
m_team_shared	Threads/Kokkos_ThreadsTeam.hpp	/^  space m_team_shared;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:space
m_team_shared	impl/Kokkos_HostThreadTeam.hpp	/^  size_t m_team_shared;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
m_team_shared_size	Threads/Kokkos_ThreadsTeam.hpp	/^  size_t m_team_shared_size;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:size_t
m_team_shmem	Cuda/Kokkos_Cuda_Task.hpp	/^  int32_t* m_team_shmem;$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:int32_t *
m_team_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_team_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
m_team_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_size	Cuda/Kokkos_Cuda_Task.hpp	/^  const int m_team_size;$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:const int
m_team_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_team_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
m_team_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_size	Kokkos_HPX.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_size	Kokkos_HPX.hpp	/^  int m_team_size;$/;"	m	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:int
m_team_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:int
m_team_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_size	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::TaskExec	typeref:typename:int
m_team_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:int
m_team_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
m_team_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_size	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_team_size	Threads/Kokkos_ThreadsTeam.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:int
m_team_size	impl/Kokkos_HostThreadTeam.hpp	/^  int m_team_size;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_team_work_index	Threads/Kokkos_ThreadsExec.hpp	/^  long m_team_work_index;$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:long
m_thread_local	impl/Kokkos_HostThreadTeam.hpp	/^  size_t m_thread_local;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
m_thread_scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_t m_thread_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_thread_scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_t m_thread_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_thread_scratch_size	Kokkos_HPX.hpp	/^  std::size_t m_thread_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:std::size_t[2]
m_thread_scratch_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  size_t m_thread_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_thread_scratch_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  std::array<size_t, 2> m_thread_scratch_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:std::array<size_t,2>
m_thread_scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_t m_thread_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_thread_scratch_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  size_t m_thread_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_thread_scratch_size	Threads/Kokkos_ThreadsTeam.hpp	/^  size_t m_thread_scratch_size[2];$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t[2]
m_thread_team_data	Kokkos_Serial.hpp	/^  HostThreadTeamData m_thread_team_data;$/;"	m	class:Kokkos::Impl::SerialInternal	typeref:typename:HostThreadTeamData
m_thread_team_data_mutex	Kokkos_Serial.hpp	/^  std::mutex m_thread_team_data_mutex;$/;"	m	class:Kokkos::Impl::SerialInternal	typeref:typename:std::mutex
m_tile	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    const typename Policy::tile_type m_tile;$/;"	m	struct:Kokkos::Impl::ParallelFor::BarePolicy	typeref:typename:const typename Policy::tile_type
m_tile	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    const typename Policy::tile_type m_tile;$/;"	m	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:const typename Policy::tile_type
m_tile_end	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    const typename Policy::point_type m_tile_end;$/;"	m	struct:Kokkos::Impl::ParallelFor::BarePolicy	typeref:typename:const typename Policy::point_type
m_tile_end	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    const typename Policy::point_type m_tile_end;$/;"	m	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:const typename Policy::point_type
m_top	impl/Kokkos_ChaseLev.hpp	/^  size_type m_top    = 0;$/;"	m	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:size_type
m_track	Kokkos_TaskScheduler.hpp	/^  track_type m_track;$/;"	m	class:Kokkos::BasicTaskScheduler	typeref:typename:track_type
m_track	Kokkos_View.hpp	/^  view_tracker_type m_track;$/;"	m	class:Kokkos::View	typeref:typename:view_tracker_type
m_track	impl/Kokkos_SimpleTaskScheduler.hpp	/^  track_type m_track;$/;"	m	class:Kokkos::SimpleTaskScheduler	typeref:typename:track_type
m_tracker	Kokkos_MemoryPool.hpp	/^  Tracker m_tracker;$/;"	m	class:Kokkos::MemoryPool	typeref:typename:Tracker
m_tracker	impl/Kokkos_ViewTracker.hpp	/^  track_type m_tracker;$/;"	m	struct:Kokkos::Impl::ViewTracker	typeref:typename:track_type
m_tune_team	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  bool m_tune_team;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_team	OpenMP/Kokkos_OpenMP_Team.hpp	/^  bool m_tune_team;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_team_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  bool m_tune_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_team_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  bool m_tune_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_team_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  bool m_tune_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_team_size	Threads/Kokkos_ThreadsTeam.hpp	/^  bool m_tune_team_size;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_tile_size	KokkosExp_MDRangePolicy.hpp	/^  bool m_tune_tile_size       = false;$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:bool
m_tune_vector	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  bool m_tune_vector;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_vector	OpenMP/Kokkos_OpenMP_Team.hpp	/^  bool m_tune_vector;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_vector_length	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  bool m_tune_vector_length;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_vector_length	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  bool m_tune_vector_length;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_vector_length	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  bool m_tune_vector_length;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_tune_vector_length	Threads/Kokkos_ThreadsTeam.hpp	/^  bool m_tune_vector_length;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:bool
m_unified_space	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  size_type* m_unified_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_unified_space	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  word_size_type* m_unified_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:word_size_type *
m_unified_space	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_type* m_unified_space;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:size_type *
m_uniquetoken_ptr	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^uint32_t* OpenMPTargetExec::m_uniquetoken_ptr = nullptr;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:uint32_t *
m_uniquetoken_ptr	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  static uint32_t* m_uniquetoken_ptr;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:uint32_t *
m_unused_padding	Kokkos_MemoryPool.hpp	/^  int32_t m_unused_padding;$/;"	m	class:Kokkos::MemoryPool	typeref:typename:int32_t
m_upper	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^    const typename Policy::point_type m_upper;$/;"	m	struct:Kokkos::Impl::ParallelFor::BarePolicy	typeref:typename:const typename Policy::point_type
m_upper	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    const typename Policy::point_type m_upper;$/;"	m	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:const typename Policy::point_type
m_usm_pool_size	SYCL/Kokkos_SYCL_Instance.hpp	/^  const static size_t m_usm_pool_size = 4;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:const size_t
m_v	impl/KokkosExp_Host_IterateTile.hpp	/^  value_type& m_v;$/;"	m	struct:Kokkos::Impl::HostIterateTile	typeref:typename:value_type &
m_v	impl/KokkosExp_Host_IterateTile.hpp	/^  value_type* m_v;$/;"	m	struct:Kokkos::Impl::HostIterateTile	typeref:typename:value_type *
m_v	impl/KokkosExp_IterateTileGPU.hpp	/^  value_type_storage m_v;$/;"	m	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:value_type_storage
m_value	impl/Kokkos_Combined_Reducer.hpp	/^  value_type m_value;$/;"	m	struct:Kokkos::Impl::CombinedReducerValueItemImpl	typeref:typename:value_type
m_value	impl/Kokkos_OptionalRef.hpp	/^  ObservingRawPtr<T> m_value = nullptr;$/;"	m	struct:Kokkos::Impl::OptionalRef	typeref:typename:ObservingRawPtr<T>
m_value_buffer	Kokkos_HPX.hpp	/^    char *m_value_buffer;$/;"	m	class:Kokkos::Impl::ParallelReduce::value_type_wrapper	typeref:typename:char *
m_value_size	Kokkos_HPX.hpp	/^    std::size_t m_value_size;$/;"	m	class:Kokkos::Impl::ParallelReduce::value_type_wrapper	typeref:typename:std::size_t
m_value_view	impl/Kokkos_Combined_Reducer.hpp	/^  result_view_type m_value_view;$/;"	m	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:result_view_type
m_variable_names	Kokkos_Tuners.hpp	/^  std::vector<std::string> m_variable_names;$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:std::vector<std::string>
m_vector_lane	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_vector_lane;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:int
m_vector_length	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int m_vector_length;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_vector_length	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int m_vector_length;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_vector_length	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_vector_length;$/;"	m	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:int
m_vector_length	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  int m_vector_length;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_vector_length	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int m_vector_length;$/;"	m	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
m_vector_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const size_type m_vector_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const size_type
m_vector_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const size_type m_vector_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const size_type
m_vector_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  const size_type m_vector_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const size_type
m_vector_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_type const m_vector_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:size_type const
m_vector_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  const size_type m_vector_size;$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const size_type
m_vector_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_type const m_vector_size;$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:size_type const
m_wait	impl/Kokkos_TaskBase.hpp	/^  TaskBase* m_wait      = nullptr;  \/\/\/< Queue of tasks waiting on this$/;"	m	class:Kokkos::Impl::TaskBase	typeref:typename:TaskBase *
m_wait_queue	impl/Kokkos_TaskNode.hpp	/^  waiting_queue_type m_wait_queue;  \/\/ size 8+$/;"	m	class:Kokkos::Impl::TaskNode	typeref:typename:waiting_queue_type
m_work_chunk	impl/Kokkos_HostThreadTeam.hpp	/^  int m_work_chunk;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
m_work_end	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t m_work_end;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t
m_work_range	Threads/Kokkos_ThreadsExec.hpp	/^  Kokkos::pair<long, long> m_work_range __attribute__((aligned(16)));$/;"	m	class:Kokkos::Impl::ThreadsExec	typeref:typename:Kokkos::pair<long,long>
m_work_range	impl/Kokkos_HostThreadTeam.hpp	/^  pair_int_t m_work_range;$/;"	m	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:pair_int_t
machineeps	Kokkos_NumericTraits.hpp	/^  constexpr T machineeps() {$/;"	f	namespace:Kokkos::Experimental::Impl::__anon81622fd60110	typeref:typename:T
main_col	impl/Kokkos_Stacktrace.cpp	/^  size_t main_col;$/;"	m	struct:Kokkos::Impl::main_column_info	typeref:typename:size_t	file:
main_col_lens	impl/Kokkos_Stacktrace.cpp	/^  std::vector<size_t> main_col_lens;$/;"	m	struct:Kokkos::Impl::main_column_info	typeref:typename:std::vector<size_t>	file:
main_column_info	impl/Kokkos_Stacktrace.cpp	/^struct main_column_info {$/;"	s	namespace:Kokkos::Impl	file:
make_all_extents_into_pointers	impl/Kokkos_Traits.hpp	/^struct make_all_extents_into_pointers {$/;"	s	namespace:Kokkos::Impl
make_all_extents_into_pointers	impl/Kokkos_Traits.hpp	/^struct make_all_extents_into_pointers<T*> {$/;"	s	namespace:Kokkos::Impl
make_all_extents_into_pointers	impl/Kokkos_Traits.hpp	/^struct make_all_extents_into_pointers<T[N]> {$/;"	s	namespace:Kokkos::Impl
make_candidate_range	impl/Kokkos_Profiling.cpp	/^SetOrRange make_candidate_range(double lower, double upper, double step,$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:SetOrRange
make_candidate_range	impl/Kokkos_Profiling.cpp	/^SetOrRange make_candidate_range(int64_t lower, int64_t upper, int64_t step,$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:SetOrRange
make_candidate_set	impl/Kokkos_Profiling.cpp	/^SetOrRange make_candidate_set(size_t size, double* data) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:SetOrRange
make_candidate_set	impl/Kokkos_Profiling.cpp	/^SetOrRange make_candidate_set(size_t size, int64_t* data) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:SetOrRange
make_candidate_set	impl/Kokkos_Profiling.cpp	/^SetOrRange make_candidate_set(size_t size, std::string* data) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:SetOrRange
make_categorical_tuner	Kokkos_Tuners.hpp	/^auto make_categorical_tuner(std::string name, std::vector<Choice> choices)$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:CategoricalTuner<Choice>
make_combined_reducer	impl/Kokkos_Combined_Reducer.hpp	/^KOKKOS_INLINE_FUNCTION constexpr auto make_combined_reducer($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION auto
make_combined_reducer_value	impl/Kokkos_Combined_Reducer.hpp	/^KOKKOS_INLINE_FUNCTION constexpr auto make_combined_reducer_value($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION auto
make_graph_node_ref	impl/Kokkos_GraphImpl.hpp	/^  static auto make_graph_node_ref($/;"	f	struct:Kokkos::Impl::GraphAccess	typeref:typename:auto
make_multidimensional_sparse_tuning_problem	Kokkos_Tuners.hpp	/^auto make_multidimensional_sparse_tuning_problem($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:auto
make_node_shared_ptr	impl/Kokkos_GraphImpl.hpp	/^  static auto make_node_shared_ptr(Args&&... args) {$/;"	f	struct:Kokkos::Impl::GraphAccess	typeref:typename:auto
make_pair	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr pair<T1, T2> make_pair(T1 x, T2 y) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION pair<T1,T2>
make_space_handle	impl/Kokkos_Profiling.cpp	/^SpaceHandle make_space_handle(const char* space_name) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:SpaceHandle
make_space_handle	impl/Kokkos_Profiling.cpp	/^SpaceHandle make_space_handle(const char* space_name) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:SpaceHandle
make_sycl_function_wrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^auto make_sycl_function_wrapper(const Functor& functor, Storage& storage) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:auto
make_variable_value	impl/Kokkos_Profiling.cpp	/^VariableValue make_variable_value(size_t id, const std::string& val) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:VariableValue
make_variable_value	impl/Kokkos_Profiling.cpp	/^VariableValue make_variable_value(size_t id, double val) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:VariableValue
make_variable_value	impl/Kokkos_Profiling.cpp	/^VariableValue make_variable_value(size_t id, int64_t val) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:VariableValue
make_wrapped_combined_functor	impl/Kokkos_Combined_Reducer.hpp	/^KOKKOS_INLINE_FUNCTION constexpr auto make_wrapped_combined_functor($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION auto
managed_object	impl/Kokkos_SimpleTaskScheduler.hpp	/^  T* managed_object;$/;"	m	struct:Kokkos::Impl::DefaultDestroy	typeref:typename:T *
map_type	Kokkos_View.hpp	/^  using map_type =$/;"	t	class:Kokkos::View	typeref:typename:Kokkos::Impl::ViewMapping<traits,typename traits::specialize>
map_type	impl/Kokkos_Profiling.hpp	/^  using map_type = std::map<uintptr_t, uint32_t>;$/;"	t	function:Kokkos::Tools::Experimental::Impl::idForInstance	typeref:typename:std::map<uintptr_t,uint32_t>
mapping_type	Kokkos_View.hpp	/^  using mapping_type =$/;"	t	function:Kokkos::is_assignable	typeref:typename:Kokkos::Impl::ViewMapping<DstTraits,SrcTraits,typename DstTraits::specialize>
markEvent	impl/Kokkos_Profiling.cpp	/^void markEvent(const std::string& eventName) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
markEvent	impl/Kokkos_Profiling.cpp	/^void markEvent(const std::string& eventName) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
mark_as_not_enqueued	impl/Kokkos_LinkedListNode.hpp	/^  KOKKOS_INLINE_FUNCTION static void mark_as_not_enqueued($/;"	f	struct:Kokkos::Impl::LinkedListNodeAccess	typeref:typename:KOKKOS_INLINE_FUNCTION void
mark_as_not_enqueued	impl/Kokkos_LinkedListNode.hpp	/^  KOKKOS_INLINE_FUNCTION static void mark_as_not_enqueued(Node& node) noexcept {$/;"	f	struct:Kokkos::Impl::LinkedListNodeAccess	typeref:typename:KOKKOS_INLINE_FUNCTION void
mark_as_not_enqueued	impl/Kokkos_LinkedListNode.hpp	/^  void mark_as_not_enqueued() noexcept {$/;"	f	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:KOKKOS_INLINE_FUNCTION void
mark_as_not_enqueued	impl/Kokkos_LinkedListNode.hpp	/^  void mark_as_not_enqueued() volatile noexcept {$/;"	f	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:KOKKOS_INLINE_FUNCTION void
master_idx	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int master_idx = 64 \/ sizeof(int);$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
max	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float max() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
max	HIP/Kokkos_HIP_Half_Conversion.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float max() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
max	Kokkos_MinMaxClamp.hpp	/^KOKKOS_INLINE_FUNCTION constexpr T max(std::initializer_list<T> ilist) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
max	Kokkos_MinMaxClamp.hpp	/^KOKKOS_INLINE_FUNCTION constexpr T max(std::initializer_list<T> ilist,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
max	Kokkos_MinMaxClamp.hpp	/^constexpr KOKKOS_INLINE_FUNCTION const T& max(const T& a, const T& b) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION const T &
max	Kokkos_MinMaxClamp.hpp	/^constexpr KOKKOS_INLINE_FUNCTION const T& max(const T& a, const T& b,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION const T &
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static double max() { return -DBL_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION double
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float max() { return -FLT_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static int max() { return INT_MIN; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long long max() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long long
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long max() { return LONG_MIN; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static short max() { return SHRT_MIN; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION short
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static signed char max() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION signed char
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned char max() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned char
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned int max() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned int
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long long max() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long long
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long max() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long
max	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned short max() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned short
max	Kokkos_NumericTraits.hpp	/^  constexpr static long double max() { return -LDBL_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:long double
max	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^  max() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Kokkos::Experimental::half_t
max	impl/Kokkos_QuadPrecisionMath.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static __float128 max() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION __float128
maxTperB	Kokkos_Concepts.hpp	/^  static unsigned int constexpr maxTperB{maxT};$/;"	m	struct:Kokkos::LaunchBounds	typeref:typename:unsigned int 
max_bit_count	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { max_bit_count = CB::max_bit_count };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0603
max_bit_count	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { max_bit_count = 1u << max_bit_count_lg2 };$/;"	e	enum:Kokkos::Impl::concurrent_bitset::__anon337ce9bb0403
max_bit_count_lg2	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { max_bit_count_lg2 = CB::max_bit_count_lg2 };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0503
max_bit_count_lg2	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { max_bit_count_lg2 = 25 };$/;"	e	enum:Kokkos::Impl::concurrent_bitset::__anon337ce9bb0303
max_block_bytes	Kokkos_MemoryPool.hpp	/^    size_t max_block_bytes;       \/\/\/<  Maximum block size in bytes$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
max_block_per_superblock	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { max_block_per_superblock = max_bit_count };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0a03
max_block_size	Kokkos_MemoryPool.hpp	/^  size_t max_block_size() const noexcept {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
max_blocks	impl/KokkosExp_IterateTileGPU.hpp	/^  static constexpr index_type max_blocks = 65535;$/;"	m	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:index_type
max_digits10_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_digits10_helper<double> { static constexpr int value = DBL_DECIMAL_DIG; }/;"	s	namespace:Kokkos::Experimental::Impl
max_digits10_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_digits10_helper<float> { static constexpr int value = FLT_DECIMAL_DIG; };$/;"	s	namespace:Kokkos::Experimental::Impl
max_digits10_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_digits10_helper<long double> { static constexpr int value = DECIMAL_DIG; /;"	s	namespace:Kokkos::Experimental::Impl
max_digits10_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_digits10_helper<long double> { static constexpr int value = LDBL_DECIMAL_/;"	s	namespace:Kokkos::Experimental::Impl
max_digits10_helper	Kokkos_NumericTraits.hpp	/^template <class> struct max_digits10_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
max_exponent10_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent10_helper<double> { static constexpr int value = DBL_MAX_10_EXP; /;"	s	namespace:Kokkos::Experimental::Impl
max_exponent10_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent10_helper<float> { static constexpr int value = FLT_MAX_10_EXP; }/;"	s	namespace:Kokkos::Experimental::Impl
max_exponent10_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent10_helper<long double> { static constexpr int value = LDBL_MAX_10/;"	s	namespace:Kokkos::Experimental::Impl
max_exponent10_helper	Kokkos_NumericTraits.hpp	/^template <class> struct max_exponent10_helper{};$/;"	s	namespace:Kokkos::Experimental::Impl
max_exponent_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent_helper<double> { static constexpr int value = DBL_MAX_EXP; };$/;"	s	namespace:Kokkos::Experimental::Impl
max_exponent_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent_helper<float> { static constexpr int value = FLT_MAX_EXP; };$/;"	s	namespace:Kokkos::Experimental::Impl
max_exponent_helper	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent_helper<long double> { static constexpr int value = LDBL_MAX_EXP;/;"	s	namespace:Kokkos::Experimental::Impl
max_exponent_helper	Kokkos_NumericTraits.hpp	/^template <class> struct max_exponent_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
max_loc	Kokkos_Parallel_Reduce.hpp	/^  Index min_loc, max_loc;$/;"	m	struct:Kokkos::MinMaxLocScalar	typeref:typename:Index
max_loc_true	Kokkos_Parallel_Reduce.hpp	/^  Index max_loc_true, min_loc_false;$/;"	m	struct:Kokkos::StdIsPartScalar	typeref:typename:Index
max_loc_true	Kokkos_Parallel_Reduce.hpp	/^  Index max_loc_true;$/;"	m	struct:Kokkos::LastLocScalar	typeref:typename:Index
max_num_queues	impl/Kokkos_TaskQueueMultiple.hpp	/^  enum : long { max_num_queues = 6 };  \/\/ specialization::max_league_size };$/;"	e	enum:Kokkos::Impl::LeagueQueueCollection::__anon0a9b96110103
max_pool_members	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { max_pool_members = 1024 };$/;"	e	enum:Kokkos::Impl::HostThreadTeamData::__anon9705f8ea0103
max_pool_rendezvous	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { max_pool_rendezvous = HostBarrier::required_buffer_size };$/;"	e	enum:Kokkos::Impl::HostThreadTeamData::__anon9705f8ea0303
max_resident_blocks_per_multiprocessor	Cuda/Kokkos_Cuda_Instance.cpp	/^  enum : int { max_resident_blocks_per_multiprocessor = 16 };$/;"	e	enum:Kokkos::Impl::cuda_internal_maximum_concurrent_block_count::__anon02417da40903	file:
max_size	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_type max_size() const { return 0; }$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
max_size	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_type max_size() const { return N; }$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
max_size	impl/Kokkos_MemoryPoolAllocator.hpp	/^  size_type max_size() const { return m_pool.max_block_size(); }$/;"	f	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
max_slices	Kokkos_Tuners.hpp	/^  static constexpr int max_slices = 15;$/;"	m	struct:Kokkos::Tools::Experimental::MDRangeTuner	typeref:typename:int
max_space_dimension_size	Kokkos_Tuners.hpp	/^  static constexpr size_t max_space_dimension_size = MaxDimensionSize;$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:size_t
max_superblock_size	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { max_superblock_size = 1LU << 31 \/* 2 gigabytes *\/ };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0903
max_team_members	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { max_team_members = 64 };$/;"	e	enum:Kokkos::Impl::HostThreadTeamData::__anon9705f8ea0203
max_team_rendezvous	impl/Kokkos_HostThreadTeam.hpp	/^  enum : int { max_team_rendezvous = HostBarrier::required_buffer_size };$/;"	e	enum:Kokkos::Impl::HostThreadTeamData::__anon9705f8ea0403
max_threads	KokkosExp_MDRangePolicy.hpp	/^  int max_threads;$/;"	m	struct:Kokkos::Impl::TileSizeProperties	typeref:typename:int
max_tile_size_product	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy& pol, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:int
max_tile_size_product	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy& pol, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
max_tile_size_product	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy&, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:int
max_tile_size_product	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy&, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
max_tile_size_product	Kokkos_HPX.hpp	/^  static int max_tile_size_product(const Policy &, const Functor &) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:int
max_tile_size_product	Kokkos_HPX.hpp	/^  static int max_tile_size_product(const Policy &, const Functor &) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
max_tile_size_product	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  static int max_tile_size_product(const Policy&, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:int
max_tile_size_product	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  static int max_tile_size_product(const Policy&, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
max_tile_size_product	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy&, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:int
max_tile_size_product	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy&, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
max_tile_size_product	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  static int max_tile_size_product(const Policy& policy, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:int
max_tile_size_product	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  static int max_tile_size_product(const Policy& policy, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
max_tile_size_product	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy&, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:int
max_tile_size_product	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy&, const Functor&) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
max_tile_size_product	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy &, const Functor &) {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:int
max_tile_size_product	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  static int max_tile_size_product(const Policy &, const Functor &) {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:int
max_total_tile_size	KokkosExp_MDRangePolicy.hpp	/^  int max_total_tile_size;$/;"	m	struct:Kokkos::Impl::TileSizeProperties	typeref:typename:int
max_val	Kokkos_Parallel_Reduce.hpp	/^  Scalar min_val, max_val;$/;"	m	struct:Kokkos::MinMaxLocScalar	typeref:typename:Scalar
max_val	Kokkos_Parallel_Reduce.hpp	/^  Scalar min_val, max_val;$/;"	m	struct:Kokkos::MinMaxScalar	typeref:typename:Scalar
maximum_label_length	impl/Kokkos_SharedAlloc.hpp	/^  static constexpr unsigned maximum_label_length =$/;"	m	class:Kokkos::Impl::SharedAllocationHeader	typeref:typename:unsigned
maximum_label_length	impl/Kokkos_SharedAlloc.hpp	/^  static constexpr unsigned maximum_label_length =$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:unsigned
may_fallback_to_host	OpenACC/Kokkos_OpenACC_Traits.hpp	/^  static constexpr bool may_fallback_to_host = false;$/;"	m	struct:Kokkos::Experimental::Impl::OpenACC_Traits	typeref:typename:bool
mdrange_tuners	impl/Kokkos_Tools_Generic.hpp	/^static MDRangeTuningMap<Rank> mdrange_tuners;$/;"	v	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:MDRangeTuningMap<Rank>
mem	Kokkos_Concepts.hpp	/^  struct mem : std::false_type {$/;"	s	struct:Kokkos::is_space
mem_access	Kokkos_Concepts.hpp	/^  using mem_access =$/;"	t	struct:Kokkos::SpaceAccessibility	typeref:typename:Kokkos::Impl::MemorySpaceAccess<typename AccessSpace::memory_space,MemorySpace>
member	Cuda/Kokkos_Cuda_Team.hpp	/^  const CudaTeamMember& member;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const CudaTeamMember &
member	Cuda/Kokkos_Cuda_Team.hpp	/^  const CudaTeamMember& member;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const CudaTeamMember &
member	HIP/Kokkos_HIP_Team.hpp	/^  const HIPTeamMember& member;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const HIPTeamMember &
member	HIP/Kokkos_HIP_Team.hpp	/^  const HIPTeamMember& member;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const HIPTeamMember &
member	SYCL/Kokkos_SYCL_Team.hpp	/^  const SYCLTeamMember& member;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const SYCLTeamMember &
member	SYCL/Kokkos_SYCL_Team.hpp	/^  const SYCLTeamMember& member;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const SYCLTeamMember &
member	SYCL/Kokkos_SYCL_Team.hpp	/^  const SYCLTeamMember& member;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const SYCLTeamMember &
member_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using member_type = Kokkos::Impl::CudaTeamMember;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Impl::CudaTeamMember
member_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using member_type   = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
member_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using member_type   = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
member_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using member_type = Kokkos::Impl::HIPTeamMember;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Impl::HIPTeamMember
member_type	KokkosExp_MDRangePolicy.hpp	/^  using member_type       = typename range_policy::member_type;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:range_policy::member_type
member_type	Kokkos_ExecPolicy.hpp	/^    using member_type = typename RangePolicy<Properties...>::member_type;$/;"	t	struct:Kokkos::RangePolicy::WorkRange	typeref:typename:RangePolicy<Properties...>::member_type
member_type	Kokkos_ExecPolicy.hpp	/^  struct member_type {$/;"	s	class:Kokkos::Impl::TeamPolicyInternal
member_type	Kokkos_ExecPolicy.hpp	/^  using member_type      = typename traits::index_type;$/;"	t	class:Kokkos::RangePolicy	typeref:typename:traits::index_type
member_type	Kokkos_HPX.hpp	/^  using member_type = HPXTeamMember;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:HPXTeamMember
member_type	Kokkos_TaskScheduler.hpp	/^  using member_type         = typename specialization::member_type;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:specialization::member_type
member_type	Kokkos_WorkGraphPolicy.hpp	/^  using member_type      = index_type;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:index_type
member_type	OpenMP/Kokkos_OpenMP_Team.hpp	/^  using member_type = Impl::HostThreadTeamMember<Kokkos::OpenMP>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Impl::HostThreadTeamMember<Kokkos::OpenMP>
member_type	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using member_type = Impl::OpenMPTargetExecTeamMember;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Impl::OpenMPTargetExecTeamMember
member_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using member_type   = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::member_type
member_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using member_type   = typename Policy::member_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::member_type
member_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using member_type = Kokkos::Impl::SYCLTeamMember;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Impl::SYCLTeamMember
member_type	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using member_type = Impl::HostThreadTeamMember<Kokkos::Serial>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Impl::HostThreadTeamMember<Kokkos::Serial>
member_type	Threads/Kokkos_ThreadsTeam.hpp	/^  using member_type = Impl::ThreadsExecTeamMember;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Impl::ThreadsExecTeamMember
member_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using member_type    = typename specialization::member_type;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:specialization::member_type
member_type	impl/Kokkos_TaskBase.hpp	/^  using member_type    = typename specialization::member_type;$/;"	t	class:Kokkos::Impl::Task	typeref:typename:specialization::member_type
member_type	impl/Kokkos_TaskNode.hpp	/^  using member_type    = typename specialization::member_type;$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:specialization::member_type
memcpy_result	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  static void memcpy_result(PointerType dest, PointerType src, size_t size,$/;"	f	struct:Kokkos::Impl::ParallelReduceCommon	typeref:typename:void
memory	Kokkos_TaskScheduler.hpp	/^  memory_pool* memory() const noexcept {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION memory_pool *
memory_fence	Kokkos_Atomics_Desul_Wrapper.hpp	/^void memory_fence() {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
memory_fence	impl/Kokkos_Memory_Fence.hpp	/^void memory_fence() {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
memory_order	impl/Kokkos_Atomic_Memory_Order.hpp	/^  using memory_order = memory_order_acq_rel_t;$/;"	t	struct:Kokkos::Impl::memory_order_acq_rel_t	typeref:typename:memory_order_acq_rel_t
memory_order	impl/Kokkos_Atomic_Memory_Order.hpp	/^  using memory_order = memory_order_acquire_t;$/;"	t	struct:Kokkos::Impl::memory_order_acquire_t	typeref:typename:memory_order_acquire_t
memory_order	impl/Kokkos_Atomic_Memory_Order.hpp	/^  using memory_order = memory_order_relaxed_t;$/;"	t	struct:Kokkos::Impl::memory_order_relaxed_t	typeref:typename:memory_order_relaxed_t
memory_order	impl/Kokkos_Atomic_Memory_Order.hpp	/^  using memory_order = memory_order_release_t;$/;"	t	struct:Kokkos::Impl::memory_order_release_t	typeref:typename:memory_order_release_t
memory_order	impl/Kokkos_Atomic_Memory_Order.hpp	/^  using memory_order = memory_order_seq_cst_t;$/;"	t	struct:Kokkos::Impl::memory_order_seq_cst_t	typeref:typename:memory_order_seq_cst_t
memory_order_acq_rel	impl/Kokkos_Atomic_Memory_Order.hpp	/^constexpr memory_order_acq_rel_t memory_order_acq_rel = {};$/;"	v	namespace:Kokkos::Impl	typeref:typename:memory_order_acq_rel_t
memory_order_acq_rel_t	impl/Kokkos_Atomic_Memory_Order.hpp	/^struct memory_order_acq_rel_t {$/;"	s	namespace:Kokkos::Impl
memory_order_acquire	impl/Kokkos_Atomic_Memory_Order.hpp	/^constexpr memory_order_acquire_t memory_order_acquire = {};$/;"	v	namespace:Kokkos::Impl	typeref:typename:memory_order_acquire_t
memory_order_acquire_t	impl/Kokkos_Atomic_Memory_Order.hpp	/^struct memory_order_acquire_t {$/;"	s	namespace:Kokkos::Impl
memory_order_relaxed	impl/Kokkos_Atomic_Memory_Order.hpp	/^constexpr memory_order_relaxed_t memory_order_relaxed = {};$/;"	v	namespace:Kokkos::Impl	typeref:typename:memory_order_relaxed_t
memory_order_relaxed_t	impl/Kokkos_Atomic_Memory_Order.hpp	/^struct memory_order_relaxed_t {$/;"	s	namespace:Kokkos::Impl
memory_order_release	impl/Kokkos_Atomic_Memory_Order.hpp	/^constexpr memory_order_release_t memory_order_release = {};$/;"	v	namespace:Kokkos::Impl	typeref:typename:memory_order_release_t
memory_order_release_t	impl/Kokkos_Atomic_Memory_Order.hpp	/^struct memory_order_release_t {$/;"	s	namespace:Kokkos::Impl
memory_order_seq_cst	impl/Kokkos_Atomic_Memory_Order.hpp	/^constexpr memory_order_seq_cst_t memory_order_seq_cst = {};$/;"	v	namespace:Kokkos::Impl	typeref:typename:memory_order_seq_cst_t
memory_order_seq_cst_t	impl/Kokkos_Atomic_Memory_Order.hpp	/^struct memory_order_seq_cst_t {$/;"	s	namespace:Kokkos::Impl
memory_pool	Kokkos_TaskScheduler.hpp	/^  using memory_pool         = typename queue_type::memory_pool;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:queue_type::memory_pool
memory_pool	impl/Kokkos_MemoryPoolAllocator.hpp	/^  using memory_pool = MemoryPool;$/;"	t	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:MemoryPool
memory_pool	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using memory_pool     = typename task_queue_type::memory_pool;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:task_queue_type::memory_pool
memory_pool	impl/Kokkos_TaskQueue.hpp	/^  using memory_pool     = Kokkos::MemoryPool<device_type>;$/;"	t	class:Kokkos::Impl::TaskQueue	typeref:typename:Kokkos::MemoryPool<device_type>
memory_pool	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  using memory_pool          = MemoryPool;$/;"	t	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:MemoryPool
memory_pool	impl/Kokkos_TaskQueueMultiple.hpp	/^  using memory_pool         = Kokkos::MemoryPool<device_type>;$/;"	t	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:Kokkos::MemoryPool<device_type>
memory_pool_bounds_verification	impl/Kokkos_MemoryPool.cpp	/^void memory_pool_bounds_verification(size_t min_block_alloc_size,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
memory_space	Kokkos_AnonymousSpace.hpp	/^  using memory_space    = AnonymousSpace;$/;"	t	class:Kokkos::AnonymousSpace	typeref:typename:AnonymousSpace
memory_space	Kokkos_Concepts.hpp	/^  using memory_space    = MemorySpace;$/;"	t	struct:Kokkos::Device	typeref:typename:MemorySpace
memory_space	Kokkos_Concepts.hpp	/^  using memory_space    = typename is_mem::space;$/;"	t	struct:Kokkos::is_space	typeref:typename:is_mem::space
memory_space	Kokkos_CopyViews.hpp	/^  using memory_space = typename Space::memory_space;$/;"	t	struct:Kokkos::Impl::MirrorType	typeref:typename:Space::memory_space
memory_space	Kokkos_CopyViews.hpp	/^  using memory_space = typename Space::memory_space;$/;"	t	struct:Kokkos::Impl::MirrorViewType	typeref:typename:Space::memory_space
memory_space	Kokkos_Crs.hpp	/^  using memory_space    = typename InCrs::memory_space;$/;"	t	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:InCrs::memory_space
memory_space	Kokkos_Crs.hpp	/^  using memory_space    = typename traits::memory_space;$/;"	t	class:Kokkos::Crs	typeref:typename:traits::memory_space
memory_space	Kokkos_Crs.hpp	/^  using memory_space = typename crs_type::memory_space;$/;"	t	function:Kokkos::transpose_crs	typeref:typename:crs_type::memory_space
memory_space	Kokkos_Cuda.hpp	/^  using memory_space = CudaSpace;$/;"	t	class:Kokkos::Cuda	typeref:typename:CudaSpace
memory_space	Kokkos_Cuda.hpp	/^  using memory_space = CudaUVMSpace;$/;"	t	class:Kokkos::Cuda	typeref:typename:CudaUVMSpace
memory_space	Kokkos_CudaSpace.hpp	/^  using memory_space    = CudaHostPinnedSpace;$/;"	t	class:Kokkos::CudaHostPinnedSpace	typeref:typename:CudaHostPinnedSpace
memory_space	Kokkos_CudaSpace.hpp	/^  using memory_space    = CudaSpace;$/;"	t	class:Kokkos::CudaSpace	typeref:typename:CudaSpace
memory_space	Kokkos_CudaSpace.hpp	/^  using memory_space    = CudaUVMSpace;$/;"	t	class:Kokkos::CudaUVMSpace	typeref:typename:CudaUVMSpace
memory_space	Kokkos_HBWSpace.hpp	/^  using memory_space = HBWSpace;$/;"	t	class:Kokkos::Experimental::HBWSpace	typeref:typename:HBWSpace
memory_space	Kokkos_HIP_Space.hpp	/^  using memory_space    = HIPHostPinnedSpace;$/;"	t	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:HIPHostPinnedSpace
memory_space	Kokkos_HIP_Space.hpp	/^  using memory_space    = HIPManagedSpace;$/;"	t	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:HIPManagedSpace
memory_space	Kokkos_HIP_Space.hpp	/^  using memory_space    = HIPSpace;$/;"	t	class:Kokkos::Experimental::HIP	typeref:typename:HIPSpace
memory_space	Kokkos_HIP_Space.hpp	/^  using memory_space    = HIPSpace;$/;"	t	class:Kokkos::Experimental::HIPSpace	typeref:typename:HIPSpace
memory_space	Kokkos_HPX.hpp	/^  using memory_space         = HostSpace;$/;"	t	class:Kokkos::Experimental::HPX	typeref:typename:HostSpace
memory_space	Kokkos_HPX.hpp	/^  using memory_space = Kokkos::HostSpace;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Kokkos::HostSpace
memory_space	Kokkos_HostSpace.hpp	/^  using memory_space = HostSpace;$/;"	t	class:Kokkos::HostSpace	typeref:typename:HostSpace
memory_space	Kokkos_LogicalSpaces.hpp	/^  using memory_space = LogicalMemorySpace<BaseSpace, DefaultBaseExecutionSpace,$/;"	t	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:LogicalMemorySpace<BaseSpace,DefaultBaseExecutionSpace,Namer,SharesAccessWithBase>
memory_space	Kokkos_MemoryPool.hpp	/^  using memory_space = typename DeviceType::memory_space;$/;"	t	class:Kokkos::MemoryPool	typeref:typename:DeviceType::memory_space
memory_space	Kokkos_OpenMP.hpp	/^  using memory_space =$/;"	t	class:Kokkos::OpenMP	typeref:typename:Experimental::HBWSpace
memory_space	Kokkos_OpenMPTarget.hpp	/^  using memory_space    = OpenMPTargetSpace;$/;"	t	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:OpenMPTargetSpace
memory_space	Kokkos_OpenMPTargetSpace.hpp	/^  using memory_space = OpenMPTargetSpace;$/;"	t	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:OpenMPTargetSpace
memory_space	Kokkos_SYCL.hpp	/^  using memory_space    = SYCLDeviceUSMSpace;$/;"	t	class:Kokkos::Experimental::SYCL	typeref:typename:SYCLDeviceUSMSpace
memory_space	Kokkos_SYCL_Space.hpp	/^  using memory_space    = SYCLDeviceUSMSpace;$/;"	t	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:SYCLDeviceUSMSpace
memory_space	Kokkos_SYCL_Space.hpp	/^  using memory_space    = SYCLHostUSMSpace;$/;"	t	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:SYCLHostUSMSpace
memory_space	Kokkos_SYCL_Space.hpp	/^  using memory_space    = SYCLSharedUSMSpace;$/;"	t	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:SYCLSharedUSMSpace
memory_space	Kokkos_ScratchSpace.hpp	/^  using memory_space    = ScratchMemorySpace<ExecSpace>;$/;"	t	class:Kokkos::ScratchMemorySpace	typeref:typename:ScratchMemorySpace<ExecSpace>
memory_space	Kokkos_Serial.hpp	/^  using memory_space = Kokkos::HostSpace;$/;"	t	class:Kokkos::Serial	typeref:typename:Kokkos::HostSpace
memory_space	Kokkos_TaskScheduler.hpp	/^  using memory_space        = typename queue_type::memory_space;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:queue_type::memory_space
memory_space	Kokkos_Threads.hpp	/^  using memory_space    = Kokkos::HostSpace;$/;"	t	class:Kokkos::Threads	typeref:typename:Kokkos::HostSpace
memory_space	Kokkos_View.hpp	/^                         typename prop::memory_space,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::memory_space> typename prop::
memory_space	Kokkos_View.hpp	/^  using memory_space      = MemorySpace;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:MemorySpace
memory_space	Kokkos_View.hpp	/^  using memory_space    = typename Space::memory_space;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:Space::memory_space
memory_space	Kokkos_View.hpp	/^  using memory_space    = typename ViewTraits<void, Prop...>::memory_space;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::memory_space
memory_space	Kokkos_View.hpp	/^  using memory_space    = void;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:void
memory_space	Kokkos_WorkGraphPolicy.hpp	/^  using memory_space     = typename execution_space::memory_space;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:execution_space::memory_space
memory_space	OpenACC/Kokkos_OpenACC.hpp	/^  using memory_space    = OpenACCSpace;$/;"	t	class:Kokkos::Experimental::OpenACC	typeref:typename:OpenACCSpace
memory_space	OpenACC/Kokkos_OpenACCSpace.hpp	/^  using memory_space    = OpenACCSpace;$/;"	t	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:OpenACCSpace
memory_space	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  using memory_space = Kokkos::HostSpace;$/;"	t	class:Kokkos::Impl::TaskQueueSpecialization	typeref:typename:Kokkos::HostSpace
memory_space	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  using memory_space = typename DeviceType::memory_space;$/;"	t	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:DeviceType::memory_space
memory_space	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using memory_space    = typename task_queue_type::memory_space;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:task_queue_type::memory_space
memory_space	impl/Kokkos_TaskQueue.hpp	/^  using memory_space    = MemorySpace;$/;"	t	class:Kokkos::Impl::TaskQueue	typeref:typename:MemorySpace
memory_space	impl/Kokkos_TaskQueueMemoryManager.hpp	/^  using memory_space         = MemorySpace;$/;"	t	class:Kokkos::Impl::TaskQueueMemoryManager	typeref:typename:MemorySpace
memory_space	impl/Kokkos_TaskQueueMultiple.hpp	/^  using memory_space        = MemorySpace;$/;"	t	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:MemorySpace
memory_space	impl/Kokkos_ViewCtor.hpp	/^  using memory_space    = typename var_memory_space::type;$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:var_memory_space::type
memory_space_instance	impl/Kokkos_EBO.hpp	/^  MemorySpace const& memory_space_instance() const& {$/;"	f	class:Kokkos::Impl::MemorySpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION MemorySpace const &
memory_space_instance	impl/Kokkos_EBO.hpp	/^  MemorySpace& memory_space_instance() & {$/;"	f	class:Kokkos::Impl::MemorySpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION MemorySpace &
memory_space_instance	impl/Kokkos_EBO.hpp	/^  MemorySpace&& memory_space_instance() && {$/;"	f	class:Kokkos::Impl::MemorySpaceInstanceStorage	typeref:typename:KOKKOS_INLINE_FUNCTION MemorySpace &&
memory_space_storage	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using memory_space_storage = Impl::MemorySpaceInstanceStorage<memory_space>;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:Impl::MemorySpaceInstanceStorage<memory_space>
memory_space_storage_base	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  using memory_space_storage_base =$/;"	t	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:MemorySpaceInstanceStorage<typename DeviceType::memory_space>
memory_threshold_g	Cuda/Kokkos_CudaSpace.cpp	/^int memory_threshold_g = 40000;  \/\/ 40 kB$/;"	v	namespace:Kokkos	typeref:typename:int
memory_traits	Kokkos_MemoryTraits.hpp	/^  using memory_traits = MemoryTraits<T>;$/;"	t	struct:Kokkos::MemoryTraits	typeref:typename:MemoryTraits<T>
memory_traits	Kokkos_View.hpp	/^                         typename prop::memory_traits,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::memory_traits> typename prop::
memory_traits	Kokkos_View.hpp	/^  using memory_traits     = MemoryTraits;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:MemoryTraits
memory_traits	Kokkos_View.hpp	/^  using memory_traits   = MemoryTraits;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:MemoryTraits
memory_traits	Kokkos_View.hpp	/^  using memory_traits   = typename ViewTraits<void, Prop...>::memory_traits;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::memory_traits
memory_traits	Kokkos_View.hpp	/^  using memory_traits   = void;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:void
memory_traits	Kokkos_View.hpp	/^  using memory_traits = typename ViewTraits<void, Prop...>::memory_traits;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::memory_traits
memory_traits	impl/Kokkos_ViewUniformType.hpp	/^  using memory_traits = typename Kokkos::MemoryTraits<Traits>;$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::MemoryTraits<Traits>
metadata	impl/Kokkos_Profiling_C_Interface.h	/^  struct Kokkos_Tools_VariableInfo* metadata;$/;"	m	struct:Kokkos_Tools_VariableValue	typeref:struct:Kokkos_Tools_VariableInfo *
metadata_category_type	impl/Kokkos_Core.cpp	/^using metadata_category_type = std::string;$/;"	t	namespace:__anon5875dff10110	typeref:typename:std::string	file:
metadata_key_type	impl/Kokkos_Core.cpp	/^using metadata_key_type      = std::string;$/;"	t	namespace:__anon5875dff10110	typeref:typename:std::string	file:
metadata_map	impl/Kokkos_Core.cpp	/^    metadata_map;$/;"	v	namespace:__anon5875dff10110	typeref:typename:std::map<metadata_category_type,std::map<metadata_key_type,metadata_value_type>>
metadata_value_type	impl/Kokkos_Core.cpp	/^using metadata_value_type    = std::string;$/;"	t	namespace:__anon5875dff10110	typeref:typename:std::string	file:
min	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float min() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
min	HIP/Kokkos_HIP_Half_Conversion.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float min() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
min	Kokkos_MinMaxClamp.hpp	/^KOKKOS_INLINE_FUNCTION constexpr T min(std::initializer_list<T> ilist) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
min	Kokkos_MinMaxClamp.hpp	/^KOKKOS_INLINE_FUNCTION constexpr T min(std::initializer_list<T> ilist,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION T
min	Kokkos_MinMaxClamp.hpp	/^constexpr KOKKOS_INLINE_FUNCTION const T& min(const T& a, const T& b) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION const T &
min	Kokkos_MinMaxClamp.hpp	/^constexpr KOKKOS_INLINE_FUNCTION const T& min(const T& a, const T& b,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION const T &
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static double min() { return DBL_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION double
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float min() { return FLT_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static int min() { return INT_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long long min() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long long
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long min() { return LONG_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static short min() { return SHRT_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION short
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static signed char min() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION signed char
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned char min() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned char
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned int min() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned int
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long long min() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long long
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long min() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long
min	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned short min() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned short
min	Kokkos_NumericTraits.hpp	/^  constexpr static long double min() { return LDBL_MAX; }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:long double
min	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^  min() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Kokkos::Experimental::half_t
min	impl/Kokkos_QuadPrecisionMath.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static __float128 min() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION __float128
minBperSM	Kokkos_Concepts.hpp	/^  static unsigned int constexpr minBperSM{minB};$/;"	m	struct:Kokkos::LaunchBounds	typeref:typename:unsigned int 
min_block_bytes	Kokkos_MemoryPool.hpp	/^    size_t min_block_bytes;       \/\/\/<  Minimum block size in bytes$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
min_block_size	Kokkos_MemoryPool.hpp	/^  size_t min_block_size() const noexcept {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
min_exponent10_helper	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent10_helper<double> { static constexpr int value = DBL_MIN_10_EXP; /;"	s	namespace:Kokkos::Experimental::Impl
min_exponent10_helper	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent10_helper<float> { static constexpr int value = FLT_MIN_10_EXP; }/;"	s	namespace:Kokkos::Experimental::Impl
min_exponent10_helper	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent10_helper<long double> { static constexpr int value = LDBL_MIN_10/;"	s	namespace:Kokkos::Experimental::Impl
min_exponent10_helper	Kokkos_NumericTraits.hpp	/^template <class> struct min_exponent10_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
min_exponent_helper	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent_helper<double> { static constexpr int value = DBL_MIN_EXP; };$/;"	s	namespace:Kokkos::Experimental::Impl
min_exponent_helper	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent_helper<float> { static constexpr int value = FLT_MIN_EXP; };$/;"	s	namespace:Kokkos::Experimental::Impl
min_exponent_helper	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent_helper<long double> { static constexpr int value = LDBL_MIN_EXP;/;"	s	namespace:Kokkos::Experimental::Impl
min_exponent_helper	Kokkos_NumericTraits.hpp	/^template <class> struct min_exponent_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
min_loc	Kokkos_Parallel_Reduce.hpp	/^  Index min_loc, max_loc;$/;"	m	struct:Kokkos::MinMaxLocScalar	typeref:typename:Index
min_loc_false	Kokkos_Parallel_Reduce.hpp	/^  Index max_loc_true, min_loc_false;$/;"	m	struct:Kokkos::StdIsPartScalar	typeref:typename:Index
min_loc_false	Kokkos_Parallel_Reduce.hpp	/^  Index min_loc_false;$/;"	m	struct:Kokkos::StdPartPointScalar	typeref:typename:Index
min_loc_true	Kokkos_Parallel_Reduce.hpp	/^  Index min_loc_true;$/;"	m	struct:Kokkos::FirstLocScalar	typeref:typename:Index
min_val	Kokkos_Parallel_Reduce.hpp	/^  Scalar min_val, max_val;$/;"	m	struct:Kokkos::MinMaxLocScalar	typeref:typename:Scalar
min_val	Kokkos_Parallel_Reduce.hpp	/^  Scalar min_val, max_val;$/;"	m	struct:Kokkos::MinMaxScalar	typeref:typename:Scalar
minmax	Kokkos_MinMaxClamp.hpp	/^KOKKOS_INLINE_FUNCTION constexpr Kokkos::pair<T, T> minmax($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::pair<T,T>
minmax	Kokkos_MinMaxClamp.hpp	/^constexpr KOKKOS_INLINE_FUNCTION auto minmax(const T& a, const T& b) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION auto
minmax	Kokkos_MinMaxClamp.hpp	/^constexpr KOKKOS_INLINE_FUNCTION auto minmax(const T& a, const T& b,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION auto
mixin_matching_trait	traits/Kokkos_ExecutionSpaceTrait.hpp	/^  struct mixin_matching_trait : AnalyzeNextTrait {$/;"	s	struct:Kokkos::Impl::ExecutionSpaceTrait
mixin_matching_trait	traits/Kokkos_GraphKernelTrait.hpp	/^  struct mixin_matching_trait : AnalyzeNextTrait {$/;"	s	struct:Kokkos::Impl::GraphKernelTrait
mixin_matching_trait	traits/Kokkos_IndexTypeTrait.hpp	/^  using mixin_matching_trait = IndexTypePolicyMixin<IdxType, AnalyzeNextTrait>;$/;"	t	struct:Kokkos::Impl::IndexTypeTrait	typeref:typename:IndexTypePolicyMixin<IdxType,AnalyzeNextTrait>
mixin_matching_trait	traits/Kokkos_IterationPatternTrait.hpp	/^  struct mixin_matching_trait : AnalyzeNextTrait {$/;"	s	struct:Kokkos::Impl::IterationPatternTrait
mixin_matching_trait	traits/Kokkos_LaunchBoundsTrait.hpp	/^  struct mixin_matching_trait : AnalyzeNextTrait {$/;"	s	struct:Kokkos::Impl::LaunchBoundsTrait
mixin_matching_trait	traits/Kokkos_OccupancyControlTrait.hpp	/^  using mixin_matching_trait =$/;"	t	struct:Kokkos::Impl::OccupancyControlTrait	typeref:typename:OccupancyControlPolicyMixin<OccControl,AnalyzeNextTrait>
mixin_matching_trait	traits/Kokkos_ScheduleTrait.hpp	/^  struct mixin_matching_trait : AnalyzeNextTrait {$/;"	s	struct:Kokkos::Impl::ScheduleTrait
mixin_matching_trait	traits/Kokkos_WorkItemPropertyTrait.hpp	/^  struct mixin_matching_trait : AnalyzeNextTrait {$/;"	s	struct:Kokkos::Impl::WorkItemPropertyTrait
mixin_matching_trait	traits/Kokkos_WorkTagTrait.hpp	/^  struct mixin_matching_trait : AnalyzeNextTrait {$/;"	s	struct:Kokkos::Impl::WorkTagTrait
modifyDualView	impl/Kokkos_Profiling.cpp	/^void modifyDualView(const std::string& label, const void* const ptr,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
modify_dual_view	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_dualViewModifyFunction modify_dual_view;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_dualViewModifyFunction
modify_launch_configuration_if_desired_occupancy_is_specified	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^modify_launch_configuration_if_desired_occupancy_is_specified($/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<Policy::experimental_contains_desired_occupancy>
move_assign	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void move_assign(View &, const View &) {}$/;"	f	struct:Kokkos::Experimental::EmptyViewHooks	typeref:typename:void
move_assign	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void move_assign(View &self, const View &other) {$/;"	f	struct:Kokkos::Experimental::SubscribableViewHooks	typeref:typename:void
move_assignment_operator_invoker	View/Hooks/Kokkos_ViewHooks.hpp	/^struct move_assignment_operator_invoker {$/;"	s	namespace:Kokkos::Experimental::Impl
move_construct	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void move_construct(View &, const View &) {}$/;"	f	struct:Kokkos::Experimental::EmptyViewHooks	typeref:typename:void
move_construct	View/Hooks/Kokkos_ViewHooks.hpp	/^  static void move_construct(View &self, const View &other) {$/;"	f	struct:Kokkos::Experimental::SubscribableViewHooks	typeref:typename:void
move_constructor_invoker	View/Hooks/Kokkos_ViewHooks.hpp	/^struct move_constructor_invoker {$/;"	s	namespace:Kokkos::Experimental::Impl
mpi_local_rank_on_node	impl/Kokkos_CPUDiscovery.cpp	/^int mpi_local_rank_on_node() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
mpi_ranks_per_node	impl/Kokkos_CPUDiscovery.cpp	/^int mpi_ranks_per_node() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
multi_shfl_warp_reduction	Cuda/Kokkos_Cuda_Task.hpp	/^KOKKOS_INLINE_FUNCTION void multi_shfl_warp_reduction(const JoinType& join,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
mutex	SYCL/Kokkos_SYCL_Instance.cpp	/^std::mutex SYCLInternal::mutex;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::mutex
mutex	SYCL/Kokkos_SYCL_Instance.hpp	/^  static std::mutex mutex;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:std::mutex
my_acquired_val	Kokkos_UniqueToken.hpp	/^  size_type my_acquired_val;$/;"	m	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:size_type
my_acquired_val	Kokkos_UniqueToken.hpp	/^  size_type my_acquired_val;$/;"	m	class:Kokkos::Experimental::AcquireUniqueToken	typeref:typename:size_type
my_team	Kokkos_UniqueToken.hpp	/^  team_member_type my_team;$/;"	m	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:team_member_type
my_team_acquired_val	Kokkos_UniqueToken.hpp	/^  scratch_view my_team_acquired_val;$/;"	m	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:scratch_view
my_token	Kokkos_UniqueToken.hpp	/^  token_type my_token;$/;"	m	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:token_type
my_token	Kokkos_UniqueToken.hpp	/^  token_type my_token;$/;"	m	class:Kokkos::Experimental::AcquireUniqueToken	typeref:typename:token_type
n	Cuda/Kokkos_Cuda_Locks.hpp	/^  std::int32_t n;$/;"	m	struct:Kokkos::Impl::CudaLockArrays	typeref:typename:std::int32_t
n	HIP/Kokkos_HIP_Locks.hpp	/^  std::int32_t n;$/;"	m	struct:Kokkos::Impl::HIPLockArrays	typeref:typename:std::int32_t
n_dimensional_sparse_structure	Kokkos_Tuners.hpp	/^struct n_dimensional_sparse_structure {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
n_dimensional_sparse_structure	Kokkos_Tuners.hpp	/^struct n_dimensional_sparse_structure<T, 1> {$/;"	s	namespace:Kokkos::Tools::Experimental::Impl
n_queues	impl/Kokkos_MultipleTaskQueue.hpp	/^  constexpr typename vla_emulation_base_t::vla_entry_count_type n_queues() const$/;"	f	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION typename vla_emulation_base_t::vla_entry_count_type
n_subgroups	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    const auto n_subgroups = sg.get_group_range()[0];$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:const auto
n_vla_entries	impl/Kokkos_VLAEmulation.hpp	/^  constexpr EntryCountType n_vla_entries() const noexcept {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION EntryCountType
name	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static const char* name() { return "Cuda Host Allocator"; }$/;"	f	class:Kokkos::Impl::CudaHostAllocator	typeref:typename:const char *
name	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static const char* name() { return "Cuda Malloc Allocator"; }$/;"	f	class:Kokkos::Impl::CudaMallocAllocator	typeref:typename:const char *
name	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static const char* name() { return "Cuda UVM Allocator"; }$/;"	f	class:Kokkos::Impl::CudaUVMAllocator	typeref:typename:const char *
name	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static const char* name() { return "Cuda Unmanaged Allocator"; }$/;"	f	struct:Kokkos::Impl::CudaUnmanagedAllocator	typeref:typename:const char *
name	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static const char* name() { return "Cuda Unmanaged Host Allocator"; }$/;"	f	class:Kokkos::Impl::CudaUnmanagedHostAllocator	typeref:typename:const char *
name	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static const char* name() { return "Cuda Unmanaged UVM Allocator"; }$/;"	f	struct:Kokkos::Impl::CudaUnmanagedUVMAllocator	typeref:typename:const char *
name	Cuda/Kokkos_Cuda_Instance.cpp	/^const char *Cuda::name() { return "Cuda"; }$/;"	f	class:Kokkos::Cuda	typeref:typename:const char *
name	HIP/Kokkos_HIP_Space.cpp	/^const char* HIP::name() { return "HIP"; }$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:const char *
name	Kokkos_AnonymousSpace.hpp	/^  static constexpr const char *name() { return "Anonymous"; }$/;"	f	class:Kokkos::AnonymousSpace	typeref:typename:const char *
name	Kokkos_CudaSpace.hpp	/^  static constexpr const char* name() { return m_name; }$/;"	f	class:Kokkos::CudaHostPinnedSpace	typeref:typename:const char *
name	Kokkos_CudaSpace.hpp	/^  static constexpr const char* name() { return m_name; }$/;"	f	class:Kokkos::CudaSpace	typeref:typename:const char *
name	Kokkos_CudaSpace.hpp	/^  static constexpr const char* name() { return m_name; }$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:const char *
name	Kokkos_HBWSpace.hpp	/^  static constexpr const char* name() { return "HBW"; }$/;"	f	class:Kokkos::Experimental::HBWSpace	typeref:typename:const char *
name	Kokkos_HIP_Space.hpp	/^  static constexpr const char* name() { return "HIP"; }$/;"	f	class:Kokkos::Experimental::HIPSpace	typeref:typename:const char *
name	Kokkos_HIP_Space.hpp	/^  static constexpr const char* name() { return "HIPHostPinned"; }$/;"	f	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:const char *
name	Kokkos_HIP_Space.hpp	/^  static constexpr const char* name() { return "HIPManaged"; }$/;"	f	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:const char *
name	Kokkos_HPX.hpp	/^  static constexpr const char *name() noexcept { return "HPX"; }$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:const char *
name	Kokkos_HostSpace.hpp	/^  static constexpr const char* name() { return m_name; }$/;"	f	class:Kokkos::HostSpace	typeref:typename:const char *
name	Kokkos_LogicalSpaces.hpp	/^  constexpr static const char* name() { return Namer::get_name(); }$/;"	f	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:const char *
name	Kokkos_OpenMP.hpp	/^  static constexpr const char* name() noexcept { return "OpenMP"; }$/;"	f	class:Kokkos::OpenMP	typeref:typename:const char *
name	Kokkos_OpenMPTargetSpace.hpp	/^  static constexpr const char* name() { return "OpenMPTargetSpace"; }$/;"	f	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:const char *
name	Kokkos_SYCL_Space.hpp	/^  static constexpr const char* name() { return "SYCLDeviceUSM"; };$/;"	f	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:const char *
name	Kokkos_SYCL_Space.hpp	/^  static constexpr const char* name() { return "SYCLHostUSM"; };$/;"	f	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:const char *
name	Kokkos_SYCL_Space.hpp	/^  static constexpr const char* name() { return "SYCLSharedUSM"; };$/;"	f	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:const char *
name	Kokkos_ScratchSpace.hpp	/^  static constexpr const char* name() { return "ScratchMemorySpace"; }$/;"	f	class:Kokkos::ScratchMemorySpace	typeref:typename:const char *
name	OpenACC/Kokkos_OpenACC.hpp	/^  static char const* name() { return "OpenACC"; }$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:char const *
name	OpenACC/Kokkos_OpenACCSpace.hpp	/^  static constexpr char const* name() { return "OpenACCSpace"; }$/;"	f	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:char const *
name	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^const char* OpenMPTarget::name() {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:const char *
name	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^const char* OpenMPTargetInternal::name() { return "OpenMPTarget"; }$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:const char *
name	SYCL/Kokkos_SYCL.cpp	/^const char* SYCL::name() { return "SYCL"; }$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:const char *
name	Serial/Kokkos_Serial.cpp	/^const char* Serial::name() { return "Serial"; }$/;"	f	class:Kokkos::Serial	typeref:typename:const char *
name	Threads/Kokkos_ThreadsExec.cpp	/^const char *Threads::name() { return "Threads"; }$/;"	f	class:Kokkos::Threads	typeref:typename:const char *
name	impl/Kokkos_Profiling_C_Interface.h	/^  char name[64];$/;"	m	struct:Kokkos_Profiling_SpaceHandle	typeref:typename:char[64]
nan	Kokkos_MathematicalFunctions.hpp	/^KOKKOS_INLINE_FUNCTION double nan(char const* arg) { return ::nan(arg); }$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION double
nanl	Kokkos_MathematicalFunctions.hpp	/^inline long double nanl(char const* arg) { return ::nanl(arg); }$/;"	f	namespace:Kokkos	typeref:typename:long double
nanq	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 nanq(char const* arg) { return ::nanq(arg); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
ndevices	impl/Kokkos_InitializationSettings.hpp	/^  int ndevices;$/;"	m	struct:Kokkos::InitArguments	typeref:typename:int
nearbyint	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 nearbyint(__float128 x) { return ::nearbyintq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
new_policy_t	traits/Kokkos_OccupancyControlTrait.hpp	/^  using new_policy_t =$/;"	t	function:Kokkos::Experimental::prefer	typeref:typename:Kokkos::Impl::OccupancyControlTrait::policy_with_trait<Policy,DesiredOccupancy>
new_policy_t	traits/Kokkos_OccupancyControlTrait.hpp	/^  using new_policy_t =$/;"	t	function:Kokkos::Experimental::prefer	typeref:typename:Kokkos::Impl::OccupancyControlTrait::policy_with_trait<Policy,MaximizeOccupancy>
new_policy_t	traits/Kokkos_ScheduleTrait.hpp	/^  using new_policy_t = Kokkos::Impl::ScheduleTrait::policy_with_trait<$/;"	t	function:Kokkos::Experimental::require	typeref:typename:Kokkos::Impl::ScheduleTrait::policy_with_trait<Policy,Kokkos::Schedule<ScheduleType>>
new_policy_t	traits/Kokkos_WorkItemPropertyTrait.hpp	/^  using new_policy_t = Kokkos::Impl::WorkItemPropertyTrait::policy_with_trait<$/;"	t	function:Kokkos::Experimental::require	typeref:typename:Kokkos::Impl::WorkItemPropertyTrait::policy_with_trait<Policy,WorkItemProperty::ImplWorkItemProperty<Property>>
next	impl/Kokkos_MultipleTaskQueue.hpp	/^  task_base_type* next = nullptr;$/;"	m	struct:Kokkos::Impl::FailedQueueInsertionLinkedListSchedulingInfo	typeref:typename:task_base_type *
next	impl/Kokkos_Traits.hpp	/^  using next = has_condition<DefaultType, Condition, Pack...>;$/;"	t	struct:Kokkos::Impl::has_condition	typeref:typename:has_condition<DefaultType,Condition,Pack...>
next	impl/Kokkos_Traits.hpp	/^  using next = has_type<T, Pack...>;$/;"	t	struct:Kokkos::Impl::has_type	typeref:typename:has_type<T,Pack...>
next_dynamic	Threads/Kokkos_ThreadsTeam.hpp	/^  void next_dynamic() {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:void
next_is_view	Kokkos_View.hpp	/^  enum : bool { next_is_view = NextTraits::is_view };$/;"	e	enum:Kokkos::Impl::DeduceCommonViewAllocProp::__anon8559ec872d03
next_kernel_t	Kokkos_GraphNode.hpp	/^    using next_kernel_t = Kokkos::Impl::GraphNodeKernelImpl<$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_reduce	typeref:typename:Kokkos::Impl::GraphNodeKernelImpl<ExecutionSpace,next_policy_t,functor_type,Kokkos::ParallelReduceTag,typename return_value_adapter::reducer_type>
next_kernel_t	Kokkos_GraphNode.hpp	/^    using next_kernel_t = Kokkos::Impl::remove_cvref_t<NextKernelDeduced>;$/;"	t	function:Kokkos::Experimental::GraphNodeRef::_then_kernel	typeref:typename:Kokkos::Impl::remove_cvref_t<NextKernelDeduced>
next_kernel_t	Kokkos_GraphNode.hpp	/^    using next_kernel_t =$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_for	typeref:typename:Kokkos::Impl::GraphNodeKernelImpl<ExecutionSpace,next_policy_t,std::decay_t<Functor>,Kokkos::ParallelForTag>
next_policy_t	Kokkos_GraphNode.hpp	/^    using next_policy_t = decltype(policy);$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_for
next_policy_t	Kokkos_GraphNode.hpp	/^    using next_policy_t = decltype(policy);$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_reduce
next_ptr	impl/Kokkos_LinkedListNode.hpp	/^  KOKKOS_INLINE_FUNCTION static typename Node::pointer_type& next_ptr($/;"	f	struct:Kokkos::Impl::LinkedListNodeAccess	typeref:typename:KOKKOS_INLINE_FUNCTION typename Node::pointer_type &
next_specialize	Kokkos_View.hpp	/^  using next_specialize = typename NextTraits::specialize;$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:NextTraits::specialize
next_static	Threads/Kokkos_ThreadsTeam.hpp	/^  void next_static() {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:void
next_value_type	Kokkos_View.hpp	/^  using next_value_type = typename NextTraits::value_type;$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:NextTraits::value_type
nextafter	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 nextafter(__float128 x, __float128 y) { return ::nextafterq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
no	Kokkos_Threads.hpp	/^enum class fence_is_static { yes, no };$/;"	e	enum:Kokkos::Impl::fence_is_static
no	Kokkos_View.hpp	/^  enum class check_input_args : bool { yes = true, no = false };$/;"	e	enum:Kokkos::View::check_input_args
no	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^enum class openmp_fence_is_static { yes, no };$/;"	e	enum:Kokkos::Experimental::Impl::openmp_fence_is_static
no_profiling	impl/Kokkos_Profiling.cpp	/^static EventSet no_profiling;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:EventSet	file:
no_shared_access	Kokkos_LogicalSpaces.hpp	/^  struct no_shared_access {};$/;"	s	struct:Kokkos::Experimental::LogicalSpaceSharesAccess
no_unique_address_data_member	impl/Kokkos_EBO.hpp	/^  T const volatile& no_unique_address_data_member() const volatile& {$/;"	f	struct:Kokkos::Impl::StandardLayoutNoUniqueAddressMemberEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T const volatile &
no_unique_address_data_member	impl/Kokkos_EBO.hpp	/^  T volatile& no_unique_address_data_member() volatile& {$/;"	f	struct:Kokkos::Impl::StandardLayoutNoUniqueAddressMemberEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T volatile &
no_unique_address_data_member	impl/Kokkos_EBO.hpp	/^  constexpr T const& no_unique_address_data_member() const& {$/;"	f	struct:Kokkos::Impl::StandardLayoutNoUniqueAddressMemberEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T const &
no_unique_address_data_member	impl/Kokkos_EBO.hpp	/^  constexpr T& no_unique_address_data_member() & {$/;"	f	struct:Kokkos::Impl::StandardLayoutNoUniqueAddressMemberEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T &
no_unique_address_data_member	impl/Kokkos_EBO.hpp	/^  constexpr T&& no_unique_address_data_member() && {$/;"	f	struct:Kokkos::Impl::StandardLayoutNoUniqueAddressMemberEmulation	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T &&
node	Cuda/Kokkos_Cuda_GraphNode_Impl.hpp	/^  cudaGraphNode_t node = nullptr;$/;"	m	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:cudaGraphNode_t
node_details_t	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  using node_details_t = GraphNodeBackendSpecificDetails<Kokkos::Cuda>;$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:GraphNodeBackendSpecificDetails<Kokkos::Cuda>
node_details_t	impl/Kokkos_Default_Graph_Impl.hpp	/^  using node_details_t = GraphNodeBackendSpecificDetails<ExecutionSpace>;$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:GraphNodeBackendSpecificDetails<ExecutionSpace>
node_impl_t	Kokkos_GraphNode.hpp	/^  using node_impl_t =$/;"	t	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:Kokkos::Impl::GraphNodeImpl<ExecutionSpace,Kernel,Predecessor>
node_ref_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using node_ref_t = Kokkos::Experimental::GraphNodeRef<ExecutionSpace, Kernel,$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:Kokkos::Experimental::GraphNodeRef<ExecutionSpace,Kernel,PredecessorRef>
node_ref_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using node_ref_t =$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:Kokkos::Experimental::GraphNodeRef<ExecutionSpace,Kernel,Kokkos::Experimental::TypeErasedTag>
node_ref_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using node_ref_t =$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:Kokkos::Experimental::GraphNodeRef<ExecutionSpace,Kokkos::Experimental::TypeErasedTag,Kokkos::Experimental::TypeErasedTag>
node_type	Kokkos_Tuners.hpp	/^  using node_type   = ValueHierarchyNode<ValueType, void>;$/;"	t	struct:Kokkos::Tools::Experimental::Impl::GetMultidimensionalPoint	typeref:typename:ValueHierarchyNode<ValueType,void>
node_type	Kokkos_Tuners.hpp	/^  using node_type = ValueHierarchyNode<ValueType, Subtype>;$/;"	t	struct:Kokkos::Tools::Experimental::Impl::GetMultidimensionalPoint	typeref:typename:ValueHierarchyNode<ValueType,Subtype>
node_type	impl/Kokkos_ChaseLev.hpp	/^  using node_type = NodeType;$/;"	t	struct:Kokkos::Impl::fixed_size_circular_buffer	typeref:typename:NodeType
node_type	impl/Kokkos_ChaseLev.hpp	/^  using node_type = NodeType;$/;"	t	struct:Kokkos::Impl::non_owning_variable_size_circular_buffer	typeref:typename:NodeType
node_type	impl/Kokkos_ChaseLev.hpp	/^  using node_type = SimpleSinglyLinkedListNode<>;$/;"	t	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:SimpleSinglyLinkedListNode<>
node_type	impl/Kokkos_LIFO.hpp	/^  using node_type = SimpleSinglyLinkedListNode<>;$/;"	t	struct:Kokkos::Impl::LockBasedLIFOCommon	typeref:typename:SimpleSinglyLinkedListNode<>
node_type	impl/Kokkos_LIFO.hpp	/^  using node_type = typename base_t::node_type;$/;"	t	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:base_t::node_type
node_type	impl/Kokkos_LIFO.hpp	/^  using node_type = typename base_t::node_type;$/;"	t	class:Kokkos::Impl::SingleConsumeOperationLIFO	typeref:typename:base_t::node_type
nomemspace_type	impl/Kokkos_ViewUniformType.hpp	/^  using nomemspace_type = Kokkos::View<data_type, array_layout,$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::View<data_type,array_layout,anonymous_device_type,memory_traits>
non_const_data_type	Kokkos_View.hpp	/^  using non_const_data_type = typename data_analysis::non_const_type;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::non_const_type
non_const_scalar_array_type	Kokkos_View.hpp	/^  using non_const_scalar_array_type =$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::non_const_scalar_array_type
non_const_type	Kokkos_View.hpp	/^  using non_const_type =$/;"	t	class:Kokkos::View	typeref:typename:View<typename traits::non_const_data_type,typename traits::array_layout,typename traits::device_type,typename traits::hooks_policy,typename traits::memory_traits>
non_const_value_type	Kokkos_View.hpp	/^  using non_const_value_type = typename data_analysis::non_const_value_type;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::non_const_value_type
non_const_value_type	impl/Kokkos_Atomic_View.hpp	/^  using non_const_value_type = typename ViewTraits::non_const_value_type;$/;"	t	class:Kokkos::Impl::AtomicDataElement	typeref:typename:ViewTraits::non_const_value_type
non_owning_variable_size_circular_buffer	impl/Kokkos_ChaseLev.hpp	/^  non_owning_variable_size_circular_buffer(ObservingRawPtr<node_type*> buffer,$/;"	f	struct:Kokkos::Impl::non_owning_variable_size_circular_buffer	typeref:typename:KOKKOS_INLINE_FUNCTION
non_owning_variable_size_circular_buffer	impl/Kokkos_ChaseLev.hpp	/^struct non_owning_variable_size_circular_buffer {$/;"	s	namespace:Kokkos::Impl
nonesuch	Kokkos_DetectionIdiom.hpp	/^struct nonesuch : private Impl::nonesuch_base {$/;"	s
nonesuch_base	Kokkos_DetectionIdiom.hpp	/^struct nonesuch_base {};$/;"	s	namespace:Kokkos::Impl
norm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct norm_min_helper<double> { static constexpr double value = DBL_MIN; };$/;"	s	namespace:Kokkos::Experimental::Impl
norm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct norm_min_helper<float> { static constexpr float value = FLT_MIN; };$/;"	s	namespace:Kokkos::Experimental::Impl
norm_min_helper	Kokkos_NumericTraits.hpp	/^template <> struct norm_min_helper<long double> { static constexpr long double value = LDBL_MIN;/;"	s	namespace:Kokkos::Experimental::Impl
norm_min_helper	Kokkos_NumericTraits.hpp	/^template <class> struct norm_min_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
numRows	Kokkos_Crs.hpp	/^  size_type numRows() const {$/;"	f	class:Kokkos::Crs	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
num_avail_bits	impl/Kokkos_Profiling_Interface.hpp	/^constexpr const uint32_t num_avail_bits    = sizeof(uint32_t) * CHAR_BIT;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:const uint32_t
num_device_bits	impl/Kokkos_Profiling_Interface.hpp	/^constexpr const uint32_t num_device_bits   = 7;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:const uint32_t
num_instance_bits	impl/Kokkos_Profiling_Interface.hpp	/^constexpr const uint32_t num_instance_bits = 17;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:const uint32_t
num_nops	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int num_nops                   = 32;$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
num_numa	impl/Kokkos_InitializationSettings.hpp	/^  int num_numa;$/;"	m	struct:Kokkos::InitArguments	typeref:typename:int
num_threads	impl/Kokkos_InitializationSettings.hpp	/^  int num_threads;$/;"	m	struct:Kokkos::InitArguments	typeref:typename:int
num_type_bits	impl/Kokkos_Profiling_Interface.hpp	/^constexpr const uint32_t num_type_bits     = 8;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:const uint32_t
num_uvm_allocations	Cuda/Kokkos_CudaSpace.cpp	/^static std::atomic<int> num_uvm_allocations(0);$/;"	v	namespace:Kokkos::Impl::__anonebf75d1c0110	typeref:typename:std::atomic<int>	file:
numa_core_rank	Threads/Kokkos_ThreadsExec.hpp	/^  KOKKOS_INLINE_FUNCTION int numa_core_rank() const { return m_numa_core_rank; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:KOKKOS_INLINE_FUNCTION int
numa_rank	Threads/Kokkos_ThreadsExec.hpp	/^  KOKKOS_INLINE_FUNCTION int numa_rank() const { return m_numa_rank; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:KOKKOS_INLINE_FUNCTION int
number_of_allocations	Cuda/Kokkos_CudaSpace.cpp	/^int CudaUVMSpace::number_of_allocations() {$/;"	f	class:Kokkos::CudaUVMSpace	typeref:typename:int
number_of_superblocks	Kokkos_MemoryPool.hpp	/^  int number_of_superblocks() const noexcept { return m_sb_count; }$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION int
object	impl/Kokkos_VLAEmulation.hpp	/^  object_type const& object() const& {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION object_type const &
object	impl/Kokkos_VLAEmulation.hpp	/^  object_type& object() & { return static_cast<Derived&>(*this); }$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION object_type &
object	impl/Kokkos_VLAEmulation.hpp	/^  object_type&& object() && { return static_cast<Derived&&>(*this); }$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION object_type &&
object_type	impl/Kokkos_VLAEmulation.hpp	/^  using object_type          = Derived;$/;"	t	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:Derived
occupancy_control	traits/Kokkos_OccupancyControlTrait.hpp	/^    using occupancy_control = Kokkos::Experimental::MaximizeOccupancy;$/;"	t	struct:Kokkos::Impl::OccupancyControlTrait::base_traits	typeref:typename:Kokkos::Experimental::MaximizeOccupancy
occupancy_control	traits/Kokkos_OccupancyControlTrait.hpp	/^  using occupancy_control = Kokkos::Experimental::DesiredOccupancy;$/;"	t	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:Kokkos::Experimental::DesiredOccupancy
occupancy_control	traits/Kokkos_OccupancyControlTrait.hpp	/^  using occupancy_control = Kokkos::Experimental::MaximizeOccupancy;$/;"	t	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:Kokkos::Experimental::MaximizeOccupancy
off	impl/Kokkos_Profiling.hpp	/^  enum PossiblyUnsetOption { unset, off, on };$/;"	e	enum:Kokkos::Tools::InitArguments::PossiblyUnsetOption
offset	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    for (unsigned int offset = local_range; offset < n_subgroups;$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:unsigned int
offset_type	impl/Kokkos_ViewArray.hpp	/^  using offset_type = ViewOffset<typename Traits::dimension,$/;"	t	namespace:Kokkos::Impl	typeref:typename:ViewOffset<typename Traits::dimension,typename Traits::array_layout,void>
ompt_internal_safe_call	OpenMPTarget/Kokkos_OpenMPTarget_Error.hpp	/^inline void ompt_internal_safe_call(int e, const char* name,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
on	impl/Kokkos_Profiling.hpp	/^  enum PossiblyUnsetOption { unset, off, on };$/;"	e	enum:Kokkos::Tools::InitArguments::PossiblyUnsetOption
openLower	impl/Kokkos_Profiling_C_Interface.h	/^  bool openLower;$/;"	m	struct:Kokkos_Tools_ValueRange	typeref:typename:bool
openUpper	impl/Kokkos_Profiling_C_Interface.h	/^  bool openUpper;$/;"	m	struct:Kokkos_Tools_ValueRange	typeref:typename:bool
openmp_fence_is_static	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^enum class openmp_fence_is_static { yes, no };$/;"	g	namespace:Kokkos::Experimental::Impl
operator !	Kokkos_Half.hpp	/^  bool operator!() const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator !	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator!() const { return !*ptr; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator !=	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION bool operator!=(RealType1 const& x,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator !=	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION bool operator!=(complex<RealType1> const& x,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator !=	Kokkos_Complex.hpp	/^inline bool operator!=(complex<RealType1> const& x,$/;"	f	namespace:Kokkos	typeref:typename:bool
operator !=	Kokkos_Complex.hpp	/^inline bool operator!=(std::complex<RealType1> const& x,$/;"	f	namespace:Kokkos	typeref:typename:bool
operator !=	Kokkos_Half.hpp	/^  bool operator!=(floating_point_wrapper rhs) const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator !=	Kokkos_Half.hpp	/^  friend bool operator!=(const volatile floating_point_wrapper& lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION bool
operator !=	Kokkos_Layout.hpp	/^  friend bool operator!=(const LayoutLeft& left, const LayoutLeft& right) {$/;"	f	namespace:Kokkos	typeref:typename:bool
operator !=	Kokkos_Layout.hpp	/^  friend bool operator!=(const LayoutRight& left, const LayoutRight& right) {$/;"	f	namespace:Kokkos	typeref:typename:bool
operator !=	Kokkos_Layout.hpp	/^  friend bool operator!=(const LayoutStride& left, const LayoutStride& right) {$/;"	f	namespace:Kokkos	typeref:typename:bool
operator !=	Kokkos_Layout.hpp	/^  friend bool operator!=(const LayoutTiled& left, const LayoutTiled& right) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:bool
operator !=	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator!=($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator !=	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator!=(const pair<T1, T2>& lhs,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator !=	Kokkos_View.hpp	/^KOKKOS_INLINE_FUNCTION bool operator!=(const View<LT, LP...>& lhs,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator !=	impl/Kokkos_Atomic_Assembly.hpp	/^  bool operator!=(const cas128_t& a) const {$/;"	f	struct:Kokkos::Impl::cas128_t	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator !=	impl/Kokkos_Atomic_View.hpp	/^  bool operator!=(const AtomicDataElement& val) const { return *ptr != val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator !=	impl/Kokkos_Atomic_View.hpp	/^  bool operator!=(volatile const AtomicDataElement& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator !=	impl/Kokkos_Atomic_Windows.hpp	/^  bool operator!=(const cas128_t& a) const {$/;"	f	struct:Kokkos::Impl::cas128_t	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator !=	impl/Kokkos_MemoryPoolAllocator.hpp	/^  bool operator!=(MemoryPoolAllocator const& other) const {$/;"	f	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator %	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator%(const_value_type& val) const { return *ptr ^ val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator %	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator%(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator %=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator%=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator %=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator%=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator &	HIP/Kokkos_HIP_KernelLaunch.hpp	/^constexpr inline HIPLaunchMechanism operator&(HIPLaunchMechanism p1,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:HIPLaunchMechanism
operator &	Kokkos_Concepts.hpp	/^inline constexpr WorkItemProperty::ImplWorkItemProperty<pv1 & pv2> operator&($/;"	f	namespace:Kokkos::Experimental	typeref:typename:WorkItemProperty::ImplWorkItemProperty<pv1 & pv2>
operator &	Kokkos_Cuda.hpp	/^constexpr inline CudaLaunchMechanism operator&(CudaLaunchMechanism p1,$/;"	f	namespace:Kokkos::Impl::Experimental	typeref:typename:CudaLaunchMechanism
operator &	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator&(const_value_type& val) const { return *ptr & val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator &	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator&(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator &&	Kokkos_Half.hpp	/^  bool operator&&(floating_point_wrapper rhs) const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator &&	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator&&(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator &&	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator&&(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator &=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator&=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator &=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator&=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ()	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  inline __device__ void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ void
operator ()	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  inline __device__ void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
operator ()	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
operator ()	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelScan	typeref:typename:__device__ void
operator ()	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:__device__ void
operator ()	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  inline __device__ void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ void
operator ()	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ void
operator ()	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
operator ()	Cuda/Kokkos_Cuda_Vectorization.hpp	/^  __device__ inline std::enable_if_t<sizeof(Scalar) <= sizeof(int)> operator()($/;"	f	struct:Kokkos::Impl::in_place_shfl_op	typeref:typename:__device__ std::enable_if_t<sizeof (Scalar)<=sizeof (int)>
operator ()	Cuda/Kokkos_Cuda_Vectorization.hpp	/^  operator()(Scalar& out, Scalar const& in, int lane_or_delta, int width,$/;"	f	struct:Kokkos::Impl::in_place_shfl_op	typeref:typename:__device__ std::enable_if_t<sizeof (Scalar)==sizeof (double)>
operator ()	Cuda/Kokkos_Cuda_Vectorization.hpp	/^  operator()(Scalar& out, const Scalar& val, int lane_or_delta, int width,$/;"	f	struct:Kokkos::Impl::in_place_shfl_op	typeref:typename:__device__ std::enable_if_t<(sizeof (Scalar)> sizeof (double))>
operator ()	Cuda/Kokkos_Cuda_Vectorization.hpp	/^  operator()(Scalar& out, const Scalar& val, int lane_or_delta, int width,$/;"	f	struct:Kokkos::Impl::in_place_shfl_op	typeref:typename:__device__ std::enable_if_t<sizeof (Scalar)==sizeof (double)>
operator ()	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^  __device__ inline void operator()() const noexcept {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ void
operator ()	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  inline __device__ void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ void
operator ()	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  inline __device__ void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
operator ()	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
operator ()	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:__device__ void
operator ()	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  inline __device__ void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ void
operator ()	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ void
operator ()	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  __device__ inline void operator()() const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
operator ()	HIP/Kokkos_HIP_Vectorization.hpp	/^  __device__ inline std::enable_if_t<sizeof(Scalar) == sizeof(int)> operator()($/;"	f	struct:Kokkos::Experimental::Impl::in_place_shfl_op	typeref:typename:__device__ std::enable_if_t<sizeof (Scalar)==sizeof (int)>
operator ()	HIP/Kokkos_HIP_Vectorization.hpp	/^  operator()(Scalar& out, Scalar const& in, int lane_or_delta, int width) const$/;"	f	struct:Kokkos::Experimental::Impl::in_place_shfl_op	typeref:typename:__device__ std::enable_if_t<sizeof (Scalar)==sizeof (double)>
operator ()	HIP/Kokkos_HIP_Vectorization.hpp	/^  operator()(Scalar& out, const Scalar& val, int lane_or_delta, int width) const$/;"	f	struct:Kokkos::Experimental::Impl::in_place_shfl_op	typeref:typename:__device__ std::enable_if_t<(sizeof (Scalar)> sizeof (double))>
operator ()	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^  __device__ inline void operator()() const noexcept {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:__device__ void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i) const { a(i) = val; };$/;"	f	struct:Kokkos::Impl::ViewFill	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0) const {$/;"	f	struct:Kokkos::Impl::ViewCopy	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0, const iType& i1) const { a(i0, i1) = val; };$/;"	f	struct:Kokkos::Impl::ViewFill	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0, const iType& i1) const {$/;"	f	struct:Kokkos::Impl::ViewCopy	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0, const iType& i1, const iType& i2) const {$/;"	f	struct:Kokkos::Impl::ViewCopy	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0, const iType& i1, const iType& i2) const {$/;"	f	struct:Kokkos::Impl::ViewFill	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0, const iType& i1, const iType& i2,$/;"	f	struct:Kokkos::Impl::ViewCopy	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0, const iType& i1, const iType& i2,$/;"	f	struct:Kokkos::Impl::ViewFill	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0, const iType& i1, const iType& i3,$/;"	f	struct:Kokkos::Impl::ViewCopy	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_CopyViews.hpp	/^  void operator()(const iType& i0, const iType& i1, const iType& i3,$/;"	f	struct:Kokkos::Impl::ViewFill	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_Core_fwd.hpp	/^  constexpr const AUTO_t &operator()() const { return *this; }$/;"	f	struct:Kokkos::AUTO_t	typeref:typename:KOKKOS_INLINE_FUNCTION const AUTO_t &
operator ()	Kokkos_Crs.hpp	/^  __device__ inline void operator()(Count, size_type i) const {$/;"	f	struct:Kokkos::CountAndFillBase	typeref:typename:__device__ void
operator ()	Kokkos_Crs.hpp	/^  __device__ inline void operator()(Fill, size_type i) const {$/;"	f	struct:Kokkos::CountAndFillBase	typeref:typename:__device__ void
operator ()	Kokkos_Crs.hpp	/^  inline void operator()(Count, size_type i) const {$/;"	f	struct:Kokkos::CountAndFillBase	typeref:typename:void
operator ()	Kokkos_Crs.hpp	/^  inline void operator()(Fill, size_type i) const {$/;"	f	struct:Kokkos::CountAndFillBase	typeref:typename:void
operator ()	Kokkos_Crs.hpp	/^  void operator()(index_type i) const { atomic_increment(&out[in.entries(i)]); }$/;"	f	class:Kokkos::Impl::GetCrsTransposeCounts	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_Crs.hpp	/^  void operator()(index_type i) const {$/;"	f	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_Crs.hpp	/^  void operator()(index_type i, value_type& update, bool final_pass) const {$/;"	f	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_ExecPolicy.hpp	/^  void operator()(const int&) const {}$/;"	f	class:Kokkos::RangePolicy	typeref:typename:void
operator ()	Kokkos_View.hpp	/^      operator()(I0 i0) const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION std::enable_if_t<(Kokkos::Impl::always_true<I0>::value && (1==Rank)&& is_default_map && is_layout_stride),reference_type>
operator ()	Kokkos_View.hpp	/^      operator()(I0 i0) const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION std::enable_if_t<(Kokkos::Impl::always_true<I0>::value && (1==Rank)&& is_default_map &&!is_layout_stride),reference_type>
operator ()	Kokkos_WorkGraphPolicy.hpp	/^  void operator()(const TagCount, int i) const noexcept {$/;"	f	class:Kokkos::WorkGraphPolicy	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_WorkGraphPolicy.hpp	/^  void operator()(const TagInit, int i) const noexcept {$/;"	f	class:Kokkos::WorkGraphPolicy	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	Kokkos_WorkGraphPolicy.hpp	/^  void operator()(const TagReady, int w) const noexcept {$/;"	f	class:Kokkos::WorkGraphPolicy	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  void operator()(sycl::item<1> item) const {$/;"	f	struct:Kokkos::Impl::FunctorWrapperRangePolicyParallelFor	typeref:typename:void
operator ()	impl/KokkosExp_Host_IterateTile.hpp	/^  inline void operator()(IType tile_idx) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:void
operator ()	impl/Kokkos_Combined_Reducer.hpp	/^  KOKKOS_FUNCTION void operator()($/;"	f	struct:Kokkos::Impl::CombinedReductionFunctorWrapperImpl	typeref:typename:KOKKOS_FUNCTION void
operator ()	impl/Kokkos_TaskQueueCommon.hpp	/^    void operator()(TaskNode<TaskQueueTraits>&& task) const noexcept$/;"	f	struct:Kokkos::Impl::TaskQueueCommonMixin::_schedule_waiting_tasks_operation	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	impl/Kokkos_Utilities.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr void operator()(T* p) const noexcept {$/;"	f	struct:Kokkos::Impl::destruct_delete	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator ()	impl/Kokkos_ViewMapping.hpp	/^  constexpr const ALL_t& operator()() const { return *this; }$/;"	f	struct:Kokkos::Impl::ALL_t	typeref:typename:KOKKOS_INLINE_FUNCTION const ALL_t &
operator *	Kokkos_Complex.hpp	/^inline complex<std::common_type_t<RealType1, RealType2>> operator*($/;"	f	namespace:Kokkos	typeref:typename:complex<std::common_type_t<RealType1,RealType2>>
operator *	Kokkos_Complex.hpp	/^operator*(const RealType1& x, const complex<RealType2>& y) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator *	Kokkos_Complex.hpp	/^operator*(const complex<RealType1>& x, const complex<RealType2>& y) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator *	Kokkos_Complex.hpp	/^operator*(const complex<RealType1>& y, const RealType2& x) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator *	Kokkos_Half.hpp	/^  friend floating_point_wrapper operator*(floating_point_wrapper lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper
operator *	Kokkos_Half.hpp	/^  operator*(T lhs, floating_point_wrapper rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator *	Kokkos_Half.hpp	/^  operator*(floating_point_wrapper lhs, T rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator *	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator*(const_value_type& val) const { return *ptr * val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator *	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator*(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator *	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION T& operator*() const noexcept {$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION T &
operator *	impl/Kokkos_OptionalRef.hpp	/^  T const volatile& operator*() const volatile& {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T const volatile &
operator *	impl/Kokkos_OptionalRef.hpp	/^  T const& operator*() const& {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T const &
operator *	impl/Kokkos_OptionalRef.hpp	/^  T volatile& operator*() volatile& {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T volatile &
operator *	impl/Kokkos_OptionalRef.hpp	/^  T& operator*() & {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T &
operator *	impl/Kokkos_OptionalRef.hpp	/^  T&& operator*() && {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T &&
operator *=	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION void operator*=($/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator *=	Kokkos_Complex.hpp	/^  constexpr KOKKOS_INLINE_FUNCTION complex& operator*=($/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION complex &
operator *=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator*=(double rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator *=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator*=(float rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator *=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator*=(floating_point_wrapper rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator *=	Kokkos_Half.hpp	/^  operator*=(T& lhs, floating_point_wrapper rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator *=	Kokkos_Half.hpp	/^  void operator*=(const volatile floating_point_wrapper& rhs) volatile {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION void
operator *=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator*=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator *=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator*=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator +	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<RealType> operator+($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<RealType>
operator +	Kokkos_Complex.hpp	/^operator+(const RealType1& x, const complex<RealType2>& y) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator +	Kokkos_Complex.hpp	/^operator+(const complex<RealType1>& x, const RealType2& y) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator +	Kokkos_Complex.hpp	/^operator+(const complex<RealType1>& x, const complex<RealType2>& y) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator +	Kokkos_Half.hpp	/^  floating_point_wrapper operator+() const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper
operator +	Kokkos_Half.hpp	/^  friend floating_point_wrapper operator+(floating_point_wrapper lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper
operator +	Kokkos_Half.hpp	/^  operator+(T lhs, floating_point_wrapper rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator +	Kokkos_Half.hpp	/^  operator+(floating_point_wrapper lhs, T rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator +	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator+(const_value_type& val) const { return *ptr + val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator +	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator+(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ++	Kokkos_Half.hpp	/^  floating_point_wrapper operator++(int) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper
operator ++	Kokkos_Half.hpp	/^  floating_point_wrapper& operator++() {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator ++	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator++() const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ++	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator++(int) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator +=	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION void operator+=($/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator +=	Kokkos_Complex.hpp	/^  constexpr KOKKOS_INLINE_FUNCTION complex& operator+=($/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION complex &
operator +=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator+=(double rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator +=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator+=(float rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator +=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator+=(floating_point_wrapper rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator +=	Kokkos_Half.hpp	/^  operator+=(T& lhs, floating_point_wrapper rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator +=	Kokkos_Half.hpp	/^  void operator+=(const volatile floating_point_wrapper& rhs) volatile {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION void
operator +=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator+=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator +=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator+=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator -	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<RealType> operator-($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<RealType>
operator -	Kokkos_Complex.hpp	/^operator-(const RealType1& x, const complex<RealType2>& y) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator -	Kokkos_Complex.hpp	/^operator-(const complex<RealType1>& x, const RealType2& y) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator -	Kokkos_Complex.hpp	/^operator-(const complex<RealType1>& x, const complex<RealType2>& y) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator -	Kokkos_Half.hpp	/^  floating_point_wrapper operator-() const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper
operator -	Kokkos_Half.hpp	/^  friend floating_point_wrapper operator-(floating_point_wrapper lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper
operator -	Kokkos_Half.hpp	/^  operator-(T lhs, floating_point_wrapper rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator -	Kokkos_Half.hpp	/^  operator-(floating_point_wrapper lhs, T rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator -	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator-(const_value_type& val) const { return *ptr - val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator -	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator-(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator --	Kokkos_Half.hpp	/^  floating_point_wrapper operator--(int) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper
operator --	Kokkos_Half.hpp	/^  floating_point_wrapper& operator--() {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator --	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator--() const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator --	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator--(int) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator -=	Kokkos_Complex.hpp	/^  constexpr KOKKOS_INLINE_FUNCTION complex& operator-=($/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION complex &
operator -=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator-=(double rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator -=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator-=(float rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator -=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator-=(floating_point_wrapper rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator -=	Kokkos_Half.hpp	/^  operator-=(T& lhs, floating_point_wrapper rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator -=	Kokkos_Half.hpp	/^  void operator-=(const volatile floating_point_wrapper& rhs) volatile {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION void
operator -=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator-=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator -=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator-=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ->	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION T* operator->() const noexcept {$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION T *
operator ->	impl/Kokkos_OptionalRef.hpp	/^  T const volatile* operator->() const volatile {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T const volatile *
operator ->	impl/Kokkos_OptionalRef.hpp	/^  T const* operator->() const {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T const *
operator ->	impl/Kokkos_OptionalRef.hpp	/^  T volatile* operator->() volatile {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T volatile *
operator ->	impl/Kokkos_OptionalRef.hpp	/^  T* operator->() {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION T *
operator /	Kokkos_Complex.hpp	/^operator\/(const RealType1& x,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator /	Kokkos_Complex.hpp	/^operator\/(const complex<RealType1>& x,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<std::common_type_t<RealType1,RealType2>>
operator /	Kokkos_Half.hpp	/^  friend floating_point_wrapper operator\/(floating_point_wrapper lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper
operator /	Kokkos_Half.hpp	/^  operator\/(T lhs, floating_point_wrapper rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator /	Kokkos_Half.hpp	/^  operator\/(floating_point_wrapper lhs, T rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator /	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator\/(const_value_type& val) const { return *ptr \/ val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator /	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator\/(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator /=	Kokkos_Complex.hpp	/^  constexpr KOKKOS_INLINE_FUNCTION complex& operator\/=($/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION complex &
operator /=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator\/=(double rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator /=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator\/=(float rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator /=	Kokkos_Half.hpp	/^  floating_point_wrapper& operator\/=(floating_point_wrapper rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator /=	Kokkos_Half.hpp	/^  operator\/=(T& lhs, floating_point_wrapper rhs) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION std::enable_if_t<std::is_same<T,float>::value||std::is_same<T,double>::value,T>
operator /=	Kokkos_Half.hpp	/^  void operator\/=(const volatile floating_point_wrapper& rhs) volatile {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION void
operator /=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator\/=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator /=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator\/=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator <	Kokkos_Half.hpp	/^  bool operator<(floating_point_wrapper rhs) const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator <	Kokkos_Half.hpp	/^  friend bool operator<(const volatile floating_point_wrapper& lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION bool
operator <	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator<($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator <	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator<(const pair<T1, T2>& lhs,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator <	impl/Kokkos_Atomic_View.hpp	/^  bool operator<(const_value_type& val) const { return *ptr < val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator <	impl/Kokkos_Atomic_View.hpp	/^  bool operator<(volatile const_value_type& val) const { return *ptr < val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator <<	Kokkos_Complex.hpp	/^std::ostream& operator<<(std::ostream& os, const complex<RealType>& x) {$/;"	f	namespace:Kokkos	typeref:typename:std::ostream &
operator <<	Kokkos_Half.hpp	/^  friend std::ostream& operator<<(std::ostream& os,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:std::ostream &
operator <<	SYCL/Kokkos_SYCL.cpp	/^  friend std::ostream& operator<<(std::ostream& os, const Container& that) {$/;"	f	namespace:__anon7e1ce1ec0110	typeref:typename:std::ostream &	file:
operator <<	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator<<(const unsigned int& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator <<	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator<<(volatile const unsigned int& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator <<=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator<<=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator <<=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator<<=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator <=	Kokkos_Half.hpp	/^  bool operator<=(floating_point_wrapper rhs) const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator <=	Kokkos_Half.hpp	/^  friend bool operator<=(const volatile floating_point_wrapper& lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION bool
operator <=	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator<=($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator <=	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator<=(const pair<T1, T2>& lhs,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator <=	impl/Kokkos_Atomic_View.hpp	/^  bool operator<=(const_value_type& val) const { return *ptr <= val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator <=	impl/Kokkos_Atomic_View.hpp	/^  bool operator<=(volatile const_value_type& val) const { return *ptr <= val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator =	Cuda/Kokkos_Cuda_View.hpp	/^  CudaLDGFetch& operator=(CudaLDGFetch&& rhs) {$/;"	f	struct:Kokkos::Impl::CudaLDGFetch	typeref:typename:KOKKOS_INLINE_FUNCTION CudaLDGFetch &
operator =	Cuda/Kokkos_Cuda_View.hpp	/^  CudaLDGFetch& operator=(const CudaLDGFetch& rhs) {$/;"	f	struct:Kokkos::Impl::CudaLDGFetch	typeref:typename:KOKKOS_INLINE_FUNCTION CudaLDGFetch &
operator =	Cuda/Kokkos_Cuda_View.hpp	/^  CudaTextureFetch& operator=(CudaTextureFetch&& rhs) {$/;"	f	struct:Kokkos::Impl::CudaTextureFetch	typeref:typename:KOKKOS_INLINE_FUNCTION CudaTextureFetch &
operator =	Cuda/Kokkos_Cuda_View.hpp	/^  CudaTextureFetch& operator=(const CudaTextureFetch& rhs) {$/;"	f	struct:Kokkos::Impl::CudaTextureFetch	typeref:typename:KOKKOS_INLINE_FUNCTION CudaTextureFetch &
operator =	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION complex& operator=($/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION complex &
operator =	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION complex& operator=(const RealType& val) noexcept {$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION complex &
operator =	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION void operator=(const Complex& src) volatile noexcept {$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION void operator=(const volatile RealType& val) noexcept {$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_Complex.hpp	/^  KOKKOS_INLINE_FUNCTION volatile complex& operator=($/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION volatile complex &
operator =	Kokkos_Complex.hpp	/^  complex& operator=(const std::complex<RealType>& src) noexcept {$/;"	f	class:Kokkos::complex	typeref:typename:complex &
operator =	Kokkos_Future.hpp	/^  BasicFuture& operator=(BasicFuture const& rhs) {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION BasicFuture &
operator =	Kokkos_Future.hpp	/^  BasicFuture& operator=(BasicFuture&& rhs) noexcept {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION BasicFuture &
operator =	Kokkos_Future.hpp	/^  KOKKOS_INLINE_FUNCTION BasicFuture& operator=(BasicFuture<T, S> const& rhs) {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION BasicFuture &
operator =	Kokkos_Future.hpp	/^  KOKKOS_INLINE_FUNCTION BasicFuture& operator=(BasicFuture<T, S>&& rhs) {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION BasicFuture &
operator =	Kokkos_HPX.hpp	/^    value_type_wrapper &operator=(const value_type_wrapper &other) {$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper	typeref:typename:value_type_wrapper &
operator =	Kokkos_HPX.hpp	/^    value_type_wrapper &operator=(value_type_wrapper &&other) {$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper	typeref:typename:value_type_wrapper &
operator =	Kokkos_Half.hpp	/^  KOKKOS_FUNCTION floating_point_wrapper& operator=(T rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator =	Kokkos_Half.hpp	/^  KOKKOS_FUNCTION void operator=(T rhs) volatile {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION void
operator =	Kokkos_Half.hpp	/^  floating_point_wrapper& operator=(impl_type rhs) {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION floating_point_wrapper &
operator =	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION pair<T1, T2>& operator=(const pair<U, V>& p) {$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION pair<T1,T2> &
operator =	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION pair<T1, void>& operator=($/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION pair<T1,void> &
operator =	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION pair<first_type, second_type>& operator=($/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION pair<first_type,second_type> &
operator =	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION void operator=($/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
operator =	Kokkos_Parallel_Reduce.hpp	/^  void operator=(const FirstLocScalar& rhs) { min_loc_true = rhs.min_loc_true; }$/;"	f	struct:Kokkos::FirstLocScalar	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_Parallel_Reduce.hpp	/^  void operator=(const LastLocScalar& rhs) { max_loc_true = rhs.max_loc_true; }$/;"	f	struct:Kokkos::LastLocScalar	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_Parallel_Reduce.hpp	/^  void operator=(const MinMaxLocScalar& rhs) {$/;"	f	struct:Kokkos::MinMaxLocScalar	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_Parallel_Reduce.hpp	/^  void operator=(const MinMaxScalar& rhs) {$/;"	f	struct:Kokkos::MinMaxScalar	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_Parallel_Reduce.hpp	/^  void operator=(const StdIsPartScalar& rhs) {$/;"	f	struct:Kokkos::StdIsPartScalar	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_Parallel_Reduce.hpp	/^  void operator=(const StdPartPointScalar& rhs) {$/;"	f	struct:Kokkos::StdPartPointScalar	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_Parallel_Reduce.hpp	/^  void operator=(const ValLocScalar& rhs) {$/;"	f	struct:Kokkos::ValLocScalar	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	Kokkos_TaskScheduler.hpp	/^  BasicTaskScheduler& operator=(BasicTaskScheduler const& rhs) {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION BasicTaskScheduler &
operator =	Kokkos_TaskScheduler.hpp	/^  BasicTaskScheduler& operator=(BasicTaskScheduler&& rhs) noexcept {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION BasicTaskScheduler &
operator =	Kokkos_View.hpp	/^  View& operator=(View&& other) {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_FUNCTION View &
operator =	Kokkos_View.hpp	/^  View& operator=(const View& other) {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_FUNCTION View &
operator =	Kokkos_View.hpp	/^  operator=(const View<RT, RP...>& rhs) {$/;"	f	class:Kokkos::View
operator =	SYCL/Kokkos_SYCL_Instance.hpp	/^    TrivialWrapper& operator=(TrivialWrapper&& other) {$/;"	f	union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper	typeref:typename:TrivialWrapper &
operator =	SYCL/Kokkos_SYCL_Instance.hpp	/^    TrivialWrapper& operator=(const TrivialWrapper& other) {$/;"	f	union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper	typeref:typename:TrivialWrapper &
operator =	impl/Kokkos_AnalyzePolicy.hpp	/^  AnalyzeExecPolicy& operator=(ExecPolicyTraitsWithDefaults<Other> const&) {$/;"	f	struct:Kokkos::Impl::AnalyzeExecPolicy	typeref:typename:AnalyzeExecPolicy &
operator =	impl/Kokkos_Atomic_Assembly.hpp	/^  void operator=(const cas128_t& a) volatile {$/;"	f	struct:Kokkos::Impl::cas128_t	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	impl/Kokkos_Atomic_Assembly.hpp	/^  void operator=(const cas128_t& a) {$/;"	f	struct:Kokkos::Impl::cas128_t	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator =	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator =	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION HostSharedPtr& operator=($/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION HostSharedPtr &
operator =	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION HostSharedPtr& operator=(HostSharedPtr&& other) noexcept {$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION HostSharedPtr &
operator =	impl/Kokkos_OptionalRef.hpp	/^  OptionalRef& operator=(OptionalRef const& other) noexcept {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef &
operator =	impl/Kokkos_OptionalRef.hpp	/^  OptionalRef& operator=(T& arg_value) {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef &
operator =	impl/Kokkos_OptionalRef.hpp	/^  OptionalRef& operator=(std::nullptr_t) {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef &
operator =	impl/Kokkos_OptionalRef.hpp	/^  void operator=(OptionalRef const volatile& other) volatile noexcept {$/;"	f	struct:Kokkos::Impl::OptionalRef	typeref:typename:KOKKOS_INLINE_FUNCTION void
operator =	impl/Kokkos_SharedAlloc.hpp	/^        operator=(const SharedAllocationTracker& rhs) {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION SharedAllocationTracker &
operator =	impl/Kokkos_SharedAlloc.hpp	/^  SharedAllocationTracker& operator=(SharedAllocationTracker&& rhs) {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION SharedAllocationTracker &
operator =	impl/Kokkos_ViewTracker.hpp	/^  KOKKOS_INLINE_FUNCTION ViewTracker& operator=($/;"	f	struct:Kokkos::Impl::ViewTracker	typeref:typename:KOKKOS_INLINE_FUNCTION ViewTracker &
operator =	traits/Kokkos_OccupancyControlTrait.hpp	/^  OccupancyControlPolicyMixin& operator=($/;"	f	struct:Kokkos::Impl::OccupancyControlPolicyMixin	typeref:typename:OccupancyControlPolicyMixin &
operator ==	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION bool operator==(RealType1 const& x,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator ==	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION bool operator==(complex<RealType1> const& x,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator ==	Kokkos_Complex.hpp	/^inline bool operator==(complex<RealType1> const& x,$/;"	f	namespace:Kokkos	typeref:typename:bool
operator ==	Kokkos_Complex.hpp	/^inline bool operator==(std::complex<RealType1> const& x,$/;"	f	namespace:Kokkos	typeref:typename:bool
operator ==	Kokkos_Concepts.hpp	/^inline constexpr bool operator==(WorkItemProperty::ImplWorkItemProperty<pv1>,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:bool
operator ==	Kokkos_Half.hpp	/^  bool operator==(floating_point_wrapper rhs) const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator ==	Kokkos_Half.hpp	/^  friend bool operator==(const volatile floating_point_wrapper& lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION bool
operator ==	Kokkos_Layout.hpp	/^  friend bool operator==(const LayoutLeft& left, const LayoutLeft& right) {$/;"	f	namespace:Kokkos	typeref:typename:bool
operator ==	Kokkos_Layout.hpp	/^  friend bool operator==(const LayoutRight& left, const LayoutRight& right) {$/;"	f	namespace:Kokkos	typeref:typename:bool
operator ==	Kokkos_Layout.hpp	/^  friend bool operator==(const LayoutStride& left, const LayoutStride& right) {$/;"	f	namespace:Kokkos	typeref:typename:bool
operator ==	Kokkos_Layout.hpp	/^  friend bool operator==(const LayoutTiled& left, const LayoutTiled& right) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:bool
operator ==	Kokkos_MemoryPool.hpp	/^  bool operator==(MemoryPool const &other) const {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator ==	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator==($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator ==	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator==(const pair<T1, T2>& lhs,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator ==	Kokkos_View.hpp	/^KOKKOS_INLINE_FUNCTION bool operator==(const View<LT, LP...>& lhs,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator ==	impl/Kokkos_Atomic_View.hpp	/^  bool operator==(const AtomicDataElement& val) const { return *ptr == val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator ==	impl/Kokkos_Atomic_View.hpp	/^  bool operator==(volatile const AtomicDataElement& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator ==	impl/Kokkos_MemoryPoolAllocator.hpp	/^  bool operator==(MemoryPoolAllocator const& other) const {$/;"	f	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator ==	impl/Kokkos_ViewMapping.hpp	/^  constexpr bool operator==(const ALL_t&) const { return true; }$/;"	f	struct:Kokkos::Impl::ALL_t	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator >	Kokkos_Half.hpp	/^  bool operator>(floating_point_wrapper rhs) const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator >	Kokkos_Half.hpp	/^  friend bool operator>(const volatile floating_point_wrapper& lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION bool
operator >	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator>($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator >	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator>(const pair<T1, T2>& lhs,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator >	impl/Kokkos_Atomic_View.hpp	/^  bool operator>(const_value_type& val) const { return *ptr > val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator >	impl/Kokkos_Atomic_View.hpp	/^  bool operator>(volatile const_value_type& val) const { return *ptr > val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator >=	Kokkos_Half.hpp	/^  bool operator>=(floating_point_wrapper rhs) const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator >=	Kokkos_Half.hpp	/^  friend bool operator>=(const volatile floating_point_wrapper& lhs,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:KOKKOS_FUNCTION bool
operator >=	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator>=($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator >=	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION constexpr bool operator>=(const pair<T1, T2>& lhs,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
operator >=	impl/Kokkos_Atomic_View.hpp	/^  bool operator>=(const_value_type& val) const { return *ptr >= val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator >=	impl/Kokkos_Atomic_View.hpp	/^  bool operator>=(volatile const_value_type& val) const { return *ptr >= val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION bool
operator >>	Kokkos_Complex.hpp	/^std::istream& operator>>(std::istream& is, complex<RealType>& x) {$/;"	f	namespace:Kokkos	typeref:typename:std::istream &
operator >>	Kokkos_Half.hpp	/^  friend std::istream& operator>>(std::istream& is, floating_point_wrapper& x) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:std::istream &
operator >>	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator>>(const unsigned int& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator >>	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator>>(volatile const unsigned int& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator >>=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator>>=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator >>=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator>>=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator []	Cuda/Kokkos_Cuda_View.hpp	/^  KOKKOS_INLINE_FUNCTION ValueType operator[](const iType& i) const {$/;"	f	struct:Kokkos::Impl::CudaLDGFetch	typeref:typename:KOKKOS_INLINE_FUNCTION ValueType
operator []	Cuda/Kokkos_Cuda_View.hpp	/^  KOKKOS_INLINE_FUNCTION ValueType operator[](const iType& i) const {$/;"	f	struct:Kokkos::Impl::CudaTextureFetch	typeref:typename:KOKKOS_INLINE_FUNCTION ValueType
operator []	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION const_reference operator[](const iType&) const {$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION const_reference
operator []	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr const_reference operator[]($/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION const_reference
operator []	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr reference operator[](const iType& i) {$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION reference
operator []	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION reference operator[](const iType&) {$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION reference
operator ^	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator^(const_value_type& val) const { return *ptr ^ val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ^	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator^(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ^=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator^=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ^=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator^=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator |	HIP/Kokkos_HIP_KernelLaunch.hpp	/^constexpr inline HIPLaunchMechanism operator|(HIPLaunchMechanism p1,$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:HIPLaunchMechanism
operator |	Kokkos_Concepts.hpp	/^inline constexpr WorkItemProperty::ImplWorkItemProperty<pv1 | pv2> operator|($/;"	f	namespace:Kokkos::Experimental	typeref:typename:WorkItemProperty::ImplWorkItemProperty<pv1|pv2>
operator |	Kokkos_Cuda.hpp	/^constexpr inline CudaLaunchMechanism operator|(CudaLaunchMechanism p1,$/;"	f	namespace:Kokkos::Impl::Experimental	typeref:typename:CudaLaunchMechanism
operator |	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator|(const_value_type& val) const { return *ptr | val; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator |	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator|(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator |=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator|=(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator |=	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator|=(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ||	Kokkos_Half.hpp	/^  bool operator||(floating_point_wrapper rhs) const {$/;"	f	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:KOKKOS_FUNCTION bool
operator ||	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator||(const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ||	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator||(volatile const_value_type& val) const {$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator ~	impl/Kokkos_Atomic_View.hpp	/^  const_value_type operator~() const { return ~*ptr; }$/;"	f	class:Kokkos::Impl::AtomicDataElement	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type
operator_impl	impl/KokkosExp_Host_IterateTile.hpp	/^  inline void operator_impl(IType tile_idx, const RankTag<2>) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:void
operator_impl	impl/KokkosExp_Host_IterateTile.hpp	/^  inline void operator_impl(IType tile_idx, const RankTag<3>) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:void
operator_impl	impl/KokkosExp_Host_IterateTile.hpp	/^  inline void operator_impl(IType tile_idx, const RankTag<4>) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:void
operator_impl	impl/KokkosExp_Host_IterateTile.hpp	/^  inline void operator_impl(IType tile_idx, const RankTag<5>) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:void
operator_impl	impl/KokkosExp_Host_IterateTile.hpp	/^  inline void operator_impl(IType tile_idx, const RankTag<6>) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:void
operator_impl	impl/KokkosExp_Host_IterateTile.hpp	/^  inline void operator_impl(IType tile_idx, const RankTag<7>) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:void
operator_impl	impl/KokkosExp_Host_IterateTile.hpp	/^  inline void operator_impl(IType tile_idx, const RankTag<8>) const {$/;"	f	struct:Kokkos::Impl::HostIterateTile	typeref:typename:void
optimizationGoalDeclarationFunction	impl/Kokkos_Profiling_Interface.hpp	/^using optimizationGoalDeclarationFunction =$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_optimizationGoalDeclarationFunction
optimization_goals	impl/Kokkos_Profiling.cpp	/^static std::unordered_map<size_t, size_t> optimization_goals;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:std::unordered_map<size_t,size_t>	file:
optional_queue	impl/Kokkos_TaskQueueMultiple.hpp	/^    optional_queue() : uninitialized(0) {}$/;"	f	union:Kokkos::Impl::LeagueQueueCollection::optional_queue	typeref:typename:KOKKOS_INLINE_FUNCTION
optional_queue	impl/Kokkos_TaskQueueMultiple.hpp	/^  union optional_queue {$/;"	u	class:Kokkos::Impl::LeagueQueueCollection
order_dimensions	Kokkos_Layout.hpp	/^  KOKKOS_INLINE_FUNCTION static LayoutStride order_dimensions($/;"	f	struct:Kokkos::LayoutStride	typeref:typename:KOKKOS_INLINE_FUNCTION LayoutStride
organize_pool	impl/Kokkos_HostThreadTeam.cpp	/^void HostThreadTeamData::organize_pool(HostThreadTeamData *members[],$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:void
organize_team	impl/Kokkos_HostThreadTeam.cpp	/^int HostThreadTeamData::organize_team(const int team_size) {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
orig	Cuda/Kokkos_Cuda_Vectorization.hpp	/^      Scalar orig;$/;"	m	union:Kokkos::Impl::in_place_shfl_op::operator ()::conv_type	typeref:typename:Scalar
orig	HIP/Kokkos_HIP_Vectorization.hpp	/^      Scalar orig;$/;"	m	union:Kokkos::Experimental::Impl::in_place_shfl_op::conv_type	typeref:typename:Scalar
other	impl/Kokkos_MemoryPoolAllocator.hpp	/^    using other = MemoryPoolAllocator<MemoryPool, U>;$/;"	t	struct:Kokkos::Impl::MemoryPoolAllocator::rebind	typeref:typename:MemoryPoolAllocator<MemoryPool,U>
out	Kokkos_Crs.hpp	/^  OutCounts out;$/;"	m	class:Kokkos::Impl::GetCrsTransposeCounts	typeref:typename:OutCounts
out	Kokkos_Crs.hpp	/^  OutCrs out;$/;"	m	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:OutCrs
outer_direction	KokkosExp_MDRangePolicy.hpp	/^  static constexpr auto outer_direction =$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:auto
outer_direction	Kokkos_Rank.hpp	/^  static constexpr Iterate outer_direction = OuterDir;$/;"	m	struct:Kokkos::Rank	typeref:typename:Iterate
outer_iteration_pattern	Kokkos_CopyViews.hpp	/^  static const Kokkos::Iterate outer_iteration_pattern =$/;"	m	struct:Kokkos::Impl::ViewCopy	typeref:typename:const Kokkos::Iterate
outer_iteration_pattern	Kokkos_Layout.hpp	/^  static const Kokkos::Iterate outer_iteration_pattern = Kokkos::Iterate::Left;$/;"	m	struct:Kokkos::layout_iterate_type_selector	typeref:typename:const Kokkos::Iterate
outer_iteration_pattern	Kokkos_Layout.hpp	/^  static const Kokkos::Iterate outer_iteration_pattern = Kokkos::Iterate::Right;$/;"	m	struct:Kokkos::layout_iterate_type_selector	typeref:typename:const Kokkos::Iterate
outer_iteration_pattern	Kokkos_Layout.hpp	/^  static const Kokkos::Iterate outer_iteration_pattern =$/;"	m	struct:Kokkos::layout_iterate_type_selector	typeref:typename:const Kokkos::Iterate
outer_pattern	Kokkos_Layout.hpp	/^  static constexpr Iterate outer_pattern = OuterP;$/;"	m	struct:Kokkos::Experimental::LayoutTiled	typeref:typename:Iterate
outer_pattern	impl/Kokkos_ViewLayoutTiled.hpp	/^    Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>::outer_pattern;$/;"	m	class:Kokkos::Impl::ViewOffset< Dimension, Layout, KOKKOS_ITERATE_VIEW_OFFSET_ENABLE>	typeref:typename:Kokkos::Iterate
outputTypeDeclarationFunction	impl/Kokkos_Profiling_Interface.hpp	/^using outputTypeDeclarationFunction =$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_outputTypeDeclarationFunction
p_type	Kokkos_CopyViews.hpp	/^  using p_type = Kokkos::pair<int64_t, int64_t>;$/;"	t	struct:Kokkos::Impl::ViewRemap	typeref:typename:Kokkos::pair<int64_t,int64_t>
pad_to_cache_line	Kokkos_HPX.hpp	/^  void pad_to_cache_line(std::size_t &size) {$/;"	f	class:Kokkos::Impl::thread_buffer	typeref:typename:void
padding	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_functionPointer padding[31];$/;"	m	struct:Kokkos_Tools_ToolProgrammingInterface	typeref:typename:Kokkos_Tools_functionPointer[31]
padding	impl/Kokkos_Profiling_C_Interface.h	/^  bool padding[255];$/;"	m	struct:Kokkos_Tools_ToolSettings	typeref:typename:bool[255]
padding	impl/Kokkos_Profiling_C_Interface.h	/^  char padding[232 *$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:char[]
pair	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr pair(const first_type& f) : first(f) {}$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
pair	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr pair(const first_type& f, int)$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
pair	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr pair(const pair<U, V>& p)$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
pair	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr pair(const pair<U, void>& p)$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
pair	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr pair(const volatile pair<U, V>& p)$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
pair	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr pair(first_type const& f, second_type s)$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
pair	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr pair(first_type f, second_type const& s)$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
pair	Kokkos_Pair.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr pair(first_type f, second_type s)$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION 
pair	Kokkos_Pair.hpp	/^  pair(const pair<U, V>& p)$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION
pair	Kokkos_Pair.hpp	/^  pair(const std::pair<U, V>& p) : first(p.first), second(p.second) {}$/;"	f	struct:Kokkos::pair
pair	Kokkos_Pair.hpp	/^  pair(first_type const& f, second_type const& s) : first(f), second(s) {}$/;"	f	struct:Kokkos::pair	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION
pair	Kokkos_Pair.hpp	/^struct pair {$/;"	s	namespace:Kokkos
pair	Kokkos_Pair.hpp	/^struct pair<T1&, T2&> {$/;"	s	namespace:Kokkos
pair	Kokkos_Pair.hpp	/^struct pair<T1&, T2> {$/;"	s	namespace:Kokkos
pair	Kokkos_Pair.hpp	/^struct pair<T1, T2&> {$/;"	s	namespace:Kokkos
pair	Kokkos_Pair.hpp	/^struct pair<T1, void> {$/;"	s	namespace:Kokkos
pair_int_t	impl/Kokkos_HostThreadTeam.hpp	/^  using pair_int_t = Kokkos::pair<int64_t, int64_t>;$/;"	t	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:Kokkos::pair<int64_t,int64_t>
parallel_for	Cuda/Kokkos_Cuda_Task.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_for	Cuda/Kokkos_Cuda_Team.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_for	HIP/Kokkos_HIP_Team.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_for	Kokkos_HPX.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_for	Kokkos_Parallel.hpp	/^inline void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_DEPRECATED_WITH_COMMENT ("")void
parallel_for	Kokkos_Parallel.hpp	/^inline void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:void
parallel_for	Kokkos_Parallel.hpp	/^inline void parallel_for(const size_t work_count, const FunctorType& functor) {$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_for	Kokkos_Parallel.hpp	/^inline void parallel_for(const size_t work_count, const FunctorType& functor,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_DEPRECATED_WITH_COMMENT ("")void
parallel_for	Kokkos_Parallel.hpp	/^inline void parallel_for(const std::string& str, const size_t work_count,$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_for	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_for	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_for	SYCL/Kokkos_SYCL_Team.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_for	Threads/Kokkos_ThreadsTeam.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_for	impl/Kokkos_HostThreadTeam.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_for($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_reduce	Cuda/Kokkos_Cuda_Task.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_reduce($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_reduce	Cuda/Kokkos_Cuda_Team.hpp	/^parallel_reduce(Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
parallel_reduce	Cuda/Kokkos_Cuda_Team.hpp	/^parallel_reduce(const Impl::TeamThreadRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	Cuda/Kokkos_Cuda_Team.hpp	/^parallel_reduce(const Impl::TeamVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	HIP/Kokkos_HIP_Team.hpp	/^parallel_reduce(Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
parallel_reduce	HIP/Kokkos_HIP_Team.hpp	/^parallel_reduce(const Impl::TeamThreadRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	HIP/Kokkos_HIP_Team.hpp	/^parallel_reduce(const Impl::TeamVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	Kokkos_HPX.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_reduce($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^inline void parallel_reduce($/;"	f	namespace:Kokkos	typeref:typename:void
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^inline void parallel_reduce(const size_t& policy, const FunctorType& functor) {$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^inline void parallel_reduce(const std::string& label, const size_t& policy,$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce(const PolicyType& policy, const FunctorType& functor,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<Kokkos::is_execution_policy<PolicyType>::value && (Kokkos::is_view<ReturnType>::value||Kokkos::is_reducer<ReturnType>::value||std::is_pointer<ReturnType>::value)>
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce(const PolicyType& policy, const FunctorType& functor,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<Kokkos::is_execution_policy<PolicyType>::value &&!(Kokkos::is_view<ReturnType>::value||Kokkos::is_reducer<ReturnType>::value||std::is_pointer<ReturnType>::value)>
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce(const size_t& policy, const FunctorType& functor,$/;"	f	namespace:Kokkos
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce(const std::string& label, const PolicyType& policy,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<Kokkos::is_execution_policy<PolicyType>::value && (Kokkos::is_view<ReturnType>::value||Kokkos::is_reducer<ReturnType>::value||std::is_pointer<ReturnType>::value)>
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce(const std::string& label, const PolicyType& policy,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<Kokkos::is_execution_policy<PolicyType>::value &&!(Kokkos::is_view<ReturnType>::value||Kokkos::is_reducer<ReturnType>::value||std::is_pointer<ReturnType>::value)>
parallel_reduce	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce(const std::string& label, const size_t& policy,$/;"	f	namespace:Kokkos
parallel_reduce	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_reduce($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_reduce	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^parallel_reduce(const Impl::TeamThreadRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^parallel_reduce(const Impl::TeamVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^parallel_reduce(const Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_reduce($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_reduce	SYCL/Kokkos_SYCL_Team.hpp	/^parallel_reduce(Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
parallel_reduce	SYCL/Kokkos_SYCL_Team.hpp	/^parallel_reduce(const Impl::TeamThreadRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	SYCL/Kokkos_SYCL_Team.hpp	/^parallel_reduce(const Impl::TeamVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	Threads/Kokkos_ThreadsTeam.hpp	/^parallel_reduce(const Impl::TeamThreadRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	Threads/Kokkos_ThreadsTeam.hpp	/^parallel_reduce(const Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_reduce	impl/Kokkos_Combined_Reducer.hpp	/^auto parallel_reduce(PolicyType const& policy, Functor const& functor,$/;"	f	namespace:Kokkos	typeref:typename:auto
parallel_reduce	impl/Kokkos_Combined_Reducer.hpp	/^auto parallel_reduce(std::string const& label, PolicyType const& policy,$/;"	f	namespace:Kokkos	typeref:typename:auto
parallel_reduce	impl/Kokkos_Combined_Reducer.hpp	/^void parallel_reduce(size_t n, Functor const& functor,$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_reduce	impl/Kokkos_Combined_Reducer.hpp	/^void parallel_reduce(std::string const& label, size_t n, Functor const& functor,$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_reduce	impl/Kokkos_HostThreadTeam.hpp	/^    parallel_reduce(Impl::TeamThreadRangeBoundariesStruct<iType, Member> const&$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<Reducer>::value && Impl::is_host_thread_team_member<Member>::value>
parallel_reduce	impl/Kokkos_HostThreadTeam.hpp	/^    parallel_reduce(const Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value && Impl::is_host_thread_team_member<Member>::value>
parallel_reduce_needs_fence	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce_needs_fence(ExecutionSpace const&, Arg const&) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<!ReducerHasTestReferenceFunction<Arg>::value &&!Kokkos::is_view<Arg>::value,bool>
parallel_reduce_needs_fence	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce_needs_fence(ExecutionSpace const&, Reducer const& reducer) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<ReducerHasTestReferenceFunction<Reducer>::value,bool>
parallel_reduce_needs_fence	Kokkos_Parallel_Reduce.hpp	/^parallel_reduce_needs_fence(ExecutionSpace const&, ViewLike const&) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<Kokkos::is_view<ViewLike>::value,bool>
parallel_scan	Cuda/Kokkos_Cuda_Task.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_scan	Cuda/Kokkos_Cuda_Team.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_scan	Cuda/Kokkos_Cuda_Team.hpp	/^parallel_scan(const Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_scan	HIP/Kokkos_HIP_Team.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_scan	HIP/Kokkos_HIP_Team.hpp	/^parallel_scan(const Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_scan	Kokkos_HPX.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_scan	Kokkos_HPX.hpp	/^parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_scan	Kokkos_Parallel.hpp	/^inline void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_DEPRECATED_WITH_COMMENT ("")void
parallel_scan	Kokkos_Parallel.hpp	/^inline void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:void
parallel_scan	Kokkos_Parallel.hpp	/^inline void parallel_scan(const size_t work_count, const FunctorType& functor) {$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_scan	Kokkos_Parallel.hpp	/^inline void parallel_scan(const size_t work_count, const FunctorType& functor,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_DEPRECATED_WITH_COMMENT ("")void
parallel_scan	Kokkos_Parallel.hpp	/^inline void parallel_scan(const size_t work_count, const FunctorType& functor,$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_scan	Kokkos_Parallel.hpp	/^inline void parallel_scan(const std::string& str, const size_t work_count,$/;"	f	namespace:Kokkos	typeref:typename:void
parallel_scan	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_scan	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_scan	SYCL/Kokkos_SYCL_Team.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_scan	SYCL/Kokkos_SYCL_Team.hpp	/^parallel_scan(const Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_scan	Threads/Kokkos_ThreadsTeam.hpp	/^KOKKOS_INLINE_FUNCTION void parallel_scan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
parallel_scan	Threads/Kokkos_ThreadsTeam.hpp	/^parallel_scan(const Impl::ThreadVectorRangeBoundariesStruct<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
parallel_scan	impl/Kokkos_HostThreadTeam.hpp	/^    parallel_scan(Impl::TeamThreadRangeBoundariesStruct<iType, Member> const&$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Impl::is_host_thread_team_member<Member>::value>
parallel_scan	impl/Kokkos_HostThreadTeam.hpp	/^    parallel_scan(Impl::ThreadVectorRangeBoundariesStruct<iType, Member> const&$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Impl::is_host_thread_team_member<Member>::value>
parallel_scan	impl/Kokkos_HostThreadTeam.hpp	/^    parallel_scan(const Impl::ThreadVectorRangeBoundariesStruct<iType, Member>&$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value && Impl::is_host_thread_team_member<Member>::value>
parseArgs	impl/Kokkos_Profiling.cpp	/^void parseArgs(const std::string& args) { Kokkos::Tools::parseArgs(args); }$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
parseArgs	impl/Kokkos_Profiling.cpp	/^void parseArgs(const std::string& args) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
parseArgs	impl/Kokkos_Profiling.cpp	/^void parseArgs(int _argc, char** _argv) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
parseArgs	impl/Kokkos_Profiling.cpp	/^void parseArgs(int _argc, char** _argv) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
parseArgsFunction	impl/Kokkos_Profiling_Interface.hpp	/^using parseArgsFunction      = Kokkos_Profiling_parseArgsFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_parseArgsFunction
parse_args	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_parseArgsFunction parse_args;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_parseArgsFunction
parse_command_line_arguments	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::parse_command_line_arguments($/;"	f	class:Kokkos::Impl	typeref:typename:void
parse_command_line_arguments	impl/Kokkos_Profiling.cpp	/^void parse_command_line_arguments(int& argc, char* argv[],$/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:void
parse_environment_variables	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::parse_environment_variables($/;"	f	class:Kokkos::Impl	typeref:typename:void
parse_environment_variables	impl/Kokkos_Profiling.cpp	/^Kokkos::Tools::Impl::InitializationStatus parse_environment_variables($/;"	f	namespace:Kokkos::Tools::Impl	typeref:typename:Kokkos::Tools::Impl::InitializationStatus
partition	Kokkos_HPX.hpp	/^  static std::vector<HPX> partition(...) {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:std::vector<HPX>
partition	OpenMP/Kokkos_OpenMP_Instance.cpp	/^std::vector<OpenMP> OpenMP::partition(...) { return std::vector<OpenMP>(1); }$/;"	f	class:Kokkos::OpenMP	typeref:typename:std::vector<OpenMP>
partition_master	Kokkos_HPX.hpp	/^  KOKKOS_DEPRECATED static void partition_master($/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:KOKKOS_DEPRECATED void
partition_master	OpenMP/Kokkos_OpenMP_Instance.hpp	/^KOKKOS_DEPRECATED void OpenMP::partition_master(F const& f, int num_partitions,$/;"	f	class:Kokkos::OpenMP	typeref:typename:KOKKOS_DEPRECATED void
partition_space	Cuda/Kokkos_Cuda_Instance.hpp	/^std::vector<Cuda> partition_space(const Cuda&, Args...) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:std::vector<Cuda>
partition_space	Cuda/Kokkos_Cuda_Instance.hpp	/^std::vector<Cuda> partition_space(const Cuda&, std::vector<T>& weights) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:std::vector<Cuda>
partition_space	HIP/Kokkos_HIP_Instance.hpp	/^std::vector<HIP> partition_space(const HIP &, Args...) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:std::vector<HIP>
partition_space	HIP/Kokkos_HIP_Instance.hpp	/^std::vector<HIP> partition_space(const HIP &, std::vector<T> &weights) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:std::vector<HIP>
partition_space	Kokkos_Core.hpp	/^std::vector<ExecSpace> partition_space(ExecSpace space, Args...) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:std::vector<ExecSpace>
partition_space	Kokkos_Core.hpp	/^std::vector<ExecSpace> partition_space(ExecSpace space,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:std::vector<ExecSpace>
partition_space	Kokkos_SYCL.hpp	/^std::vector<SYCL> partition_space(const SYCL& sycl_space, Args...) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:std::vector<SYCL>
partition_space	Kokkos_SYCL.hpp	/^std::vector<SYCL> partition_space(const SYCL& sycl_space,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:std::vector<SYCL>
pause_tools	impl/Kokkos_Profiling.cpp	/^void pause_tools() {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
per_team	Kokkos_ExecPolicy.hpp	/^  size_t per_team;$/;"	m	struct:Kokkos::ScratchRequest	typeref:typename:size_t
per_thread	Kokkos_ExecPolicy.hpp	/^  size_t per_thread;$/;"	m	struct:Kokkos::ScratchRequest	typeref:typename:size_t
point_type	KokkosExp_MDRangePolicy.hpp	/^  using point_type = Kokkos::Array<array_index_type, rank>;  \/\/ was index_type$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:Kokkos::Array<array_index_type,rank>
point_type	impl/KokkosExp_Host_IterateTile.hpp	/^  using point_type = typename RP::point_type;$/;"	t	struct:Kokkos::Impl::HostIterateTile	typeref:typename:RP::point_type
pointer	Kokkos_Array.hpp	/^  using pointer         = T*;$/;"	t	struct:Kokkos::Array	typeref:typename:T *
pointer	Kokkos_HPX.hpp	/^    pointer_type pointer() const {$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper	typeref:typename:pointer_type
pointer	impl/Kokkos_MemoryPoolAllocator.hpp	/^  using pointer         = T*;$/;"	t	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:T *
pointer	impl/Kokkos_TaskQueueMemoryManager.hpp	/^    void* pointer;$/;"	m	struct:Kokkos::Impl::TaskQueueMemoryManager::_allocation_result	typeref:typename:void *
pointer_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::pointer_type
pointer_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::pointer_type
pointer_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using pointer_type = typename FunctorType::pointer_type;$/;"	t	function:Kokkos::Impl::cuda_inter_block_reduction	typeref:typename:FunctorType::pointer_type
pointer_type	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using pointer_type = typename FunctorType::pointer_type;$/;"	t	function:Kokkos::Impl::cuda_intra_block_reduce_scan	typeref:typename:FunctorType::pointer_type
pointer_type	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using pointer_type = typename FunctorType::pointer_type;$/;"	t	function:Kokkos::Impl::cuda_single_inter_block_reduce_scan2	typeref:typename:FunctorType::pointer_type
pointer_type	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using pointer_type = typename FunctorType::pointer_type;$/;"	t	struct:Kokkos::Impl::CudaReductionsFunctor	typeref:typename:FunctorType::pointer_type
pointer_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Analysis::pointer_type
pointer_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using pointer_type   = typename analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:analysis::pointer_type
pointer_type	HIP/Kokkos_HIP_ReduceScan.hpp	/^  using pointer_type = typename FunctorType::pointer_type;$/;"	t	function:Kokkos::Impl::hip_intra_block_reduce_scan	typeref:typename:FunctorType::pointer_type
pointer_type	HIP/Kokkos_HIP_ReduceScan.hpp	/^  using pointer_type = typename FunctorType::pointer_type;$/;"	t	function:Kokkos::Impl::hip_single_inter_block_reduce_scan_impl	typeref:typename:FunctorType::pointer_type
pointer_type	HIP/Kokkos_HIP_ReduceScan.hpp	/^  using pointer_type = typename FunctorType::pointer_type;$/;"	t	struct:Kokkos::Impl::HIPReductionsFunctor	typeref:typename:FunctorType::pointer_type
pointer_type	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^  using pointer_type = typename FunctorType::pointer_type;$/;"	t	function:Kokkos::Impl::hip_inter_block_shuffle_reduction	typeref:typename:FunctorType::pointer_type
pointer_type	Kokkos_HPX.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Kokkos_HPX.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::pointer_type
pointer_type	Kokkos_HPX.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::pointer_type
pointer_type	Kokkos_View.hpp	/^  using pointer_type   = typename map_type::pointer_type;$/;"	t	class:Kokkos::View	typeref:typename:map_type::pointer_type
pointer_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::pointer_type
pointer_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::pointer_type
pointer_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::pointer_type
pointer_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using pointer_type    = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Analysis::pointer_type
pointer_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::pointer_type
pointer_type	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::pointer_type
pointer_type	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::pointer_type
pointer_type	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::pointer_type
pointer_type	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using pointer_type   = typename Analysis::pointer_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::pointer_type
pointer_type	impl/Kokkos_FunctorAnalysis.hpp	/^  using pointer_type = std::conditional_t<candidate_is_void, void, ValueType*>;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:std::conditional_t<candidate_is_void,void,ValueType * >
pointer_type	impl/Kokkos_LinkedListNode.hpp	/^  using pointer_type =$/;"	t	struct:Kokkos::Impl::SimpleSinglyLinkedListNode	typeref:typename:PointerTemplate<SimpleSinglyLinkedListNode>::type
pointer_type	impl/Kokkos_ViewCtor.hpp	/^  using pointer_type    = typename var_pointer::type;$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:var_pointer::type
pointer_type	impl/Kokkos_ViewCtor.hpp	/^  using pointer_type = type;$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:type
polar	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<T> polar(const T& r, const T& theta = T()) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<T>
policy	Kokkos_Parallel.hpp	/^  using policy = Kokkos::RangePolicy<execution_space>;$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::RangePolicy<execution_space>
policy	Kokkos_Parallel.hpp	/^  using policy = RangePolicy<execution_space>;$/;"	t	function:Kokkos::parallel_for	typeref:typename:RangePolicy<execution_space>
policy	Kokkos_Parallel_Reduce.hpp	/^  static PolicyType policy(const PolicyType& policy_) { return policy_; }$/;"	f	struct:Kokkos::Impl::ParallelReducePolicyType	typeref:typename:PolicyType
policy	Kokkos_Parallel_Reduce.hpp	/^  static policy_type policy(const PolicyType& policy_) {$/;"	f	struct:Kokkos::Impl::ParallelReducePolicyType	typeref:typename:policy_type
policy_execution_space	Kokkos_Parallel.hpp	/^  using policy_execution_space  = detected_t<execution_space_t, Policy>;$/;"	t	struct:Kokkos::Impl::FunctorPolicyExecutionSpace	typeref:typename:detected_t<execution_space_t,Policy>
policy_has_space	impl/Kokkos_FunctorAnalysis.hpp	/^  using policy_has_space  = has_execution_space<Policy>;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:has_execution_space<Policy>
policy_t	Kokkos_GraphNode.hpp	/^    using policy_t = Kokkos::Impl::remove_cvref_t<Policy>;$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_for	typeref:typename:Kokkos::Impl::remove_cvref_t<Policy>
policy_t	Kokkos_GraphNode.hpp	/^    using policy_t = std::remove_cv_t<std::remove_reference_t<Policy>>;$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_reduce	typeref:typename:std::remove_cv_t<std::remove_reference_t<Policy>>
policy_t	impl/Kokkos_HostSpace_deepcopy.cpp	/^  using policy_t = Kokkos::RangePolicy<Kokkos::DefaultHostExecutionSpace>;$/;"	t	function:Kokkos::Impl::hostspace_parallel_deepcopy_async	typeref:typename:Kokkos::RangePolicy<Kokkos::DefaultHostExecutionSpace>	file:
policy_type	Kokkos_CopyViews.hpp	/^  using policy_type = Kokkos::RangePolicy<ExecSpace, Kokkos::IndexType<iType>>;$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:Kokkos::RangePolicy<ExecSpace,Kokkos::IndexType<iType>>
policy_type	Kokkos_CopyViews.hpp	/^  using policy_type = Kokkos::RangePolicy<ExecSpace, Kokkos::IndexType<iType>>;$/;"	t	struct:Kokkos::Impl::ViewFill	typeref:typename:Kokkos::RangePolicy<ExecSpace,Kokkos::IndexType<iType>>
policy_type	Kokkos_CopyViews.hpp	/^  using policy_type =$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:Kokkos::MDRangePolicy<ExecSpace,iterate_type,Kokkos::IndexType<iType>>
policy_type	Kokkos_CopyViews.hpp	/^  using policy_type =$/;"	t	struct:Kokkos::Impl::ViewFill	typeref:typename:Kokkos::MDRangePolicy<ExecSpace,iterate_type,Kokkos::IndexType<iType>>
policy_type	Kokkos_Crs.hpp	/^    using policy_type  = RangePolicy<index_type, execution_space>;$/;"	t	function:Kokkos::Impl::CrsRowMapFromCounts::execute	typeref:typename:RangePolicy<index_type,execution_space>
policy_type	Kokkos_Crs.hpp	/^    using policy_type  = RangePolicy<index_type, execution_space>;$/;"	t	function:Kokkos::Impl::FillCrsTransposeEntries::FillCrsTransposeEntries	typeref:typename:RangePolicy<index_type,execution_space>
policy_type	Kokkos_Crs.hpp	/^    using policy_type  = RangePolicy<index_type, execution_space>;$/;"	t	function:Kokkos::Impl::GetCrsTransposeCounts::GetCrsTransposeCounts	typeref:typename:RangePolicy<index_type,execution_space>
policy_type	Kokkos_Parallel_Reduce.hpp	/^  using policy_type = Kokkos::RangePolicy<execution_space>;$/;"	t	struct:Kokkos::Impl::ParallelReducePolicyType	typeref:typename:Kokkos::RangePolicy<execution_space>
policy_type	Kokkos_Parallel_Reduce.hpp	/^  using policy_type = PolicyType;$/;"	t	struct:Kokkos::Impl::ParallelReducePolicyType	typeref:typename:PolicyType
policy_type	Kokkos_Parallel_Reduce.hpp	/^  using policy_type =$/;"	t	function:Kokkos::parallel_reduce	typeref:typename:Impl::ParallelReducePolicyType<void,size_t,FunctorType>::policy_type
policy_type	Kokkos_Parallel_Reduce.hpp	/^  using policy_type =$/;"	t	namespace:Kokkos	typeref:typename:Impl::ParallelReducePolicyType<void,size_t,FunctorType>::policy_type
policy_type	Kokkos_WorkGraphPolicy.hpp	/^      using policy_type  = RangePolicy<std::int32_t, execution_space, TagCount>;$/;"	t	function:Kokkos::WorkGraphPolicy::WorkGraphPolicy	typeref:typename:RangePolicy<std::int32_t,execution_space,TagCount>
policy_type	Kokkos_WorkGraphPolicy.hpp	/^      using policy_type  = RangePolicy<std::int32_t, execution_space, TagInit>;$/;"	t	function:Kokkos::WorkGraphPolicy::WorkGraphPolicy	typeref:typename:RangePolicy<std::int32_t,execution_space,TagInit>
policy_type	Kokkos_WorkGraphPolicy.hpp	/^      using policy_type  = RangePolicy<std::int32_t, execution_space, TagReady>;$/;"	t	function:Kokkos::WorkGraphPolicy::WorkGraphPolicy	typeref:typename:RangePolicy<std::int32_t,execution_space,TagReady>
policy_type	impl/Kokkos_Tools_Generic.hpp	/^      using policy_type = std::remove_reference_t<decltype(policy)>;$/;"	t	function:Kokkos::Tools::Experimental::Impl::generic_report_results
policy_type	impl/Kokkos_Tools_Generic.hpp	/^      using policy_type = std::remove_reference_t<decltype(policy)>;$/;"	t	function:Kokkos::Tools::Experimental::Impl::generic_tune_policy
pool_allocated_base_type	impl/Kokkos_TaskNode.hpp	/^  using pool_allocated_base_type    = PoolAllocatedObjectBase<int32_t>;$/;"	t	class:Kokkos::Impl::TaskNode	typeref:typename:PoolAllocatedObjectBase<int32_t>
pool_allocation_size_type	impl/Kokkos_TaskNode.hpp	/^  using pool_allocation_size_type = CountType;$/;"	t	class:Kokkos::Impl::PoolAllocatedObjectBase	typeref:typename:CountType
pool_base	Threads/Kokkos_ThreadsExec.hpp	/^  KOKKOS_INLINE_FUNCTION ThreadsExec *const *pool_base() const {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:KOKKOS_INLINE_FUNCTION ThreadsExec * const *
pool_member	impl/Kokkos_HostThreadTeam.hpp	/^  HostThreadTeamData* pool_member(int r) const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:HostThreadTeamData *
pool_rank	Threads/Kokkos_ThreadsExec.hpp	/^  KOKKOS_INLINE_FUNCTION int pool_rank() const { return m_pool_rank; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:KOKKOS_INLINE_FUNCTION int
pool_rank	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr int pool_rank() const { return m_pool_rank; }$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
pool_reduce	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* pool_reduce() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
pool_reduce_bytes	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr size_t pool_reduce_bytes() const {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
pool_reduce_local	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* pool_reduce_local() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
pool_rendezvous	impl/Kokkos_HostThreadTeam.hpp	/^  inline int pool_rendezvous() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
pool_rendezvous_release	impl/Kokkos_HostThreadTeam.hpp	/^  inline void pool_rendezvous_release() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:void
pool_size	Threads/Kokkos_ThreadsExec.hpp	/^  KOKKOS_INLINE_FUNCTION int pool_size() const { return m_pool_size; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:KOKKOS_INLINE_FUNCTION int
pool_size	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr int pool_size() const { return m_pool_size; }$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int
pop	impl/Kokkos_ChaseLev.hpp	/^  OptionalRef<T> pop() {$/;"	f	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<T>
pop	impl/Kokkos_LIFO.hpp	/^  OptionalRef<T> pop(bool abort_on_locked = false) {$/;"	f	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<T>
popFunction	impl/Kokkos_Profiling_Interface.hpp	/^using popFunction            = Kokkos_Profiling_popFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_popFunction
popRegion	impl/Kokkos_Profiling.cpp	/^void popRegion() { Kokkos::Tools::popRegion(); }$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
popRegion	impl/Kokkos_Profiling.cpp	/^void popRegion() {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
pop_ready_task	impl/Kokkos_MultipleTaskQueue.hpp	/^  OptionalRef<task_base_type> pop_ready_task($/;"	f	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:KOKKOS_FUNCTION OptionalRef<task_base_type>
pop_ready_task	impl/Kokkos_MultipleTaskQueue.hpp	/^  OptionalRef<task_base_type> pop_ready_task() {$/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<task_base_type>
pop_ready_task	impl/Kokkos_SingleTaskQueue.hpp	/^  OptionalRef<task_base_type> pop_ready_task($/;"	f	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:KOKKOS_FUNCTION OptionalRef<task_base_type>
pop_ready_task	impl/Kokkos_TaskQueue_impl.hpp	/^TaskQueue<ExecSpace, MemorySpace>::pop_ready_task($/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION typename TaskQueue<ExecSpace,MemorySpace>::task_root_type *
pop_region	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_popFunction pop_region;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_popFunction
pop_work	Kokkos_WorkGraphPolicy.hpp	/^  std::int32_t pop_work() const noexcept {$/;"	f	class:Kokkos::WorkGraphPolicy	typeref:typename:KOKKOS_INLINE_FUNCTION std::int32_t
post_initialize	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::post_initialize(const InitializationSettings& settings) {$/;"	f	class:Kokkos::Impl	typeref:typename:void
post_initialize_internal	impl/Kokkos_Core.cpp	/^void post_initialize_internal(const Kokkos::InitializationSettings& settings) {$/;"	f	namespace:__anon5875dff10210	typeref:typename:void
pow	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<Impl::promote_2_t<T, U>> pow($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<Impl::promote_2_t<T,U>>
pow	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<T> pow(const T& x, const complex<T>& y) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<T>
pow	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<T> pow(const complex<T>& x, const T& y) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<T>
pow	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION complex<T> pow(const complex<T>& x,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION complex<T>
pow	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 pow(__float128 x, __float128 y) { return ::powq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
power_of_two_if_valid	impl/Kokkos_Traits.hpp	/^unsigned power_of_two_if_valid(const unsigned N) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned
pre_initialize	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::pre_initialize(const InitializationSettings& settings) {$/;"	f	class:Kokkos::Impl	typeref:typename:void
pre_initialize_internal	impl/Kokkos_Core.cpp	/^void pre_initialize_internal(const Kokkos::InitializationSettings& settings) {$/;"	f	namespace:__anon5875dff10210	typeref:typename:void
predecessor	impl/Kokkos_TaskPolicyData.hpp	/^  DepFutureType&& predecessor() && { return std::move(m_predecessor); }$/;"	f	struct:Kokkos::Impl::TaskPolicyWithPredecessor	typeref:typename:KOKKOS_INLINE_FUNCTION DepFutureType &&
predecessor	impl/Kokkos_TaskPolicyData.hpp	/^  predecessor_future_type& predecessor() & { return m_predecessor; }$/;"	f	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION predecessor_future_type &
predecessor_future_type	impl/Kokkos_TaskPolicyData.hpp	/^  using predecessor_future_type = PredecessorFuture;$/;"	t	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:PredecessorFuture
prefer	traits/Kokkos_OccupancyControlTrait.hpp	/^auto prefer(Policy const& p, DesiredOccupancy occ) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:auto
prefer	traits/Kokkos_OccupancyControlTrait.hpp	/^constexpr auto prefer(Policy const& p, MaximizeOccupancy) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:auto
prepend	impl/Kokkos_ViewMapping.hpp	/^  struct prepend {$/;"	s	struct:Kokkos::Impl::ViewDimension
prev_ptr	impl/Kokkos_LinkedListNode.hpp	/^  KOKKOS_INLINE_FUNCTION static typename Node::pointer_type& prev_ptr($/;"	f	struct:Kokkos::Impl::LinkedListNodeAccess	typeref:typename:KOKKOS_INLINE_FUNCTION typename Node::pointer_type &
printHelp	impl/Kokkos_Profiling.cpp	/^bool printHelp(const std::string& args) {$/;"	f	namespace:Kokkos::Profiling	typeref:typename:bool
printHelp	impl/Kokkos_Profiling.cpp	/^bool printHelp(const std::string& args) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:bool
printHelpFunction	impl/Kokkos_Profiling_Interface.hpp	/^using printHelpFunction      = Kokkos_Profiling_printHelpFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_printHelpFunction
print_bitmap	impl/Kokkos_hwloc.cpp	/^inline void print_bitmap(std::ostream& s, const hwloc_const_bitmap_t bitmap) {$/;"	f	namespace:Kokkos::hwloc::__anonec54cfc50110	typeref:typename:void
print_configuration	Cuda/Kokkos_Cuda_Instance.cpp	/^void Cuda::print_configuration(std::ostream &os, bool \/*verbose*\/) const {$/;"	f	class:Kokkos::Cuda	typeref:typename:void
print_configuration	Cuda/Kokkos_Cuda_Instance.cpp	/^void CudaInternal::print_configuration(std::ostream &s) const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:void
print_configuration	HIP/Kokkos_HIP_Instance.cpp	/^void HIPInternal::print_configuration(std::ostream &s) const {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:void
print_configuration	HIP/Kokkos_HIP_Space.cpp	/^void HIP::print_configuration(std::ostream& os, bool \/*verbose*\/) const {$/;"	f	class:Kokkos::Experimental::HIP	typeref:typename:void
print_configuration	Kokkos_HPX.hpp	/^  void print_configuration(std::ostream &os, bool \/*verbose*\/ = false) const {$/;"	f	class:Kokkos::Experimental::HPX	typeref:typename:void
print_configuration	OpenACC/Kokkos_OpenACC.cpp	/^void Kokkos::Experimental::OpenACC::print_configuration(std::ostream& os,$/;"	f	class:Kokkos::Experimental::OpenACC	typeref:typename:void
print_configuration	OpenACC/Kokkos_OpenACC_Instance.cpp	/^void Kokkos::Experimental::Impl::OpenACCInternal::print_configuration($/;"	f	class:Kokkos::Experimental::Impl::OpenACCInternal	typeref:typename:void
print_configuration	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMP::print_configuration(std::ostream &os, bool \/*verbose*\/) const {$/;"	f	class:Kokkos::OpenMP	typeref:typename:void
print_configuration	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMPInternal::print_configuration(std::ostream &s) const {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:void
print_configuration	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTarget::print_configuration(std::ostream& os, bool verbose) const {$/;"	f	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:void
print_configuration	OpenMPTarget/Kokkos_OpenMPTarget_Instance.cpp	/^void OpenMPTargetInternal::print_configuration(std::ostream& os,$/;"	f	class:Kokkos::Experimental::Impl::OpenMPTargetInternal	typeref:typename:void
print_configuration	SYCL/Kokkos_SYCL.cpp	/^void SYCL::print_configuration(std::ostream& os, bool verbose) const {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:void
print_configuration	Serial/Kokkos_Serial.cpp	/^void Serial::print_configuration(std::ostream& os, bool \/*verbose*\/) const {$/;"	f	class:Kokkos::Serial	typeref:typename:void
print_configuration	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::print_configuration(std::ostream &s, const bool detail) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
print_configuration	Threads/Kokkos_ThreadsExec.hpp	/^inline void Threads::print_configuration(std::ostream &os, bool verbose) const {$/;"	f	class:Kokkos::Threads	typeref:typename:void
print_configuration	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::ExecSpaceManager::print_configuration(std::ostream& os,$/;"	f	class:Kokkos::Impl::ExecSpaceManager	typeref:typename:void
print_configuration	impl/Kokkos_Core.cpp	/^void Kokkos::print_configuration(std::ostream& os, bool verbose) {$/;"	f	class:Kokkos	typeref:typename:void
print_configuration	impl/Kokkos_ExecSpaceManager.hpp	/^  void print_configuration(std::ostream& os, bool verbose) final {$/;"	f	struct:Kokkos::Impl::ExecSpaceDerived	typeref:typename:void
print_configuration_t	impl/Kokkos_ExecSpaceManager.hpp	/^using print_configuration_t = std::enable_if_t<$/;"	t	namespace:__anonc657ed790110
print_demangled_saved_stacktrace	impl/Kokkos_Stacktrace.cpp	/^void print_demangled_saved_stacktrace(std::ostream& out) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
print_error_message	impl/Kokkos_Error.cpp	/^void Experimental::RawMemoryAllocationFailure::print_error_message($/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:void
print_help	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_printHelpFunction print_help;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_printHelpFunction
print_help_message	impl/Kokkos_Core.cpp	/^void print_help_message() {$/;"	f	namespace:__anon5875dff10210	typeref:typename:void
print_helper	impl/Kokkos_Core.cpp	/^void print_helper(std::ostream& os,$/;"	f	namespace:__anon5875dff10410	typeref:typename:void
print_host_accessible_records	impl/Kokkos_SharedAlloc.cpp	/^void SharedAllocationRecord<void, void>::print_host_accessible_records($/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void
print_records	Kokkos_LogicalSpaces.hpp	/^  static void print_records(std::ostream& s, const SpaceType&,$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void
print_records	Kokkos_LogicalSpaces.hpp	/^  static void print_records(std::ostream&, const SpaceType&,$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void
print_records	impl/Kokkos_HBWSpace.cpp	/^    print_records(std::ostream &s, const Kokkos::Experimental::HBWSpace &space,$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace	typeref:typename:void
print_records	impl/Kokkos_SharedAlloc_timpl.hpp	/^void HostInaccessibleSharedAllocationRecordCommon<MemorySpace>::print_records($/;"	f	class:Kokkos::Impl::HostInaccessibleSharedAllocationRecordCommon	typeref:typename:void
print_records	impl/Kokkos_SharedAlloc_timpl.hpp	/^void SharedAllocationRecordCommon<MemorySpace>::print_records($/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:void
print_saved_stacktrace	impl/Kokkos_Stacktrace.cpp	/^void print_saved_stacktrace(std::ostream& out) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
print_state	Kokkos_MemoryPool.hpp	/^  void print_state(std::ostream &s) const {$/;"	f	class:Kokkos::MemoryPool	typeref:typename:void
priority	impl/Kokkos_TaskPolicyData.hpp	/^  constexpr TaskPriority priority() const { return m_priority; }$/;"	f	struct:Kokkos::Impl::TaskPolicyWithPredecessor	typeref:typename:KOKKOS_INLINE_FUNCTION TaskPriority
priority	impl/Kokkos_TaskPolicyData.hpp	/^  constexpr TaskPriority priority() const { return m_priority; }$/;"	f	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION TaskPriority
priority_type	impl/Kokkos_TaskNode.hpp	/^  using priority_type = int16_t;$/;"	t	class:Kokkos::Impl::TaskNode	typeref:typename:int16_t
proc_set_apply	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  static void proc_set_apply(task_base_type::function_type* ptr) {$/;"	f	class:Kokkos::Impl::TaskQueueSpecialization	typeref:typename:void
proc_set_apply	impl/Kokkos_TaskQueue.hpp	/^  void proc_set_apply(typename task_root_type::function_type* ptr) {$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:void
processors_per_node	impl/Kokkos_CPUDiscovery.cpp	/^int processors_per_node() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:int
prod	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float prod() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
prod	HIP/Kokkos_HIP_Half_Conversion.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float prod() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static double prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION double
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static int prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long long prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long long
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static short prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION short
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static signed char prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION signed char
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned char prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned char
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned int prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned int
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long long prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long long
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long
prod	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned short prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned short
prod	Kokkos_NumericTraits.hpp	/^  constexpr static long double prod() { return static_cast<long double>(1.0); }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:long double
prod	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^  prod() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Kokkos::Experimental::half_t
prod	impl/Kokkos_QuadPrecisionMath.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static __float128 prod() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION __float128
profileEventFunction	impl/Kokkos_Profiling_Interface.hpp	/^using profileEventFunction    = Kokkos_Profiling_profileEventFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_profileEventFunction
profileLibraryLoaded	impl/Kokkos_Profiling.cpp	/^bool profileLibraryLoaded() { return Kokkos::Tools::profileLibraryLoaded(); }$/;"	f	namespace:Kokkos::Profiling	typeref:typename:bool
profileLibraryLoaded	impl/Kokkos_Profiling.cpp	/^bool profileLibraryLoaded() {$/;"	f	namespace:Kokkos::Tools	typeref:typename:bool
profile_event	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_profileEventFunction profile_event;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_profileEventFunction
profile_fence_event	impl/Kokkos_Profiling.hpp	/^void profile_fence_event($/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
profile_fence_event	impl/Kokkos_Profiling.hpp	/^void profile_fence_event(const std::string& name, DirectFenceIDHandle devIDTag,$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
profiling_padding	impl/Kokkos_Profiling_C_Interface.h	/^  char profiling_padding[9 * sizeof(Kokkos_Tools_functionPointer)];$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:char[]
promote	Kokkos_MathematicalFunctions.hpp	/^struct promote {$/;"	s	namespace:Kokkos::Impl
promote	Kokkos_MathematicalFunctions.hpp	/^struct promote<T, false> {};$/;"	s	namespace:Kokkos::Impl
promote	Kokkos_MathematicalFunctions.hpp	/^struct promote<double> {$/;"	s	namespace:Kokkos::Impl
promote	Kokkos_MathematicalFunctions.hpp	/^struct promote<float> {$/;"	s	namespace:Kokkos::Impl
promote	Kokkos_MathematicalFunctions.hpp	/^struct promote<long double> {$/;"	s	namespace:Kokkos::Impl
promote	impl/Kokkos_QuadPrecisionMath.hpp	/^template <> struct promote<__float128> { using type = __float128; };$/;"	s	namespace:Kokkos::Impl
promote_2	Kokkos_MathematicalFunctions.hpp	/^struct promote_2 {$/;"	s	namespace:Kokkos::Impl
promote_2	Kokkos_MathematicalFunctions.hpp	/^struct promote_2<T, U, false> {};$/;"	s	namespace:Kokkos::Impl
promote_2_t	Kokkos_MathematicalFunctions.hpp	/^using promote_2_t = typename promote_2<T, U>::type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:promote_2<T,U>::type
promote_t	Kokkos_MathematicalFunctions.hpp	/^using promote_t = typename promote<T>::type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:promote<T>::type
prop	Kokkos_View.hpp	/^  using prop = ViewTraits<void, Properties...>;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Properties...>
prop_type	Kokkos_View.hpp	/^  using prop_type = CommonViewAllocProp<specialize, value_type>;$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:CommonViewAllocProp<specialize,value_type>
properties	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^  TileSizeProperties properties;$/;"	v	namespace:Kokkos::Impl	typeref:typename:TileSizeProperties
properties	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^  TileSizeProperties properties;$/;"	v	namespace:Kokkos::Impl	typeref:typename:TileSizeProperties
properties	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^  TileSizeProperties properties;$/;"	v	namespace:Kokkos::Impl	typeref:typename:TileSizeProperties
property	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^      property = typename DriverType::Policy::work_item_property();$/;"	m	struct:Kokkos::Impl::DeduceCudaLaunchMechanism	typeref:typename:const typename DriverType::Policy::work_item_property
property	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static constexpr typename DriverType::Policy::work_item_property property =$/;"	m	struct:Kokkos::Experimental::Impl::DeduceHIPLaunchMechanism	typeref:typename:DriverType::Policy::work_item_property
provideToolProgrammingInterfaceFunction	impl/Kokkos_Profiling_Interface.hpp	/^using provideToolProgrammingInterfaceFunction =$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_provideToolProgrammingInterfaceFunction
provide_tool_programming_interface	impl/Kokkos_Profiling_C_Interface.h	/^      provide_tool_programming_interface;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Tools_provideToolProgrammingInterfaceFunction
ptr	impl/Kokkos_Atomic_View.hpp	/^  typename ViewTraits::value_type* ptr;$/;"	m	class:Kokkos::Impl::AtomicViewDataHandle	typeref:typename:ViewTraits::value_type *
ptr	impl/Kokkos_Atomic_View.hpp	/^  volatile value_type* const ptr;$/;"	m	class:Kokkos::Impl::AtomicDataElement	typeref:typename:volatile value_type * const
ptr	impl/Kokkos_StringManipulation.hpp	/^  char *ptr;$/;"	m	struct:Kokkos::Impl::to_chars_result	typeref:typename:char *
ptr	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static ResultType* ptr($/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION ResultType *
ptr	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static ResultType* ptr(TaskBase* task) {$/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION ResultType *
ptr	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static void* ptr(TaskBase*) { return nullptr; }$/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION void *
ptr	impl/Kokkos_TaskResult.hpp	/^  KOKKOS_INLINE_FUNCTION static void* ptr(TaskNode<TaskQueueTraits>* \/*task*\/) {$/;"	f	struct:Kokkos::Impl::TaskResult	typeref:typename:KOKKOS_INLINE_FUNCTION void *
ptr	impl/Kokkos_Volatile_Load.hpp	/^    T const volatile* const ptr;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c020a	typeref:typename:T const volatile * const
ptr	impl/Kokkos_Volatile_Load.hpp	/^    T const volatile* const ptr;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c050a	typeref:typename:T const volatile * const
ptr	impl/Kokkos_Volatile_Load.hpp	/^    T const* const ptr;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c080a	typeref:typename:T const * const
ptr	impl/Kokkos_Volatile_Load.hpp	/^    T volatile* const ptr;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c060a	typeref:typename:T volatile * const
ptr	impl/Kokkos_Volatile_Load.hpp	/^    T volatile* const ptr;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c090a	typeref:typename:T volatile * const
ptr	impl/Kokkos_Volatile_Load.hpp	/^    T* const ptr;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c030a	typeref:typename:T * const
ptr16	impl/Kokkos_Volatile_Load.hpp	/^    T16 const volatile* const ptr16;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c020a	typeref:typename:T16 const volatile * const
ptr16	impl/Kokkos_Volatile_Load.hpp	/^    T16 const volatile* const ptr16;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c050a	typeref:typename:T16 const volatile * const
ptr16	impl/Kokkos_Volatile_Load.hpp	/^    T16 const* const ptr16;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c080a	typeref:typename:T16 const * const
ptr16	impl/Kokkos_Volatile_Load.hpp	/^    T16 volatile* const ptr16;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c060a	typeref:typename:T16 volatile * const
ptr16	impl/Kokkos_Volatile_Load.hpp	/^    T16 volatile* const ptr16;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c090a	typeref:typename:T16 volatile * const
ptr16	impl/Kokkos_Volatile_Load.hpp	/^    T16* const ptr16;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c030a	typeref:typename:T16 * const
ptr32	impl/Kokkos_Volatile_Load.hpp	/^    T32 const volatile* const ptr32;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c020a	typeref:typename:T32 const volatile * const
ptr32	impl/Kokkos_Volatile_Load.hpp	/^    T32 const volatile* const ptr32;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c050a	typeref:typename:T32 const volatile * const
ptr32	impl/Kokkos_Volatile_Load.hpp	/^    T32 const* const ptr32;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c080a	typeref:typename:T32 const * const
ptr32	impl/Kokkos_Volatile_Load.hpp	/^    T32 volatile* const ptr32;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c060a	typeref:typename:T32 volatile * const
ptr32	impl/Kokkos_Volatile_Load.hpp	/^    T32 volatile* const ptr32;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c090a	typeref:typename:T32 volatile * const
ptr32	impl/Kokkos_Volatile_Load.hpp	/^    T32* const ptr32;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c030a	typeref:typename:T32 * const
ptr64	impl/Kokkos_Volatile_Load.hpp	/^    T64 const volatile* const ptr64;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c020a	typeref:typename:T64 const volatile * const
ptr64	impl/Kokkos_Volatile_Load.hpp	/^    T64 const volatile* const ptr64;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c050a	typeref:typename:T64 const volatile * const
ptr64	impl/Kokkos_Volatile_Load.hpp	/^    T64 const* const ptr64;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c080a	typeref:typename:T64 const * const
ptr64	impl/Kokkos_Volatile_Load.hpp	/^    T64 volatile* const ptr64;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c060a	typeref:typename:T64 volatile * const
ptr64	impl/Kokkos_Volatile_Load.hpp	/^    T64 volatile* const ptr64;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c090a	typeref:typename:T64 volatile * const
ptr64	impl/Kokkos_Volatile_Load.hpp	/^    T64* const ptr64;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c030a	typeref:typename:T64 * const
ptr8	impl/Kokkos_Volatile_Load.hpp	/^    T8 const volatile* const ptr8;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c020a	typeref:typename:T8 const volatile * const
ptr8	impl/Kokkos_Volatile_Load.hpp	/^    T8 const volatile* const ptr8;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c050a	typeref:typename:T8 const volatile * const
ptr8	impl/Kokkos_Volatile_Load.hpp	/^    T8 const* const ptr8;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c080a	typeref:typename:T8 const * const
ptr8	impl/Kokkos_Volatile_Load.hpp	/^    T8 volatile* const ptr8;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c060a	typeref:typename:T8 volatile * const
ptr8	impl/Kokkos_Volatile_Load.hpp	/^    T8 volatile* const ptr8;$/;"	m	union:Kokkos::volatile_store::__anon1365d82c090a	typeref:typename:T8 volatile * const
ptr8	impl/Kokkos_Volatile_Load.hpp	/^    T8* const ptr8;$/;"	m	union:Kokkos::volatile_load::__anon1365d82c030a	typeref:typename:T8 * const
public_member_types_t	impl/Kokkos_ExecSpaceManager.hpp	/^using public_member_types_t = std::enable_if_t<$/;"	t	namespace:__anonc657ed790110
push	impl/Kokkos_ChaseLev.hpp	/^  bool push(node_type& node) {$/;"	f	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:KOKKOS_INLINE_FUNCTION bool
push	impl/Kokkos_ChaseLev.hpp	/^  bool push(node_type&& node) {$/;"	f	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:KOKKOS_INLINE_FUNCTION bool
push	impl/Kokkos_LIFO.hpp	/^  bool push(node_type& node) {$/;"	f	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:KOKKOS_INLINE_FUNCTION bool
push	impl/Kokkos_LIFO.hpp	/^  bool push(node_type&& node) {$/;"	f	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:KOKKOS_INLINE_FUNCTION bool
pushFunction	impl/Kokkos_Profiling_Interface.hpp	/^using pushFunction           = Kokkos_Profiling_pushFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_pushFunction
pushRegion	impl/Kokkos_Profiling.cpp	/^void pushRegion(const std::string& kName) { Kokkos::Tools::pushRegion(kName); }$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
pushRegion	impl/Kokkos_Profiling.cpp	/^void pushRegion(const std::string& kName) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
push_finalize_hook	impl/Kokkos_Core.cpp	/^void Kokkos::push_finalize_hook(std::function<void()> f) {$/;"	f	class:Kokkos	typeref:typename:void
push_region	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_pushFunction push_region;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_pushFunction
push_task	impl/Kokkos_TaskQueue_impl.hpp	/^KOKKOS_FUNCTION bool TaskQueue<ExecSpace, MemorySpace>::push_task($/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION bool
push_work	Kokkos_WorkGraphPolicy.hpp	/^  void push_work(const std::int32_t w) const noexcept {$/;"	f	class:Kokkos::WorkGraphPolicy	typeref:typename:KOKKOS_INLINE_FUNCTION void
python_view_type	KokkosExp_InterOp.hpp	/^struct python_view_type {$/;"	s	namespace:Kokkos::Experimental
python_view_type_impl_t	KokkosExp_InterOp.hpp	/^using python_view_type_impl_t = typename python_view_type_impl<T...>::type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:python_view_type_impl<T...>::type
python_view_type_t	KokkosExp_InterOp.hpp	/^using python_view_type_t = typename python_view_type<ViewT>::type;$/;"	t	namespace:Kokkos::Experimental	typeref:typename:python_view_type<ViewT>::type
query_cuda_kernel_arch	Cuda/Kokkos_Cuda_Instance.cpp	/^__global__ void query_cuda_kernel_arch(int *d_arch) {$/;"	f	namespace:Kokkos::Impl::__anon02417da40110	typeref:typename:__global__ void
queue	Kokkos_TaskScheduler.hpp	/^  queue_type& queue() const noexcept {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION queue_type &
queue	impl/Kokkos_SimpleTaskScheduler.hpp	/^  task_queue_type& queue() const {$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION task_queue_type &
queue_collection_t	impl/Kokkos_TaskQueueMultiple.hpp	/^  using queue_collection_t = LeagueQueueCollection<ExecSpace, MemorySpace>;$/;"	t	class:Kokkos::Impl::TaskQueueMultiple	typeref:typename:LeagueQueueCollection<ExecSpace,MemorySpace>
queue_type	Kokkos_Future.hpp	/^  using queue_type      = typename scheduler_type::queue_type;$/;"	t	class:Kokkos::BasicFuture	typeref:typename:scheduler_type::queue_type
queue_type	Kokkos_TaskScheduler.hpp	/^  using queue_type          = QueueType;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:QueueType
queue_type	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using queue_type      = TaskQueue<execution_space>;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::execute	typeref:typename:TaskQueue<execution_space>	file:
queue_type	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using queue_type      = TaskQueue<execution_space>;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::iff_single_thread_recursive_execute	typeref:typename:TaskQueue<execution_space>	file:
queue_type	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  using queue_type      = Kokkos::Impl::TaskQueue<execution_space>;$/;"	t	class:Kokkos::Impl::TaskQueueSpecialization	typeref:typename:Kokkos::Impl::TaskQueue<execution_space>
queue_type	impl/Kokkos_TaskBase.hpp	/^  using queue_type = TaskQueueBase;$/;"	t	class:Kokkos::Impl::TaskBase	typeref:typename:TaskQueueBase
quiet_NaN_helper	Kokkos_NumericTraits.hpp	/^template <> struct quiet_NaN_helper<double> { static constexpr double value = __builtin_nan("");/;"	s	namespace:Kokkos::Experimental::Impl
quiet_NaN_helper	Kokkos_NumericTraits.hpp	/^template <> struct quiet_NaN_helper<float> { static constexpr float value = __builtin_nanf(""); /;"	s	namespace:Kokkos::Experimental::Impl
quiet_NaN_helper	Kokkos_NumericTraits.hpp	/^template <> struct quiet_NaN_helper<long double> { static constexpr long double value = __builti/;"	s	namespace:Kokkos::Experimental::Impl
quiet_NaN_helper	Kokkos_NumericTraits.hpp	/^template <class> struct quiet_NaN_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<bool> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<char> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<double> { static constexpr int value = FLT_RADIX; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<float> { static constexpr int value = FLT_RADIX; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<int> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<long double> { static constexpr int value = FLT_RADIX; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<long int> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<long long int> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<short> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<signed char> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned char> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned int> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned long int> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned long long int> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned short> { static constexpr int value = 2; };$/;"	s	namespace:Kokkos::Experimental::Impl
radix_helper	Kokkos_NumericTraits.hpp	/^template <class> struct radix_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
range	impl/Kokkos_Profiling_C_Interface.h	/^  struct Kokkos_Tools_ValueRange range;$/;"	m	union:Kokkos_Tools_VariableInfo_SetOrRange	typeref:struct:Kokkos_Tools_ValueRange
range_extent	impl/Kokkos_ViewMapping.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr size_t range_extent($/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION size_t
range_index	impl/Kokkos_ViewMapping.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr unsigned range_index($/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned
range_policy	KokkosExp_MDRangePolicy.hpp	/^  using range_policy = RangePolicy<Properties...>;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:RangePolicy<Properties...>
rank	KokkosExp_MDRangePolicy.hpp	/^  static constexpr int rank = iteration_pattern::rank;$/;"	m	struct:Kokkos::MDRangePolicy	typeref:typename:int
rank	Kokkos_Rank.hpp	/^  static constexpr int rank                = N;$/;"	m	struct:Kokkos::Rank	typeref:typename:int
rank	Kokkos_Tuners.hpp	/^  static constexpr int rank       = MDRangeRank;$/;"	m	struct:Kokkos::Tools::Experimental::MDRangeTuner	typeref:typename:int
rank	Kokkos_View.hpp	/^  enum { rank = dimension::rank };$/;"	e	enum:Kokkos::ViewTraits::__anon8559ec870303
rank	Kokkos_View.hpp	/^KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION unsigned
rank	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    static constexpr int rank                = Policy::rank;$/;"	m	struct:Kokkos::Impl::ParallelReduce::BarePolicy	typeref:typename:int
rank	impl/Kokkos_PhysicalLayout.hpp	/^  int rank;$/;"	m	struct:Kokkos::Impl::PhysicalLayout	typeref:typename:int
rank	impl/Kokkos_ViewMapping.hpp	/^  enum : unsigned { rank = sizeof...(Vals) };$/;"	e	enum:Kokkos::Impl::ViewDimension::__anon421557341803
rank_dynamic	Kokkos_View.hpp	/^  enum { rank_dynamic = dimension::rank_dynamic };$/;"	e	enum:Kokkos::ViewTraits::__anon8559ec870403
rank_dynamic	impl/Kokkos_ViewMapping.hpp	/^  enum : unsigned { rank_dynamic = Impl::rank_dynamic<Vals...>::value };$/;"	e	enum:Kokkos::Impl::ViewDimension::__anon421557341903
rank_dynamic	impl/Kokkos_ViewMapping.hpp	/^struct rank_dynamic<> {$/;"	s	namespace:Kokkos::Impl
rank_dynamic	impl/Kokkos_ViewMapping.hpp	/^struct rank_dynamic<Val, Args...> {$/;"	s	namespace:Kokkos::Impl
re_	Kokkos_Complex.hpp	/^  RealType re_{};$/;"	m	class:Kokkos::complex	typeref:typename:RealType
ready_count	impl/Kokkos_TaskQueueCommon.hpp	/^  int32_t ready_count() const noexcept {$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION int32_t
ready_queue_base_ptr	impl/Kokkos_TaskNode.hpp	/^  TaskQueueBase* ready_queue_base_ptr() const noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION TaskQueueBase *
ready_queue_insertion_may_fail	impl/Kokkos_ChaseLev.hpp	/^  static constexpr auto ready_queue_insertion_may_fail = true;$/;"	m	struct:Kokkos::Impl::TaskQueueTraitsChaseLev	typeref:typename:auto
ready_queue_insertion_may_fail	impl/Kokkos_LIFO.hpp	/^  static constexpr auto ready_queue_insertion_may_fail = false;$/;"	m	struct:Kokkos::Impl::TaskQueueTraitsLockBased	typeref:typename:auto
ready_queue_type	impl/Kokkos_ChaseLev.hpp	/^  using ready_queue_type =$/;"	t	struct:Kokkos::Impl::TaskQueueTraitsChaseLev	typeref:typename:ChaseLevDeque<Task,fixed_size_circular_buffer<SimpleSinglyLinkedListNode<>,CircularBufferSize,int32_t>,int32_t>
ready_queue_type	impl/Kokkos_LIFO.hpp	/^  using ready_queue_type = LockBasedLIFO<Task>;$/;"	t	struct:Kokkos::Impl::TaskQueueTraitsLockBased	typeref:typename:LockBasedLIFO<Task>
ready_queue_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using ready_queue_type =$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:TaskQueueTraits::template ready_queue_type<task_base_type>
ready_queue_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using ready_queue_type =$/;"	t	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:TaskQueueTraits::template ready_queue_type<task_base_type>
ready_queue_type	impl/Kokkos_SingleTaskQueue.hpp	/^  using ready_queue_type =$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:TaskQueueTraits::template ready_queue_type<task_base_type>
real	Kokkos_Complex.hpp	/^  RealType real() const volatile noexcept { return re_; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
real	Kokkos_Complex.hpp	/^  constexpr RealType real() const noexcept { return re_; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
real	Kokkos_Complex.hpp	/^  constexpr RealType& real() noexcept { return re_; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION RealType &
real	Kokkos_Complex.hpp	/^  constexpr void real(RealType v) noexcept { re_ = v; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION void
real	Kokkos_Complex.hpp	/^  volatile RealType& real() volatile noexcept { return re_; }$/;"	f	class:Kokkos::complex	typeref:typename:KOKKOS_INLINE_FUNCTION volatile RealType &
real	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION RealType real(const complex<RealType>& x) noexcept {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION RealType
real	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION constexpr Impl::promote_t<ArithmeticType> real($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::promote_t<ArithmeticType>
realloc	Kokkos_CopyViews.hpp	/^inline std::enable_if_t<Impl::is_view_ctor_property<I>::value> realloc($/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<Impl::is_view_ctor_property<I>::value>
realloc	Kokkos_CopyViews.hpp	/^inline void realloc($/;"	f	namespace:Kokkos	typeref:typename:void
realloc	Kokkos_CopyViews.hpp	/^realloc(Kokkos::View<T, P...>& v,$/;"	f	namespace:Kokkos
realloc	Kokkos_CopyViews.hpp	/^realloc(const I& arg_prop, Kokkos::View<T, P...>& v,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<Impl::is_view_ctor_property<I>::value && (std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutLeft>::value||std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutRight>::value)>
realloc	Kokkos_CopyViews.hpp	/^realloc(const Impl::ViewCtorProp<ViewCtorArgs...>& arg_prop,$/;"	f	namespace:Kokkos
reallocate_tracked	Kokkos_LogicalSpaces.hpp	/^  static void* reallocate_tracked(void* const arg_alloc_ptr,$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void *
reallocate_tracked	impl/Kokkos_HBWSpace.cpp	/^    reallocate_tracked(void *const arg_alloc_ptr, const size_t arg_alloc_size) {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace	typeref:typename:void *
reallocate_tracked	impl/Kokkos_SharedAlloc_timpl.hpp	/^void* SharedAllocationRecordCommon<MemorySpace>::reallocate_tracked($/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:void *
rebind	impl/Kokkos_MemoryPoolAllocator.hpp	/^  struct rebind {$/;"	s	class:Kokkos::Impl::MemoryPoolAllocator
reciprocal_overflow_threshold_helper	Kokkos_NumericTraits.hpp	/^template <> struct reciprocal_overflow_threshold_helper<double> { static constexpr double value /;"	s	namespace:Kokkos::Experimental::Impl
reciprocal_overflow_threshold_helper	Kokkos_NumericTraits.hpp	/^template <> struct reciprocal_overflow_threshold_helper<float> { static constexpr float value = /;"	s	namespace:Kokkos::Experimental::Impl
reciprocal_overflow_threshold_helper	Kokkos_NumericTraits.hpp	/^template <> struct reciprocal_overflow_threshold_helper<long double> { static constexpr long dou/;"	s	namespace:Kokkos::Experimental::Impl
reciprocal_overflow_threshold_helper	Kokkos_NumericTraits.hpp	/^template <class> struct reciprocal_overflow_threshold_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
record	Kokkos_View.hpp	/^    Kokkos::Impl::SharedAllocationRecord<>* record = m_map.allocate_shared($/;"	m	class:Kokkos::View	typeref:typename:Kokkos::Impl::SharedAllocationRecord<> *
record_base_t	impl/Kokkos_SharedAlloc.hpp	/^  using record_base_t = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::HostInaccessibleSharedAllocationRecordCommon	typeref:typename:SharedAllocationRecord<void,void>
record_base_t	impl/Kokkos_SharedAlloc.hpp	/^  using record_base_t = SharedAllocationRecord<void, void>;$/;"	t	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:SharedAllocationRecord<void,void>
record_type	Kokkos_TaskScheduler.hpp	/^    using record_type =$/;"	t	function:Kokkos::BasicTaskScheduler::BasicTaskScheduler	typeref:typename:Kokkos::Impl::SharedAllocationRecord<memory_space,typename queue_type::Destroy>
record_type	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  using record_type  = Kokkos::Impl::SharedAllocationRecord<memory_space>;$/;"	t	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:Kokkos::Impl::SharedAllocationRecord<memory_space>
record_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^    using record_type =$/;"	t	function:Kokkos::SimpleTaskScheduler::SimpleTaskScheduler	typeref:typename:Impl::SharedAllocationRecord<memory_space,Impl::DefaultDestroy<task_queue_type>>
reduce_adaptor_t	impl/Kokkos_Combined_Reducer.hpp	/^  using reduce_adaptor_t =$/;"	t	function:Kokkos::parallel_reduce	typeref:typename:Impl::ParallelReduceAdaptor<PolicyType,combined_functor_type,combined_reducer_type>
reduce_memory	Threads/Kokkos_ThreadsExec.hpp	/^  inline void *reduce_memory() const { return m_scratch; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void *
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = BAnd<Scalar, Space>;$/;"	t	struct:Kokkos::BAnd	typeref:typename:BAnd<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = BOr<Scalar, Space>;$/;"	t	struct:Kokkos::BOr	typeref:typename:BOr<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = FirstLoc<Index, Space>;$/;"	t	struct:Kokkos::FirstLoc	typeref:typename:FirstLoc<Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = LAnd<Scalar, Space>;$/;"	t	struct:Kokkos::LAnd	typeref:typename:LAnd<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = LOr<Scalar, Space>;$/;"	t	struct:Kokkos::LOr	typeref:typename:LOr<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = LastLoc<Index, Space>;$/;"	t	struct:Kokkos::LastLoc	typeref:typename:LastLoc<Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = Max<Scalar, Space>;$/;"	t	struct:Kokkos::Max	typeref:typename:Max<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = MaxFirstLoc<Scalar, Index, Space>;$/;"	t	struct:Kokkos::MaxFirstLoc	typeref:typename:MaxFirstLoc<Scalar,Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = MaxLoc<Scalar, Index, Space>;$/;"	t	struct:Kokkos::MaxLoc	typeref:typename:MaxLoc<Scalar,Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = Min<Scalar, Space>;$/;"	t	struct:Kokkos::Min	typeref:typename:Min<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = MinFirstLoc<Scalar, Index, Space>;$/;"	t	struct:Kokkos::MinFirstLoc	typeref:typename:MinFirstLoc<Scalar,Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = MinLoc<Scalar, Index, Space>;$/;"	t	struct:Kokkos::MinLoc	typeref:typename:MinLoc<Scalar,Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = MinMax<Scalar, Space>;$/;"	t	struct:Kokkos::MinMax	typeref:typename:MinMax<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = MinMaxFirstLastLoc<Scalar, Index, Space>;$/;"	t	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:MinMaxFirstLastLoc<Scalar,Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = MinMaxLoc<Scalar, Index, Space>;$/;"	t	struct:Kokkos::MinMaxLoc	typeref:typename:MinMaxLoc<Scalar,Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = Prod<Scalar, Space>;$/;"	t	struct:Kokkos::Prod	typeref:typename:Prod<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = StdIsPartitioned<Index, Space>;$/;"	t	struct:Kokkos::StdIsPartitioned	typeref:typename:StdIsPartitioned<Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = StdPartitionPoint<Index, Space>;$/;"	t	struct:Kokkos::StdPartitionPoint	typeref:typename:StdPartitionPoint<Index,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer    = Sum<Scalar, Space>;$/;"	t	struct:Kokkos::Sum	typeref:typename:Sum<Scalar,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer =$/;"	t	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:MaxFirstLocCustomComparator<Scalar,Index,ComparatorType,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer =$/;"	t	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:MinFirstLocCustomComparator<Scalar,Index,ComparatorType,Space>
reducer	Kokkos_Parallel_Reduce.hpp	/^  using reducer =$/;"	t	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:MinMaxFirstLastLocCustomComparator<Scalar,Index,ComparatorType,Space>
reducer	impl/Kokkos_Combined_Reducer.hpp	/^  using reducer = CombinedReducer<Space, Reducers...>;$/;"	t	struct:Kokkos::Impl::CombinedReducer	typeref:typename:CombinedReducer<Space,Reducers...>
reducer	impl/Kokkos_Combined_Reducer.hpp	/^  using reducer = CombinedReducerImpl<std::integer_sequence<size_t, Idxs...>,$/;"	t	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:CombinedReducerImpl<std::integer_sequence<size_t,Idxs...>,Space,Reducers...>
reducer_conditional	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using reducer_conditional =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,FunctorType,ReducerType>
reducer_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using reducer_type   = ReducerType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerType
reducer_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using reducer_type = ReducerType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerType
reducer_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using reducer_type = typename Impl::ParallelReduceReturnValue<$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::ParallelReduceReturnValue<void,typename functor_analysis_type::value_type,FunctorType>::reducer_type
reducer_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^    using reducer_type = typename Impl::ParallelReduceReturnValue<$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::ParallelReduceReturnValue<void,typename functor_analysis_type::value_type,FunctorType>::reducer_type
reducer_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using reducer_type = ReducerType;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:ReducerType
reducer_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using reducer_type = typename Impl::ParallelReduceReturnValue<$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_max	typeref:typename:Impl::ParallelReduceReturnValue<void,typename functor_analysis_type::value_type,FunctorType>::reducer_type
reducer_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^    using reducer_type = typename Impl::ParallelReduceReturnValue<$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::team_size_recommended	typeref:typename:Impl::ParallelReduceReturnValue<void,typename functor_analysis_type::value_type,FunctorType>::reducer_type
reducer_type	Kokkos_Parallel_Reduce.hpp	/^  using reducer_type = InvalidType;$/;"	t	struct:Kokkos::Impl::FunctorType	typeref:typename:InvalidType
reducer_type	Kokkos_Parallel_Reduce.hpp	/^  using reducer_type = InvalidType;$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:InvalidType
reducer_type	Kokkos_Parallel_Reduce.hpp	/^  using reducer_type = ReturnType;$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:ReturnType
reducer_type	impl/Kokkos_Combined_Reducer.hpp	/^  using reducer_type = CombinedReducer<$/;"	t	function:Kokkos::Impl::make_combined_reducer	typeref:typename:CombinedReducer<Space,_reducer_from_arg_t<Space,ReferencesOrViewsOrReducers>...>
reducer_type	impl/Kokkos_Combined_Reducer.hpp	/^  using reducer_type = CombinedReducer<Space, Reducers...>;$/;"	t	struct:Kokkos::Impl::CombinedReductionFunctorWrapperImpl	typeref:typename:CombinedReducer<Space,Reducers...>
reducer_type_fwd	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using reducer_type_fwd = typename reducer_conditional::type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:reducer_conditional::type
reduction_identity	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^struct reduction_identity<Kokkos::Experimental::bhalf_t> {$/;"	s	namespace:Kokkos
reduction_identity	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^struct reduction_identity<Kokkos::Experimental::half_t> {$/;"	s	namespace:Kokkos
reduction_identity	HIP/Kokkos_HIP_Half_Conversion.hpp	/^struct reduction_identity<Kokkos::Experimental::half_t> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<bool> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<double> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<float> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<int> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<long double> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<long long> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<long> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<short> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<signed char> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<unsigned char> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<unsigned int> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<unsigned long long> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<unsigned long> {$/;"	s	namespace:Kokkos
reduction_identity	Kokkos_NumericTraits.hpp	/^struct reduction_identity<unsigned short> {$/;"	s	namespace:Kokkos
reduction_identity	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^struct reduction_identity<Kokkos::Experimental::half_t> {$/;"	s	namespace:Kokkos
reduction_identity	impl/Kokkos_QuadPrecisionMath.hpp	/^struct reduction_identity<__float128> {$/;"	s	namespace:Kokkos
ref	impl/Kokkos_Combined_Reducer.hpp	/^  constexpr value_type const& ref() const& noexcept { return m_value; }$/;"	f	struct:Kokkos::Impl::CombinedReducerValueItemImpl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION value_type const &
ref	impl/Kokkos_Combined_Reducer.hpp	/^  constexpr value_type& ref() & noexcept { return m_value; }$/;"	f	struct:Kokkos::Impl::CombinedReducerValueItemImpl	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION value_type &
ref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using ref_type  = ValueType&;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_join_no_tag_function	typeref:typename:ValueType &
ref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using ref_type  = ValueType&;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_join_tag_function	typeref:typename:ValueType &
ref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using ref_type  = ValueType*;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_join_no_tag_function	typeref:typename:ValueType *
ref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using ref_type  = ValueType*;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_join_tag_function	typeref:typename:ValueType *
reference	Kokkos_Array.hpp	/^  using reference       = T&;$/;"	t	struct:Kokkos::Array	typeref:typename:T &
reference	Kokkos_HPX.hpp	/^    reference_type reference() const {$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper	typeref:typename:reference_type
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::BAnd	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::BOr	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::FirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::LAnd	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::LOr	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::LastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::Max	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MaxFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::Min	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MinFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MinLoc	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MinMax	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::MinMaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::Prod	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::StdIsPartitioned	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::StdPartitionPoint	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference	Kokkos_Parallel_Reduce.hpp	/^  value_type& reference() const { return *value.data(); }$/;"	f	struct:Kokkos::Sum	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
reference_count	Kokkos_Future.hpp	/^  int reference_count() const {$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION int
reference_count	impl/Kokkos_TaskBase.hpp	/^  int32_t reference_count() const {$/;"	f	class:Kokkos::Impl::TaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION int32_t
reference_count_size_type	impl/Kokkos_TaskNode.hpp	/^  using reference_count_size_type = CountType;$/;"	t	class:Kokkos::Impl::ReferenceCountedBase	typeref:typename:CountType
reference_counted_base_type	impl/Kokkos_TaskNode.hpp	/^  using reference_counted_base_type = ReferenceCountedBase<int32_t>;$/;"	t	class:Kokkos::Impl::TaskNode	typeref:typename:ReferenceCountedBase<int32_t>
reference_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::reference_type
reference_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::reference_type
reference_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Analysis::reference_type
reference_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using reference_type = typename analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:analysis::reference_type
reference_type	Kokkos_HPX.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Kokkos_HPX.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::reference_type
reference_type	Kokkos_HPX.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::reference_type
reference_type	Kokkos_View.hpp	/^  using reference_type = typename map_type::reference_type;$/;"	t	class:Kokkos::View	typeref:typename:map_type::reference_type
reference_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::reference_type
reference_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::reference_type
reference_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::reference_type
reference_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using reference_type  = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Analysis::reference_type
reference_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::reference_type
reference_type	Serial/Kokkos_Serial_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::reference_type
reference_type	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::reference_type
reference_type	Threads/Kokkos_Threads_Parallel_Range.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::reference_type
reference_type	Threads/Kokkos_Threads_Parallel_Team.hpp	/^  using reference_type = typename Analysis::reference_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::reference_type
reference_type	impl/Kokkos_FunctorAnalysis.hpp	/^  using reference_type = std::conditional_t<$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:std::conditional_t<candidate_is_array,ValueType *,std::conditional_t<!candidate_is_void,ValueType &,void>>
reference_type	impl/Kokkos_TaskResult.hpp	/^  using reference_type = ResultType&;$/;"	t	struct:Kokkos::Impl::TaskResult	typeref:typename:ResultType &
reference_type	impl/Kokkos_TaskResult.hpp	/^  using reference_type = void;$/;"	t	struct:Kokkos::Impl::TaskResult	typeref:typename:void
reference_type_is_lvalue_reference	Kokkos_View.hpp	/^    reference_type_is_lvalue_reference =$/;"	e	enum:Kokkos::View::__anon8559ec870a03
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::BAnd	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::BOr	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::FirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::LAnd	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::LOr	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::LastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::Max	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MaxFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::Min	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MinFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MinLoc	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MinMax	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::MinMaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::Prod	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::StdIsPartitioned	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::StdPartitionPoint	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar() const { return references_scalar_v; }$/;"	f	struct:Kokkos::Sum	typeref:typename:KOKKOS_INLINE_FUNCTION bool
references_scalar	impl/Kokkos_Combined_Reducer.hpp	/^  constexpr bool references_scalar() const noexcept {$/;"	f	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:KOKKOS_FUNCTION bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::BAnd	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::BOr	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::FirstLoc	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::LAnd	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::LOr	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::LastLoc	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::Max	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MaxFirstLoc	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MaxLoc	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::Min	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MinFirstLoc	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MinLoc	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MinMax	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::MinMaxLoc	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::Prod	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::StdIsPartitioned	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::StdPartitionPoint	typeref:typename:bool
references_scalar_v	Kokkos_Parallel_Reduce.hpp	/^  bool references_scalar_v;$/;"	m	struct:Kokkos::Sum	typeref:typename:bool
regex_false	impl/Kokkos_Command_Line_Parsing.cpp	/^auto const regex_false = std::regex($/;"	v	namespace:__anonad3933610110	typeref:typename:auto const
regex_true	impl/Kokkos_Command_Line_Parsing.cpp	/^auto const regex_true = std::regex($/;"	v	namespace:__anonad3933610110	typeref:typename:auto const
register_event	SYCL/Kokkos_SYCL_Instance.hpp	/^    void register_event(sycl::event event) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:void
register_event	SYCL/Kokkos_SYCL_Instance.hpp	/^  static void register_event(sycl::event) {}$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:void
register_event	SYCL/Kokkos_SYCL_Instance.hpp	/^  void register_event(sycl::event event) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLFunctionWrapper	typeref:typename:void
register_space_factory	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::ExecSpaceManager::register_space_factory($/;"	f	class:Kokkos::Impl::ExecSpaceManager	typeref:typename:void
release	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  void release(size_type idx) const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	HIP/Kokkos_HIP_UniqueToken.hpp	/^  void release(size_type idx) const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	Kokkos_HPX.hpp	/^  void release(int i) const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	Kokkos_HPX.hpp	/^  void release(int) const noexcept {}$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:void
release	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  void release(int i) const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  void release(int) const noexcept {}$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  void release(size_type i) const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  void release(size_type idx) const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	Serial/Kokkos_Serial_UniqueToken.hpp	/^  void release(int) const noexcept {}$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	Threads/Kokkos_Threads_UniqueToken.hpp	/^  void release(int i) const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	Threads/Kokkos_Threads_UniqueToken.hpp	/^  void release(int) const noexcept {}$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION void
release	impl/Kokkos_ConcurrentBitset.hpp	/^  KOKKOS_INLINE_FUNCTION static int release($/;"	f	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:KOKKOS_INLINE_FUNCTION int
remainder	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 remainder(__float128 x, __float128 y) { return ::remainderq(x, y); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
remove_cvref	impl/Kokkos_Utilities.hpp	/^struct remove_cvref {$/;"	s	namespace:Kokkos::Impl
remove_cvref_t	impl/Kokkos_Utilities.hpp	/^using remove_cvref_t = typename remove_cvref<T>::type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:remove_cvref<T>::type
report_policy_results	impl/Kokkos_Tools_Generic.hpp	/^void report_policy_results(const size_t \/**tuning_context*\/,$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
report_policy_results	impl/Kokkos_Tools_Generic.hpp	/^void report_policy_results(const size_t, const std::string&, ExecPolicy&,$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
requestToolSettingsFunction	impl/Kokkos_Profiling_Interface.hpp	/^using requestToolSettingsFunction = Kokkos_Tools_requestToolSettingsFunction;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_requestToolSettingsFunction
requestValueFunction	impl/Kokkos_Profiling_Interface.hpp	/^using requestValueFunction         = Kokkos_Tools_requestValueFunction;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_requestValueFunction
request_output_values	impl/Kokkos_Profiling.cpp	/^void request_output_values(size_t contextId, size_t count,$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
request_output_values	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_requestValueFunction request_output_values;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Tools_requestValueFunction
request_tool_settings	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_requestToolSettingsFunction request_tool_settings;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Tools_requestToolSettingsFunction
requested_launch_mechanism	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^      requested_launch_mechanism =$/;"	m	struct:Kokkos::Impl::DeduceCudaLaunchMechanism	typeref:typename:const Experimental::CudaLaunchMechanism
requested_launch_mechanism	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static constexpr HIPLaunchMechanism requested_launch_mechanism =$/;"	m	struct:Kokkos::Experimental::Impl::DeduceHIPLaunchMechanism	typeref:typename:HIPLaunchMechanism
requested_respawn	impl/Kokkos_TaskBase.hpp	/^  bool requested_respawn() {$/;"	f	class:Kokkos::Impl::TaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION bool
require	impl/Kokkos_GraphImpl.hpp	/^constexpr auto require(Policy const& policy,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:auto
require	traits/Kokkos_ScheduleTrait.hpp	/^constexpr auto require(Policy const& p, Kokkos::Schedule<ScheduleType>) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:auto
require	traits/Kokkos_WorkItemPropertyTrait.hpp	/^constexpr auto require(const Policy p,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:auto
required_allocation_size	Kokkos_View.hpp	/^  static constexpr size_t required_allocation_size($/;"	f	class:Kokkos::View	typeref:typename:size_t
required_allocation_size	impl/Kokkos_VLAEmulation.hpp	/^  static \/* constexpr *\/ size_t required_allocation_size($/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
required_buffer_length	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int required_buffer_length =$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
required_buffer_size	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int required_buffer_size = 128;$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
requires_global_fencing	impl/Kokkos_Profiling_C_Interface.h	/^  bool requires_global_fencing;$/;"	m	struct:Kokkos_Tools_ToolSettings	typeref:typename:bool
res	HIP/Kokkos_HIP_Vectorization.hpp	/^    conv_type res;$/;"	m	struct:Kokkos::Experimental::Impl::in_place_shfl_op	typeref:typename:conv_type
reschedule	impl/Kokkos_TaskQueue_impl.hpp	/^KOKKOS_FUNCTION void TaskQueue<ExecSpace, MemorySpace>::reschedule($/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION void
reserve	SYCL/Kokkos_SYCL_Instance.cpp	/^size_t SYCLInternal::USMObjectMem<Kind>::reserve(size_t n) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:size_t
reserved_blocks	Kokkos_MemoryPool.hpp	/^    size_t reserved_blocks;  \/\/\/<  Unallocated blocks in assigned superblocks$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
reserved_bytes	Kokkos_MemoryPool.hpp	/^    size_t reserved_bytes;   \/\/\/<  Unallocated bytes in assigned superblocks$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
reset	Kokkos_Timer.hpp	/^  inline void reset() { gettimeofday(&m_old, nullptr); }$/;"	f	class:Kokkos::Timer	typeref:typename:void
reset	SYCL/Kokkos_SYCL_Instance.cpp	/^void SYCLInternal::USMObjectMem<Kind>::reset() {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:void
reset	SYCL/Kokkos_SYCL_Instance.hpp	/^    void reset(sycl::queue q, uint32_t instance_id) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem	typeref:typename:void
reset_count_on_exit_parallel	Kokkos_HPX.hpp	/^    reset_count_on_exit_parallel() {}$/;"	f	struct:Kokkos::Experimental::HPX::reset_count_on_exit_parallel
reset_count_on_exit_parallel	Kokkos_HPX.hpp	/^  struct KOKKOS_ATTRIBUTE_NODISCARD reset_count_on_exit_parallel {$/;"	s	class:Kokkos::Experimental::HPX
reset_has_executed	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  void reset_has_executed() {$/;"	f	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:void
reset_on_exit_parallel	Kokkos_HPX.hpp	/^    reset_on_exit_parallel(HPX const &) {}$/;"	f	struct:Kokkos::Experimental::HPX::reset_on_exit_parallel
reset_on_exit_parallel	Kokkos_HPX.hpp	/^    reset_on_exit_parallel(HPX const &space) : m_space(space) {}$/;"	f	struct:Kokkos::Experimental::HPX::reset_on_exit_parallel
reset_on_exit_parallel	Kokkos_HPX.hpp	/^  struct KOKKOS_ATTRIBUTE_NODISCARD reset_on_exit_parallel {$/;"	s	class:Kokkos::Experimental::HPX
reset_steal_target	Threads/Kokkos_ThreadsExec.hpp	/^  inline void reset_steal_target() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
reset_steal_target	Threads/Kokkos_ThreadsExec.hpp	/^  inline void reset_steal_target(int team_size) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
resize	Kokkos_CopyViews.hpp	/^inline void resize(Kokkos::View<T, P...>& v,$/;"	f	namespace:Kokkos	typeref:typename:void
resize	Kokkos_CopyViews.hpp	/^inline void resize(const ExecutionSpace& exec_space, Kokkos::View<T, P...>& v,$/;"	f	namespace:Kokkos	typeref:typename:void
resize	Kokkos_CopyViews.hpp	/^inline void resize(const Impl::ViewCtorProp<ViewCtorArgs...>& arg_prop,$/;"	f	namespace:Kokkos	typeref:typename:void
resize	Kokkos_CopyViews.hpp	/^resize(Kokkos::View<T, P...>& v, const size_t n0 = KOKKOS_IMPL_CTOR_DEFAULT_ARG,$/;"	f	namespace:Kokkos
resize	Kokkos_CopyViews.hpp	/^resize(const I& arg_prop, Kokkos::View<T, P...>& v,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<(Impl::is_view_ctor_property<I>::value||Kokkos::is_execution_space<I>::value)&& (std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutLeft>::value||std::is_same<typename Kokkos::View<T,P...>::array_layout,Kokkos::LayoutRight>::value)>
resize	Kokkos_CopyViews.hpp	/^resize(const I& arg_prop, Kokkos::View<T, P...>& v,$/;"	f	namespace:Kokkos	typeref:typename:std::enable_if_t<Impl::is_view_ctor_property<I>::value||Kokkos::is_execution_space<I>::value>
resize	Kokkos_CopyViews.hpp	/^resize(const Impl::ViewCtorProp<ViewCtorArgs...>& arg_prop,$/;"	f	namespace:Kokkos
resize	Kokkos_HPX.hpp	/^  void resize(const std::size_t num_threads,$/;"	f	class:Kokkos::Impl::thread_buffer	typeref:typename:void
resize_scratch	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^void OpenMPTargetExec::resize_scratch(int64_t team_size, int64_t shmem_size_L0,$/;"	f	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void
resize_scratch	Threads/Kokkos_ThreadsExec.cpp	/^void *ThreadsExec::resize_scratch(size_t reduce_size, size_t thread_size) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void *
resize_team_scratch_space	Cuda/Kokkos_Cuda_Instance.cpp	/^std::pair<void *, int> CudaInternal::resize_team_scratch_space($/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:std::pair<void *,int>
resize_team_scratch_space	HIP/Kokkos_HIP_Instance.cpp	/^void *HIPInternal::resize_team_scratch_space(std::int64_t bytes,$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:void *
resize_team_scratch_space	SYCL/Kokkos_SYCL_Instance.cpp	/^sycl::device_ptr<void> SYCLInternal::resize_team_scratch_space($/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:sycl::device_ptr<void>
resize_thread_data	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMPInternal::resize_thread_data(size_t pool_reduce_bytes,$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:void
resize_thread_team_data	Serial/Kokkos_Serial.cpp	/^void SerialInternal::resize_thread_team_data(size_t pool_reduce_bytes,$/;"	f	class:Kokkos::Impl::SerialInternal	typeref:typename:void
respawn	Kokkos_TaskScheduler.hpp	/^  KOKKOS_FUNCTION static void respawn($/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION void
respawn	Kokkos_TaskScheduler.hpp	/^  KOKKOS_FUNCTION static void respawn(FunctorType* arg_self,$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION void
respawn	Kokkos_TaskScheduler.hpp	/^respawn(FunctorType* arg_self, T const& arg,$/;"	f	namespace:Kokkos	typeref:typename:Scheduler::future_type_for_functor typename Scheduler::future_type_for_functor void KOKKOS_INLINE_FUNCTION
respawn	impl/Kokkos_SimpleTaskScheduler.hpp	/^  KOKKOS_FUNCTION static void respawn($/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_FUNCTION void
result	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  auto* result        = &local_mem[local_id * value_count];$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:auto *
result	impl/Kokkos_Profiling.hpp	/^  InitializationResult result;$/;"	m	struct:Kokkos::Tools::Impl::InitializationStatus	typeref:typename:InitializationResult
result_	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    auto* result_          = &local_mem[id_in_sg * value_count];$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:auto *
result_type	impl/Kokkos_TaskBase.hpp	/^  using result_type  = ResultType;$/;"	t	class:Kokkos::Impl::Task	typeref:typename:ResultType
result_type	impl/Kokkos_TaskNode.hpp	/^  using result_type    = ResultType;$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:ResultType
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::FirstLoc	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::LastLoc	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MaxFirstLoc	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MinFirstLoc	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::StdIsPartitioned	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = ::Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::StdPartitionPoint	typeref:typename:::Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::BAnd	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::BOr	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::LAnd	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::LOr	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::Max	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MaxLoc	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::Min	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MinLoc	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MinMax	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::MinMaxLoc	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::Prod	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type = Kokkos::View<value_type, Space>;$/;"	t	struct:Kokkos::Sum	typeref:typename:Kokkos::View<value_type,Space>
result_view_type	Kokkos_Parallel_Reduce.hpp	/^  using result_view_type =$/;"	t	function:Kokkos::parallel_reduce	typeref:typename:Kokkos::View<value_type,Kokkos::HostSpace,Kokkos::MemoryUnmanaged>
result_view_type	impl/Kokkos_Combined_Reducer.hpp	/^  using result_view_type =$/;"	t	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:Kokkos::View<value_type,Space,Kokkos::MemoryUnmanaged>
resume_tools	impl/Kokkos_Profiling.cpp	/^void resume_tools() { current_callbacks = backup_callbacks; }$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
return_t	Kokkos_GraphNode.hpp	/^    using return_t = GraphNodeRef<ExecutionSpace, next_kernel_t, GraphNodeRef>;$/;"	t	function:Kokkos::Experimental::GraphNodeRef::_then_kernel	typeref:typename:GraphNodeRef<ExecutionSpace,next_kernel_t,GraphNodeRef>
return_t	Kokkos_MinMaxClamp.hpp	/^  using return_t = ::Kokkos::pair<const T&, const T&>;$/;"	t	function:Kokkos::minmax	typeref:typename:::Kokkos::pair<const T &,const T &>
return_type	Kokkos_GraphNode.hpp	/^    using return_type =$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_reduce	typeref:typename:std::conditional_t<Kokkos::is_reducer<return_type_remove_cvref>::value,return_type_remove_cvref,const return_type_remove_cvref>
return_type	Kokkos_Parallel_Reduce.hpp	/^  using return_type  = ReturnType;$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:ReturnType
return_type	Kokkos_Parallel_Reduce.hpp	/^  using return_type = Kokkos::View<std::remove_const_t<ReturnType>,$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:Kokkos::View<std::remove_const_t<ReturnType>,Kokkos::HostSpace,Kokkos::MemoryUnmanaged>
return_type	Kokkos_Parallel_Reduce.hpp	/^  using return_type =$/;"	t	struct:Kokkos::Impl::FunctorType	typeref:typename:Kokkos::View<ReturnType,Kokkos::HostSpace,Kokkos::MemoryUnmanaged>
return_type	Kokkos_Tuners.hpp	/^  using return_type = decltype(std::tuple_cat($/;"	t	struct:Kokkos::Tools::Experimental::Impl::GetMultidimensionalPoint
return_type	Kokkos_Tuners.hpp	/^  using return_type = std::tuple<ValueType>;$/;"	t	struct:Kokkos::Tools::Experimental::Impl::GetMultidimensionalPoint	typeref:typename:std::tuple<ValueType>
return_type	Kokkos_View.hpp	/^  using return_type =$/;"	t	function:Kokkos::view_alloc	typeref:typename:Impl::ViewCtorProp<typename Impl::ViewCtorProp<void,Args>::type...>
return_type	Kokkos_View.hpp	/^  using return_type =$/;"	t	function:Kokkos::view_wrap	typeref:typename:Impl::ViewCtorProp<typename Impl::ViewCtorProp<void,Args>::type...>
return_type_remove_cvref	Kokkos_GraphNode.hpp	/^    using return_type_remove_cvref =$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_reduce	typeref:typename:std::remove_cv_t<std::remove_reference_t<ReturnType>>
return_value	Kokkos_Parallel_Reduce.hpp	/^  static return_type return_value(ReturnType& return_val, const FunctorType&) {$/;"	f	struct:Kokkos::Impl::FunctorType	typeref:typename:return_type
return_value	Kokkos_Parallel_Reduce.hpp	/^  static return_type return_value(ReturnType& return_val, const FunctorType&) {$/;"	f	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:return_type
return_value	Kokkos_Parallel_Reduce.hpp	/^  static return_type return_value(ReturnType& return_val,$/;"	f	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:return_type
return_value	Kokkos_Parallel_Reduce.hpp	/^  static return_type& return_value(ReturnType& return_val, const FunctorType&) {$/;"	f	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:return_type &
return_value_adapter	Kokkos_GraphNode.hpp	/^    using return_value_adapter =$/;"	t	function:Kokkos::Experimental::GraphNodeRef::then_parallel_reduce	typeref:typename:Kokkos::Impl::ParallelReduceReturnValue<void,return_type,functor_type>
return_value_adapter	Kokkos_Parallel_Reduce.hpp	/^  using return_value_adapter =$/;"	t	struct:Kokkos::Impl::ParallelReduceAdaptor	typeref:typename:Impl::ParallelReduceReturnValue<void,ReturnType,FunctorType>
rhs_traits	Kokkos_View.hpp	/^  using rhs_traits = ViewTraits<RT, RP...>;$/;"	t	function:Kokkos::operator ==	typeref:typename:ViewTraits<RT,RP...>
root_node_impl_t	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  using root_node_impl_t =$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:GraphNodeImpl<Kokkos::Cuda,Kokkos::Experimental::TypeErasedTag,Kokkos::Experimental::TypeErasedTag>
root_node_impl_t	impl/Kokkos_Default_Graph_Impl.hpp	/^  using root_node_impl_t =$/;"	t	struct:Kokkos::Impl::GraphImpl	typeref:typename:GraphNodeImpl<ExecutionSpace,Kokkos::Experimental::TypeErasedTag,Kokkos::Experimental::TypeErasedTag>
root_reduce_scratch	Threads/Kokkos_ThreadsExec.cpp	/^void *ThreadsExec::root_reduce_scratch() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void *
root_spinwait_until_equal	impl/Kokkos_Spinwait.hpp	/^std::enable_if_t<std::is_integral<T>::value, void> root_spinwait_until_equal($/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<std::is_integral<T>::value,void>
root_spinwait_while_equal	impl/Kokkos_Spinwait.hpp	/^std::enable_if_t<std::is_integral<T>::value, void> root_spinwait_while_equal($/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<std::is_integral<T>::value,void>
root_type	impl/Kokkos_TaskBase.hpp	/^  using root_type    = TaskBase;$/;"	t	class:Kokkos::Impl::Task	typeref:typename:TaskBase
root_values	Kokkos_Tuners.hpp	/^  std::vector<ValueType> root_values;$/;"	m	struct:Kokkos::Tools::Experimental::Impl::ValueHierarchyNode	typeref:typename:std::vector<ValueType>
round	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 round(__float128 x) { return ::roundq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
round_error_helper	Kokkos_NumericTraits.hpp	/^template <> struct round_error_helper<double> { static constexpr double value = 0.5; };$/;"	s	namespace:Kokkos::Experimental::Impl
round_error_helper	Kokkos_NumericTraits.hpp	/^template <> struct round_error_helper<float> { static constexpr float value = 0.5F; };$/;"	s	namespace:Kokkos::Experimental::Impl
round_error_helper	Kokkos_NumericTraits.hpp	/^template <> struct round_error_helper<long double> { static constexpr long double value = 0.5L; /;"	s	namespace:Kokkos::Experimental::Impl
round_error_helper	Kokkos_NumericTraits.hpp	/^template <class> struct round_error_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
row_map	Kokkos_Crs.hpp	/^  row_map_type row_map;$/;"	m	class:Kokkos::Crs	typeref:typename:row_map_type
row_map_type	Kokkos_Crs.hpp	/^  using row_map_type = View<size_type*, array_layout, device_type>;$/;"	t	class:Kokkos::Crs	typeref:typename:View<size_type *,array_layout,device_type>
row_map_type	Kokkos_Crs.hpp	/^  using row_map_type = typename CrsType::row_map_type;$/;"	t	struct:Kokkos::CountAndFillBase	typeref:typename:CrsType::row_map_type
run	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  __device__ inline void run(SHMEMReductionTag&, const int& threadid) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
run	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  __device__ inline void run(ShflReductionTag, const int& threadid) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
run	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  __device__ inline void run(SHMEMReductionTag) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
run	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  __device__ inline void run(ShflReductionTag) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
run	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  __device__ inline void run(SHMEMReductionTag, int const threadid) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
run	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  __device__ inline void run(ShflReductionTag, int const threadid) const {$/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:__device__ void
run	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION void run(TeamMember& member) {$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION void
runnable_task_base_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using runnable_task_base_type = RunnableTaskBase<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:RunnableTaskBase<TaskQueueTraits>
runnable_task_base_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using runnable_task_base_type = RunnableTaskBase<TaskQueueTraits>;$/;"	t	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:RunnableTaskBase<TaskQueueTraits>
runnable_task_base_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using runnable_task_base_type =$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:task_queue_type::runnable_task_base_type
runnable_task_base_type	impl/Kokkos_SingleTaskQueue.hpp	/^  using runnable_task_base_type = RunnableTaskBase<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:RunnableTaskBase<TaskQueueTraits>
runnable_task_base_type	impl/Kokkos_TaskNode.hpp	/^  using runnable_task_base_type = RunnableTaskBase<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:RunnableTaskBase<TaskQueueTraits>
runnable_task_type	Kokkos_TaskScheduler.hpp	/^  using runnable_task_type =$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:Impl::Task<scheduler_type,typename Functor::value_type,Functor>
runnable_task_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using runnable_task_type =$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:RunnableTask<task_queue_traits,Scheduler,typename Functor::value_type,Functor>
runnable_task_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using runnable_task_type =$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:QueueType::template runnable_task_type<Functor,SimpleTaskScheduler>
runnable_task_type	impl/Kokkos_SingleTaskQueue.hpp	/^  using runnable_task_type =$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:RunnableTask<task_queue_traits,Scheduler,typename Functor::value_type,Functor>
runnable_task_type	impl/Kokkos_TaskNode.hpp	/^  using runnable_task_type = RunnableTaskBase;$/;"	t	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:RunnableTaskBase
runtime_check_memory_access_violation	Kokkos_Core_fwd.hpp	/^KOKKOS_FUNCTION void runtime_check_memory_access_violation($/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FUNCTION void
runtime_check_memory_access_violation	Kokkos_Core_fwd.hpp	/^KOKKOS_FUNCTION void runtime_check_memory_access_violation() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FUNCTION void
runtime_check_rank	Kokkos_View.hpp	/^void runtime_check_rank(const size_t rank, const size_t dyn_rank,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION void
runtime_const_data_type	impl/Kokkos_ViewUniformType.hpp	/^  using runtime_const_data_type = typename ViewScalarToDataType<$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:ViewScalarToDataType<std::add_const_t<typename ViewType::value_type>,ViewType::rank>::type
runtime_const_nomemspace_type	impl/Kokkos_ViewUniformType.hpp	/^  using runtime_const_nomemspace_type =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::View<runtime_const_data_type,array_layout,anonymous_device_type,memory_traits>
runtime_const_type	impl/Kokkos_ViewUniformType.hpp	/^  using runtime_const_type = Kokkos::View<runtime_const_data_type, array_layout,$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::View<runtime_const_data_type,array_layout,device_type,memory_traits>
runtime_data_type	impl/Kokkos_ViewUniformType.hpp	/^  using runtime_data_type =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:ViewScalarToDataType<typename ViewType::value_type,ViewType::rank>::type
runtime_nomemspace_type	impl/Kokkos_ViewUniformType.hpp	/^  using runtime_nomemspace_type =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::View<runtime_data_type,array_layout,anonymous_device_type,memory_traits>
runtime_type	impl/Kokkos_ViewUniformType.hpp	/^  using runtime_type =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::View<runtime_data_type,array_layout,device_type,memory_traits>
rv	impl/Kokkos_Atomic_Load.hpp	/^  T rv{};$/;"	v	namespace:Kokkos::Impl	typeref:typename:T
s_core	impl/Kokkos_hwloc.cpp	/^hwloc_bitmap_t s_core[MAX_CORE];$/;"	v	namespace:Kokkos::hwloc::__anonec54cfc50110	typeref:typename:hwloc_bitmap_t[]
s_core_capacity	impl/Kokkos_hwloc.cpp	/^unsigned s_core_capacity(0);$/;"	v	namespace:Kokkos::hwloc::__anonec54cfc50110	typeref:typename:unsigned
s_core_topology	impl/Kokkos_hwloc.cpp	/^std::pair<unsigned, unsigned> s_core_topology(0, 0);$/;"	v	namespace:Kokkos::hwloc::__anonec54cfc50110	typeref:typename:std::pair<unsigned,unsigned>
s_current_function	Threads/Kokkos_ThreadsExec.cpp	/^void (*volatile s_current_function)(ThreadsExec &, const void *);$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:void (* volatile)(ThreadsExec &,const void *)
s_current_function_arg	Threads/Kokkos_ThreadsExec.cpp	/^const void *volatile s_current_function_arg = nullptr;$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:const void * volatile
s_current_reduce_size	Threads/Kokkos_ThreadsExec.cpp	/^unsigned s_current_reduce_size = 0;$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:unsigned
s_current_shared_size	Threads/Kokkos_ThreadsExec.cpp	/^unsigned s_current_shared_size = 0;$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:unsigned
s_root_record	Cuda/Kokkos_CudaSpace.cpp	/^    SharedAllocationRecord<Kokkos::CudaHostPinnedSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaHostPinnedSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	Cuda/Kokkos_CudaSpace.cpp	/^    SharedAllocationRecord<Kokkos::CudaSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	Cuda/Kokkos_CudaSpace.cpp	/^    SharedAllocationRecord<Kokkos::CudaUVMSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord<Kokkos::CudaUVMSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	HIP/Kokkos_HIP_Space.cpp	/^    Kokkos::Experimental::HIPHostPinnedSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord< Kokkos::Experimental::HIPHostPinnedSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	HIP/Kokkos_HIP_Space.cpp	/^    Kokkos::Experimental::HIPManagedSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord< Kokkos::Experimental::HIPManagedSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	HIP/Kokkos_HIP_Space.cpp	/^    SharedAllocationRecord<Kokkos::Experimental::HIPSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::HIPSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	Kokkos_CudaSpace.hpp	/^  static RecordBase s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:RecordBase
s_root_record	Kokkos_HBWSpace.hpp	/^  static RecordBase s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:RecordBase
s_root_record	Kokkos_HIP_Space.hpp	/^  static RecordBase s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:RecordBase
s_root_record	Kokkos_HostSpace.hpp	/^  static RecordBase s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:RecordBase
s_root_record	Kokkos_LogicalSpaces.hpp	/^                           void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::LogicalMemorySpace< BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase>, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	Kokkos_LogicalSpaces.hpp	/^  static RecordBase s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:RecordBase
s_root_record	Kokkos_OpenMPTargetSpace.hpp	/^  static RecordBase s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:RecordBase
s_root_record	Kokkos_SYCL_Space.hpp	/^  static RecordBase s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:RecordBase
s_root_record	OpenACC/Kokkos_OpenACCSpace.cpp	/^    Kokkos::Experimental::OpenACCSpace, void>::s_root_record;$/;"	m	class:SharedAllocationRecord< Kokkos::Experimental::OpenACCSpace, void>	typeref:typename:Kokkos::Impl::SharedAllocationRecord<void,void>
s_root_record	OpenACC/Kokkos_OpenACCSpace.hpp	/^  static RecordBase s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:RecordBase
s_root_record	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^    Kokkos::Experimental::OpenMPTargetSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord< Kokkos::Experimental::OpenMPTargetSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	SYCL/Kokkos_SYCL_Space.cpp	/^    Kokkos::Experimental::SYCLDeviceUSMSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord< Kokkos::Experimental::SYCLDeviceUSMSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	SYCL/Kokkos_SYCL_Space.cpp	/^    Kokkos::Experimental::SYCLHostUSMSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord< Kokkos::Experimental::SYCLHostUSMSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	SYCL/Kokkos_SYCL_Space.cpp	/^    Kokkos::Experimental::SYCLSharedUSMSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord< Kokkos::Experimental::SYCLSharedUSMSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	impl/Kokkos_HBWSpace.cpp	/^    SharedAllocationRecord<Kokkos::Experimental::HBWSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord<Kokkos::Experimental::HBWSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_root_record	impl/Kokkos_HostSpace.cpp	/^    SharedAllocationRecord<Kokkos::HostSpace, void>::s_root_record;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord<Kokkos::HostSpace, void>	typeref:typename:SharedAllocationRecord<void,void>
s_thread_pool_size	Threads/Kokkos_ThreadsExec.cpp	/^int s_thread_pool_size[3] = {0, 0, 0};$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:int[3]
s_threads_coord	Threads/Kokkos_ThreadsExec.cpp	/^std::pair<unsigned, unsigned> s_threads_coord[ThreadsExec::MAX_THREAD_COUNT];$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:std::pair<unsigned,unsigned>[]
s_threads_exec	Threads/Kokkos_ThreadsExec.cpp	/^ThreadsExec *s_threads_exec[ThreadsExec::MAX_THREAD_COUNT] = {nullptr};$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:ThreadsExec * []
s_threads_pid	Threads/Kokkos_ThreadsExec.cpp	/^std::thread::id s_threads_pid[ThreadsExec::MAX_THREAD_COUNT];$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:std::thread::id[]
s_threads_process	Threads/Kokkos_ThreadsExec.cpp	/^ThreadsExec s_threads_process;$/;"	v	namespace:Kokkos::Impl::__anon54e346b10110	typeref:typename:ThreadsExec
safe_load	impl/Kokkos_Volatile_Load.hpp	/^KOKKOS_FORCEINLINE_FUNCTION T safe_load(T const* const ptr) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T
safe_minimum	Kokkos_NumericTraits.hpp	/^constexpr T safe_minimum(T \/*ignored*\/) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:T
safe_throw_allocation_with_header_failure	impl/Kokkos_MemorySpace.cpp	/^void safe_throw_allocation_with_header_failure($/;"	f	namespace:Kokkos::Impl	typeref:typename:void
save_stacktrace	impl/Kokkos_Stacktrace.cpp	/^void save_stacktrace() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
scalar_array_type	Kokkos_View.hpp	/^  using scalar_array_type = ValueType;$/;"	t	struct:Kokkos::Impl::CommonViewAllocProp	typeref:typename:ValueType
scalar_array_type	Kokkos_View.hpp	/^  using scalar_array_type = typename data_analysis::scalar_array_type;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::scalar_array_type
scalar_inter_block_reduction	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  __device__ static inline bool scalar_inter_block_reduction($/;"	f	struct:Kokkos::Impl::CudaReductionsFunctor	typeref:typename:__device__ bool
scalar_inter_block_reduction	HIP/Kokkos_HIP_ReduceScan.hpp	/^  __device__ static inline bool scalar_inter_block_reduction($/;"	f	struct:Kokkos::Impl::HIPReductionsFunctor	typeref:typename:__device__ bool
scalar_intra_block_reduction	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  __device__ static inline void scalar_intra_block_reduction($/;"	f	struct:Kokkos::Impl::CudaReductionsFunctor	typeref:typename:__device__ void
scalar_intra_block_reduction	HIP/Kokkos_HIP_ReduceScan.hpp	/^  __device__ static inline void scalar_intra_block_reduction($/;"	f	struct:Kokkos::Impl::HIPReductionsFunctor	typeref:typename:__device__ void
scalar_intra_warp_reduction	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  __device__ static inline void scalar_intra_warp_reduction($/;"	f	struct:Kokkos::Impl::CudaReductionsFunctor	typeref:typename:__device__ void
scalar_intra_warp_reduction	HIP/Kokkos_HIP_ReduceScan.hpp	/^  __device__ static inline void scalar_intra_warp_reduction($/;"	f	struct:Kokkos::Impl::HIPReductionsFunctor	typeref:typename:__device__ void
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MaxFirstLoc	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MaxLoc	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MinFirstLoc	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MinLoc	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MinMax	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Kokkos_Parallel_Reduce.hpp	/^  using scalar_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::MinMaxLoc	typeref:typename:std::remove_cv_t<Scalar>
scalar_type	Threads/Kokkos_ThreadsExec.hpp	/^    using scalar_type = typename FunctorType::value_type;$/;"	t	function:Kokkos::Impl::ThreadsExec::scan_large	typeref:typename:FunctorType::value_type
scalar_type	Threads/Kokkos_ThreadsExec.hpp	/^    using scalar_type = typename FunctorType::value_type;$/;"	t	function:Kokkos::Impl::ThreadsExec::scan_small	typeref:typename:FunctorType::value_type
scalar_type	impl/Kokkos_ViewArray.hpp	/^  using scalar_type = typename Traits::value_type::value_type;$/;"	t	namespace:Kokkos::Impl	typeref:typename:Traits::value_type::value_type
scan_internal	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  void scan_internal(sycl::queue& q, const FunctorWrapper& functor_wrapper,$/;"	f	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:void
scan_large	Threads/Kokkos_ThreadsExec.hpp	/^  inline void scan_large(const FunctorType &f) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
scan_small	Threads/Kokkos_ThreadsExec.hpp	/^  inline void scan_small(const FunctorType &f) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
schedule_aggregate	impl/Kokkos_TaskQueueCommon.hpp	/^  KOKKOS_FUNCTION void schedule_aggregate($/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_FUNCTION void
schedule_aggregate	impl/Kokkos_TaskQueue_impl.hpp	/^KOKKOS_FUNCTION void TaskQueue<ExecSpace, MemorySpace>::schedule_aggregate($/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION void
schedule_runnable	impl/Kokkos_MultipleTaskQueue.hpp	/^  void schedule_runnable(runnable_task_base_type&& task,$/;"	f	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:KOKKOS_FUNCTION void
schedule_runnable	impl/Kokkos_SingleTaskQueue.hpp	/^  void schedule_runnable(runnable_task_base_type&& task,$/;"	f	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:KOKKOS_FUNCTION void
schedule_runnable	impl/Kokkos_TaskQueue_impl.hpp	/^KOKKOS_FUNCTION void TaskQueue<ExecSpace, MemorySpace>::schedule_runnable($/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION void
schedule_runnable_to_queue	impl/Kokkos_TaskQueueCommon.hpp	/^  KOKKOS_INLINE_FUNCTION void schedule_runnable_to_queue($/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION void
schedule_type	Kokkos_Concepts.hpp	/^  using schedule_type = Schedule;$/;"	t	struct:Kokkos::Schedule	typeref:typename:Schedule
schedule_type	traits/Kokkos_ScheduleTrait.hpp	/^    using schedule_type = Sched;$/;"	t	struct:Kokkos::Impl::ScheduleTrait::mixin_matching_trait	typeref:typename:Sched
schedule_type	traits/Kokkos_ScheduleTrait.hpp	/^    using schedule_type = Schedule<Static>;$/;"	t	struct:Kokkos::Impl::ScheduleTrait::base_traits	typeref:typename:Schedule<Static>
schedule_type_is_defaulted	traits/Kokkos_ScheduleTrait.hpp	/^    static constexpr auto schedule_type_is_defaulted = true;$/;"	m	struct:Kokkos::Impl::ScheduleTrait::base_traits	typeref:typename:auto
schedule_type_is_defaulted	traits/Kokkos_ScheduleTrait.hpp	/^    static constexpr bool schedule_type_is_defaulted = false;$/;"	m	struct:Kokkos::Impl::ScheduleTrait::mixin_matching_trait	typeref:typename:bool
scheduler	Cuda/Kokkos_Cuda_Task.hpp	/^  KOKKOS_INLINE_FUNCTION Scheduler const& scheduler() const noexcept {$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:KOKKOS_INLINE_FUNCTION Scheduler const &
scheduler	Cuda/Kokkos_Cuda_Task.hpp	/^  KOKKOS_INLINE_FUNCTION Scheduler& scheduler() noexcept { return m_scheduler; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:KOKKOS_INLINE_FUNCTION Scheduler &
scheduler	impl/Kokkos_TaskPolicyData.hpp	/^  Scheduler& scheduler() & { return m_scheduler; }$/;"	f	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION Scheduler &
scheduler	impl/Kokkos_TaskTeamMember.hpp	/^  Scheduler const& scheduler() const noexcept { return m_scheduler; }$/;"	f	class:Kokkos::Impl::TaskTeamMemberAdapter	typeref:typename:KOKKOS_INLINE_FUNCTION Scheduler const &
scheduler	impl/Kokkos_TaskTeamMember.hpp	/^  Scheduler& scheduler() noexcept { return m_scheduler; }$/;"	f	class:Kokkos::Impl::TaskTeamMemberAdapter	typeref:typename:KOKKOS_INLINE_FUNCTION Scheduler &
scheduler_info_type	impl/Kokkos_MultipleTaskQueue.hpp	/^    using scheduler_info_type = SchedulerInfo;$/;"	t	struct:Kokkos::Impl::MultipleTaskQueue::SchedulerInfo	typeref:typename:SchedulerInfo
scheduler_type	Kokkos_Future.hpp	/^  using scheduler_type  = Scheduler;$/;"	t	class:Kokkos::BasicFuture	typeref:typename:Scheduler
scheduler_type	Kokkos_TaskScheduler.hpp	/^  using scheduler_type      = BasicTaskScheduler;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:BasicTaskScheduler
scheduler_type	Kokkos_TaskScheduler.hpp	/^  using scheduler_type = BasicTaskScheduler<ExecSpace, QueueType>;$/;"	t	function:Kokkos::wait	typeref:typename:BasicTaskScheduler<ExecSpace,QueueType>
scheduler_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using scheduler_type  = SimpleTaskScheduler;  \/\/ tag as scheduler concept$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:SimpleTaskScheduler
scheduler_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using scheduler_type = SimpleTaskScheduler<ExecSpace, QueueType>;$/;"	t	function:Kokkos::wait	typeref:typename:SimpleTaskScheduler<ExecSpace,QueueType>
scheduler_type	impl/Kokkos_TaskNode.hpp	/^  using scheduler_type          = Scheduler;$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:Scheduler
scheduling_info	impl/Kokkos_TaskNode.hpp	/^  task_scheduling_info_type const& scheduling_info() const& {$/;"	f	class:Kokkos::Impl::SchedulingInfoStorage	typeref:typename:KOKKOS_INLINE_FUNCTION task_scheduling_info_type const &
scheduling_info	impl/Kokkos_TaskNode.hpp	/^  task_scheduling_info_type& scheduling_info() & {$/;"	f	class:Kokkos::Impl::SchedulingInfoStorage	typeref:typename:KOKKOS_INLINE_FUNCTION task_scheduling_info_type &
scheduling_info	impl/Kokkos_TaskNode.hpp	/^  task_scheduling_info_type&& scheduling_info() && {$/;"	f	class:Kokkos::Impl::SchedulingInfoStorage	typeref:typename:KOKKOS_INLINE_FUNCTION task_scheduling_info_type &&
scheduling_info_as	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION SchedulingInfo const& scheduling_info_as() const {$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION SchedulingInfo const &
scheduling_info_as	impl/Kokkos_TaskNode.hpp	/^  KOKKOS_INLINE_FUNCTION SchedulingInfo& scheduling_info_as() {$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION SchedulingInfo &
scheduling_info_storage_base	impl/Kokkos_TaskNode.hpp	/^  using scheduling_info_storage_base = base_t;$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:base_t
scheduling_info_type	impl/Kokkos_TaskNode.hpp	/^  using scheduling_info_type =$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:scheduler_type::task_scheduling_info_type
scopeguard_correct_usage	Kokkos_Core.hpp	/^inline std::string scopeguard_correct_usage() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::string
scopeguard_create_after_finalize_warning	Kokkos_Core.hpp	/^inline std::string scopeguard_create_after_finalize_warning() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::string
scopeguard_create_while_initialized_warning	Kokkos_Core.hpp	/^inline std::string scopeguard_create_while_initialized_warning() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::string
scopeguard_destruct_after_finalize_warning	Kokkos_Core.hpp	/^inline std::string scopeguard_destruct_after_finalize_warning() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:std::string
scratch_assign	impl/Kokkos_HostThreadTeam.hpp	/^  void scratch_assign(void* const alloc_ptr, size_t const alloc_size,$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:void
scratch_buffer	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* scratch_buffer() const noexcept { return m_scratch; }$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
scratch_bytes	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr size_t scratch_bytes() const {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
scratch_flags	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type *CudaInternal::scratch_flags(const std::size_t size) const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:Cuda::size_type *
scratch_flags	HIP/Kokkos_HIP_Instance.cpp	/^Kokkos::Experimental::HIP::size_type *HIPInternal::scratch_flags($/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:Kokkos::Experimental::HIP::size_type *
scratch_flags	SYCL/Kokkos_SYCL_Instance.cpp	/^sycl::device_ptr<void> SYCLInternal::scratch_flags(const std::size_t size) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:sycl::device_ptr<void>
scratch_functor	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type *CudaInternal::scratch_functor(const std::size_t size) const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:Cuda::size_type *
scratch_memory	Threads/Kokkos_ThreadsExec.hpp	/^  KOKKOS_INLINE_FUNCTION void *scratch_memory() const {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:KOKKOS_INLINE_FUNCTION void *
scratch_memory_space	Cuda/Kokkos_Cuda_Team.hpp	/^  using scratch_memory_space = execution_space::scratch_memory_space;$/;"	t	class:Kokkos::Impl::CudaTeamMember	typeref:typename:execution_space::scratch_memory_space
scratch_memory_space	HIP/Kokkos_HIP_Team.hpp	/^  using scratch_memory_space = execution_space::scratch_memory_space;$/;"	t	class:Kokkos::Impl::HIPTeamMember	typeref:typename:execution_space::scratch_memory_space
scratch_memory_space	Kokkos_Cuda.hpp	/^  using scratch_memory_space = ScratchMemorySpace<Cuda>;$/;"	t	class:Kokkos::Cuda	typeref:typename:ScratchMemorySpace<Cuda>
scratch_memory_space	Kokkos_HIP_Space.hpp	/^  using scratch_memory_space = ScratchMemorySpace<HIP>;$/;"	t	class:Kokkos::Experimental::HIP	typeref:typename:ScratchMemorySpace<HIP>
scratch_memory_space	Kokkos_HPX.hpp	/^  using scratch_memory_space = ScratchMemorySpace<HPX>;$/;"	t	class:Kokkos::Experimental::HPX	typeref:typename:ScratchMemorySpace<HPX>
scratch_memory_space	Kokkos_HPX.hpp	/^  using scratch_memory_space =$/;"	t	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:Kokkos::ScratchMemorySpace<Kokkos::Experimental::HPX>
scratch_memory_space	Kokkos_OpenMP.hpp	/^  using scratch_memory_space = ScratchMemorySpace<OpenMP>;$/;"	t	class:Kokkos::OpenMP	typeref:typename:ScratchMemorySpace<OpenMP>
scratch_memory_space	Kokkos_OpenMPTarget.hpp	/^  using scratch_memory_space = ScratchMemorySpace<OpenMPTarget>;$/;"	t	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:ScratchMemorySpace<OpenMPTarget>
scratch_memory_space	Kokkos_SYCL.hpp	/^  using scratch_memory_space = ScratchMemorySpace<SYCL>;$/;"	t	class:Kokkos::Experimental::SYCL	typeref:typename:ScratchMemorySpace<SYCL>
scratch_memory_space	Kokkos_Serial.hpp	/^  using scratch_memory_space = ScratchMemorySpace<Kokkos::Serial>;$/;"	t	class:Kokkos::Serial	typeref:typename:ScratchMemorySpace<Kokkos::Serial>
scratch_memory_space	Kokkos_Threads.hpp	/^  using scratch_memory_space = ScratchMemorySpace<Threads>;$/;"	t	class:Kokkos::Threads	typeref:typename:ScratchMemorySpace<Threads>
scratch_memory_space	OpenACC/Kokkos_OpenACC.hpp	/^  using scratch_memory_space = ScratchMemorySpace<OpenACC>;$/;"	t	class:Kokkos::Experimental::OpenACC	typeref:typename:ScratchMemorySpace<OpenACC>
scratch_memory_space	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using scratch_memory_space = execution_space::scratch_memory_space;$/;"	t	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:execution_space::scratch_memory_space
scratch_memory_space	SYCL/Kokkos_SYCL_Team.hpp	/^  using scratch_memory_space = execution_space::scratch_memory_space;$/;"	t	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:execution_space::scratch_memory_space
scratch_memory_space	Threads/Kokkos_ThreadsTeam.hpp	/^  using scratch_memory_space = execution_space::scratch_memory_space;$/;"	t	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:execution_space::scratch_memory_space
scratch_memory_space	impl/Kokkos_HostThreadTeam.hpp	/^  using scratch_memory_space    = typename HostExecSpace::scratch_memory_space;$/;"	t	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:HostExecSpace::scratch_memory_space
scratch_ptr	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  static void* scratch_ptr;$/;"	m	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void *
scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_t scratch_size(int level, int team_size_ = -1) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_t scratch_size(int level, int team_size_ = -1) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
scratch_size	Kokkos_HPX.hpp	/^  size_t scratch_size(const int &level, int team_size_ = -1) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
scratch_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline size_t scratch_size(const int& level, int team_size_ = -1) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
scratch_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline size_t scratch_size(const int& level, int team_size_ = -1) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_t scratch_size(int level, int team_size_ = -1) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
scratch_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline size_t scratch_size(const int& level, int = 0) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
scratch_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline size_t scratch_size(const int& level, int team_size_ = -1) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
scratch_size	impl/Kokkos_HostThreadTeam.hpp	/^  static size_t scratch_size(size_t pool_reduce_size, size_t team_reduce_size,$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
scratch_size_max	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline static int scratch_size_max(int level) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
scratch_size_max	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  static int scratch_size_max(int level) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
scratch_size_max	Kokkos_HPX.hpp	/^  inline static int scratch_size_max(int level) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
scratch_size_max	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline static int scratch_size_max(int level) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
scratch_size_max	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline static int scratch_size_max(int level) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
scratch_size_max	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  static int scratch_size_max(int level) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
scratch_size_max	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline static int scratch_size_max(int level) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
scratch_size_max	Threads/Kokkos_ThreadsTeam.hpp	/^  inline static int scratch_size_max(int level) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
scratch_space	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type *CudaInternal::scratch_space(const std::size_t size) const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:Cuda::size_type *
scratch_space	HIP/Kokkos_HIP_Instance.cpp	/^Kokkos::Experimental::HIP::size_type *HIPInternal::scratch_space($/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:Kokkos::Experimental::HIP::size_type *
scratch_space	SYCL/Kokkos_SYCL_Instance.cpp	/^sycl::device_ptr<void> SYCLInternal::scratch_space(const std::size_t size) {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:sycl::device_ptr<void>
scratch_unified	Cuda/Kokkos_Cuda_Instance.cpp	/^Cuda::size_type *CudaInternal::scratch_unified(const std::size_t size) const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:Cuda::size_type *
scratch_view	Kokkos_UniqueToken.hpp	/^  using scratch_view =$/;"	t	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:Kokkos::View<size_type,typename exec_space::scratch_memory_space,Kokkos::MemoryUnmanaged>
secID	Kokkos_Profiling_ProfileSection.hpp	/^  uint32_t secID;$/;"	m	class:Kokkos::Profiling::ProfilingSection	typeref:typename:uint32_t
secName	Kokkos_Profiling_ProfileSection.hpp	/^  const std::string secName;$/;"	m	class:Kokkos::Profiling::ProfilingSection	typeref:typename:const std::string
second	Kokkos_Pair.hpp	/^  enum { second = 0 };$/;"	e	enum:Kokkos::pair::__anon9cf731380103
second	Kokkos_Pair.hpp	/^  second_type second;$/;"	m	struct:Kokkos::pair	typeref:typename:second_type
second_type	Kokkos_Pair.hpp	/^  using second_type = T2&;$/;"	t	struct:Kokkos::pair	typeref:typename:T2 &
second_type	Kokkos_Pair.hpp	/^  using second_type = T2;$/;"	t	struct:Kokkos::pair	typeref:typename:T2
second_type	Kokkos_Pair.hpp	/^  using second_type = void;$/;"	t	struct:Kokkos::pair	typeref:typename:void
seconds	Kokkos_Timer.hpp	/^  inline double seconds() const {$/;"	f	class:Kokkos::Timer	typeref:typename:double
select	impl/Kokkos_Traits.hpp	/^  static KOKKOS_INLINE_FUNCTION const_value_type& select(const T&,$/;"	f	struct:Kokkos::Impl::if_c	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type &
select	impl/Kokkos_Traits.hpp	/^  static KOKKOS_INLINE_FUNCTION const_value_type& select(const_value_type& v) {$/;"	f	struct:Kokkos::Impl::if_c	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type &
select	impl/Kokkos_Traits.hpp	/^  static KOKKOS_INLINE_FUNCTION const_value_type& select(const_value_type& v,$/;"	f	struct:Kokkos::Impl::if_c	typeref:typename:KOKKOS_INLINE_FUNCTION const_value_type &
select	impl/Kokkos_Traits.hpp	/^  static KOKKOS_INLINE_FUNCTION value_type& select(const T&) {$/;"	f	struct:Kokkos::Impl::if_c	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
select	impl/Kokkos_Traits.hpp	/^  static KOKKOS_INLINE_FUNCTION value_type& select(const T&, value_type& v) {$/;"	f	struct:Kokkos::Impl::if_c	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
select	impl/Kokkos_Traits.hpp	/^  static KOKKOS_INLINE_FUNCTION value_type& select(value_type& v) { return v; }$/;"	f	struct:Kokkos::Impl::if_c	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
select	impl/Kokkos_Traits.hpp	/^  static KOKKOS_INLINE_FUNCTION value_type& select(value_type& v, const F&) {$/;"	f	struct:Kokkos::Impl::if_c	typeref:typename:KOKKOS_INLINE_FUNCTION value_type &
self	Cuda/Kokkos_Cuda_Vectorization.hpp	/^  __device__ KOKKOS_IMPL_FORCEINLINE const Derived& self() const noexcept {$/;"	f	struct:Kokkos::Impl::in_place_shfl_op	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE const Derived &
self	HIP/Kokkos_HIP_Vectorization.hpp	/^  __device__ KOKKOS_IMPL_FORCEINLINE const Derived& self() const noexcept {$/;"	f	struct:Kokkos::Experimental::Impl::in_place_shfl_op	typeref:typename:__device__ KOKKOS_IMPL_FORCEINLINE const Derived &
self	impl/Kokkos_SharedAlloc.hpp	/^  derived_t const& self() const { return *static_cast<derived_t const*>(this); }$/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:derived_t const &
self	impl/Kokkos_SharedAlloc.hpp	/^  derived_t& self() { return *static_cast<derived_t*>(this); }$/;"	f	class:Kokkos::Impl::SharedAllocationRecordCommon	typeref:typename:derived_t &
self_type	Kokkos_Crs.hpp	/^  using self_type       = GetCrsTransposeCounts<InCrs, OutCounts>;$/;"	t	class:Kokkos::Impl::GetCrsTransposeCounts	typeref:typename:GetCrsTransposeCounts<InCrs,OutCounts>
self_type	Kokkos_Crs.hpp	/^  using self_type    = CountAndFill<CrsType, Functor>;$/;"	t	struct:Kokkos::CountAndFill	typeref:typename:CountAndFill<CrsType,Functor>
self_type	Kokkos_Crs.hpp	/^  using self_type = CrsRowMapFromCounts<InCounts, OutRowMap>;$/;"	t	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:CrsRowMapFromCounts<InCounts,OutRowMap>
self_type	Kokkos_Crs.hpp	/^  using self_type = FillCrsTransposeEntries<InCrs, OutCrs>;$/;"	t	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:FillCrsTransposeEntries<InCrs,OutCrs>
self_type	Kokkos_WorkGraphPolicy.hpp	/^  using self_type        = WorkGraphPolicy<Properties...>;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:WorkGraphPolicy<Properties...>
self_value	impl/Kokkos_Traits.hpp	/^  enum { self_value = Condition<S>::value };$/;"	e	enum:Kokkos::Impl::has_condition::__anon1766c6640503
self_value	impl/Kokkos_Traits.hpp	/^  enum { self_value = std::is_same<T, S>::value };$/;"	e	enum:Kokkos::Impl::has_type::__anon1766c6640203
sentinel	impl/Kokkos_hwloc.cpp	/^bool sentinel() {$/;"	f	namespace:Kokkos::hwloc::__anonec54cfc50110	typeref:typename:bool
set	Kokkos_ExecPolicy.hpp	/^  inline void set() {}$/;"	f	class:Kokkos::RangePolicy	typeref:typename:void
set	Kokkos_ExecPolicy.hpp	/^  inline void set(Args...) {$/;"	f	class:Kokkos::RangePolicy	typeref:typename:void
set	Kokkos_ExecPolicy.hpp	/^  inline void set(const ChunkSize& chunksize, Args... args) {$/;"	f	class:Kokkos::RangePolicy	typeref:typename:void
set	impl/Kokkos_ConcurrentBitset.hpp	/^  KOKKOS_INLINE_FUNCTION static int set($/;"	f	struct:Kokkos::Impl::concurrent_bitset	typeref:typename:KOKKOS_INLINE_FUNCTION int
set	impl/Kokkos_Profiling_C_Interface.h	/^  struct Kokkos_Tools_ValueSet set;$/;"	m	union:Kokkos_Tools_VariableInfo_SetOrRange	typeref:struct:Kokkos_Tools_ValueSet
set	impl/Kokkos_ViewMapping.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION bool set(unsigned domain_rank,$/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
set	impl/Kokkos_ViewMapping.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION bool set(unsigned, unsigned,$/;"	f	struct:Kokkos::Impl::SubviewExtents	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
set_allocate_data_callback	impl/Kokkos_Profiling.cpp	/^void set_allocate_data_callback(allocateDataFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_auto_chunk_size	Kokkos_ExecPolicy.hpp	/^  inline void set_auto_chunk_size() {$/;"	f	class:Kokkos::RangePolicy	typeref:typename:void
set_auto_chunk_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline void set_auto_chunk_size() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
set_auto_chunk_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline void set_auto_chunk_size() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
set_auto_chunk_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline void set_auto_chunk_size() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:void
set_begin_context_callback	impl/Kokkos_Profiling.cpp	/^void set_begin_context_callback(Experimental::contextBeginFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_begin_deep_copy_callback	impl/Kokkos_Profiling.cpp	/^void set_begin_deep_copy_callback(beginDeepCopyFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_begin_fence_callback	impl/Kokkos_Profiling.cpp	/^void set_begin_fence_callback(beginFenceFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_begin_parallel_for_callback	impl/Kokkos_Profiling.cpp	/^void set_begin_parallel_for_callback(beginFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_begin_parallel_reduce_callback	impl/Kokkos_Profiling.cpp	/^void set_begin_parallel_reduce_callback(beginFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_begin_parallel_scan_callback	impl/Kokkos_Profiling.cpp	/^void set_begin_parallel_scan_callback(beginFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_callbacks	impl/Kokkos_Profiling.cpp	/^void set_callbacks(Kokkos::Tools::Experimental::EventSet new_events) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_chunk_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline TeamPolicyInternal& set_chunk_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_chunk_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  TeamPolicyInternal& set_chunk_size(typename traits::index_type chunk_size_) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_chunk_size	Kokkos_ExecPolicy.hpp	/^  inline RangePolicy& set_chunk_size(int chunk_size) {$/;"	f	class:Kokkos::RangePolicy	typeref:typename:RangePolicy &
set_chunk_size	Kokkos_ExecPolicy.hpp	/^  inline TeamPolicy& set_chunk_size(int chunk) {$/;"	f	class:Kokkos::TeamPolicy	typeref:typename:TeamPolicy &
set_chunk_size	Kokkos_HPX.hpp	/^  inline TeamPolicyInternal &set_chunk_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_chunk_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline TeamPolicyInternal& set_chunk_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_chunk_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline TeamPolicyInternal& set_chunk_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_chunk_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  TeamPolicyInternal& set_chunk_size(typename traits::index_type chunk_size_) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_chunk_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline TeamPolicyInternal& set_chunk_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_chunk_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline TeamPolicyInternal& set_chunk_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_create_profile_section_callback	impl/Kokkos_Profiling.cpp	/^void set_create_profile_section_callback($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_cuda_graph_node_ptr	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  void set_cuda_graph_node_ptr(cudaGraphNode_t* arg_node_ptr) {$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:void
set_cuda_graph_ptr	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  void set_cuda_graph_ptr(cudaGraph_t* arg_graph_ptr) {$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:void
set_cuda_task_base_apply_function_pointer	Cuda/Kokkos_Cuda_Task.hpp	/^__global__ void set_cuda_task_base_apply_function_pointer($/;"	f	namespace:Kokkos::Impl::__anonb05892e70110	typeref:typename:__global__ void
set_deallocate_data_callback	impl/Kokkos_Profiling.cpp	/^void set_deallocate_data_callback(deallocateDataFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_declare_input_type_callback	impl/Kokkos_Profiling.cpp	/^void set_declare_input_type_callback($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_declare_metadata_callback	impl/Kokkos_Profiling.cpp	/^void set_declare_metadata_callback(declareMetadataFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_declare_optimization_goal_callback	impl/Kokkos_Profiling.cpp	/^void set_declare_optimization_goal_callback($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_declare_output_type_callback	impl/Kokkos_Profiling.cpp	/^void set_declare_output_type_callback($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_destroy_profile_section_callback	impl/Kokkos_Profiling.cpp	/^void set_destroy_profile_section_callback($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_dual_view_modify_callback	impl/Kokkos_Profiling.cpp	/^void set_dual_view_modify_callback(dualViewModifyFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_dual_view_sync_callback	impl/Kokkos_Profiling.cpp	/^void set_dual_view_sync_callback(dualViewSyncFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_end_context_callback	impl/Kokkos_Profiling.cpp	/^void set_end_context_callback(Experimental::contextEndFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_end_deep_copy_callback	impl/Kokkos_Profiling.cpp	/^void set_end_deep_copy_callback(endDeepCopyFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_end_fence_callback	impl/Kokkos_Profiling.cpp	/^void set_end_fence_callback(endFenceFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_end_parallel_for_callback	impl/Kokkos_Profiling.cpp	/^void set_end_parallel_for_callback(endFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_end_parallel_reduce_callback	impl/Kokkos_Profiling.cpp	/^void set_end_parallel_reduce_callback(endFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_end_parallel_scan_callback	impl/Kokkos_Profiling.cpp	/^void set_end_parallel_scan_callback(endFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_finalize_callback	impl/Kokkos_Profiling.cpp	/^void set_finalize_callback(finalizeFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_init_callback	impl/Kokkos_Profiling.cpp	/^void set_init_callback(initFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_input_values	impl/Kokkos_Profiling.cpp	/^void set_input_values(size_t contextId, size_t count, VariableValue* values) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_kernel	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  void set_kernel(default_aggregate_kernel_impl_t& arg_kernel) {$/;"	f	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:void
set_kernel	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  void set_kernel(default_kernel_impl_t& arg_kernel) {$/;"	f	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:void
set_kokkos_terminate_handler	impl/Kokkos_Stacktrace.cpp	/^void set_kokkos_terminate_handler(std::function<void()> user_post) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
set_league_shmem	Threads/Kokkos_ThreadsTeam.hpp	/^  void set_league_shmem(const int arg_league_rank, const int arg_league_size,$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:void
set_parse_args_callback	impl/Kokkos_Profiling.cpp	/^void set_parse_args_callback(parseArgsFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_policy_tile	Kokkos_Tuners.hpp	/^  void set_policy_tile(Policy& policy, const Tuple& tuple,$/;"	f	struct:Kokkos::Tools::Experimental::MDRangeTuner	typeref:typename:void
set_pop_region_callback	impl/Kokkos_Profiling.cpp	/^void set_pop_region_callback(popFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_predecessor	impl/Kokkos_Default_GraphNode_Impl.hpp	/^  void set_predecessor($/;"	f	struct:Kokkos::Impl::GraphNodeBackendSpecificDetails	typeref:typename:void
set_predecessor	impl/Kokkos_TaskNode.hpp	/^  void set_predecessor(task_base_type& predecessor) {$/;"	f	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:KOKKOS_INLINE_FUNCTION void
set_print_help_callback	impl/Kokkos_Profiling.cpp	/^void set_print_help_callback(printHelpFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_priority	impl/Kokkos_TaskNode.hpp	/^  void set_priority(TaskPriority priority) noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION void
set_priority	impl/Kokkos_TaskNode.hpp	/^  void set_priority(TaskPriority priority) volatile noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION void
set_profile_event_callback	impl/Kokkos_Profiling.cpp	/^void set_profile_event_callback(profileEventFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_provide_tool_programming_interface_callback	impl/Kokkos_Profiling.cpp	/^void set_provide_tool_programming_interface_callback($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_push_region_callback	impl/Kokkos_Profiling.cpp	/^void set_push_region_callback(pushFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_request_output_values_callback	impl/Kokkos_Profiling.cpp	/^void set_request_output_values_callback($/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_request_tool_settings_callback	impl/Kokkos_Profiling.cpp	/^void set_request_tool_settings_callback(requestToolSettingsFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_respawn_flag	impl/Kokkos_TaskNode.hpp	/^  void set_respawn_flag(bool value = true) volatile { m_is_respawning = value; }$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION void
set_respawn_flag	impl/Kokkos_TaskNode.hpp	/^  void set_respawn_flag(bool value = true) { m_is_respawning = value; }$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION void
set_scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline TeamPolicyInternal& set_scratch_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline TeamPolicyInternal& set_scratch_size(const int& level,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  TeamPolicyInternal& set_scratch_size(int level, PerTeamValue const& per_team,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  TeamPolicyInternal& set_scratch_size(int level,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	Kokkos_ExecPolicy.hpp	/^  inline TeamPolicy& set_scratch_size(const int& level,$/;"	f	class:Kokkos::TeamPolicy	typeref:typename:TeamPolicy &
set_scratch_size	Kokkos_HPX.hpp	/^  inline TeamPolicyInternal &set_scratch_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	Kokkos_HPX.hpp	/^  inline TeamPolicyInternal &set_scratch_size(const int &level,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline TeamPolicyInternal& set_scratch_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline TeamPolicyInternal& set_scratch_size(const int& level,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline TeamPolicyInternal& set_scratch_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline TeamPolicyInternal& set_scratch_size(const int& level,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  TeamPolicyInternal& set_scratch_size(int level, PerTeamValue const& per_team,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  TeamPolicyInternal& set_scratch_size(int level,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline TeamPolicyInternal& set_scratch_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline TeamPolicyInternal& set_scratch_size(const int& level,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline TeamPolicyInternal& set_scratch_size($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_scratch_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline TeamPolicyInternal& set_scratch_size(const int& level,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:TeamPolicyInternal &
set_start_profile_section_callback	impl/Kokkos_Profiling.cpp	/^void set_start_profile_section_callback(startProfileSectionFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_stop_profile_section_callback	impl/Kokkos_Profiling.cpp	/^void set_stop_profile_section_callback(stopProfileSectionFunction callback) {$/;"	f	namespace:Kokkos::Tools::Experimental	typeref:typename:void
set_team_shared	Threads/Kokkos_ThreadsTeam.hpp	/^  inline void set_team_shared() {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:void
set_team_thread_mode	Kokkos_ScratchSpace.hpp	/^  const ScratchMemorySpace& set_team_thread_mode(const int& level,$/;"	f	class:Kokkos::ScratchMemorySpace	typeref:typename:KOKKOS_INLINE_FUNCTION const ScratchMemorySpace &
set_work_partition	impl/Kokkos_HostThreadTeam.hpp	/^  void set_work_partition(int64_t const length, int const chunk) noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:void
set_work_range	Threads/Kokkos_ThreadsExec.hpp	/^  inline void set_work_range(const long &begin, const long &end,$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
sg	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  auto sg             = item.get_sub_group();$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:auto
sg_init	Kokkos_Core.hpp	/^  bool sg_init;$/;"	m	class:Kokkos::ScopeGuard	typeref:typename:bool
shared_access	Kokkos_LogicalSpaces.hpp	/^  struct shared_access {};$/;"	s	struct:Kokkos::Experimental::LogicalSpaceSharesAccess
shared_allocation_record	Cuda/Kokkos_Cuda_Alloc.hpp	/^SharedAllocationRecord* shared_allocation_record($/;"	f	namespace:Kokkos::Impl	typeref:typename:SharedAllocationRecord *
shared_allocation_tracking_disable	Kokkos_View.hpp	/^inline void shared_allocation_tracking_disable() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
shared_allocation_tracking_enable	Kokkos_View.hpp	/^inline void shared_allocation_tracking_enable() {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
shfl	Cuda/Kokkos_Cuda_Vectorization.hpp	/^__device__ inline T shfl(const T& val, const int& srcLane, const int& width,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
shfl	HIP/Kokkos_HIP_Vectorization.hpp	/^__device__ inline T shfl(const T& val, const int& srcLane, const int& width) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:__device__ T
shfl_all_mask	Cuda/Kokkos_Cuda_Vectorization.hpp	/^constexpr unsigned shfl_all_mask = 0xffffffffu;$/;"	v	namespace:Kokkos::Impl	typeref:typename:unsigned
shfl_down	Cuda/Kokkos_Cuda_Vectorization.hpp	/^__device__ inline T shfl_down(const T& val, int delta, int width,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
shfl_down	HIP/Kokkos_HIP_Vectorization.hpp	/^__device__ inline T shfl_down(const T& val, int delta, int width) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:__device__ T
shfl_type	Cuda/Kokkos_Cuda_Vectorization.hpp	/^    using shfl_type = int;$/;"	t	function:Kokkos::Impl::in_place_shfl_op::operator ()	typeref:typename:int
shfl_type	HIP/Kokkos_HIP_Vectorization.hpp	/^    using shfl_type = int;$/;"	t	struct:Kokkos::Experimental::Impl::in_place_shfl_op	typeref:typename:int
shfl_up	Cuda/Kokkos_Cuda_Vectorization.hpp	/^__device__ inline T shfl_up(const T& val, int delta, int width,$/;"	f	namespace:Kokkos	typeref:typename:__device__ T
shfl_up	HIP/Kokkos_HIP_Vectorization.hpp	/^__device__ inline T shfl_up(const T& val, int delta, int width) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:__device__ T
shfl_warp_broadcast	Cuda/Kokkos_Cuda_Task.hpp	/^KOKKOS_INLINE_FUNCTION ValueType shfl_warp_broadcast(ValueType& val,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION ValueType
shmem_size	Kokkos_UniqueToken.hpp	/^  static std::size_t shmem_size() { return scratch_view::shmem_size(); }$/;"	f	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:std::size_t
shmem_size	Kokkos_View.hpp	/^  shmem_size(const size_t arg_N0 = KOKKOS_INVALID_INDEX,$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
shmem_size	Kokkos_View.hpp	/^  shmem_size(typename traits::array_layout const& arg_layout) {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
show_extra_execution_space_erroneously_given_to_execution_policy	traits/Kokkos_ExecutionSpaceTrait.hpp	/^struct show_extra_execution_space_erroneously_given_to_execution_policy<void> {$/;"	s	namespace:Kokkos::Impl
show_extra_index_type_erroneously_given_to_execution_policy	traits/Kokkos_IndexTypeTrait.hpp	/^struct show_extra_index_type_erroneously_given_to_execution_policy<void> {};$/;"	s	namespace:Kokkos::Impl
show_extra_iteration_pattern_erroneously_given_to_execution_policy	traits/Kokkos_IterationPatternTrait.hpp	/^struct show_extra_iteration_pattern_erroneously_given_to_execution_policy<$/;"	s	namespace:Kokkos::Impl
show_extra_schedule_type_erroneously_given_to_execution_policy	traits/Kokkos_ScheduleTrait.hpp	/^struct show_extra_schedule_type_erroneously_given_to_execution_policy<void> {};$/;"	s	namespace:Kokkos::Impl
show_extra_work_tag_erroneously_given_to_execution_policy	traits/Kokkos_WorkTagTrait.hpp	/^struct show_extra_work_tag_erroneously_given_to_execution_policy<void> {};$/;"	s	namespace:Kokkos::Impl
show_warnings	impl/Kokkos_Core.cpp	/^bool Kokkos::show_warnings() noexcept { return g_show_warnings; }$/;"	f	class:Kokkos	typeref:typename:bool
shuffle_as_t	Cuda/Kokkos_Cuda_Vectorization.hpp	/^    using shuffle_as_t = int;$/;"	t	function:Kokkos::Impl::in_place_shfl_op::operator ()	typeref:typename:int
shuffle_as_t	HIP/Kokkos_HIP_Vectorization.hpp	/^    using shuffle_as_t = int;$/;"	t	function:Kokkos::Experimental::Impl::in_place_shfl_op::operator ()	typeref:typename:int
signaling_NaN_helper	Kokkos_NumericTraits.hpp	/^template <> struct signaling_NaN_helper<double> { static constexpr double value = __builtin_nans/;"	s	namespace:Kokkos::Experimental::Impl
signaling_NaN_helper	Kokkos_NumericTraits.hpp	/^template <> struct signaling_NaN_helper<float> { static constexpr float value = __builtin_nansf(/;"	s	namespace:Kokkos::Experimental::Impl
signaling_NaN_helper	Kokkos_NumericTraits.hpp	/^template <> struct signaling_NaN_helper<long double> { static constexpr long double value = __bu/;"	s	namespace:Kokkos::Experimental::Impl
signaling_NaN_helper	Kokkos_NumericTraits.hpp	/^template <class> struct signaling_NaN_helper {};$/;"	s	namespace:Kokkos::Experimental::Impl
signbit	impl/Kokkos_QuadPrecisionMath.hpp	/^inline bool signbit(__float128 x) { return ::signbitq(x); }$/;"	f	namespace:Kokkos	typeref:typename:bool
sin	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> sin($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
sin	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 sin(__float128 x) { return ::sinq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
single	Cuda/Kokkos_Cuda_Task.hpp	/^KOKKOS_INLINE_FUNCTION void single($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
single	Cuda/Kokkos_Cuda_Team.hpp	/^KOKKOS_INLINE_FUNCTION void single($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
single	HIP/Kokkos_HIP_Team.hpp	/^KOKKOS_INLINE_FUNCTION void single($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
single	Kokkos_HPX.hpp	/^KOKKOS_INLINE_FUNCTION void single($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
single	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^KOKKOS_INLINE_FUNCTION void single($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
single	SYCL/Kokkos_SYCL_Team.hpp	/^KOKKOS_INLINE_FUNCTION void single($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
single	Threads/Kokkos_ThreadsTeam.hpp	/^KOKKOS_INLINE_FUNCTION void single($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
single	impl/Kokkos_HostThreadTeam.hpp	/^    single(const Impl::ThreadSingleStruct<Member>& single,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Impl::is_host_thread_team_member<Member>::value>
single	impl/Kokkos_HostThreadTeam.hpp	/^    single(const Impl::VectorSingleStruct<Member>&, const FunctorType& functor,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Impl::is_host_thread_team_member<Member>::value>
single	impl/Kokkos_HostThreadTeam.hpp	/^    single(const Impl::VectorSingleStruct<Member>&,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Impl::is_host_thread_team_member<Member>::value>
singleton	Cuda/Kokkos_Cuda_Instance.cpp	/^CudaInternal &CudaInternal::singleton() {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:CudaInternal &
singleton	Cuda/Kokkos_Cuda_Instance.cpp	/^const CudaInternalDevices &CudaInternalDevices::singleton() {$/;"	f	class:Kokkos::Impl::__anon02417da40510::CudaInternalDevices	typeref:typename:const CudaInternalDevices &
singleton	HIP/Kokkos_HIP_Instance.cpp	/^HIPInternal &HIPInternal::singleton() {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:HIPInternal &
singleton	HIP/Kokkos_HIP_Instance.cpp	/^const HIPInternalDevices &HIPInternalDevices::singleton() {$/;"	f	class:Kokkos::Experimental::__anon18c94a8c0110::HIPInternalDevices	typeref:typename:const HIPInternalDevices &
singleton	OpenACC/Kokkos_OpenACC_Instance.cpp	/^Kokkos::Experimental::Impl::OpenACCInternal::singleton() {$/;"	f	class:Kokkos::Experimental::Impl::OpenACCInternal	typeref:typename:Kokkos::Experimental::Impl::OpenACCInternal *
singleton	OpenMP/Kokkos_OpenMP_Instance.cpp	/^OpenMPInternal &OpenMPInternal::singleton() {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:OpenMPInternal &
singleton	OpenMP/Kokkos_OpenMP_Task.cpp	/^HostThreadTeamData& HostThreadTeamDataSingleton::singleton() {$/;"	f	class:Kokkos::Impl::HostThreadTeamDataSingleton	typeref:typename:HostThreadTeamData &
singleton	SYCL/Kokkos_SYCL_Instance.cpp	/^SYCLInternal& SYCLInternal::singleton() {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:SYCLInternal &
singleton	Serial/Kokkos_Serial.cpp	/^SerialInternal& SerialInternal::singleton() {$/;"	f	class:Kokkos::Impl::SerialInternal	typeref:typename:SerialInternal &
sinh	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> sinh($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
sinh	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 sinh(__float128 x) { return ::sinhq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
size	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  size_type size() const noexcept { return m_locks.extent(0); }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
size	HIP/Kokkos_HIP_UniqueToken.hpp	/^  size_type size() const noexcept { return m_locks.extent(0); }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
size	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION static constexpr size_type size() { return 0; }$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
size	Kokkos_Array.hpp	/^  KOKKOS_INLINE_FUNCTION static constexpr size_type size() { return N; }$/;"	f	struct:Kokkos::Array	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
size	Kokkos_HPX.hpp	/^  int size() const noexcept { return HPX::impl_max_hardware_threads(); }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
size	Kokkos_HPX.hpp	/^  int size() const noexcept { return m_count; }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
size	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t size() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
size	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  int size() const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
size	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  size_type size() const noexcept { return m_count; }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
size	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  size_type size() const noexcept { return m_locks.extent(0); }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION size_type
size	Serial/Kokkos_Serial_UniqueToken.hpp	/^  int size() const noexcept { return 1; }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
size	Threads/Kokkos_Threads_UniqueToken.hpp	/^  int size() const noexcept { return m_count; }$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
size	Threads/Kokkos_Threads_UniqueToken.hpp	/^  int size() const noexcept {$/;"	f	class:Kokkos::Experimental::UniqueToken	typeref:typename:KOKKOS_INLINE_FUNCTION int
size	impl/Kokkos_ChaseLev.hpp	/^  constexpr size_type size() const noexcept { return m_size; }$/;"	f	struct:Kokkos::Impl::non_owning_variable_size_circular_buffer	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION size_type
size	impl/Kokkos_ChaseLev.hpp	/^  static constexpr size_type size() noexcept {$/;"	f	struct:Kokkos::Impl::fixed_size_circular_buffer	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION size_type
size	impl/Kokkos_Profiling_C_Interface.h	/^  size_t size;$/;"	m	struct:Kokkos_Tools_ValueSet	typeref:typename:size_t
size	impl/Kokkos_SharedAlloc.hpp	/^  size_t size() const { return m_alloc_size - sizeof(SharedAllocationHeader); }$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:size_t
size	impl/Kokkos_TaskQueueMultiple.hpp	/^  constexpr int size() const noexcept { return m_size; }$/;"	f	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:KOKKOS_INLINE_FUNCTION int
size	impl/Kokkos_TaskResult.hpp	/^  enum : int32_t { size = 0 };$/;"	e	enum:Kokkos::Impl::TaskResult::__anon3c3e765f0203
size	impl/Kokkos_TaskResult.hpp	/^  enum : int32_t { size = sizeof(ResultType) };$/;"	e	enum:Kokkos::Impl::TaskResult::__anon3c3e765f0103
sizeScratchGrain	Cuda/Kokkos_Cuda_Instance.cpp	/^enum { sizeScratchGrain = sizeof(ScratchGrain) };$/;"	e	enum:Kokkos::Impl::__anon02417da40803	file:
sizeScratchGrain	HIP/Kokkos_HIP_Instance.cpp	/^enum { sizeScratchGrain = sizeof(ScratchGrain) };$/;"	e	enum:Kokkos::Experimental::Impl::__anon18c94a8c0403	file:
size_mismatch	Kokkos_CopyViews.hpp	/^bool size_mismatch(const ViewType& view, unsigned int max_extent,$/;"	f	namespace:Kokkos::Impl	typeref:typename:bool
size_per_thread	Kokkos_HPX.hpp	/^  std::size_t size_per_thread() const noexcept { return m_size_per_thread; }$/;"	f	class:Kokkos::Impl::thread_buffer	typeref:typename:std::size_t
size_total	Kokkos_HPX.hpp	/^  std::size_t size_total() const noexcept { return m_size_total; }$/;"	f	class:Kokkos::Impl::thread_buffer	typeref:typename:std::size_t
size_type	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  using size_type = Kokkos::Cuda::size_type;$/;"	t	class:Kokkos::Impl::GraphNodeKernelImpl	typeref:typename:Kokkos::Cuda::size_type
size_type	Cuda/Kokkos_Cuda_Instance.hpp	/^  using size_type = Cuda::size_type;$/;"	t	class:Kokkos::Impl::CudaInternal	typeref:typename:Cuda::size_type
size_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using size_type      = Cuda::size_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Cuda::size_type
size_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using size_type      = Cuda::size_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Cuda::size_type
size_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using size_type      = Cuda::size_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Cuda::size_type
size_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using size_type    = Cuda::size_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Cuda::size_type
size_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using size_type    = Cuda::size_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Cuda::size_type
size_type	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using size_type    = SizeType;$/;"	t	function:Kokkos::Impl::cuda_single_inter_block_reduce_scan2	typeref:typename:SizeType
size_type	Cuda/Kokkos_Cuda_UniqueToken.hpp	/^  using size_type       = int32_t;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:int32_t
size_type	HIP/Kokkos_HIP_Instance.hpp	/^  using size_type = ::Kokkos::Experimental::HIP::size_type;$/;"	t	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:::Kokkos::Experimental::HIP::size_type
size_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using size_type      = Experimental::HIP::size_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Experimental::HIP::size_type
size_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using size_type      = Kokkos::Experimental::HIP::size_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Experimental::HIP::size_type
size_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using size_type      = Kokkos::Experimental::HIP::size_type;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Kokkos::Experimental::HIP::size_type
size_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using size_type    = ::Kokkos::Experimental::HIP::size_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:::Kokkos::Experimental::HIP::size_type
size_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using size_type    = Kokkos::Experimental::HIP::size_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Experimental::HIP::size_type
size_type	HIP/Kokkos_HIP_ReduceScan.hpp	/^  using size_type    = SizeType;$/;"	t	function:Kokkos::Impl::hip_single_inter_block_reduce_scan_impl	typeref:typename:SizeType
size_type	HIP/Kokkos_HIP_UniqueToken.hpp	/^  using size_type       = int32_t;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:int32_t
size_type	Kokkos_AnonymousSpace.hpp	/^  using size_type       = size_t;$/;"	t	class:Kokkos::AnonymousSpace	typeref:typename:size_t
size_type	Kokkos_Array.hpp	/^  using size_type       = size_t;$/;"	t	struct:Kokkos::Array	typeref:typename:size_t
size_type	Kokkos_Crs.hpp	/^  using size_type       = SizeType;$/;"	t	class:Kokkos::Crs	typeref:typename:SizeType
size_type	Kokkos_Crs.hpp	/^  using size_type    = typename CrsType::size_type;$/;"	t	struct:Kokkos::CountAndFillBase	typeref:typename:CrsType::size_type
size_type	Kokkos_Cuda.hpp	/^  using size_type = memory_space::size_type;$/;"	t	class:Kokkos::Cuda	typeref:typename:memory_space::size_type
size_type	Kokkos_CudaSpace.hpp	/^  using size_type       = unsigned int;$/;"	t	class:Kokkos::CudaHostPinnedSpace	typeref:typename:unsigned int
size_type	Kokkos_CudaSpace.hpp	/^  using size_type       = unsigned int;$/;"	t	class:Kokkos::CudaUVMSpace	typeref:typename:unsigned int
size_type	Kokkos_CudaSpace.hpp	/^  using size_type = unsigned int;$/;"	t	class:Kokkos::CudaSpace	typeref:typename:unsigned int
size_type	Kokkos_HBWSpace.hpp	/^  using size_type    = size_t;$/;"	t	class:Kokkos::Experimental::HBWSpace	typeref:typename:size_t
size_type	Kokkos_HIP_Space.hpp	/^  using size_type       = unsigned int;$/;"	t	class:Kokkos::Experimental::HIPHostPinnedSpace	typeref:typename:unsigned int
size_type	Kokkos_HIP_Space.hpp	/^  using size_type       = unsigned int;$/;"	t	class:Kokkos::Experimental::HIPManagedSpace	typeref:typename:unsigned int
size_type	Kokkos_HIP_Space.hpp	/^  using size_type    = HIPSpace::size_type;$/;"	t	class:Kokkos::Experimental::HIP	typeref:typename:HIPSpace::size_type
size_type	Kokkos_HIP_Space.hpp	/^  using size_type = unsigned int;$/;"	t	class:Kokkos::Experimental::HIPSpace	typeref:typename:unsigned int
size_type	Kokkos_HPX.hpp	/^  using size_type            = memory_space::size_type;$/;"	t	class:Kokkos::Experimental::HPX	typeref:typename:memory_space::size_type
size_type	Kokkos_HPX.hpp	/^  using size_type       = int;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
size_type	Kokkos_HostSpace.hpp	/^  using size_type    = size_t;$/;"	t	class:Kokkos::HostSpace	typeref:typename:size_t
size_type	Kokkos_LogicalSpaces.hpp	/^  using size_type    = typename BaseSpace::size_type;$/;"	t	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:BaseSpace::size_type
size_type	Kokkos_OpenMP.hpp	/^  using size_type            = memory_space::size_type;$/;"	t	class:Kokkos::OpenMP	typeref:typename:memory_space::size_type
size_type	Kokkos_OpenMPTarget.hpp	/^  using size_type    = memory_space::size_type;$/;"	t	class:Kokkos::Experimental::OpenMPTarget	typeref:typename:memory_space::size_type
size_type	Kokkos_OpenMPTargetSpace.hpp	/^  using size_type    = unsigned;$/;"	t	class:Kokkos::Experimental::OpenMPTargetSpace	typeref:typename:unsigned
size_type	Kokkos_SYCL.hpp	/^  using size_type    = memory_space::size_type;$/;"	t	class:Kokkos::Experimental::SYCL	typeref:typename:memory_space::size_type
size_type	Kokkos_SYCL_Space.hpp	/^  using size_type       = Impl::SYCLInternal::size_type;$/;"	t	class:Kokkos::Experimental::SYCLDeviceUSMSpace	typeref:typename:Impl::SYCLInternal::size_type
size_type	Kokkos_SYCL_Space.hpp	/^  using size_type       = Impl::SYCLInternal::size_type;$/;"	t	class:Kokkos::Experimental::SYCLHostUSMSpace	typeref:typename:Impl::SYCLInternal::size_type
size_type	Kokkos_SYCL_Space.hpp	/^  using size_type       = Impl::SYCLInternal::size_type;$/;"	t	class:Kokkos::Experimental::SYCLSharedUSMSpace	typeref:typename:Impl::SYCLInternal::size_type
size_type	Kokkos_ScratchSpace.hpp	/^  using size_type    = typename ExecSpace::size_type;$/;"	t	class:Kokkos::ScratchMemorySpace	typeref:typename:ExecSpace::size_type
size_type	Kokkos_Serial.hpp	/^  using size_type = memory_space::size_type;$/;"	t	class:Kokkos::Serial	typeref:typename:memory_space::size_type
size_type	Kokkos_Threads.hpp	/^  using size_type    = memory_space::size_type;$/;"	t	class:Kokkos::Threads	typeref:typename:memory_space::size_type
size_type	Kokkos_UniqueToken.hpp	/^  using size_type        = typename token_type::size_type;$/;"	t	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:token_type::size_type
size_type	Kokkos_UniqueToken.hpp	/^  using size_type       = typename execution_space::size_type;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:execution_space::size_type
size_type	Kokkos_UniqueToken.hpp	/^  using size_type  = typename exec_space::size_type;$/;"	t	class:Kokkos::Experimental::AcquireUniqueToken	typeref:typename:exec_space::size_type
size_type	Kokkos_View.hpp	/^  using size_type = typename MemorySpace::size_type;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:MemorySpace::size_type
size_type	OpenACC/Kokkos_OpenACC.hpp	/^  using size_type    = memory_space::size_type;$/;"	t	class:Kokkos::Experimental::OpenACC	typeref:typename:memory_space::size_type
size_type	OpenACC/Kokkos_OpenACCSpace.hpp	/^  using size_type = size_t;$/;"	t	class:Kokkos::Experimental::OpenACCSpace	typeref:typename:size_t
size_type	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  using size_type       = int;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
size_type	OpenMPTarget/Kokkos_OpenMPTarget_UniqueToken.hpp	/^  using size_type       = int32_t;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:int32_t
size_type	SYCL/Kokkos_SYCL_Instance.hpp	/^  using size_type = int;$/;"	t	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:int
size_type	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using size_type      = Kokkos::Experimental::SYCL::size_type;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Kokkos::Experimental::SYCL::size_type
size_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using size_type    = ::Kokkos::Experimental::SYCL::size_type;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:::Kokkos::Experimental::SYCL::size_type
size_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using size_type    = Kokkos::Experimental::SYCL::size_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Experimental::SYCL::size_type
size_type	SYCL/Kokkos_SYCL_UniqueToken.hpp	/^  using size_type       = int32_t;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:int32_t
size_type	Serial/Kokkos_Serial_UniqueToken.hpp	/^  using size_type       = int;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
size_type	Threads/Kokkos_Threads_UniqueToken.hpp	/^  using size_type       = int;$/;"	t	class:Kokkos::Experimental::UniqueToken	typeref:typename:int
size_type	impl/Kokkos_ChaseLev.hpp	/^  using size_type  = SizeType;$/;"	t	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:SizeType
size_type	impl/Kokkos_ChaseLev.hpp	/^  using size_type = SizeType;$/;"	t	struct:Kokkos::Impl::fixed_size_circular_buffer	typeref:typename:SizeType
size_type	impl/Kokkos_ChaseLev.hpp	/^  using size_type = SizeType;$/;"	t	struct:Kokkos::Impl::non_owning_variable_size_circular_buffer	typeref:typename:SizeType
size_type	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  using size_type    = SizeType;$/;"	t	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:SizeType
size_type	impl/Kokkos_MemoryPoolAllocator.hpp	/^  using size_type       = typename MemoryPool::memory_space::size_type;$/;"	t	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:MemoryPool::memory_space::size_type
skip_device	impl/Kokkos_InitializationSettings.hpp	/^  int skip_device;$/;"	m	struct:Kokkos::InitArguments	typeref:typename:int
sleep	Threads/Kokkos_ThreadsExec.cpp	/^bool ThreadsExec::sleep() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:bool
space	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  const typename traits::execution_space& space() const { return m_space; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:const typename traits::execution_space &
space	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  typename traits::execution_space space() const { return m_space; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:traits::execution_space
space	KokkosExp_MDRangePolicy.hpp	/^  KOKKOS_INLINE_FUNCTION const typename traits::execution_space& space() const {$/;"	f	struct:Kokkos::MDRangePolicy	typeref:typename:KOKKOS_INLINE_FUNCTION const typename traits::execution_space &
space	Kokkos_Concepts.hpp	/^    using space = void;$/;"	t	struct:Kokkos::is_space::dev	typeref:typename:void
space	Kokkos_Concepts.hpp	/^    using space = void;$/;"	t	struct:Kokkos::is_space::exe	typeref:typename:void
space	Kokkos_Concepts.hpp	/^    using space = void;$/;"	t	struct:Kokkos::is_space::mem	typeref:typename:void
space	Kokkos_Concepts.hpp	/^  using space = std::conditional_t<$/;"	t	struct:Kokkos::SpaceAccessibility
space	Kokkos_ExecPolicy.hpp	/^  KOKKOS_INLINE_FUNCTION const typename traits::execution_space& space() const {$/;"	f	class:Kokkos::RangePolicy	typeref:typename:KOKKOS_INLINE_FUNCTION const typename traits::execution_space &
space	Kokkos_HPX.hpp	/^  const typename traits::execution_space &space() const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:const typename traits::execution_space &
space	Kokkos_WorkGraphPolicy.hpp	/^  execution_space space() const { return execution_space(); }$/;"	f	class:Kokkos::WorkGraphPolicy	typeref:typename:execution_space
space	OpenMP/Kokkos_OpenMP_Team.hpp	/^  const typename traits::execution_space& space() const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:const typename traits::execution_space &
space	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline Kokkos::Experimental::OpenMPTarget space() const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Kokkos::Experimental::OpenMPTarget
space	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using space = execution_space::scratch_memory_space;$/;"	t	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:execution_space::scratch_memory_space
space	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  typename traits::execution_space space() const { return m_space; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:traits::execution_space
space	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  const typename traits::execution_space& space() const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:const typename traits::execution_space &
space	Threads/Kokkos_ThreadsTeam.hpp	/^  const typename traits::execution_space& space() const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:const typename traits::execution_space &
space	Threads/Kokkos_ThreadsTeam.hpp	/^  using space = execution_space::scratch_memory_space;$/;"	t	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:execution_space::scratch_memory_space
space_dimensionality	Kokkos_Tuners.hpp	/^  static constexpr int space_dimensionality =$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:int
space_type	impl/Kokkos_Combined_Reducer.hpp	/^  using space_type = Kokkos::DefaultHostExecutionSpace::memory_space;$/;"	t	function:Kokkos::parallel_reduce	typeref:typename:Kokkos::DefaultHostExecutionSpace::memory_space
span	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t span() const { return m_map.span(); }$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
span_is_contiguous	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION bool span_is_contiguous() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION bool
spawn	Kokkos_TaskScheduler.hpp	/^  KOKKOS_FUNCTION future_type_for_functor<std::decay_t<FunctorType>> spawn($/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION future_type_for_functor<std::decay_t<FunctorType>>
spawn	Kokkos_TaskScheduler.hpp	/^  spawn(Impl::TaskPolicyWithScheduler<TaskEnum, scheduler_type, DepFutureType>&&$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION Kokkos::BasicFuture<typename FunctorType::value_type,scheduler_type>
spawn	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::spawn() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
spawn	impl/Kokkos_SimpleTaskScheduler.hpp	/^  spawn(Impl::TaskPolicyWithPredecessor<TaskEnum, DepFutureType>&& arg_policy,$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_FUNCTION Kokkos::BasicFuture<typename FunctorType::value_type,scheduler_type>
spawn	impl/Kokkos_SimpleTaskScheduler.hpp	/^  spawn(Impl::TaskPolicyWithScheduler<TaskEnum, scheduler_type, DepFutureType>&&$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_FUNCTION Kokkos::BasicFuture<typename FunctorType::value_type,scheduler_type>
spawn_allocation_size	Kokkos_TaskScheduler.hpp	/^  KOKKOS_FUNCTION size_t spawn_allocation_size() const {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION size_t
spawn_allocation_size	impl/Kokkos_TaskQueue.hpp	/^  KOKKOS_FUNCTION size_t spawn_allocation_size() const {$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION size_t
specialization	Kokkos_TaskScheduler.hpp	/^  using specialization      = Impl::TaskQueueSpecialization<BasicTaskScheduler>;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:Impl::TaskQueueSpecialization<BasicTaskScheduler>
specialization	impl/Kokkos_MultipleTaskQueue.hpp	/^    using specialization = Impl::TaskQueueSpecialization<$/;"	t	function:Kokkos::Impl::MultipleTaskQueue::task_queue_allocation_size	typeref:typename:Impl::TaskQueueSpecialization<SimpleTaskScheduler<typename base_t::execution_space,MultipleTaskQueue>>
specialization	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using specialization = Impl::TaskQueueSpecialization<SimpleTaskScheduler>;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:Impl::TaskQueueSpecialization<SimpleTaskScheduler>
specialization	impl/Kokkos_TaskBase.hpp	/^  using specialization = TaskQueueSpecialization<Scheduler>;$/;"	t	class:Kokkos::Impl::Task	typeref:typename:TaskQueueSpecialization<Scheduler>
specialization	impl/Kokkos_TaskNode.hpp	/^  using specialization = TaskQueueSpecialization<scheduler_type>;$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:TaskQueueSpecialization<scheduler_type>
specialization	impl/Kokkos_TaskQueue.hpp	/^    using specialization =$/;"	t	function:Kokkos::Impl::TaskQueue::proc_set_apply	typeref:typename:TaskQueueSpecialization<BasicTaskScheduler<ExecSpace,TaskQueue>>
specialization	impl/Kokkos_TaskQueueMultiple.hpp	/^  using specialization      = TaskQueueSpecialization<team_scheduler_type>;$/;"	t	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:TaskQueueSpecialization<team_scheduler_type>
specialize	Kokkos_View.hpp	/^  using specialize      = typename ViewTraits<void, Prop...>::specialize;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::specialize
specialize	Kokkos_View.hpp	/^  using specialize      = void;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:void
specialize	Kokkos_View.hpp	/^  using specialize    = typename ViewTraits<void, Prop...>::specialize;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:ViewTraits<void,Prop...>::specialize
specialize	Kokkos_View.hpp	/^  using specialize = std::conditional_t<$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp
specialize	Kokkos_View.hpp	/^  using specialize = std::conditional_t<$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<std::is_void<typename data_analysis::specialize>::value,typename prop::specialize,typename data_analysis::specialize>
specialize	Kokkos_View.hpp	/^  using specialize = typename FirstView::traits::specialize;$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:FirstView::traits::specialize
spinwait_until_equal	impl/Kokkos_Spinwait.hpp	/^std::enable_if_t<std::is_integral<T>::value, void> spinwait_until_equal($/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<std::is_integral<T>::value,void>
spinwait_while_equal	impl/Kokkos_Spinwait.hpp	/^std::enable_if_t<std::is_integral<T>::value, void> spinwait_while_equal($/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<std::is_integral<T>::value,void>
split_arrive	impl/Kokkos_HostBarrier.hpp	/^  bool split_arrive(const bool master_wait = true) const noexcept {$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION bool
split_arrive	impl/Kokkos_HostBarrier.hpp	/^  static bool split_arrive(int* buffer, const int size, int& step,$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION bool
split_master_wait	impl/Kokkos_HostBarrier.hpp	/^  static void split_master_wait(int* buffer, const int size, const int step,$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
split_master_wait	impl/Kokkos_HostBarrier.hpp	/^  void split_master_wait(const bool active_wait = true) noexcept {$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
split_release	impl/Kokkos_HostBarrier.hpp	/^  static void split_release(int* buffer, const int size, const int \/*step*\/$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
split_release	impl/Kokkos_HostBarrier.hpp	/^  void split_release() const noexcept {$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
sqrt	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> sqrt($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
sqrt	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 sqrt(__float128 x) { return ::sqrtq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
src_execution_space	Kokkos_CopyViews.hpp	/^  using src_execution_space = typename SrcType::execution_space;$/;"	t	function:Kokkos::Impl::view_copy	typeref:typename:SrcType::execution_space
src_execution_space	Kokkos_CopyViews.hpp	/^  using src_execution_space = typename src_type::execution_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:src_type::execution_space
src_layout	impl/Kokkos_ViewLayoutTiled.hpp	/^  using src_layout =$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::Experimental::LayoutTiled<OuterP,InnerP,N0,N1,N2,N3,N4,N5,N6,N7,true>
src_map_type	impl/Kokkos_ViewLayoutTiled.hpp	/^    using src_map_type    = ViewMapping<src_traits, void>;$/;"	t	function:Kokkos::Impl::ViewMapping::assign	typeref:typename:ViewMapping<src_traits,void>
src_memory_space	Kokkos_CopyViews.hpp	/^                                   src_memory_space>::accessible$/;"	e	enum:Kokkos::Impl::view_copy::__anon6f9042750303
src_memory_space	Kokkos_CopyViews.hpp	/^                                   src_memory_space>::accessible$/;"	e	enum:Kokkos::deep_copy::__anon6f9042750503
src_memory_space	Kokkos_CopyViews.hpp	/^                                   src_memory_space>::accessible$/;"	e	enum:Kokkos::deep_copy::__anon6f9042751803
src_memory_space	Kokkos_CopyViews.hpp	/^        Kokkos::SpaceAccessibility<ExecSpace, src_memory_space>::accessible$/;"	e	enum:Kokkos::deep_copy::__anon6f9042751703
src_memory_space	Kokkos_CopyViews.hpp	/^        Kokkos::SpaceAccessibility<ExecutionSpace, src_memory_space>::accessible$/;"	e	enum:Kokkos::Impl::view_copy::__anon6f9042750103
src_memory_space	Kokkos_CopyViews.hpp	/^  using src_memory_space    = typename SrcType::memory_space;$/;"	t	function:Kokkos::Impl::view_copy	typeref:typename:SrcType::memory_space
src_memory_space	Kokkos_CopyViews.hpp	/^  using src_memory_space    = typename src_type::memory_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:src_type::memory_space
src_memory_space	Kokkos_CopyViews.hpp	/^  using src_memory_space = typename SrcType::memory_space;$/;"	t	function:Kokkos::Impl::view_copy	typeref:typename:SrcType::memory_space
src_memory_space	Kokkos_CopyViews.hpp	/^  using src_memory_space = typename src_traits::memory_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:src_traits::memory_space
src_memory_space	Kokkos_CopyViews.hpp	/^  using src_memory_space = typename src_type::memory_space;$/;"	t	function:Kokkos::deep_copy	typeref:typename:src_type::memory_space
src_offset_type	impl/Kokkos_ViewLayoutTiled.hpp	/^    using src_offset_type = typename src_map_type::offset_type;$/;"	t	function:Kokkos::Impl::ViewMapping::assign	typeref:typename:src_map_type::offset_type
src_sub	Kokkos_CopyViews.hpp	/^  src_subview_type src_sub;$/;"	m	struct:Kokkos::Impl::CommonSubview	typeref:typename:src_subview_type
src_subview_type	Kokkos_CopyViews.hpp	/^  using src_subview_type = typename Kokkos::Subview<SrcType, Arg0, Arg1, Arg2,$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<SrcType,Arg0,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6>
src_subview_type	Kokkos_CopyViews.hpp	/^  using src_subview_type = typename Kokkos::Subview<SrcType, Arg0, Arg1, Arg2>;$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<SrcType,Arg0,Arg1,Arg2>
src_subview_type	Kokkos_CopyViews.hpp	/^  using src_subview_type = typename Kokkos::Subview<SrcType, Arg0, Arg1>;$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<SrcType,Arg0,Arg1>
src_subview_type	Kokkos_CopyViews.hpp	/^  using src_subview_type = typename Kokkos::Subview<SrcType, Arg0>;$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<SrcType,Arg0>
src_subview_type	Kokkos_CopyViews.hpp	/^  using src_subview_type =$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<SrcType,Arg0,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7>
src_subview_type	Kokkos_CopyViews.hpp	/^  using src_subview_type =$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<SrcType,Arg0,Arg1,Arg2,Arg3,Arg4,Arg5>
src_subview_type	Kokkos_CopyViews.hpp	/^  using src_subview_type =$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<SrcType,Arg0,Arg1,Arg2,Arg3,Arg4>
src_subview_type	Kokkos_CopyViews.hpp	/^  using src_subview_type =$/;"	t	struct:Kokkos::Impl::CommonSubview	typeref:typename:Kokkos::Subview<SrcType,Arg0,Arg1,Arg2,Arg3>
src_traits	Kokkos_CopyViews.hpp	/^  using src_traits       = ViewTraits<ST, SP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:ViewTraits<ST,SP...>
src_traits	Kokkos_CopyViews.hpp	/^  using src_traits = ViewTraits<ST, SP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:ViewTraits<ST,SP...>
src_traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using src_traits = Kokkos::ViewTraits<T********, src_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T ********,src_layout,P...>
src_traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using src_traits = Kokkos::ViewTraits<T*******, src_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T *******,src_layout,P...>
src_traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using src_traits = Kokkos::ViewTraits<T******, src_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T ******,src_layout,P...>
src_traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using src_traits = Kokkos::ViewTraits<T*****, src_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T *****,src_layout,P...>
src_traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using src_traits = Kokkos::ViewTraits<T****, src_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T ****,src_layout,P...>
src_traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using src_traits = Kokkos::ViewTraits<T***, src_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T ***,src_layout,P...>
src_traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using src_traits = Kokkos::ViewTraits<T**, src_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T **,src_layout,P...>
src_type	Kokkos_CopyViews.hpp	/^  using src_type            = View<ST, SP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:View<ST,SP...>
src_type	Kokkos_CopyViews.hpp	/^  using src_type         = View<T, P...>;$/;"	t	function:Kokkos::Impl::create_mirror	typeref:typename:View<T,P...>
src_type	Kokkos_CopyViews.hpp	/^  using src_type = View<ST, SP...>;$/;"	t	function:Kokkos::deep_copy	typeref:typename:View<ST,SP...>
src_value_type	Kokkos_CopyViews.hpp	/^  using src_value_type      = typename src_type::value_type;$/;"	t	function:Kokkos::deep_copy	typeref:typename:src_type::value_type
src_view_type	Kokkos_CopyViews.hpp	/^  using src_view_type = typename Kokkos::View<T, P...>;$/;"	t	struct:Kokkos::Impl::MirrorType	typeref:typename:Kokkos::View<T,P...>
src_view_type	Kokkos_CopyViews.hpp	/^  using src_view_type = typename Kokkos::View<T, P...>;$/;"	t	struct:Kokkos::Impl::MirrorViewType	typeref:typename:Kokkos::View<T,P...>
start	Cuda/Kokkos_Cuda_Team.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
start	Cuda/Kokkos_Cuda_Team.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const iType
start	Cuda/Kokkos_Cuda_Team.hpp	/^  const index_type start;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
start	HIP/Kokkos_HIP_Team.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
start	HIP/Kokkos_HIP_Team.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const iType
start	HIP/Kokkos_HIP_Team.hpp	/^  const index_type start;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
start	Kokkos_ExecPolicy.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
start	Kokkos_ExecPolicy.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const iType
start	Kokkos_ExecPolicy.hpp	/^  const index_type start;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
start	Kokkos_Profiling_ProfileSection.hpp	/^  void start() {$/;"	f	class:Kokkos::Profiling::ProfilingSection	typeref:typename:void
start	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
start	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const index_type start;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const index_type
start	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const index_type start;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
start	SYCL/Kokkos_SYCL_Team.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const iType
start	SYCL/Kokkos_SYCL_Team.hpp	/^  const iType start;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const iType
start	SYCL/Kokkos_SYCL_Team.hpp	/^  const index_type start;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const index_type
start	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::start(void (*func)(ThreadsExec &, const void *),$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
startProfileSectionFunction	impl/Kokkos_Profiling_Interface.hpp	/^using startProfileSectionFunction =$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_startProfileSectionFunction
startSection	impl/Kokkos_Profiling.cpp	/^void startSection(const uint32_t secID) { Kokkos::Tools::startSection(secID); }$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
startSection	impl/Kokkos_Profiling.cpp	/^void startSection(const uint32_t secID) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
start_profile_section	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_startProfileSectionFunction start_profile_section;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_startProfileSectionFunction
state	Threads/Kokkos_ThreadsExec.hpp	/^  KOKKOS_INLINE_FUNCTION int volatile &state() { return m_pool_state; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:KOKKOS_INLINE_FUNCTION int volatile &
state_header_mask	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { state_header_mask = CB::state_header_mask };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0403
state_header_mask	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { state_header_mask = uint32_t(0x001f) << state_shift };$/;"	e	enum:Kokkos::Impl::concurrent_bitset::__anon337ce9bb0703
state_shift	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { state_shift = CB::state_shift };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0203
state_shift	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { state_shift = 26 };$/;"	e	enum:Kokkos::Impl::concurrent_bitset::__anon337ce9bb0503
state_used_mask	Kokkos_MemoryPool.hpp	/^  enum : uint32_t { state_used_mask = CB::state_used_mask };$/;"	e	enum:Kokkos::MemoryPool::__anonba8f35ff0303
state_used_mask	impl/Kokkos_ConcurrentBitset.hpp	/^  enum : uint32_t { state_used_mask = (1 << state_shift) - 1 };$/;"	e	enum:Kokkos::Impl::concurrent_bitset::__anon337ce9bb0603
static_extent	Kokkos_View.hpp	/^  static KOKKOS_INLINE_FUNCTION constexpr size_t static_extent($/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
static_extent	impl/Kokkos_ViewMapping.hpp	/^  static KOKKOS_INLINE_FUNCTION constexpr size_t static_extent($/;"	f	struct:Kokkos::Impl::ViewDimension	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
static_fence	impl/Kokkos_Core.cpp	/^void Kokkos::Impl::ExecSpaceManager::static_fence(const std::string& name) {$/;"	f	class:Kokkos::Impl::ExecSpaceManager	typeref:typename:void
static_fence	impl/Kokkos_ExecSpaceManager.hpp	/^  void static_fence(std::string const& label) final {$/;"	f	struct:Kokkos::Impl::ExecSpaceDerived	typeref:typename:void
staticcrsgraph_type	Kokkos_Crs.hpp	/^  using staticcrsgraph_type = Crs<DataType, Arg1Type, Arg2Type, SizeType>;$/;"	t	class:Kokkos::Crs	typeref:typename:Crs<DataType,Arg1Type,Arg2Type,SizeType>
std_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto std_constant = std::memory_order_acq_rel;$/;"	m	struct:Kokkos::Impl::memory_order_acq_rel_t	typeref:typename:auto
std_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto std_constant = std::memory_order_acquire;$/;"	m	struct:Kokkos::Impl::memory_order_acquire_t	typeref:typename:auto
std_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto std_constant = std::memory_order_relaxed;$/;"	m	struct:Kokkos::Impl::memory_order_relaxed_t	typeref:typename:auto
std_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto std_constant = std::memory_order_release;$/;"	m	struct:Kokkos::Impl::memory_order_release_t	typeref:typename:auto
std_constant	impl/Kokkos_Atomic_Memory_Order.hpp	/^  static constexpr auto std_constant = std::memory_order_seq_cst;$/;"	m	struct:Kokkos::Impl::memory_order_seq_cst_t	typeref:typename:auto
steal	impl/Kokkos_ChaseLev.hpp	/^  OptionalRef<T> steal() {$/;"	f	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<T>
steal	impl/Kokkos_LIFO.hpp	/^  OptionalRef<T> steal() {$/;"	f	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<T>
steal_work_index	Threads/Kokkos_ThreadsExec.hpp	/^  inline long steal_work_index(int team_size = 0) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:long
step	impl/Kokkos_Profiling_C_Interface.h	/^  union Kokkos_Tools_VariableValue_ValueUnion step;$/;"	m	struct:Kokkos_Tools_ValueRange	typeref:union:Kokkos_Tools_VariableValue_ValueUnion
stop	Kokkos_Profiling_ProfileSection.hpp	/^  void stop() {$/;"	f	class:Kokkos::Profiling::ProfilingSection	typeref:typename:void
stopProfileSectionFunction	impl/Kokkos_Profiling_Interface.hpp	/^using stopProfileSectionFunction = Kokkos_Profiling_stopProfileSectionFunction;$/;"	t	namespace:Kokkos::Tools	typeref:typename:Kokkos_Profiling_stopProfileSectionFunction
stopSection	impl/Kokkos_Profiling.cpp	/^void stopSection(const uint32_t secID) { Kokkos::Tools::stopSection(secID); }$/;"	f	namespace:Kokkos::Profiling	typeref:typename:void
stopSection	impl/Kokkos_Profiling.cpp	/^void stopSection(const uint32_t secID) {$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
stop_profile_section	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_stopProfileSectionFunction stop_profile_section;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_stopProfileSectionFunction
storage_type	impl/Kokkos_InitializationSettings.hpp	/^  using storage_type = char;$/;"	t	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:char
storage_type	impl/Kokkos_InitializationSettings.hpp	/^  using storage_type = int;$/;"	t	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:int
storage_type	impl/Kokkos_InitializationSettings.hpp	/^  using storage_type = std::string;$/;"	t	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:std::string
store_fence	Kokkos_Atomics_Desul_Wrapper.hpp	/^void store_fence() { return desul::atomic_thread_fence(desul::MemoryOrderRelease(), KOKKOS_DESUL/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
store_fence	impl/Kokkos_Memory_Fence.hpp	/^void store_fence() {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
strcat	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_INLINE_FUNCTION constexpr char *strcat(char *dest, const char *src) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION char *
strcmp	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_INLINE_FUNCTION constexpr int strcmp(const char *lhs, const char *rhs) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION int
strcpy	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_INLINE_FUNCTION constexpr char *strcpy(char *dest, const char *src) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION char *
stride	Kokkos_Layout.hpp	/^  size_t stride[ARRAY_LAYOUT_MAX_RANK];$/;"	m	struct:Kokkos::LayoutStride	typeref:typename:size_t[]
stride	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION void stride(iType* const s) const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION void
stride	Kokkos_View.hpp	/^  stride(iType r) const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_integral<iType>::value,size_t>
stride	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^    for (unsigned int stride = 1; stride < local_range; stride <<= 1) {$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:unsigned int
stride	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  for (unsigned int stride = 1; stride < local_range; stride <<= 1) {$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:unsigned int
stride	impl/Kokkos_PhysicalLayout.hpp	/^  long long int stride[9];  \/\/ distance between two neighboring elements in a$/;"	m	struct:Kokkos::Impl::PhysicalLayout	typeref:typename:long long int[9]
stride_0	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t stride_0() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
stride_1	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t stride_1() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
stride_2	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t stride_2() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
stride_3	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t stride_3() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
stride_4	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t stride_4() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
stride_5	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t stride_5() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
stride_6	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t stride_6() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
stride_7	Kokkos_View.hpp	/^  KOKKOS_INLINE_FUNCTION constexpr size_t stride_7() const {$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
strided	Kokkos_Array.hpp	/^  struct strided {};$/;"	s	struct:Kokkos::Array
strided_reference	impl/Kokkos_ViewArray.hpp	/^  using strided_reference =$/;"	t	namespace:Kokkos::Impl
strided_shfl_warp_reduction	Cuda/Kokkos_Cuda_Task.hpp	/^KOKKOS_INLINE_FUNCTION void strided_shfl_warp_reduction(const JoinType& join,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION void
string_value	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_Tuning_String string_value;$/;"	m	union:Kokkos_Tools_VariableValue_ValueUnion	typeref:typename:Kokkos_Tools_Tuning_String
string_value	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Tools_Tuning_String* string_value;$/;"	m	union:Kokkos_Tools_VariableValue_ValueUnionSet	typeref:typename:Kokkos_Tools_Tuning_String *
strlen	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_INLINE_FUNCTION constexpr std::size_t strlen(const char *str) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION std::size_t
strncat	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_INLINE_FUNCTION constexpr char *strncat(char *dest, const char *src,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION char *
strncmp	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_INLINE_FUNCTION constexpr int strncmp(const char *lhs, const char *rhs,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION int
strncpy	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_INLINE_FUNCTION constexpr char *strncpy(char *dest, const char *src,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_INLINE_FUNCTION char *
strvec_t	impl/Kokkos_Profiling.cpp	/^  using strvec_t = std::vector<std::string>;$/;"	t	function:Kokkos::Tools::parseArgs	typeref:typename:std::vector<std::string>	file:
sub_tuple	Kokkos_Tuners.hpp	/^  using sub_tuple =$/;"	t	struct:Kokkos::Tools::Experimental::Impl::GetMultidimensionalPoint	typeref:typename:GetMultidimensionalPoint<Subtype,Indices...>::return_type
sub_values	Kokkos_Tuners.hpp	/^  std::vector<ContainedType> sub_values;$/;"	m	struct:Kokkos::Tools::Experimental::Impl::ValueHierarchyNode	typeref:typename:std::vector<ContainedType>
submit	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  void submit() {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:void
submit	Kokkos_Graph.hpp	/^  void submit() const {$/;"	f	struct:Kokkos::Experimental::Graph	typeref:typename:void
submit	impl/Kokkos_Default_Graph_Impl.hpp	/^  void submit() {$/;"	f	struct:Kokkos::Impl::GraphImpl	typeref:typename:void
subview	Kokkos_View.hpp	/^    subview(const View<D, P...>& src, Args... args) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION typename Kokkos::Impl::ViewMapping<void,ViewTraits<D,P...>,Args...>::type
subview	Kokkos_View.hpp	/^subview(const View<D, P...>& src, Args... args) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION typename Kokkos::Impl::ViewMapping<void,ViewTraits<D,P...>,Args...>::apply::type
success	impl/Kokkos_Profiling.hpp	/^    success,$/;"	e	enum:Kokkos::Tools::Impl::InitializationStatus::InitializationResult
success	impl/Kokkos_TaskQueueMemoryManager.hpp	/^    bool success;$/;"	m	struct:Kokkos::Impl::TaskQueueMemoryManager::_allocation_result	typeref:typename:bool
sum	Cuda/Kokkos_Cuda_Half_Conversion.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float sum() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
sum	HIP/Kokkos_HIP_Half_Conversion.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float sum() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static double sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION double
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static float sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION float
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static int sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION int
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long long sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long long
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static long sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION long
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static short sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION short
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static signed char sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION signed char
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned char sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned char
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned int sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned int
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long long sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long long
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned long sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned long
sum	Kokkos_NumericTraits.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static unsigned short sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned short
sum	Kokkos_NumericTraits.hpp	/^  constexpr static long double sum() { return static_cast<long double>(0.0); }$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:long double
sum	SYCL/Kokkos_SYCL_Half_Conversion.hpp	/^  sum() noexcept {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION Kokkos::Experimental::half_t
sum	impl/Kokkos_QuadPrecisionMath.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION constexpr static __float128 sum() {$/;"	f	struct:Kokkos::reduction_identity	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION __float128
superblock_bytes	Kokkos_MemoryPool.hpp	/^    size_t superblock_bytes;      \/\/\/<  Superblock size in bytes$/;"	m	struct:Kokkos::MemoryPool::usage_statistics	typeref:typename:size_t
superblock_state	Kokkos_MemoryPool.hpp	/^  void superblock_state(int sb_id, int &block_size, int &block_count_capacity,$/;"	f	class:Kokkos::MemoryPool	typeref:typename:KOKKOS_INLINE_FUNCTION void
support_texture_binding	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static bool support_texture_binding() { return true; }$/;"	f	class:Kokkos::Impl::CudaMallocAllocator	typeref:typename:bool
support_texture_binding	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static bool support_texture_binding() { return true; }$/;"	f	class:Kokkos::Impl::CudaUVMAllocator	typeref:typename:bool
support_texture_binding	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static bool support_texture_binding() { return true; }$/;"	f	struct:Kokkos::Impl::CudaUnmanagedAllocator	typeref:typename:bool
support_texture_binding	Cuda/Kokkos_Cuda_Alloc.hpp	/^  static bool support_texture_binding() { return true; }$/;"	f	struct:Kokkos::Impl::CudaUnmanagedUVMAllocator	typeref:typename:bool
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type = CommonSubview<DstType, SrcType, 3, p_type,$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,3,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type = CommonSubview<DstType, SrcType, 5, p_type,$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,5,p_type,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,2,Kokkos::Impl::ALL_t,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,2,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,2,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,3,Kokkos::Impl::ALL_t,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,3,Kokkos::Impl::ALL_t,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,3,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,4,Kokkos::Impl::ALL_t,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,4,Kokkos::Impl::ALL_t,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,4,p_type,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,4,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,5,Kokkos::Impl::ALL_t,p_type,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,5,Kokkos::Impl::ALL_t,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,5,p_type,p_type,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,6,Kokkos::Impl::ALL_t,p_type,p_type,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,6,Kokkos::Impl::ALL_t,p_type,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,6,p_type,p_type,p_type,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,6,p_type,p_type,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,7,Kokkos::Impl::ALL_t,p_type,p_type,p_type,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,7,Kokkos::Impl::ALL_t,p_type,p_type,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,7,p_type,p_type,p_type,p_type,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,7,p_type,p_type,p_type,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,8,Kokkos::Impl::ALL_t,p_type,p_type,p_type,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,8,p_type,p_type,p_type,p_type,p_type,p_type,p_type,Kokkos::Impl::ALL_t>
sv_adapter_type	Kokkos_CopyViews.hpp	/^        using sv_adapter_type =$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,8,p_type,p_type,p_type,p_type,p_type,p_type,p_type,p_type>
sv_adapter_type	Kokkos_CopyViews.hpp	/^      using sv_adapter_type = CommonSubview<DstType, SrcType, 1, p_type>;$/;"	t	function:Kokkos::Impl::ViewRemap::ViewRemap	typeref:typename:CommonSubview<DstType,SrcType,1,p_type>
sycl_abort	SYCL/Kokkos_SYCL_Abort.hpp	/^inline void sycl_abort(char const* msg) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
sycl_deallocate	SYCL/Kokkos_SYCL_Space.cpp	/^void sycl_deallocate(const char* arg_label, void* const arg_alloc_ptr,$/;"	f	namespace:Kokkos::Experimental	typeref:typename:void
sycl_device	SYCL/Kokkos_SYCL.cpp	/^int SYCL::sycl_device() const {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:int
sycl_direct_launch	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  static sycl::event sycl_direct_launch(const Policy& policy,$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:sycl::event
sycl_direct_launch	SYCL/Kokkos_SYCL_Parallel_Range.hpp	/^  sycl::event sycl_direct_launch(const FunctorWrapper& functor_wrapper,$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:sycl::event
sycl_direct_launch	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  sycl::event sycl_direct_launch($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:sycl::event
sycl_direct_launch	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  sycl::event sycl_direct_launch(const FunctorWrapper& functor_wrapper,$/;"	f	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:sycl::event
sycl_direct_launch	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  sycl::event sycl_direct_launch($/;"	f	class:Kokkos::Impl::ParallelReduce	typeref:typename:sycl::event
sycl_direct_launch	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  sycl::event sycl_direct_launch(const Policy& policy,$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:sycl::event
sycl_global_unique_token_locks	SYCL/Kokkos_SYCL_Instance.cpp	/^Kokkos::View<uint32_t*, SYCLDeviceUSMSpace> sycl_global_unique_token_locks($/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:Kokkos::View<uint32_t *,SYCLDeviceUSMSpace>
sycl_queue	Kokkos_SYCL.hpp	/^  sycl::queue& sycl_queue() const noexcept {$/;"	f	class:Kokkos::Experimental::SYCL	typeref:typename:sycl::queue &
syncDualView	impl/Kokkos_Profiling.cpp	/^void syncDualView(const std::string& label, const void* const ptr,$/;"	f	namespace:Kokkos::Tools	typeref:typename:void
sync_dual_view	impl/Kokkos_Profiling_C_Interface.h	/^  Kokkos_Profiling_dualViewSyncFunction sync_dual_view;$/;"	m	struct:Kokkos_Profiling_EventSet	typeref:typename:Kokkos_Profiling_dualViewSyncFunction
t	Cuda/Kokkos_Cuda_WorkGraphPolicy.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	HIP/Kokkos_HIP_Atomic.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_fetch_add::U	typeref:typename:T
t	HIP/Kokkos_HIP_Atomic.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_fetch_sub::U	typeref:typename:T
t	HIP/Kokkos_HIP_WorkGraphPolicy.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	HPX/Kokkos_HPX_WorkGraphPolicy.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	Kokkos_HPX.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	Kokkos_HPX.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const TagType
t	Kokkos_HPX.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const TagType
t	Kokkos_HPX.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const TagType
t	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const TagType
t	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const TagType
t	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const TagType
t	OpenMP/Kokkos_OpenMP_WorkGraphPolicy.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const TagType
t	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const TagType
t	Serial/Kokkos_Serial_Parallel_Range.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const TagType
t	Serial/Kokkos_Serial_Parallel_Team.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	Serial/Kokkos_Serial_Parallel_Team.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const TagType
t	Serial/Kokkos_Serial_WorkGraphPolicy.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	Threads/Kokkos_Threads_Parallel_Range.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	Threads/Kokkos_Threads_Parallel_Range.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const TagType
t	Threads/Kokkos_Threads_Parallel_Range.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelScan	typeref:typename:const TagType
t	Threads/Kokkos_Threads_Parallel_Range.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:const TagType
t	Threads/Kokkos_Threads_Parallel_Team.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	Threads/Kokkos_Threads_Parallel_Team.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelReduce	typeref:typename:const TagType
t	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^    const TagType t{};$/;"	m	class:Kokkos::Impl::ParallelFor	typeref:typename:const TagType
t	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:T
t	impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:T
t	impl/Kokkos_Atomic_Exchange.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_assign::U	typeref:typename:T
t	impl/Kokkos_Atomic_Exchange.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_exchange::U	typeref:typename:T
t	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_fetch_add::U	typeref:typename:T
t	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_fetch_add::U1	typeref:typename:T
t	impl/Kokkos_Atomic_Fetch_Add.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_fetch_add::U2	typeref:typename:T
t	impl/Kokkos_Atomic_Fetch_Sub.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_fetch_sub::U	typeref:typename:T
t	impl/Kokkos_Atomic_Generic.hpp	/^    T t;$/;"	m	union:Kokkos::Impl::atomic_fetch_oper::U	typeref:typename:T
t	impl/Kokkos_Atomic_Generic.hpp	/^    T t;$/;"	m	union:Kokkos::Impl::atomic_oper_fetch::U	typeref:typename:T
t	impl/Kokkos_Atomic_Windows.hpp	/^    T t;$/;"	m	union:Kokkos::atomic_compare_exchange::U	typeref:typename:T
t_openmp_hardware_id	OpenMP/Kokkos_OpenMP_Instance.cpp	/^thread_local int t_openmp_hardware_id = 0;$/;"	v	namespace:Kokkos::Impl	typeref:typename:thread_local int
t_openmp_instance	OpenMP/Kokkos_OpenMP_Instance.cpp	/^thread_local OpenMPInternal *t_openmp_instance = nullptr;$/;"	v	namespace:Kokkos::Impl	typeref:typename:thread_local OpenMPInternal *
t_tracking_enabled	impl/Kokkos_SharedAlloc.cpp	/^thread_local int SharedAllocationRecord<void, void>::t_tracking_enabled = 1;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord<void, void>	typeref:typename:thread_local int
t_tracking_enabled	impl/Kokkos_SharedAlloc.hpp	/^  static thread_local int t_tracking_enabled;$/;"	m	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:thread_local int
tan	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> tan($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
tan	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 tan(__float128 x) { return ::tanq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
tanh	Kokkos_Complex.hpp	/^KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType> tanh($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::complex<RealType>
tanh	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 tanh(__float128 x) { return ::tanhq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
task_base	Kokkos_Future.hpp	/^  using task_base = Impl::TaskBase;$/;"	t	class:Kokkos::BasicFuture	typeref:typename:Impl::TaskBase
task_base	Kokkos_TaskScheduler.hpp	/^  using task_base  = Impl::TaskBase;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:Impl::TaskBase
task_base_misalignment	impl/Kokkos_TaskBase.hpp	/^constexpr size_t task_base_misalignment =$/;"	v	namespace:Kokkos::Impl	typeref:typename:size_t
task_base_padding_size	impl/Kokkos_TaskBase.hpp	/^constexpr size_t task_base_padding_size =$/;"	v	namespace:Kokkos::Impl	typeref:typename:size_t
task_base_type	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  using task_base_type  = Kokkos::Impl::TaskBase<execution_space, void, void>;$/;"	t	class:Kokkos::Impl::TaskQueueSpecialization	typeref:typename:Kokkos::Impl::TaskBase<execution_space,void,void>
task_base_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using task_base_type          = TaskNode<TaskQueueTraits>;$/;"	t	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:TaskNode<TaskQueueTraits>
task_base_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using task_base_type    = TaskNode<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:TaskNode<TaskQueueTraits>
task_base_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using task_base_type = TaskNode<TaskQueueTraits>;$/;"	t	struct:Kokkos::Impl::FailedQueueInsertionLinkedListSchedulingInfo	typeref:typename:TaskNode<TaskQueueTraits>
task_base_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using task_base_type = typename task_queue_type::task_base_type;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:task_queue_type::task_base_type
task_base_type	impl/Kokkos_SingleTaskQueue.hpp	/^  using task_base_type    = TaskNode<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:TaskNode<TaskQueueTraits>
task_base_type	impl/Kokkos_TaskNode.hpp	/^  using task_base_type              = TaskNode<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::TaskNode	typeref:typename:TaskNode<TaskQueueTraits>
task_base_type	impl/Kokkos_TaskNode.hpp	/^  using task_base_type     = TaskNode<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::RunnableTaskBase	typeref:typename:TaskNode<TaskQueueTraits>
task_base_type	impl/Kokkos_TaskNode.hpp	/^  using task_base_type = TaskNode<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::AggregateTask	typeref:typename:TaskNode<TaskQueueTraits>
task_base_type	impl/Kokkos_TaskNode.hpp	/^  using task_base_type = TaskNode<TaskQueueTraits>;$/;"	t	class:Kokkos::Impl::RunnableTask	typeref:typename:TaskNode<TaskQueueTraits>
task_queue_allocation_size	impl/Kokkos_MultipleTaskQueue.hpp	/^  static \/* constexpr *\/ size_t task_queue_allocation_size($/;"	f	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:size_t
task_queue_allocation_size	impl/Kokkos_TaskQueueCommon.hpp	/^  static \/* constexpr *\/ size_t task_queue_allocation_size($/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:size_t
task_queue_traits	impl/Kokkos_MultipleTaskQueue.hpp	/^  using task_queue_traits         = TaskQueueTraits;$/;"	t	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:TaskQueueTraits
task_queue_traits	impl/Kokkos_MultipleTaskQueue.hpp	/^  using task_queue_traits = TaskQueueTraits;$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:TaskQueueTraits
task_queue_traits	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using task_queue_traits = typename QueueType::task_queue_traits;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:QueueType::task_queue_traits
task_queue_traits	impl/Kokkos_SingleTaskQueue.hpp	/^  using task_queue_traits = TaskQueueTraits;$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:TaskQueueTraits
task_queue_traits	impl/Kokkos_TaskNode.hpp	/^  using task_queue_traits           = TaskQueueTraits;$/;"	t	class:Kokkos::Impl::TaskNode	typeref:typename:TaskQueueTraits
task_queue_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using task_queue_type   = MultipleTaskQueue;  \/\/ mark as task_queue concept$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:MultipleTaskQueue
task_queue_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using task_queue_type = QueueType;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:QueueType
task_queue_type	impl/Kokkos_SingleTaskQueue.hpp	/^  using task_queue_type   = SingleTaskQueue;  \/\/ mark as task_queue concept$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:SingleTaskQueue
task_root_type	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using task_root_type  = TaskBase<execution_space, void, void>;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::execute	typeref:typename:TaskBase<execution_space,void,void>	file:
task_root_type	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^  using task_root_type  = TaskBase<execution_space, void, void>;$/;"	t	function:Kokkos::Impl::TaskQueueSpecialization::Experimental::OpenMPTarget::iff_single_thread_recursive_execute	typeref:typename:TaskBase<execution_space,void,void>	file:
task_root_type	impl/Kokkos_TaskQueue.hpp	/^  using task_root_type  = Kokkos::Impl::TaskBase;$/;"	t	class:Kokkos::Impl::TaskQueue	typeref:typename:Kokkos::Impl::TaskBase
task_scheduling_info_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using task_scheduling_info_type = std::conditional_t<$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:std::conditional_t<TaskQueueTraits::ready_queue_insertion_may_fail,FailedQueueInsertionLinkedListSchedulingInfo<TaskQueueTraits>,EmptyTaskSchedulingInfo>
task_scheduling_info_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using task_scheduling_info_type = std::conditional_t<$/;"	t	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:std::conditional_t<TaskQueueTraits::ready_queue_insertion_may_fail,FailedQueueInsertionLinkedListSchedulingInfo<TaskQueueTraits>,EmptyTaskSchedulingInfo>
task_scheduling_info_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using task_scheduling_info_type =$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:task_queue_type::task_scheduling_info_type
task_scheduling_info_type	impl/Kokkos_SingleTaskQueue.hpp	/^  using task_scheduling_info_type = EmptyTaskSchedulingInfo;$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:EmptyTaskSchedulingInfo
task_scheduling_info_type	impl/Kokkos_TaskNode.hpp	/^  using task_scheduling_info_type = SchedulingInfo;$/;"	t	class:Kokkos::Impl::SchedulingInfoStorage	typeref:typename:SchedulingInfo
task_scheduling_info_type	impl/Kokkos_TaskQueueCommon.hpp	/^      using task_scheduling_info_type =$/;"	t	function:Kokkos::Impl::TaskQueueCommonMixin::_schedule_waiting_tasks_operation::operator ()	typeref:typename:Derived::task_scheduling_info_type
task_scheduling_info_type	impl/Kokkos_TaskQueueCommon.hpp	/^    using task_scheduling_info_type =$/;"	t	function:Kokkos::Impl::TaskQueueCommonMixin::schedule_aggregate	typeref:typename:Derived::task_scheduling_info_type
task_scheduling_info_type	impl/Kokkos_TaskQueueCommon.hpp	/^    using task_scheduling_info_type =$/;"	t	function:Kokkos::Impl::TaskQueueCommonMixin::update_scheduling_info_from_completed_predecessor	typeref:typename:Derived::task_scheduling_info_type
task_type	Kokkos_TaskScheduler.hpp	/^    using task_type  = Impl::Task<BasicTaskScheduler, value_type, FunctorType>;$/;"	t	function:Kokkos::BasicTaskScheduler::respawn	typeref:typename:Impl::Task<BasicTaskScheduler,value_type,FunctorType>
task_type	Kokkos_TaskScheduler.hpp	/^    using task_type = runnable_task_type<FunctorType>;$/;"	t	function:Kokkos::BasicTaskScheduler::spawn	typeref:typename:runnable_task_type<FunctorType>
task_type	Kokkos_TaskScheduler.hpp	/^    using task_type =$/;"	t	function:Kokkos::BasicTaskScheduler::_spawn_impl	typeref:typename:Impl::Task<BasicTaskScheduler,typename functor_future_type::value_type,FunctorType>
task_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^    using task_type      = typename task_queue_type::aggregate_task_type;$/;"	t	function:Kokkos::SimpleTaskScheduler::when_all	typeref:typename:task_queue_type::aggregate_task_type
task_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^    using task_type = runnable_task_type<FunctorType>;$/;"	t	function:Kokkos::SimpleTaskScheduler::spawn	typeref:typename:runnable_task_type<FunctorType>
task_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^    using task_type = typename task_queue_type::aggregate_task_type;$/;"	t	function:Kokkos::SimpleTaskScheduler::when_all	typeref:typename:task_queue_type::aggregate_task_type
task_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^    using task_type =$/;"	t	function:Kokkos::SimpleTaskScheduler::_spawn_impl	typeref:typename:task_queue_type::template runnable_task_type<FunctorType,scheduler_type>
task_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^    using task_type =$/;"	t	function:Kokkos::SimpleTaskScheduler::respawn	typeref:typename:task_queue_type::template runnable_task_type<FunctorType,scheduler_type>
task_type	impl/Kokkos_TaskNode.hpp	/^    using task_type = Impl::RunnableTask<TaskQueueTraits, Scheduler, ResultType,$/;"	t	function:Kokkos::Impl::RunnableTask::apply	typeref:typename:Impl::RunnableTask<TaskQueueTraits,Scheduler,ResultType,FunctorType> *
task_type	impl/Kokkos_TaskPolicyData.hpp	/^  static constexpr int task_type() noexcept { return TaskEnum; }$/;"	f	struct:Kokkos::Impl::TaskPolicyWithPredecessor	typeref:typename:KOKKOS_INLINE_FUNCTION int
task_type	impl/Kokkos_TaskPolicyData.hpp	/^  static constexpr int task_type() noexcept { return TaskEnum; }$/;"	f	struct:Kokkos::Impl::TaskPolicyWithScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION int
task_type	impl/Kokkos_TaskQueue.hpp	/^    using task_type = Impl::Task<execution_space, value_type, FunctorType>;$/;"	t	function:Kokkos::Impl::TaskQueue::spawn_allocation_size	typeref:typename:Impl::Task<execution_space,value_type,FunctorType>
team	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const OpenMPTargetExecTeamMember& team;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const OpenMPTargetExecTeamMember &
team	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const OpenMPTargetExecTeamMember& team;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const OpenMPTargetExecTeamMember &
team	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  const OpenMPTargetExecTeamMember& team;$/;"	m	struct:Kokkos::Impl::ThreadVectorRangeBoundariesStruct	typeref:typename:const OpenMPTargetExecTeamMember &
team_alloc	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline int team_alloc() const { return m_team_alloc; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_alloc	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline int team_alloc() const { return m_team_alloc; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_alloc	Threads/Kokkos_ThreadsTeam.hpp	/^  inline size_t team_alloc() const { return m_team_alloc; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
team_association	impl/Kokkos_MultipleTaskQueue.hpp	/^    team_queue_id_t team_association                  = NoAssociatedTeam;$/;"	m	struct:Kokkos::Impl::MultipleTaskQueue::SchedulerInfo	typeref:typename:team_queue_id_t
team_barrier	Cuda/Kokkos_Cuda_Task.hpp	/^  __device__ void team_barrier() const {$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__device__ void
team_barrier	Cuda/Kokkos_Cuda_Task.hpp	/^  __host__ void team_barrier() const {}$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__host__ void
team_barrier	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION void team_barrier() const {$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_barrier	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION void team_barrier() const {$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_barrier	Kokkos_HPX.hpp	/^  void team_barrier() const {}$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_barrier	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION void team_barrier() const {$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_barrier	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  KOKKOS_FUNCTION void team_barrier() const {$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:KOKKOS_FUNCTION void
team_barrier	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION void team_barrier() const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_barrier	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION void team_barrier() const {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_barrier	impl/Kokkos_HostThreadTeam.hpp	/^  KOKKOS_INLINE_FUNCTION void team_barrier() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_barrier_impl	OpenMPTarget/Kokkos_OpenMPTarget_Task.cpp	/^void TaskExec<Kokkos::Experimental::OpenMPTarget>::team_barrier_impl() const {$/;"	f	class:Kokkos::Impl::TaskExec::Experimental::OpenMPTarget	typeref:typename:void
team_broadcast	Cuda/Kokkos_Cuda_Task.hpp	/^  __device__ void team_broadcast(ValueType& val, const int thread_id) const {$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__device__ void
team_broadcast	Cuda/Kokkos_Cuda_Task.hpp	/^  __host__ void team_broadcast(ValueType&, const int) const {}$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__host__ void
team_broadcast	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(Closure const& f, ValueType& val,$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(ValueType& val,$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(Closure const& f, ValueType& val,$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(ValueType& val,$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	Kokkos_HPX.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(ValueType &, const int &) const {}$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	Kokkos_HPX.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(const Closure &closure,$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(ValueType& value,$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(const Closure& f, ValueType& value,$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	SYCL/Kokkos_SYCL_Team.hpp	/^      team_broadcast(ValueType& val, const int thread_id) const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<std::is_trivially_copyable_v<ValueType>>
team_broadcast	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(Closure const& f, ValueType& val,$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(Closure const& f, ValueType& value,$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(ValueType& value,$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	impl/Kokkos_HostThreadTeam.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(Closure const& f, T& value,$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_broadcast	impl/Kokkos_HostThreadTeam.hpp	/^  KOKKOS_INLINE_FUNCTION void team_broadcast(T& value,$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_fan_in	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION bool team_fan_in() const {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION bool
team_fan_out	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION void team_fan_out() const {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION void
team_iter	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline int team_iter() const { return m_team_iter; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_iter	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline int team_iter() const { return m_team_iter; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_iter	Threads/Kokkos_ThreadsTeam.hpp	/^  inline int team_iter() const { return m_team_iter; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_member	Kokkos_ExecPolicy.hpp	/^  const TeamMemberType& team_member;$/;"	m	struct:Kokkos::Impl::ThreadSingleStruct	typeref:typename:const TeamMemberType &
team_member	Kokkos_ExecPolicy.hpp	/^  const TeamMemberType& team_member;$/;"	m	struct:Kokkos::Impl::VectorSingleStruct	typeref:typename:const TeamMemberType &
team_member	impl/Kokkos_HostThreadTeam.hpp	/^  HostThreadTeamData* team_member(int r) const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:HostThreadTeamData *
team_member_type	Kokkos_UniqueToken.hpp	/^  using team_member_type = typename TeamPolicy::member_type;$/;"	t	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:TeamPolicy::member_type
team_policy_check_valid_storage_level_argument	impl/Kokkos_ExecPolicy.cpp	/^void team_policy_check_valid_storage_level_argument(int level) {$/;"	f	namespace:Kokkos	typeref:typename:void
team_queue_for	impl/Kokkos_MultipleTaskQueue.hpp	/^  ready_queue_type& team_queue_for(runnable_task_base_type const& task) {$/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION ready_queue_type &
team_queue_id_t	impl/Kokkos_MultipleTaskQueue.hpp	/^    using team_queue_id_t                             = int32_t;$/;"	t	struct:Kokkos::Impl::MultipleTaskQueue::SchedulerInfo	typeref:typename:int32_t
team_queue_type	impl/Kokkos_TaskQueue.hpp	/^  using team_queue_type = TaskQueue;$/;"	t	class:Kokkos::Impl::TaskQueue	typeref:typename:TaskQueue
team_queue_type	impl/Kokkos_TaskQueueMultiple.hpp	/^  using team_queue_type     = TaskQueueMultiple<execution_space, memory_space>;$/;"	t	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:TaskQueueMultiple<execution_space,memory_space>
team_queue_type	impl/Kokkos_TaskQueueMultiple.hpp	/^  using team_queue_type = TaskQueueMultiple;$/;"	t	class:Kokkos::Impl::TaskQueueMultiple	typeref:typename:TaskQueueMultiple
team_rank	Cuda/Kokkos_Cuda_Task.hpp	/^  __device__ int team_rank() const { return threadIdx.y; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__device__ int
team_rank	Cuda/Kokkos_Cuda_Task.hpp	/^  __host__ int team_rank() const { return 0; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__host__ int
team_rank	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int team_rank() const {$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_rank	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int team_rank() const {$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_rank	Kokkos_HPX.hpp	/^  KOKKOS_INLINE_FUNCTION int team_rank() const noexcept { return m_team_rank; }$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_rank	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION int team_rank() const { return m_team_rank; }$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_rank	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  int team_rank() const { return m_team_rank; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_rank	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int team_rank() const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_rank	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION int team_rank() const { return m_team_rank; }$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_rank	impl/Kokkos_HostThreadTeam.hpp	/^  int team_rank() const noexcept { return m_data.m_team_rank; }$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_reduce	Cuda/Kokkos_Cuda_Team.hpp	/^  team_reduce(ReducerType const& reducer) const noexcept {$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	Cuda/Kokkos_Cuda_Team.hpp	/^  team_reduce(ReducerType const& reducer,$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	HIP/Kokkos_HIP_Team.hpp	/^  team_reduce(ReducerType const& reducer) const noexcept {$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	HIP/Kokkos_HIP_Team.hpp	/^  team_reduce(ReducerType const& reducer,$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	Kokkos_HPX.hpp	/^  KOKKOS_INLINE_FUNCTION ValueType team_reduce(const ValueType &value,$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION ValueType
team_reduce	Kokkos_HPX.hpp	/^  team_reduce(const ReducerType &) const {}$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION ValueType team_reduce(const ValueType& value,$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION ValueType
team_reduce	SYCL/Kokkos_SYCL_Team.hpp	/^  team_reduce(ReducerType const& reducer) const noexcept {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	SYCL/Kokkos_SYCL_Team.hpp	/^  team_reduce(ReducerType const& reducer,$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	Threads/Kokkos_ThreadsTeam.hpp	/^      team_reduce(const ReducerType& reducer,$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<Kokkos::is_reducer<ReducerType>::value>
team_reduce	Threads/Kokkos_ThreadsTeam.hpp	/^  team_reduce(ReducerType const& reducer) const noexcept {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* team_reduce() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
team_reduce	impl/Kokkos_HostThreadTeam.hpp	/^  team_reduce(ReducerType const& reducer) const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce	impl/Kokkos_HostThreadTeam.hpp	/^  team_reduce(ReducerType const& reducer,$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
team_reduce_bytes	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr size_t team_reduce_bytes() const {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
team_reduce_local	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* team_reduce_local() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
team_reduce_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  static inline int team_reduce_size() { return TEAM_REDUCE_SIZE; }$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:int
team_reduce_size	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION static int team_reduce_size() {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_rendezvous	impl/Kokkos_HostThreadTeam.hpp	/^  inline bool team_rendezvous() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:bool
team_rendezvous	impl/Kokkos_HostThreadTeam.hpp	/^  inline bool team_rendezvous(const int source_team_rank) const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:bool
team_rendezvous_release	impl/Kokkos_HostThreadTeam.hpp	/^  inline void team_rendezvous_release() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:void
team_scan	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION Type team_scan(const Type& value) const {$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION Type
team_scan	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION Type team_scan(const Type& value,$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION Type
team_scan	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION Type team_scan(const Type& value) const {$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION Type
team_scan	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION Type team_scan(const Type& value,$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION Type
team_scan	Kokkos_HPX.hpp	/^  team_scan(const Type &value, Type *const global_accum = nullptr) const {$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION Type
team_scan	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION Type team_scan(const Type& value) const {$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION Type
team_scan	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  team_scan(const ArgType& \/*value*\/, ArgType* const \/*global_accum*\/) const {$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION ArgType
team_scan	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION Type team_scan(const Type& input_value,$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION Type
team_scan	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION Type team_scan(const Type& value) const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION Type
team_scan	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION ArgType team_scan(const ArgType& value) const {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION ArgType
team_scan	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION ArgType team_scan(const ArgType& value,$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION ArgType
team_scan	impl/Kokkos_HostThreadTeam.hpp	/^  KOKKOS_INLINE_FUNCTION T team_scan(T const& value,$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION T
team_scheduler_info	impl/Kokkos_SimpleTaskScheduler.hpp	/^  team_scheduler_info_type const& team_scheduler_info() const& {$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION team_scheduler_info_type const &
team_scheduler_info	impl/Kokkos_SimpleTaskScheduler.hpp	/^  team_scheduler_info_type& team_scheduler_info() & {$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_INLINE_FUNCTION team_scheduler_info_type &
team_scheduler_info_storage	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using team_scheduler_info_storage =$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:Impl::NoUniqueAddressMemberEmulation<team_scheduler_info_type>
team_scheduler_info_type	impl/Kokkos_MultipleTaskQueue.hpp	/^  using team_scheduler_info_type = SchedulerInfo;$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:SchedulerInfo
team_scheduler_info_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using team_scheduler_info_type =$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:task_queue_type::team_scheduler_info_type
team_scheduler_info_type	impl/Kokkos_SingleTaskQueue.hpp	/^  using team_scheduler_info_type  = EmptyTeamSchedulerInfo;$/;"	t	class:Kokkos::Impl::SingleTaskQueue	typeref:typename:EmptyTeamSchedulerInfo
team_scheduler_info_type	impl/Kokkos_TaskQueueCommon.hpp	/^    using team_scheduler_info_type = typename Derived::team_scheduler_info_type;$/;"	t	function:Kokkos::Impl::TaskQueueCommonMixin::schedule_aggregate	typeref:typename:Derived::team_scheduler_info_type
team_scheduler_type	Kokkos_TaskScheduler.hpp	/^  using team_scheduler_type = BasicTaskScheduler;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:BasicTaskScheduler
team_scheduler_type	impl/Kokkos_TaskQueueMultiple.hpp	/^  using team_scheduler_type = BasicTaskScheduler<ExecSpace, team_queue_type>;$/;"	t	class:Kokkos::Impl::LeagueQueueCollection	typeref:typename:BasicTaskScheduler<ExecSpace,team_queue_type>
team_scratch	Cuda/Kokkos_Cuda_Team.hpp	/^  const execution_space::scratch_memory_space& team_scratch($/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_scratch	HIP/Kokkos_HIP_Team.hpp	/^  const execution_space::scratch_memory_space& team_scratch($/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_scratch	Kokkos_HPX.hpp	/^  const execution_space::scratch_memory_space &team_scratch(const int) const {$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_scratch	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  const execution_space::scratch_memory_space& team_scratch(int level) const {$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_scratch	SYCL/Kokkos_SYCL_Team.hpp	/^  const execution_space::scratch_memory_space& team_scratch($/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_scratch	Threads/Kokkos_ThreadsTeam.hpp	/^  const execution_space::scratch_memory_space& team_scratch(int) const {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_scratch	impl/Kokkos_HostThreadTeam.hpp	/^  const scratch_memory_space& team_scratch(int) const {$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const scratch_memory_space &
team_scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_t team_scratch_size(int level) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
team_scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_t team_scratch_size(int level) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
team_scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_t team_scratch_size(int level) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
team_shared	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  KOKKOS_FUNCTION void* team_shared() const {$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:KOKKOS_FUNCTION void *
team_shared	impl/Kokkos_HostThreadTeam.hpp	/^  int64_t* team_shared() const noexcept {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:int64_t *
team_shared_bytes	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr size_t team_shared_bytes() const {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
team_shared_size	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  KOKKOS_FUNCTION int team_shared_size() const {$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:KOKKOS_FUNCTION int
team_shmem	Cuda/Kokkos_Cuda_Team.hpp	/^  const execution_space::scratch_memory_space& team_shmem() const {$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_shmem	HIP/Kokkos_HIP_Team.hpp	/^  const execution_space::scratch_memory_space& team_shmem() const {$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_shmem	Kokkos_HPX.hpp	/^  const scratch_memory_space &team_shmem() const {$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const scratch_memory_space &
team_shmem	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  const execution_space::scratch_memory_space& team_shmem() const {$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_shmem	SYCL/Kokkos_SYCL_Team.hpp	/^  const execution_space::scratch_memory_space& team_shmem() const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_shmem	Threads/Kokkos_ThreadsTeam.hpp	/^  const execution_space::scratch_memory_space& team_shmem() const {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
team_shmem	impl/Kokkos_HostThreadTeam.hpp	/^  const scratch_memory_space& team_shmem() const {$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const scratch_memory_space &
team_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size	Cuda/Kokkos_Cuda_Task.hpp	/^  __device__ int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__device__ int
team_size	Cuda/Kokkos_Cuda_Task.hpp	/^  __host__ int team_size() const { return 0; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:__host__ int
team_size	Cuda/Kokkos_Cuda_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int team_size() const {$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size	HIP/Kokkos_HIP_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int team_size() const {$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_size	Kokkos_HPX.hpp	/^  KOKKOS_INLINE_FUNCTION int team_size() const noexcept { return m_team_size; }$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_size	Kokkos_HPX.hpp	/^  inline int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_INLINE_FUNCTION int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_size	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size	OpenMPTarget/Kokkos_OpenMPTarget_Task.hpp	/^  int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TaskExec	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size	SYCL/Kokkos_SYCL_Team.hpp	/^  KOKKOS_INLINE_FUNCTION int team_size() const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_size	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline int team_size() const { return 1; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size	Threads/Kokkos_ThreadsTeam.hpp	/^  KOKKOS_INLINE_FUNCTION int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_size	Threads/Kokkos_ThreadsTeam.hpp	/^  inline int team_size() const { return m_team_size; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size	impl/Kokkos_HostThreadTeam.hpp	/^  int team_size() const noexcept { return m_data.m_team_size; }$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION int
team_size_max	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline int team_size_max(const FunctorType& f, const ReducerType& \/*r*\/,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline int team_size_max(const FunctorType& f,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int team_size_max(const FunctorType& f, const ParallelForTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline int team_size_max(const FunctorType& f, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline int team_size_max(const FunctorType& f,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int team_size_max(FunctorType const& f, ParallelForTag const&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Kokkos_HPX.hpp	/^  inline static int team_size_max(const FunctorType &) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Kokkos_HPX.hpp	/^  int team_size_max(const FunctorType &, const ParallelForTag &) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Kokkos_HPX.hpp	/^  int team_size_max(const FunctorType &, const ParallelReduceTag &) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Kokkos_HPX.hpp	/^  int team_size_max(const FunctorType &, const ReducerType &,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline int team_size_max(const FunctorType& f, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int team_size_max(const FunctorType&, const ParallelForTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int team_size_max(const FunctorType&, const ParallelReduceTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline static int team_size_max(const FunctorType&, const ParallelForTag&) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline static int team_size_max(const FunctorType&, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline static int team_size_max(const FunctorType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline int team_size_max(const FunctorType& f, const ReducerType& \/*r*\/,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline int team_size_max(const FunctorType& f,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int team_size_max(FunctorType const& f, ParallelForTag const&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  int team_size_max(const FunctorType&, const ParallelForTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  int team_size_max(const FunctorType&, const ParallelReduceTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  int team_size_max(const FunctorType&, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Threads/Kokkos_ThreadsTeam.hpp	/^  inline int team_size_max(const FunctorType& f, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Threads/Kokkos_ThreadsTeam.hpp	/^  int team_size_max(const FunctorType&, const ParallelForTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_max	Threads/Kokkos_ThreadsTeam.hpp	/^  int team_size_max(const FunctorType&, const ParallelReduceTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline int team_size_recommended(const FunctorType& f,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int team_size_recommended(const FunctorType& f, const ParallelForTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  int team_size_recommended(const FunctorType& f, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  inline int team_size_recommended(FunctorType const& f,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int team_size_recommended(FunctorType const& f, ParallelForTag const&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  int team_size_recommended(FunctorType const& f, ReducerType const&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Kokkos_HPX.hpp	/^  inline static int team_size_recommended(const FunctorType &) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Kokkos_HPX.hpp	/^  inline static int team_size_recommended(const FunctorType &, const int &) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Kokkos_HPX.hpp	/^  int team_size_recommended(const FunctorType &, const ParallelForTag &) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Kokkos_HPX.hpp	/^  int team_size_recommended(const FunctorType &, const ReducerType &,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Kokkos_HPX.hpp	/^  int team_size_recommended(const FunctorType &,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline int team_size_recommended(const FunctorType& f, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int team_size_recommended(const FunctorType&, const ParallelForTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	OpenMP/Kokkos_OpenMP_Team.hpp	/^  int team_size_recommended(const FunctorType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline static int team_size_recommended(const FunctorType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  inline int team_size_recommended(FunctorType const& f,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int team_size_recommended(FunctorType const& f, ParallelForTag const&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  int team_size_recommended(FunctorType const& f, ReducerType const&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  int team_size_recommended(const FunctorType&, const ParallelForTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  int team_size_recommended(const FunctorType&, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  int team_size_recommended(const FunctorType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Threads/Kokkos_ThreadsTeam.hpp	/^  inline int team_size_recommended(const FunctorType& f, const ReducerType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Threads/Kokkos_ThreadsTeam.hpp	/^  int team_size_recommended(const FunctorType&, const ParallelForTag&) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_size_recommended	Threads/Kokkos_ThreadsTeam.hpp	/^  int team_size_recommended(const FunctorType&,$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
team_tuners	impl/Kokkos_Tools_Generic.hpp	/^    team_tuners;$/;"	v	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:std::map<std::string,Kokkos::Tools::Experimental::TeamSizeTuner>
team_work_index	Threads/Kokkos_ThreadsExec.hpp	/^  inline long team_work_index() const { return m_team_work_index; }$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:long
test_equal	impl/Kokkos_HostBarrier.hpp	/^  static bool test_equal(int* ptr, int v) noexcept {$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION bool
test_for_member	Kokkos_Concepts.hpp	/^  static int32_t test_for_member(decltype(&T::shmem_size_me)) {$/;"	f	class:Kokkos::Impl::has_member_shmem_size	typeref:typename:int32_t
test_for_member	Kokkos_Concepts.hpp	/^  static int32_t test_for_member(decltype(&T::team_shmem_size)) {$/;"	f	class:Kokkos::Impl::has_member_team_shmem_size	typeref:typename:int32_t
test_for_member	Kokkos_Concepts.hpp	/^  static int64_t test_for_member(...) {$/;"	f	class:Kokkos::Impl::has_member_shmem_size	typeref:typename:int64_t
test_for_member	Kokkos_Concepts.hpp	/^  static int64_t test_for_member(...) {$/;"	f	class:Kokkos::Impl::has_member_team_shmem_size	typeref:typename:int64_t
tgamma	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 tgamma(__float128 x) { return ::tgammaq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
then_parallel_for	Kokkos_GraphNode.hpp	/^  auto then_parallel_for(Policy&& policy, Functor&& functor) const {$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
then_parallel_for	Kokkos_GraphNode.hpp	/^  auto then_parallel_for(std::size_t n, Functor&& functor) const {$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
then_parallel_for	Kokkos_GraphNode.hpp	/^  auto then_parallel_for(std::string arg_name, Policy&& arg_policy,$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
then_parallel_for	Kokkos_GraphNode.hpp	/^  auto then_parallel_for(std::string name, std::size_t n,$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
then_parallel_reduce	Kokkos_GraphNode.hpp	/^  auto then_parallel_reduce(Policy&& arg_policy, Functor&& functor,$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
then_parallel_reduce	Kokkos_GraphNode.hpp	/^  auto then_parallel_reduce(std::string arg_name, Policy&& arg_policy,$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
then_parallel_reduce	Kokkos_GraphNode.hpp	/^  auto then_parallel_reduce(std::string label,$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
then_parallel_reduce	Kokkos_GraphNode.hpp	/^  auto then_parallel_reduce(typename execution_space::size_type idx_end,$/;"	f	class:Kokkos::Experimental::GraphNodeRef	typeref:typename:auto
this_type	impl/Kokkos_SharedAlloc.hpp	/^  using this_type = SharedAllocationRecord<MemorySpace, DestroyFunctor>;$/;"	t	function:Kokkos::Impl::__anon4cadf70f0110::deallocate	typeref:typename:SharedAllocationRecord<MemorySpace,DestroyFunctor>
thread	Kokkos_ExecPolicy.hpp	/^  const TeamMemberType& thread;$/;"	m	struct:Kokkos::Impl::TeamThreadRangeBoundariesStruct	typeref:typename:const TeamMemberType &
thread	Kokkos_ExecPolicy.hpp	/^  const TeamMemberType& thread;$/;"	m	struct:Kokkos::Impl::TeamVectorRangeBoundariesStruct	typeref:typename:const TeamMemberType &
threadIdx	impl/KokkosExp_IterateTileGPU.hpp	/^  const EmulateCUDADim3<index_type> threadIdx;$/;"	m	struct:Kokkos::Impl::DeviceIterateTile	typeref:typename:const EmulateCUDADim3<index_type>
threadIdx	impl/KokkosExp_IterateTileGPU.hpp	/^  const EmulateCUDADim3<index_type> threadIdx;$/;"	m	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:const EmulateCUDADim3<index_type>
thread_buffer	Kokkos_HPX.hpp	/^  thread_buffer()$/;"	f	class:Kokkos::Impl::thread_buffer
thread_buffer	Kokkos_HPX.hpp	/^  thread_buffer(const std::size_t num_threads,$/;"	f	class:Kokkos::Impl::thread_buffer
thread_buffer	Kokkos_HPX.hpp	/^class thread_buffer {$/;"	c	namespace:Kokkos::Impl
thread_local_bytes	impl/Kokkos_HostThreadTeam.hpp	/^  constexpr size_t thread_local_bytes() const {$/;"	f	class:Kokkos::Impl::HostThreadTeamData	typeref:typename:size_t
thread_main	Threads/Kokkos_Threads_WorkGraphPolicy.hpp	/^  static inline void thread_main(ThreadsExec& exec, const void* arg) noexcept {$/;"	f	class:Kokkos::Impl::ParallelFor	typeref:typename:void
thread_mapping	impl/Kokkos_hwloc.cpp	/^unsigned thread_mapping(const char* const label, const bool allow_async,$/;"	f	namespace:Kokkos::hwloc	typeref:typename:unsigned
thread_scratch	Cuda/Kokkos_Cuda_Team.hpp	/^  const execution_space::scratch_memory_space& thread_scratch($/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
thread_scratch	HIP/Kokkos_HIP_Team.hpp	/^  const execution_space::scratch_memory_space& thread_scratch($/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
thread_scratch	Kokkos_HPX.hpp	/^  const execution_space::scratch_memory_space &thread_scratch(const int) const {$/;"	f	struct:Kokkos::Impl::HPXTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
thread_scratch	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  const execution_space::scratch_memory_space& thread_scratch(int level) const {$/;"	f	class:Kokkos::Impl::OpenMPTargetExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
thread_scratch	SYCL/Kokkos_SYCL_Team.hpp	/^  const execution_space::scratch_memory_space& thread_scratch($/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
thread_scratch	Threads/Kokkos_ThreadsTeam.hpp	/^  const execution_space::scratch_memory_space& thread_scratch(int) const {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const execution_space::scratch_memory_space &
thread_scratch	impl/Kokkos_HostThreadTeam.hpp	/^  const scratch_memory_space& thread_scratch(int) const {$/;"	f	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION const scratch_memory_space &
thread_scratch_size	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  size_t thread_scratch_size(int level) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
thread_scratch_size	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  size_t thread_scratch_size(int level) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
thread_scratch_size	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  size_t thread_scratch_size(int level) const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
thread_team_member	Cuda/Kokkos_Cuda_Task.hpp	/^  using thread_team_member = TaskExec;$/;"	t	class:Kokkos::Impl::TaskExec	typeref:typename:TaskExec
thread_team_member	impl/Kokkos_HostThreadTeam.hpp	/^  using thread_team_member      = HostThreadTeamMember;$/;"	t	class:Kokkos::Impl::HostThreadTeamMember	typeref:typename:HostThreadTeamMember
threads_exec_team_base	Threads/Kokkos_ThreadsTeam.hpp	/^  inline ThreadsExec& threads_exec_team_base() const {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:ThreadsExec &
throw_runtime_exception	impl/Kokkos_Error.cpp	/^void throw_runtime_exception(const std::string &msg) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
tidx0	SYCL/Kokkos_SYCL_Team.hpp	/^  const iType tidx0 = loop_boundaries.member.item().get_local_id(0);$/;"	v	namespace:Kokkos	typeref:typename:const iType
tidx1	SYCL/Kokkos_SYCL_Team.hpp	/^  const iType tidx1 = loop_boundaries.member.item().get_local_id(1);$/;"	v	namespace:Kokkos	typeref:typename:const iType
tie	Kokkos_Pair.hpp	/^KOKKOS_FORCEINLINE_FUNCTION pair<T1&, T2&> tie(T1& x, T2& y) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION pair<T1 &,T2 &>
tile_subview	impl/Kokkos_ViewLayoutTiled.hpp	/^    tile_subview(const Kokkos::View<$/;"	f	namespace:Kokkos
tile_subview	impl/Kokkos_ViewLayoutTiled.hpp	/^    tile_subview(const Kokkos::View<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::View<T[N0][N1],std::conditional_t<(InnerP==Kokkos::Iterate::Left),Kokkos::LayoutLeft,Kokkos::LayoutRight>,P...>
tile_subview	impl/Kokkos_ViewLayoutTiled.hpp	/^    tile_subview(const Kokkos::View<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::View<T[N0][N1][N2],std::conditional_t<(InnerP==Kokkos::Iterate::Left),Kokkos::LayoutLeft,Kokkos::LayoutRight>,P...>
tile_subview	impl/Kokkos_ViewLayoutTiled.hpp	/^    tile_subview(const Kokkos::View<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::View<T[N0][N1][N2][N3],std::conditional_t<(InnerP==Kokkos::Iterate::Left),Kokkos::LayoutLeft,Kokkos::LayoutRight>,P...>
tile_subview	impl/Kokkos_ViewLayoutTiled.hpp	/^    tile_subview(const Kokkos::View<$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Kokkos::View<T[N0][N1][N2][N3][N4],std::conditional_t<(InnerP==Kokkos::Iterate::Left),Kokkos::LayoutLeft,Kokkos::LayoutRight>,P...>
tile_type	KokkosExp_MDRangePolicy.hpp	/^  using tile_type  = Kokkos::Array<array_index_type, rank>;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:Kokkos::Array<array_index_type,rank>
tmp	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^      ValueType tmp = ValueType();$/;"	v	namespace:Kokkos	typeref:typename:ValueType
tmp	Threads/Kokkos_ThreadsTeam.hpp	/^    ValueType tmp = ValueType();$/;"	v	namespace:Kokkos	typeref:typename:ValueType
tmp_in	HIP/Kokkos_HIP_Vectorization.hpp	/^    conv_type tmp_in;$/;"	m	struct:Kokkos::Experimental::Impl::in_place_shfl_op	typeref:typename:conv_type
tmp_out	HIP/Kokkos_HIP_Vectorization.hpp	/^    shfl_type tmp_out;$/;"	m	struct:Kokkos::Experimental::Impl::in_place_shfl_op	typeref:typename:shfl_type
to_array_potentially_narrowing	KokkosExp_MDRangePolicy.hpp	/^constexpr Array to_array_potentially_narrowing(const U (&init)[M]) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:Array
to_array_potentially_narrowing	KokkosExp_MDRangePolicy.hpp	/^constexpr NVCC_WONT_LET_ME_CALL_YOU_Array to_array_potentially_narrowing($/;"	f	namespace:Kokkos::Impl	typeref:typename:NVCC_WONT_LET_ME_CALL_YOU_Array
to_chars_i	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_FUNCTION constexpr to_chars_result to_chars_i(char *first, char *last,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FUNCTION to_chars_result
to_chars_impl	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_FUNCTION constexpr void to_chars_impl(char *first, unsigned int len,$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FUNCTION void
to_chars_len	impl/Kokkos_StringManipulation.hpp	/^KOKKOS_FUNCTION constexpr unsigned int to_chars_len(Unsigned val) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:KOKKOS_FUNCTION unsigned int
to_chars_result	impl/Kokkos_StringManipulation.hpp	/^struct to_chars_result {$/;"	s	namespace:Kokkos::Impl
to_std_pair	Kokkos_Pair.hpp	/^  std::pair<T1, T2> to_std_pair() const {$/;"	f	struct:Kokkos::pair	typeref:typename:std::pair<T1,T2>
token_type	Kokkos_UniqueToken.hpp	/^  using token_type       = UniqueToken<exec_space>;$/;"	t	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:UniqueToken<exec_space>
token_type	Kokkos_UniqueToken.hpp	/^  using token_type = UniqueToken<exec_space, TokenScope>;$/;"	t	class:Kokkos::Experimental::AcquireUniqueToken	typeref:typename:UniqueToken<exec_space,TokenScope>
toolInvokedFenceFunction	impl/Kokkos_Profiling_Interface.hpp	/^using toolInvokedFenceFunction = Kokkos_Tools_toolInvokedFenceFunction;$/;"	t	namespace:Kokkos::Tools::Experimental	typeref:typename:Kokkos_Tools_toolInvokedFenceFunction
toolProvidedInfo	impl/Kokkos_Profiling_C_Interface.h	/^  void* toolProvidedInfo;$/;"	m	struct:Kokkos_Tools_VariableInfo	typeref:typename:void *
tool_arguments	impl/Kokkos_Profiling.cpp	/^InitArguments tool_arguments;$/;"	v	namespace:Kokkos::Tools	typeref:typename:InitArguments
tool_help	impl/Kokkos_InitializationSettings.hpp	/^  bool tool_help        = false;$/;"	m	struct:Kokkos::InitArguments	typeref:typename:bool
tool_invoked_fence	impl/Kokkos_Profiling.cpp	/^void tool_invoked_fence(const uint32_t \/* devID *\/) {$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
tool_requirements	impl/Kokkos_Profiling.cpp	/^static ToolSettings tool_requirements;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:ToolSettings	file:
traceback_callstack	impl/Kokkos_Error.cpp	/^void traceback_callstack(std::ostream &msg) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
track_type	Kokkos_TaskScheduler.hpp	/^  using track_type = Kokkos::Impl::SharedAllocationTracker;$/;"	t	class:Kokkos::BasicTaskScheduler	typeref:typename:Kokkos::Impl::SharedAllocationTracker
track_type	impl/Kokkos_SimpleTaskScheduler.hpp	/^  using track_type = Kokkos::Impl::SharedAllocationTracker;$/;"	t	class:Kokkos::SimpleTaskScheduler	typeref:typename:Kokkos::Impl::SharedAllocationTracker
track_type	impl/Kokkos_ViewTracker.hpp	/^  using track_type  = Kokkos::Impl::SharedAllocationTracker;$/;"	t	struct:Kokkos::Impl::ViewTracker	typeref:typename:Kokkos::Impl::SharedAllocationTracker
tracker_type	impl/Kokkos_FixedBufferMemoryPool.hpp	/^  using tracker_type = Kokkos::Impl::SharedAllocationTracker;$/;"	t	class:Kokkos::Impl::FixedBlockSizeMemoryPool	typeref:typename:Kokkos::Impl::SharedAllocationTracker
tracking_disable	impl/Kokkos_SharedAlloc.hpp	/^  static void tracking_disable() { t_tracking_enabled = 0; }$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void
tracking_enable	impl/Kokkos_SharedAlloc.hpp	/^  static void tracking_enable() { t_tracking_enabled = 1; }$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:void
tracking_enabled	impl/Kokkos_SharedAlloc.hpp	/^  bool tracking_enabled() { return (!(m_record_bits & DO_NOT_DEREF_FLAG)); }$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION bool
tracking_enabled	impl/Kokkos_SharedAlloc.hpp	/^  static KOKKOS_FUNCTION int tracking_enabled() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:KOKKOS_FUNCTION int
trait_matches_specification	traits/Kokkos_ExecutionSpaceTrait.hpp	/^  using trait_matches_specification = Kokkos::is_execution_space<T>;$/;"	t	struct:Kokkos::Impl::ExecutionSpaceTrait	typeref:typename:Kokkos::is_execution_space<T>
trait_matches_specification	traits/Kokkos_GraphKernelTrait.hpp	/^  using trait_matches_specification = std::is_same<T, IsGraphKernelTag>;$/;"	t	struct:Kokkos::Impl::GraphKernelTrait	typeref:typename:std::is_same<T,IsGraphKernelTag>
trait_matches_specification	traits/Kokkos_OccupancyControlTrait.hpp	/^  using trait_matches_specification = std::integral_constant<$/;"	t	struct:Kokkos::Impl::OccupancyControlTrait
trait_matches_specification	traits/Kokkos_WorkItemPropertyTrait.hpp	/^  using trait_matches_specification =$/;"	t	struct:Kokkos::Impl::WorkItemPropertyTrait	typeref:typename:Kokkos::Experimental::is_work_item_property<T>
trait_matches_specification	traits/Kokkos_WorkTagTrait.hpp	/^  using trait_matches_specification = std::integral_constant<$/;"	t	struct:Kokkos::Impl::WorkTagTrait
traits	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using traits = PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:PolicyTraits<Properties...>
traits	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using traits    = PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:PolicyTraits<Properties...>
traits	KokkosExp_MDRangePolicy.hpp	/^  using traits       = Kokkos::Impl::PolicyTraits<Properties...>;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:Kokkos::Impl::PolicyTraits<Properties...>
traits	Kokkos_Crs.hpp	/^  using traits = ViewTraits<DataType*, Arg1Type, Arg2Type, void>;$/;"	t	class:Kokkos::Crs	typeref:typename:ViewTraits<DataType *,Arg1Type,Arg2Type,void>
traits	Kokkos_ExecPolicy.hpp	/^  using traits = Impl::PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:Impl::PolicyTraits<Properties...>
traits	Kokkos_ExecPolicy.hpp	/^  using traits = Impl::PolicyTraits<Properties...>;$/;"	t	class:Kokkos::RangePolicy	typeref:typename:Impl::PolicyTraits<Properties...>
traits	Kokkos_ExecPolicy.hpp	/^  using traits = Impl::PolicyTraits<Properties...>;$/;"	t	class:Kokkos::TeamPolicy	typeref:typename:Impl::PolicyTraits<Properties...>
traits	Kokkos_HPX.hpp	/^  using traits = PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:PolicyTraits<Properties...>
traits	Kokkos_View.hpp	/^  using traits = ViewTraits<DataType, Properties...>;$/;"	t	class:Kokkos::View	typeref:typename:ViewTraits<DataType,Properties...>
traits	Kokkos_WorkGraphPolicy.hpp	/^  using traits           = Kokkos::Impl::PolicyTraits<Properties...>;$/;"	t	class:Kokkos::WorkGraphPolicy	typeref:typename:Kokkos::Impl::PolicyTraits<Properties...>
traits	OpenMP/Kokkos_OpenMP_Team.hpp	/^  using traits = PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:PolicyTraits<Properties...>
traits	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using traits = PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:PolicyTraits<Properties...>
traits	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using traits = PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:PolicyTraits<Properties...>
traits	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  using traits = PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:PolicyTraits<Properties...>
traits	Threads/Kokkos_ThreadsTeam.hpp	/^  using traits = PolicyTraits<Properties...>;$/;"	t	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:PolicyTraits<Properties...>
traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using traits       = Kokkos::ViewTraits<T[N0][N1], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T[N0][N1],array_layout,P...>
traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using traits       = Kokkos::ViewTraits<T[N0][N1][N2], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T[N0][N1][N2],array_layout,P...>
traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using traits = Kokkos::ViewTraits<T[N0][N1][N2][N3], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T[N0][N1][N2][N3],array_layout,P...>
traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using traits = Kokkos::ViewTraits<T[N0][N1][N2][N3][N4], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T[N0][N1][N2][N3][N4],array_layout,P...>
traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using traits =$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T[N0][N1][N2][N3][N4][N5],array_layout,P...>
traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using traits =$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T[N0][N1][N2][N3][N4][N5][N6],array_layout,P...>
traits	impl/Kokkos_ViewLayoutTiled.hpp	/^  using traits =$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::ViewTraits<T[N0][N1][N2][N3][N4][N5][N6][N7],array_layout,P...>
transpose_crs	Kokkos_Crs.hpp	/^void transpose_crs(Crs<DataType, Arg1Type, Arg2Type, SizeType>& out,$/;"	f	namespace:Kokkos	typeref:typename:void
trunc	impl/Kokkos_QuadPrecisionMath.hpp	/^inline __float128 trunc(__float128 x) { return ::truncq(x); }$/;"	f	namespace:Kokkos	typeref:typename:__float128
try_add_waiting	impl/Kokkos_TaskNode.hpp	/^  bool try_add_waiting(task_base_type& depends_on_this) {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
try_lock	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  bool try_lock() { return static_cast<bool>(omp_test_lock(&m_lock)); }$/;"	f	class:Kokkos::Experimental::MasterLock	typeref:typename:bool
try_push	impl/Kokkos_LIFO.hpp	/^  bool try_push(node_type& node) {$/;"	f	class:Kokkos::Impl::SingleConsumeOperationLIFO	typeref:typename:KOKKOS_INLINE_FUNCTION bool
try_to_steal_ready_task	impl/Kokkos_MultipleTaskQueue.hpp	/^  OptionalRef<task_base_type> try_to_steal_ready_task() {$/;"	f	struct:Kokkos::Impl::MultipleTaskQueueTeamEntry	typeref:typename:KOKKOS_INLINE_FUNCTION OptionalRef<task_base_type>
try_wait	impl/Kokkos_HostBarrier.hpp	/^  bool try_wait() const noexcept { return try_wait(m_buffer, m_size, m_step); }$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION bool
try_wait	impl/Kokkos_HostBarrier.hpp	/^  static bool try_wait(int* buffer, const int size, const int step) noexcept {$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION bool
tune	Kokkos_Tuners.hpp	/^  void tune(Kokkos::MDRangePolicy<Properties...>& policy) {$/;"	f	struct:Kokkos::Tools::Experimental::MDRangeTuner	typeref:typename:void
tune	Kokkos_Tuners.hpp	/^  void tune(Kokkos::TeamPolicy<Properties...>& policy) {$/;"	f	class:Kokkos::Tools::Experimental::TeamSizeTuner	typeref:typename:void
tune	impl/Kokkos_Tools_Generic.hpp	/^  static void tune(const size_t tuning_context, const std::string& label,$/;"	f	struct:Kokkos::Tools::Experimental::Impl::ReductionSwitcher	typeref:typename:void
tune_internals	impl/Kokkos_Core.cpp	/^bool Kokkos::tune_internals() noexcept { return g_tune_internals; }$/;"	f	class:Kokkos	typeref:typename:bool
tune_internals	impl/Kokkos_InitializationSettings.hpp	/^  bool tune_internals;$/;"	m	struct:Kokkos::InitArguments	typeref:typename:bool
tune_policy	impl/Kokkos_Tools_Generic.hpp	/^void tune_policy(const size_t \/**tuning_context*\/, const std::string& label_in,$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
tune_policy	impl/Kokkos_Tools_Generic.hpp	/^void tune_policy(const size_t, const std::string&, ExecPolicy&, const Functor&,$/;"	f	namespace:Kokkos::Tools::Experimental::Impl	typeref:typename:void
tuner	Kokkos_Tuners.hpp	/^  TunerType tuner;$/;"	m	class:Kokkos::Tools::Experimental::TeamSizeTuner	typeref:typename:TunerType
tuner	Kokkos_Tuners.hpp	/^  TunerType tuner;$/;"	m	struct:Kokkos::Tools::Experimental::MDRangeTuner	typeref:typename:TunerType
tuning_max	Kokkos_Tuners.hpp	/^  static constexpr double tuning_max               = 0.999;$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:double
tuning_min	Kokkos_Tuners.hpp	/^  static constexpr double tuning_min               = 0.0;$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:double
tuning_step	Kokkos_Tuners.hpp	/^  double tuning_step = tuning_max \/ max_space_dimension_size;$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:double
tuning_variable_id	Kokkos_Tuners.hpp	/^  size_t tuning_variable_id;$/;"	m	struct:Kokkos::Tools::Experimental::CategoricalTuner	typeref:typename:size_t
type	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^  using type = __half;$/;"	t	struct:Kokkos::Impl::half_impl_t	typeref:typename:__half
type	Cuda/Kokkos_Cuda_Half_Impl_Type.hpp	/^  using type = __nv_bfloat16;$/;"	t	struct:Kokkos::Impl::bhalf_impl_t	typeref:typename:__nv_bfloat16
type	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^  using type                     = Iterate;$/;"	t	struct:Kokkos::default_inner_direction	typeref:typename:Iterate
type	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^  using type                     = Iterate;$/;"	t	struct:Kokkos::default_outer_direction	typeref:typename:Iterate
type	HIP/Kokkos_HIP_Atomic.hpp	/^  using type = unsigned long long int;$/;"	t	function:Kokkos::atomic_assign	typeref:typename:unsigned long long int
type	HIP/Kokkos_HIP_Atomic.hpp	/^  using type = unsigned long long int;$/;"	t	function:Kokkos::atomic_exchange	typeref:typename:unsigned long long int
type	HIP/Kokkos_HIP_Half_Impl_Type.hpp	/^  using type = __half;$/;"	t	struct:Kokkos::Impl::half_impl_t	typeref:typename:__half
type	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^  using type                     = Iterate;$/;"	t	struct:Kokkos::default_inner_direction	typeref:typename:Iterate
type	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^  using type                     = Iterate;$/;"	t	struct:Kokkos::default_outer_direction	typeref:typename:Iterate
type	KokkosExp_InterOp.hpp	/^  using type = Tp;$/;"	t	struct:Kokkos::Impl::device_memory_space	typeref:typename:Tp
type	KokkosExp_InterOp.hpp	/^  using type =$/;"	t	struct:Kokkos::Experimental::python_view_type	typeref:typename:Kokkos::Impl::python_view_type_impl_t<typename ViewT::array_type>
type	KokkosExp_MDRangePolicy.hpp	/^  using type                     = Iterate;$/;"	t	struct:Kokkos::default_inner_direction	typeref:typename:Iterate
type	KokkosExp_MDRangePolicy.hpp	/^  using type                     = Iterate;$/;"	t	struct:Kokkos::default_outer_direction	typeref:typename:Iterate
type	Kokkos_Atomics_Desul_Wrapper.hpp	/^    using type = desul::MemoryOrderAcqRel;$/;"	t	struct:Kokkos::Impl::KokkosToDesulMemoryOrder	typeref:typename:desul::MemoryOrderAcqRel
type	Kokkos_Atomics_Desul_Wrapper.hpp	/^    using type = desul::MemoryOrderAcquire;$/;"	t	struct:Kokkos::Impl::KokkosToDesulMemoryOrder	typeref:typename:desul::MemoryOrderAcquire
type	Kokkos_Atomics_Desul_Wrapper.hpp	/^    using type = desul::MemoryOrderRelaxed;$/;"	t	struct:Kokkos::Impl::KokkosToDesulMemoryOrder	typeref:typename:desul::MemoryOrderRelaxed
type	Kokkos_Atomics_Desul_Wrapper.hpp	/^    using type = desul::MemoryOrderRelease;$/;"	t	struct:Kokkos::Impl::KokkosToDesulMemoryOrder	typeref:typename:desul::MemoryOrderRelease
type	Kokkos_Atomics_Desul_Wrapper.hpp	/^    using type = desul::MemoryOrderSeqCst;$/;"	t	struct:Kokkos::Impl::KokkosToDesulMemoryOrder	typeref:typename:desul::MemoryOrderSeqCst
type	Kokkos_Complex.hpp	/^  using type = Impl::promote_2_t<T, U>;$/;"	t	function:Kokkos::pow	typeref:typename:Impl::promote_2_t<T,U>
type	Kokkos_Complex.hpp	/^  using type = Impl::promote_t<ArithmeticType>;$/;"	t	function:Kokkos::conj	typeref:typename:Impl::promote_t<ArithmeticType>
type	Kokkos_Concepts.hpp	/^  using type          = LaunchBounds<maxT, minB>;$/;"	t	struct:Kokkos::LaunchBounds	typeref:typename:LaunchBounds<maxT,minB>
type	Kokkos_Concepts.hpp	/^  using type          = T;$/;"	t	struct:Kokkos::Schedule	typeref:typename:T
type	Kokkos_Concepts.hpp	/^  using type       = T;$/;"	t	struct:Kokkos::IndexType	typeref:typename:T
type	Kokkos_DetectionIdiom.hpp	/^  using type    = Default;$/;"	t	struct:Kokkos::Impl::detector	typeref:typename:Default
type	Kokkos_DetectionIdiom.hpp	/^  using type    = Op<Args...>;$/;"	v	namespace:Kokkos::Impl	typeref:struct:detector using
type	Kokkos_Extents.hpp	/^  using type = Extents<Exts..., NewExtent>;$/;"	t	struct:Kokkos::Experimental::AppendExtent	typeref:typename:Extents<Exts...,NewExtent>
type	Kokkos_Extents.hpp	/^  using type = Extents<NewExtent, Exts...>;$/;"	t	struct:Kokkos::Experimental::PrependExtent	typeref:typename:Extents<NewExtent,Exts...>
type	Kokkos_Extents.hpp	/^  using type = Result;$/;"	t	struct:Kokkos::Impl::_parse_view_extents_impl::_parse_impl	typeref:typename:Result
type	Kokkos_Extents.hpp	/^  using type = ValueType * [Ext];$/;"	t	struct:Kokkos::Impl::ApplyExtent	typeref:typename:ValueType * [Ext]
type	Kokkos_Extents.hpp	/^  using type = ValueType*;$/;"	t	struct:Kokkos::Impl::ApplyExtent	typeref:typename:ValueType *
type	Kokkos_Extents.hpp	/^  using type = ValueType[Ext];$/;"	t	struct:Kokkos::Impl::ApplyExtent	typeref:typename:ValueType[Ext]
type	Kokkos_Extents.hpp	/^  using type = typename ApplyExtent<ValueType, Ext>::type[N];$/;"	t	struct:Kokkos::Impl::ApplyExtent	typeref:typename:ApplyExtent<ValueType,Ext>::type[N]
type	Kokkos_Extents.hpp	/^  using type = typename _next::type;$/;"	t	struct:Kokkos::Impl::_parse_view_extents_impl::_parse_impl	typeref:typename:_next::type
type	Kokkos_Extents.hpp	/^  using type = typename _parse_view_extents_impl ::_parse_impl<$/;"	t	struct:Kokkos::Impl::ParseViewExtents	typeref:typename:_parse_view_extents_impl::_parse_impl<DataType,Kokkos::Experimental::Extents<>>::type
type	Kokkos_Extents.hpp	/^  using type =$/;"	t	struct:Kokkos::Impl::ApplyExtent	typeref:typename:ApplyExtent<ValueType,Kokkos::Experimental::dynamic_extent>::type *
type	Kokkos_Extents.hpp	/^  using type =$/;"	t	struct:Kokkos::Impl::ApplyExtent	typeref:typename:ApplyExtent<ValueType,Kokkos::Experimental::dynamic_extent>::type[N]
type	Kokkos_Future.hpp	/^  using type = BasicFuture<value_type, TaskScheduler<execution_space>>;$/;"	t	class:Kokkos::Impl::ResolveFutureArgOrder	typeref:typename:BasicFuture<value_type,TaskScheduler<execution_space>>
type	Kokkos_Half.hpp	/^  using type = float;$/;"	t	struct:Kokkos::Impl::bhalf_impl_t	typeref:typename:float
type	Kokkos_Half.hpp	/^  using type = float;$/;"	t	struct:Kokkos::Impl::half_impl_t	typeref:typename:float
type	Kokkos_MathematicalFunctions.hpp	/^  using type = decltype(promote_t<T>() + promote_t<U>());$/;"	t	struct:Kokkos::Impl::promote_2
type	Kokkos_MathematicalFunctions.hpp	/^  using type = double;$/;"	t	struct:Kokkos::Impl::promote	typeref:typename:double
type	Kokkos_MathematicalFunctions.hpp	/^  using type = float;$/;"	t	struct:Kokkos::Impl::promote	typeref:typename:float
type	Kokkos_MathematicalFunctions.hpp	/^  using type = long double;$/;"	t	struct:Kokkos::Impl::promote	typeref:typename:long double
type	Kokkos_TaskScheduler_fwd.hpp	/^  using type = Kokkos::CudaUVMSpace;$/;"	t	struct:Kokkos::Impl::default_tasking_memory_space_for_execution_space	typeref:typename:Kokkos::CudaUVMSpace
type	Kokkos_TaskScheduler_fwd.hpp	/^  using type = typename ExecSpace::memory_space;$/;"	t	struct:Kokkos::Impl::default_tasking_memory_space_for_execution_space	typeref:typename:ExecSpace::memory_space
type	Kokkos_Tuners.hpp	/^  using type = std::vector<T>;$/;"	t	struct:Kokkos::Tools::Experimental::Impl::n_dimensional_sparse_structure	typeref:typename:std::vector<T>
type	Kokkos_Tuners.hpp	/^  using type =$/;"	t	struct:Kokkos::Tools::Experimental::Impl::n_dimensional_sparse_structure	typeref:typename:std::map<T,typename n_dimensional_sparse_structure<T,N-1>::type>
type	Kokkos_View.hpp	/^  using type = ValueType;$/;"	t	struct:Kokkos::Impl::RankDataType	typeref:typename:ValueType
type	Kokkos_View.hpp	/^  using type = typename RankDataType<ValueType, Rank - 1>::type*;$/;"	t	struct:Kokkos::Impl::RankDataType	typeref:typename:RankDataType<ValueType,Rank-1>::type *
type	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^    using type = std::conditional_t<(sizeof(ValueType) < TEAM_REDUCE_SIZE),$/;"	t	function:Kokkos::Impl::OpenMPTargetExecTeamMember::team_broadcast
type	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^    using type = std::conditional_t<(sizeof(value_type) < TEAM_REDUCE_SIZE),$/;"	t	function:Kokkos::Impl::OpenMPTargetExecTeamMember::team_reduce
type	SYCL/Kokkos_SYCL_Half_Impl_Type.hpp	/^  using type = sycl::half;$/;"	t	struct:Kokkos::Impl::half_impl_t	typeref:typename:sycl::half
type	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^  using type                     = Iterate;$/;"	t	struct:Kokkos::default_inner_direction	typeref:typename:Iterate
type	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^  using type                     = Iterate;$/;"	t	struct:Kokkos::default_outer_direction	typeref:typename:Iterate
type	impl/KokkosExp_Host_IterateTile.hpp	/^    using type = RankTag<Rank>;$/;"	t	struct:Kokkos::Impl::HostIterateTile::RankTag	typeref:typename:RankTag<Rank>
type	impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp	/^  using type     = unsigned long long int;$/;"	t	function:Kokkos::atomic_compare_exchange	typeref:typename:unsigned long long int
type	impl/Kokkos_Atomic_Exchange.hpp	/^  using type = std::conditional_t<sizeof(T) == sizeof(int), int, long>;$/;"	t	function:Kokkos::atomic_assign
type	impl/Kokkos_Atomic_Exchange.hpp	/^  using type = std::conditional_t<sizeof(T) == sizeof(int), int, long>;$/;"	t	function:Kokkos::atomic_exchange
type	impl/Kokkos_Atomic_Exchange.hpp	/^  using type = unsigned long long int;$/;"	t	function:Kokkos::atomic_assign	typeref:typename:unsigned long long int
type	impl/Kokkos_Atomic_Exchange.hpp	/^  using type = unsigned long long int;$/;"	t	function:Kokkos::atomic_exchange	typeref:typename:unsigned long long int
type	impl/Kokkos_Atomic_View.hpp	/^  using type = int64_t;$/;"	t	struct:Kokkos::Impl::Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars	typeref:typename:int64_t
type	impl/Kokkos_Atomic_View.hpp	/^  using type = int;$/;"	t	struct:Kokkos::Impl::Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars	typeref:typename:int
type	impl/Kokkos_Combined_Reducer.hpp	/^  using type = Kokkos::Sum<T, Space>;$/;"	t	struct:Kokkos::Impl::_wrap_with_kokkos_sum	typeref:typename:Kokkos::Sum<T,Space>
type	impl/Kokkos_Combined_Reducer.hpp	/^  using type = decltype(Impl::_make_reducer_from_arg<Space>($/;"	t	struct:Kokkos::Impl::_reducer_from_arg
type	impl/Kokkos_ConcurrentBitset.hpp	/^    using type = Kokkos::pair<int, int>;$/;"	t	function:Kokkos::Impl::concurrent_bitset::acquire_bounded	typeref:typename:Kokkos::pair<int,int>
type	impl/Kokkos_ConcurrentBitset.hpp	/^    using type = Kokkos::pair<int, int>;$/;"	t	function:Kokkos::Impl::concurrent_bitset::acquire_bounded_lg2	typeref:typename:Kokkos::pair<int,int>
type	impl/Kokkos_FunctorAnalysis.hpp	/^    using type = V;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::deduce_value_type	typeref:typename:V
type	impl/Kokkos_FunctorAnalysis.hpp	/^    using type = decltype(deduce(&F::operator()));$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::deduce_value_type
type	impl/Kokkos_FunctorAnalysis.hpp	/^    using type = typename F::value_type;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_value_type	typeref:typename:F::value_type
type	impl/Kokkos_FunctorAnalysis.hpp	/^    using type = typename P::work_tag;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_work_tag	typeref:typename:P::work_tag
type	impl/Kokkos_FunctorAnalysis.hpp	/^    using type = typename T::execution_space;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_execution_space	typeref:typename:T::execution_space
type	impl/Kokkos_FunctorAnalysis.hpp	/^    using type = void;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_execution_space	typeref:typename:void
type	impl/Kokkos_FunctorAnalysis.hpp	/^    using type = void;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_value_type	typeref:typename:void
type	impl/Kokkos_FunctorAnalysis.hpp	/^    using type = void;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_work_tag	typeref:typename:void
type	impl/Kokkos_Profiling_C_Interface.h	/^  enum Kokkos_Tools_VariableInfo_ValueType type;$/;"	m	struct:Kokkos_Tools_VariableInfo	typeref:enum:Kokkos_Tools_VariableInfo_ValueType
type	impl/Kokkos_Profiling_Interface.hpp	/^  DeviceType type;$/;"	m	struct:Kokkos::Tools::Experimental::ExecutionSpaceIdentifier	typeref:typename:DeviceType
type	impl/Kokkos_QuadPrecisionMath.hpp	/^template <> struct promote<__float128> { using type = __float128; };$/;"	t	struct:Kokkos::Impl::promote	typeref:typename:__float128
type	impl/Kokkos_TaskBase.hpp	/^  using type = int;$/;"	t	struct:Kokkos::Impl::verify_task_base_size_is_48_note_actual_size_is_	typeref:typename:int
type	impl/Kokkos_Traits.hpp	/^  using type       = integral_nonzero_constant<T, 0>;$/;"	t	struct:Kokkos::Impl::integral_nonzero_constant	typeref:typename:integral_nonzero_constant<T,0>
type	impl/Kokkos_Traits.hpp	/^  using type       = integral_nonzero_constant<T, v>;$/;"	t	struct:Kokkos::Impl::integral_nonzero_constant	typeref:typename:integral_nonzero_constant<T,v>
type	impl/Kokkos_Traits.hpp	/^  using type       = void;$/;"	t	struct:Kokkos::Impl::if_c	typeref:typename:void
type	impl/Kokkos_Traits.hpp	/^  using type = DefaultType;$/;"	t	struct:Kokkos::Impl::has_condition	typeref:typename:DefaultType
type	impl/Kokkos_Traits.hpp	/^  using type = FalseType;$/;"	t	struct:Kokkos::Impl::if_c	typeref:typename:FalseType
type	impl/Kokkos_Traits.hpp	/^  using type = T;$/;"	t	struct:Kokkos::Impl::get_type	typeref:typename:T
type	impl/Kokkos_Traits.hpp	/^  using type = T;$/;"	t	struct:Kokkos::Impl::make_all_extents_into_pointers	typeref:typename:T
type	impl/Kokkos_Traits.hpp	/^  using type = TrueType;$/;"	t	struct:Kokkos::Impl::if_c	typeref:typename:TrueType
type	impl/Kokkos_Traits.hpp	/^  using type = std::conditional_t<self_value, S, typename next::type>;$/;"	t	struct:Kokkos::Impl::has_condition	typeref:typename:std::conditional_t<self_value,S,typename next::type>
type	impl/Kokkos_Traits.hpp	/^  using type = typename get_type<I - 1, Pack...>::type;$/;"	t	struct:Kokkos::Impl::get_type	typeref:typename:get_type<I-1,Pack...>::type
type	impl/Kokkos_Traits.hpp	/^  using type = typename make_all_extents_into_pointers<T>::type*;$/;"	t	struct:Kokkos::Impl::make_all_extents_into_pointers	typeref:typename:make_all_extents_into_pointers<T>::type *
type	impl/Kokkos_Traits.hpp	/^  using type = void;$/;"	t	struct:Kokkos::Impl::get_type	typeref:typename:void
type	impl/Kokkos_Utilities.hpp	/^  using type = T;$/;"	t	struct:Kokkos::Impl::identity	typeref:typename:T
type	impl/Kokkos_Utilities.hpp	/^  using type = std::remove_cv_t<std::remove_reference_t<T>>;$/;"	t	struct:Kokkos::Impl::remove_cvref	typeref:typename:std::remove_cv_t<std::remove_reference_t<T>>
type	impl/Kokkos_Utilities.hpp	/^  using type =$/;"	t	struct:Kokkos::Impl::filter_type_list	typeref:typename:concat_type_list_t<std::conditional_t<PredicateT<T>::value==ValueT,type_list<T>,type_list<>>...>
type	impl/Kokkos_ViewCtor.hpp	/^  using type = P;$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:P
type	impl/Kokkos_ViewCtor.hpp	/^  using type = Space;$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:Space
type	impl/Kokkos_ViewCtor.hpp	/^  using type = T *;$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:T *
type	impl/Kokkos_ViewCtor.hpp	/^  using type = std::string;$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:std::string
type	impl/Kokkos_ViewLayoutTiled.hpp	/^  using type         = Kokkos::View<T[N0][N1], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::View<T[N0][N1],array_layout,P...>
type	impl/Kokkos_ViewLayoutTiled.hpp	/^  using type         = Kokkos::View<T[N0][N1][N2], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::View<T[N0][N1][N2],array_layout,P...>
type	impl/Kokkos_ViewLayoutTiled.hpp	/^  using type   = Kokkos::View<T[N0][N1][N2][N3], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::View<T[N0][N1][N2][N3],array_layout,P...>
type	impl/Kokkos_ViewLayoutTiled.hpp	/^  using type   = Kokkos::View<T[N0][N1][N2][N3][N4], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::View<T[N0][N1][N2][N3][N4],array_layout,P...>
type	impl/Kokkos_ViewLayoutTiled.hpp	/^  using type = Kokkos::View<T[N0][N1][N2][N3][N4][N5], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::View<T[N0][N1][N2][N3][N4][N5],array_layout,P...>
type	impl/Kokkos_ViewLayoutTiled.hpp	/^  using type = Kokkos::View<T[N0][N1][N2][N3][N4][N5][N6], array_layout, P...>;$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::View<T[N0][N1][N2][N3][N4][N5][N6],array_layout,P...>
type	impl/Kokkos_ViewLayoutTiled.hpp	/^  using type =$/;"	t	class:Kokkos::Impl::ViewMapping	typeref:typename:Kokkos::View<T[N0][N1][N2][N3][N4][N5][N6][N7],array_layout,P...>
type	impl/Kokkos_ViewMapping.hpp	/^    using type = ViewDimension<N, Vals...>;$/;"	t	struct:Kokkos::Impl::ViewDimension::prepend	typeref:typename:ViewDimension<N,Vals...>
type	impl/Kokkos_ViewMapping.hpp	/^    using type = ViewDimension<Vals..., N>;$/;"	t	struct:Kokkos::Impl::ViewDimension::append	typeref:typename:ViewDimension<Vals...,N>
type	impl/Kokkos_ViewMapping.hpp	/^  using type = std::remove_cv_t<std::remove_reference_t<$/;"	t	struct:Kokkos::Impl::is_integral_extent	typeref:typename:std::remove_cv_t<std::remove_reference_t<typename Kokkos::Impl::get_type<I,Args...>::type>>
type	impl/Kokkos_ViewUniformType.hpp	/^  using type = ScalarType;$/;"	t	struct:Kokkos::Impl::ViewScalarToDataType	typeref:typename:ScalarType
type	impl/Kokkos_ViewUniformType.hpp	/^  using type = typename ViewScalarToDataType<ScalarType, Rank - 1>::type *;$/;"	t	struct:Kokkos::Impl::ViewScalarToDataType	typeref:typename:ViewScalarToDataType<ScalarType,Rank-1>::type *
type	impl/Kokkos_ViewUniformType.hpp	/^  using type =$/;"	t	struct:Kokkos::Impl::ViewUniformType	typeref:typename:Kokkos::View<data_type,array_layout,device_type,memory_traits>
type	traits/Kokkos_WorkTagTrait.hpp	/^    using type = typename PolicyTraitMatcher<TraitSpec, Trait>::type;$/;"	t	struct:Kokkos::Impl::_trait_matches_spec_predicate::apply	typeref:typename:PolicyTraitMatcher<TraitSpec,Trait>::type
type_erased_base_t	impl/Kokkos_GraphNodeImpl.hpp	/^  using type_erased_base_t =$/;"	t	struct:Kokkos::Impl::GraphNodeImpl	typeref:typename:GraphNodeImpl<ExecutionSpace,Kokkos::Experimental::TypeErasedTag,Kokkos::Experimental::TypeErasedTag>
type_id	impl/Kokkos_Profiling_C_Interface.h	/^  size_t type_id;$/;"	m	struct:Kokkos_Tools_OptimzationGoal	typeref:typename:size_t
type_id	impl/Kokkos_Profiling_C_Interface.h	/^  size_t type_id;$/;"	m	struct:Kokkos_Tools_VariableValue	typeref:typename:size_t
type_list_any	impl/Kokkos_Utilities.hpp	/^struct type_list_any<UnaryPred, type_list<T, Ts...>> {$/;"	v	namespace:Kokkos::Impl	typeref:struct:type_list_any template struct
type_list_remove_first	impl/Kokkos_Utilities.hpp	/^struct type_list_remove_first$/;"	s	namespace:Kokkos::Impl
unbind_this_thread	impl/Kokkos_hwloc.cpp	/^bool unbind_this_thread() { return true; }$/;"	f	namespace:Kokkos::hwloc	typeref:typename:bool
unbind_this_thread	impl/Kokkos_hwloc.cpp	/^bool unbind_this_thread() {$/;"	f	namespace:Kokkos::hwloc	typeref:typename:bool
underlying_space	Kokkos_LogicalSpaces.hpp	/^  BaseSpace underlying_space;$/;"	m	class:Kokkos::Experimental::LogicalMemorySpace	typeref:typename:BaseSpace
uniform_const_nomemspace_type	Kokkos_View.hpp	/^  using uniform_const_nomemspace_type =$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewUniformType<View,0>::const_nomemspace_type
uniform_const_type	Kokkos_View.hpp	/^  using uniform_const_type =$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewUniformType<View,0>::const_type
uniform_nomemspace_type	Kokkos_View.hpp	/^  using uniform_nomemspace_type =$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewUniformType<View,0>::nomemspace_type
uniform_runtime_const_nomemspace_type	Kokkos_View.hpp	/^  using uniform_runtime_const_nomemspace_type =$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewUniformType<View,0>::runtime_const_nomemspace_type
uniform_runtime_const_type	Kokkos_View.hpp	/^  using uniform_runtime_const_type =$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewUniformType<View,0>::runtime_const_type
uniform_runtime_nomemspace_type	Kokkos_View.hpp	/^  using uniform_runtime_nomemspace_type =$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewUniformType<View,0>::runtime_nomemspace_type
uniform_runtime_type	Kokkos_View.hpp	/^  using uniform_runtime_type =$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewUniformType<View,0>::runtime_type
uniform_type	Kokkos_View.hpp	/^  using uniform_type = typename Impl::ViewUniformType<View, 0>::type;$/;"	t	class:Kokkos::View	typeref:typename:Impl::ViewUniformType<View,0>::type
uninitialized	impl/Kokkos_TaskQueueMultiple.hpp	/^    char uninitialized;$/;"	m	union:Kokkos::Impl::LeagueQueueCollection::optional_queue	typeref:typename:char
unlock	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  void unlock() { omp_unset_lock(&m_lock); }$/;"	f	class:Kokkos::Experimental::MasterLock	typeref:typename:void
unlock_address_cuda_space	Cuda/Kokkos_Cuda_Locks.hpp	/^__device__ inline void unlock_address_cuda_space(void* ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
unlock_address_hbw_space	impl/Kokkos_HBWSpace.cpp	/^void unlock_address_hbw_space(void *ptr) {$/;"	f	namespace:Kokkos::Experimental::Impl	typeref:typename:void
unlock_address_hip_space	HIP/Kokkos_HIP_Locks.hpp	/^__device__ inline void unlock_address_hip_space(void* ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:__device__ void
unlock_address_host_space	impl/Kokkos_HostSpace.cpp	/^void unlock_address_host_space(void *ptr) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
unpadded_task_base_size	impl/Kokkos_TaskBase.hpp	/^constexpr size_t unpadded_task_base_size = 44 + 2 * sizeof(int16_t);$/;"	v	namespace:Kokkos::Impl	typeref:typename:size_t
unset	impl/Kokkos_Profiling.hpp	/^  enum PossiblyUnsetOption { unset, off, on };$/;"	e	enum:Kokkos::Tools::InitArguments::PossiblyUnsetOption
unset_string_option	impl/Kokkos_Profiling.cpp	/^const std::string InitArguments::unset_string_option = {$/;"	m	class:Kokkos::Tools::InitArguments	typeref:typename:const std::string
unset_string_option	impl/Kokkos_Profiling.hpp	/^  static const std::string unset_string_option;$/;"	m	struct:Kokkos::Tools::InitArguments	typeref:typename:const std::string
unspecified	impl/Kokkos_Core.cpp	/^    Kokkos::Impl::InitializationSettingsHelper<std::string>::unspecified =$/;"	m	class:Kokkos::Impl::InitializationSettingsHelper<std::string>	typeref:typename:Kokkos::Impl::InitializationSettingsHelper<std::string>::storage_type const
unspecified	impl/Kokkos_InitializationSettings.hpp	/^  static constexpr storage_type unspecified = CHAR_MAX;$/;"	m	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:storage_type
unspecified	impl/Kokkos_InitializationSettings.hpp	/^  static constexpr storage_type unspecified = INT_MIN;$/;"	m	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:storage_type
unspecified	impl/Kokkos_InitializationSettings.hpp	/^  static storage_type const unspecified;$/;"	m	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:storage_type const
update_scheduling_info	impl/Kokkos_TaskNode.hpp	/^  void update_scheduling_info(member_type& \/*member*\/) {$/;"	f	class:Kokkos::Impl::RunnableTask	typeref:typename:KOKKOS_INLINE_FUNCTION void
update_scheduling_info_from_completed_predecessor	impl/Kokkos_MultipleTaskQueue.hpp	/^  void update_scheduling_info_from_completed_predecessor($/;"	f	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:KOKKOS_INLINE_FUNCTION void
update_scheduling_info_from_completed_predecessor	impl/Kokkos_TaskQueueCommon.hpp	/^  KOKKOS_INLINE_FUNCTION void update_scheduling_info_from_completed_predecessor($/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin	typeref:typename:KOKKOS_INLINE_FUNCTION void
upper	impl/Kokkos_Atomic_Assembly.hpp	/^  uint64_t upper;$/;"	m	struct:Kokkos::Impl::cas128_t	typeref:typename:uint64_t
upper	impl/Kokkos_Atomic_Windows.hpp	/^  LONGLONG upper;$/;"	m	struct:Kokkos::Impl::cas128_t	typeref:typename:LONGLONG
upper	impl/Kokkos_Profiling_C_Interface.h	/^  union Kokkos_Tools_VariableValue_ValueUnion upper;$/;"	m	struct:Kokkos_Tools_ValueRange	typeref:union:Kokkos_Tools_VariableValue_ValueUnion
upper_stride_bound	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  const auto upper_stride_bound =$/;"	v	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:const auto
usage_statistics	Kokkos_MemoryPool.hpp	/^  struct usage_statistics {$/;"	s	class:Kokkos::MemoryPool
use_count	Kokkos_View.hpp	/^  int use_count() const { return m_track.m_tracker.use_count(); }$/;"	f	class:Kokkos::View	typeref:typename:KOKKOS_INLINE_FUNCTION int
use_count	impl/Kokkos_HostSharedPtr.hpp	/^  int use_count() const noexcept {$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:int
use_count	impl/Kokkos_SharedAlloc.hpp	/^  int use_count() const { return *static_cast<const volatile int*>(&m_count); }$/;"	f	class:Kokkos::Impl::SharedAllocationRecord	typeref:typename:int
use_count	impl/Kokkos_SharedAlloc.hpp	/^  int use_count() const {$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_INLINE_FUNCTION int
use_shuffle_based_algorithm	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^inline constexpr bool use_shuffle_based_algorithm =$/;"	v	namespace:Kokkos::Impl	typeref:typename:bool
user_terminate_handler_post_	impl/Kokkos_Stacktrace.cpp	/^std::function<void()> user_terminate_handler_post_ = nullptr;$/;"	v	namespace:Kokkos::Impl	typeref:typename:std::function<void ()>
val	HIP/Kokkos_HIP_Team.hpp	/^  ValueType val;$/;"	v	namespace:Kokkos	typeref:typename:ValueType
val	Kokkos_CopyViews.hpp	/^  typename ViewType::const_value_type val;$/;"	m	struct:Kokkos::Impl::ViewFill	typeref:typename:ViewType::const_value_type
val	Kokkos_Half.hpp	/^  impl_type val;$/;"	m	class:Kokkos::Experimental::Impl::floating_point_wrapper	typeref:typename:impl_type
val	Kokkos_Parallel_Reduce.hpp	/^  Scalar val;$/;"	m	struct:Kokkos::ValLocScalar	typeref:typename:Scalar
val	SYCL/Kokkos_SYCL_Team.hpp	/^  ValueType val;$/;"	v	namespace:Kokkos	typeref:typename:ValueType
val	impl/Kokkos_HostThreadTeam.hpp	/^  ValueType val;$/;"	v	namespace:Kokkos	typeref:typename:ValueType
val_T	impl/Kokkos_Atomic_Exchange.hpp	/^    T val_T;$/;"	m	union:Kokkos::atomic_assign::U	typeref:typename:T
val_T	impl/Kokkos_Atomic_Exchange.hpp	/^    T val_T;$/;"	m	union:Kokkos::atomic_exchange::U	typeref:typename:T
val_type	impl/Kokkos_Atomic_Exchange.hpp	/^    type val_type;$/;"	m	union:Kokkos::atomic_assign::U	typeref:typename:type
val_type	impl/Kokkos_Atomic_Exchange.hpp	/^    type val_type;$/;"	m	union:Kokkos::atomic_exchange::U	typeref:typename:type
valid_dynamic	Threads/Kokkos_ThreadsTeam.hpp	/^  bool valid_dynamic() {$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:bool
valid_launch_mechanism	Cuda/Kokkos_Cuda_KernelLaunch.hpp	/^      valid_launch_mechanism =$/;"	m	struct:Kokkos::Impl::DeduceCudaLaunchMechanism	typeref:typename:const Experimental::CudaLaunchMechanism
valid_launch_mechanism	HIP/Kokkos_HIP_KernelLaunch.hpp	/^  static constexpr HIPLaunchMechanism valid_launch_mechanism =$/;"	m	struct:Kokkos::Experimental::Impl::DeduceHIPLaunchMechanism	typeref:typename:HIPLaunchMechanism
valid_static	Threads/Kokkos_ThreadsTeam.hpp	/^  bool valid_static() const { return m_league_rank < m_league_end; }$/;"	f	class:Kokkos::Impl::ThreadsExecTeamMember	typeref:typename:bool
validate_partition	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  KOKKOS_DEPRECATED static void validate_partition(const int nthreads,$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:KOKKOS_DEPRECATED void
validate_partition_impl	OpenMP/Kokkos_OpenMP_Instance.cpp	/^void OpenMPInternal::validate_partition_impl(const int nthreads,$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:void
value	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^  static constexpr Iterate value = Iterate::Left;$/;"	m	struct:Kokkos::default_inner_direction	typeref:typename:Iterate
value	Cuda/Kokkos_Cuda_MDRangePolicy.hpp	/^  static constexpr Iterate value = Iterate::Left;$/;"	m	struct:Kokkos::default_outer_direction	typeref:typename:Iterate
value	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^  static constexpr Iterate value = Iterate::Left;$/;"	m	struct:Kokkos::default_inner_direction	typeref:typename:Iterate
value	HIP/Kokkos_HIP_MDRangePolicy.hpp	/^  static constexpr Iterate value = Iterate::Left;$/;"	m	struct:Kokkos::default_outer_direction	typeref:typename:Iterate
value	KokkosExp_MDRangePolicy.hpp	/^  static constexpr Iterate value = Iterate::Right;$/;"	m	struct:Kokkos::default_inner_direction	typeref:typename:Iterate
value	KokkosExp_MDRangePolicy.hpp	/^  static constexpr Iterate value = Iterate::Right;$/;"	m	struct:Kokkos::default_outer_direction	typeref:typename:Iterate
value	Kokkos_Concepts.hpp	/^    static const unsigned value = Property;$/;"	m	struct:Kokkos::Experimental::WorkItemProperty::ImplWorkItemProperty	typeref:typename:const unsigned
value	Kokkos_Concepts.hpp	/^  constexpr static bool value =$/;"	m	class:Kokkos::Impl::has_member_shmem_size	typeref:typename:bool
value	Kokkos_Concepts.hpp	/^  constexpr static bool value =$/;"	m	class:Kokkos::Impl::has_member_team_shmem_size	typeref:typename:bool
value	Kokkos_Concepts.hpp	/^  static constexpr bool value = is_exe::value || is_mem::value || is_dev::value;$/;"	m	struct:Kokkos::is_space	typeref:typename:bool
value	Kokkos_ExecPolicy.hpp	/^  int value;$/;"	m	struct:Kokkos::ChunkSize	typeref:typename:int
value	Kokkos_ExecPolicy.hpp	/^  size_t value;$/;"	m	struct:Kokkos::Impl::PerTeamValue	typeref:typename:size_t
value	Kokkos_ExecPolicy.hpp	/^  size_t value;$/;"	m	struct:Kokkos::Impl::PerThreadValue	typeref:typename:size_t
value	Kokkos_ExecPolicy.hpp	/^  static inline iType value($/;"	f	struct:Kokkos::Impl::ExtractVectorLength	typeref:typename:iType
value	Kokkos_NumericTraits.hpp	/^  static constexpr long double value = machineeps<long double>();$/;"	m	struct:Kokkos::Experimental::Impl::epsilon_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<double> { static constexpr double value = DBL_TRUE_MIN; };$/;"	m	struct:Kokkos::Experimental::Impl::denorm_min_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<double> { static constexpr double value = __DBL_DENORM_MIN_/;"	m	struct:Kokkos::Experimental::Impl::denorm_min_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<float> { static constexpr float value = FLT_TRUE_MIN; };$/;"	m	struct:Kokkos::Experimental::Impl::denorm_min_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<float> { static constexpr float value = __FLT_DENORM_MIN__;/;"	m	struct:Kokkos::Experimental::Impl::denorm_min_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<long double> { static constexpr long double value = LDBL_TR/;"	m	struct:Kokkos::Experimental::Impl::denorm_min_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct denorm_min_helper<long double> { static constexpr long double value = __LDBL_/;"	m	struct:Kokkos::Experimental::Impl::denorm_min_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct digits10_helper<bool> { static constexpr int value = 0; };$/;"	m	struct:Kokkos::Experimental::Impl::digits10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits10_helper<double> { static constexpr int value = DBL_DIG; };$/;"	m	struct:Kokkos::Experimental::Impl::digits10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits10_helper<float> { static constexpr int value = FLT_DIG; };$/;"	m	struct:Kokkos::Experimental::Impl::digits10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits10_helper<long double> { static constexpr int value = LDBL_DIG; };$/;"	m	struct:Kokkos::Experimental::Impl::digits10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<bool> { static constexpr int value = 1; };$/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<char> { static constexpr int value = CHAR_BIT - std::is_signed</;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<double> { static constexpr int value = DBL_MANT_DIG; };$/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<float> { static constexpr int value = FLT_MANT_DIG; };$/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<int> { static constexpr int value = CHAR_BIT*sizeof(int)-1; };$/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<long double> { static constexpr int value = LDBL_MANT_DIG; };$/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<long int> { static constexpr int value = CHAR_BIT*sizeof(long i/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<long long int> { static constexpr int value = CHAR_BIT*sizeof(l/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<short> { static constexpr int value = CHAR_BIT*sizeof(short)-1;/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<signed char> { static constexpr int value = CHAR_BIT - 1; };$/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned char> { static constexpr int value = CHAR_BIT; };$/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned int> { static constexpr int value = CHAR_BIT*sizeof(in/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned long int> { static constexpr int value = CHAR_BIT*size/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned long long int> { static constexpr int value = CHAR_BIT/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct digits_helper<unsigned short> { static constexpr int value = CHAR_BIT*sizeof(/;"	m	struct:Kokkos::Experimental::Impl::digits_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct epsilon_helper<double> { static constexpr double value = DBL_EPSILON; };$/;"	m	struct:Kokkos::Experimental::Impl::epsilon_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct epsilon_helper<float> { static constexpr float value = FLT_EPSILON; };$/;"	m	struct:Kokkos::Experimental::Impl::epsilon_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<bool> { static constexpr bool value = true; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:bool
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<char> { static constexpr char value = CHAR_MAX; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:char
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<double> { static constexpr double value = DBL_MAX; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<float> { static constexpr float value = FLT_MAX; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<int> { static constexpr int value = INT_MAX; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<long double> { static constexpr long double value = LDBL_MA/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<long int> { static constexpr long int value = LONG_MAX; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:long int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<long long int> { static constexpr long long int value = LLO/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:long long int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<short> { static constexpr short value = SHRT_MAX; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:short
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<signed char> { static constexpr signed char value = SCHAR_M/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:signed char
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned char> { static constexpr unsigned char value = UCH/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:unsigned char
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned int> { static constexpr unsigned int value = UINT_/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:unsigned int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned long int> { static constexpr unsigned long int val/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:unsigned long int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned long long int> { static constexpr unsigned long lo/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:unsigned long long int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_max_helper<unsigned short> { static constexpr unsigned short value = U/;"	m	struct:Kokkos::Experimental::Impl::finite_max_helper	typeref:typename:unsigned short
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<bool> { static constexpr bool value = false; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:bool
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<char> { static constexpr char value = CHAR_MIN; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:char
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<double> { static constexpr double value = -DBL_MAX; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<float> { static constexpr float value = -FLT_MAX; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<int> { static constexpr int value = INT_MIN; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<long double> { static constexpr long double value = -LDBL_M/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<long int> { static constexpr long int value = LONG_MIN; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:long int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<long long int> { static constexpr long long int value = LLO/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:long long int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<short> { static constexpr short value = SHRT_MIN; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:short
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<signed char> { static constexpr signed char value = SCHAR_M/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:signed char
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned char> { static constexpr unsigned char value = 0; /;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:unsigned char
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned int> { static constexpr unsigned int value = 0; };$/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:unsigned int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned long int> { static constexpr unsigned long int val/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:unsigned long int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned long long int> { static constexpr unsigned long lo/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:unsigned long long int
value	Kokkos_NumericTraits.hpp	/^template <> struct finite_min_helper<unsigned short> { static constexpr unsigned short value = 0/;"	m	struct:Kokkos::Experimental::Impl::finite_min_helper	typeref:typename:unsigned short
value	Kokkos_NumericTraits.hpp	/^template <> struct infinity_helper<double> { static constexpr double value = HUGE_VAL; };$/;"	m	struct:Kokkos::Experimental::Impl::infinity_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct infinity_helper<float> { static constexpr float value = HUGE_VALF; };$/;"	m	struct:Kokkos::Experimental::Impl::infinity_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct infinity_helper<long double> { static constexpr long double value = HUGE_VALL/;"	m	struct:Kokkos::Experimental::Impl::infinity_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct max_digits10_helper<double> { static constexpr int value = DBL_DECIMAL_DIG; }/;"	m	struct:Kokkos::Experimental::Impl::max_digits10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_digits10_helper<float> { static constexpr int value = FLT_DECIMAL_DIG; };$/;"	m	struct:Kokkos::Experimental::Impl::max_digits10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_digits10_helper<long double> { static constexpr int value = DECIMAL_DIG; /;"	m	struct:Kokkos::Experimental::Impl::max_digits10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_digits10_helper<long double> { static constexpr int value = LDBL_DECIMAL_/;"	m	struct:Kokkos::Experimental::Impl::max_digits10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent10_helper<double> { static constexpr int value = DBL_MAX_10_EXP; /;"	m	struct:Kokkos::Experimental::Impl::max_exponent10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent10_helper<float> { static constexpr int value = FLT_MAX_10_EXP; }/;"	m	struct:Kokkos::Experimental::Impl::max_exponent10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent10_helper<long double> { static constexpr int value = LDBL_MAX_10/;"	m	struct:Kokkos::Experimental::Impl::max_exponent10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent_helper<double> { static constexpr int value = DBL_MAX_EXP; };$/;"	m	struct:Kokkos::Experimental::Impl::max_exponent_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent_helper<float> { static constexpr int value = FLT_MAX_EXP; };$/;"	m	struct:Kokkos::Experimental::Impl::max_exponent_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct max_exponent_helper<long double> { static constexpr int value = LDBL_MAX_EXP;/;"	m	struct:Kokkos::Experimental::Impl::max_exponent_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent10_helper<double> { static constexpr int value = DBL_MIN_10_EXP; /;"	m	struct:Kokkos::Experimental::Impl::min_exponent10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent10_helper<float> { static constexpr int value = FLT_MIN_10_EXP; }/;"	m	struct:Kokkos::Experimental::Impl::min_exponent10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent10_helper<long double> { static constexpr int value = LDBL_MIN_10/;"	m	struct:Kokkos::Experimental::Impl::min_exponent10_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent_helper<double> { static constexpr int value = DBL_MIN_EXP; };$/;"	m	struct:Kokkos::Experimental::Impl::min_exponent_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent_helper<float> { static constexpr int value = FLT_MIN_EXP; };$/;"	m	struct:Kokkos::Experimental::Impl::min_exponent_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct min_exponent_helper<long double> { static constexpr int value = LDBL_MIN_EXP;/;"	m	struct:Kokkos::Experimental::Impl::min_exponent_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct norm_min_helper<double> { static constexpr double value = DBL_MIN; };$/;"	m	struct:Kokkos::Experimental::Impl::norm_min_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct norm_min_helper<float> { static constexpr float value = FLT_MIN; };$/;"	m	struct:Kokkos::Experimental::Impl::norm_min_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct norm_min_helper<long double> { static constexpr long double value = LDBL_MIN;/;"	m	struct:Kokkos::Experimental::Impl::norm_min_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct quiet_NaN_helper<double> { static constexpr double value = __builtin_nan("");/;"	m	struct:Kokkos::Experimental::Impl::quiet_NaN_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct quiet_NaN_helper<float> { static constexpr float value = __builtin_nanf(""); /;"	m	struct:Kokkos::Experimental::Impl::quiet_NaN_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct quiet_NaN_helper<long double> { static constexpr long double value = __builti/;"	m	struct:Kokkos::Experimental::Impl::quiet_NaN_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<bool> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<char> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<double> { static constexpr int value = FLT_RADIX; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<float> { static constexpr int value = FLT_RADIX; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<int> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<long double> { static constexpr int value = FLT_RADIX; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<long int> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<long long int> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<short> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<signed char> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned char> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned int> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned long int> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned long long int> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct radix_helper<unsigned short> { static constexpr int value = 2; };$/;"	m	struct:Kokkos::Experimental::Impl::radix_helper	typeref:typename:int
value	Kokkos_NumericTraits.hpp	/^template <> struct reciprocal_overflow_threshold_helper<double> { static constexpr double value /;"	m	struct:Kokkos::Experimental::Impl::reciprocal_overflow_threshold_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct reciprocal_overflow_threshold_helper<float> { static constexpr float value = /;"	m	struct:Kokkos::Experimental::Impl::reciprocal_overflow_threshold_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct reciprocal_overflow_threshold_helper<long double> { static constexpr long dou/;"	m	struct:Kokkos::Experimental::Impl::reciprocal_overflow_threshold_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct round_error_helper<double> { static constexpr double value = 0.5; };$/;"	m	struct:Kokkos::Experimental::Impl::round_error_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct round_error_helper<float> { static constexpr float value = 0.5F; };$/;"	m	struct:Kokkos::Experimental::Impl::round_error_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct round_error_helper<long double> { static constexpr long double value = 0.5L; /;"	m	struct:Kokkos::Experimental::Impl::round_error_helper	typeref:typename:long double
value	Kokkos_NumericTraits.hpp	/^template <> struct signaling_NaN_helper<double> { static constexpr double value = __builtin_nans/;"	m	struct:Kokkos::Experimental::Impl::signaling_NaN_helper	typeref:typename:double
value	Kokkos_NumericTraits.hpp	/^template <> struct signaling_NaN_helper<float> { static constexpr float value = __builtin_nansf(/;"	m	struct:Kokkos::Experimental::Impl::signaling_NaN_helper	typeref:typename:float
value	Kokkos_NumericTraits.hpp	/^template <> struct signaling_NaN_helper<long double> { static constexpr long double value = __bu/;"	m	struct:Kokkos::Experimental::Impl::signaling_NaN_helper	typeref:typename:long double
value	Kokkos_Parallel.hpp	/^  KOKKOS_INLINE_FUNCTION static size_t value(const FunctorType&, int) {$/;"	f	struct:Kokkos::Impl::FunctorTeamShmemSize	typeref:typename:KOKKOS_INLINE_FUNCTION size_t
value	Kokkos_Parallel.hpp	/^  static inline size_t value(const FunctorType& \/*f*\/, int \/*team_size*\/) {$/;"	f	struct:Kokkos::Impl::FunctorTeamShmemSize	typeref:typename:size_t
value	Kokkos_Parallel.hpp	/^  static inline size_t value(const FunctorType& f, int team_size) {$/;"	f	struct:Kokkos::Impl::FunctorTeamShmemSize	typeref:typename:size_t
value	Kokkos_Parallel_Reduce.hpp	/^    value = std::is_same<std::true_type, decltype(test_func<T>(nullptr))>::value$/;"	e	enum:Kokkos::Impl::ReducerHasTestReferenceFunction::__anon4863ae900103
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::BAnd	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::BOr	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::FirstLoc	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::LAnd	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::LOr	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::LastLoc	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::Max	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MaxFirstLoc	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MaxLoc	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::Min	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MinFirstLoc	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MinLoc	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MinMax	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::MinMaxLoc	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::Prod	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::StdIsPartitioned	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::StdPartitionPoint	typeref:typename:result_view_type
value	Kokkos_Parallel_Reduce.hpp	/^  result_view_type value;$/;"	m	struct:Kokkos::Sum	typeref:typename:result_view_type
value	Kokkos_UniqueToken.hpp	/^  KOKKOS_FUNCTION size_type value() const { return my_acquired_val; }$/;"	f	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:KOKKOS_FUNCTION size_type
value	Kokkos_UniqueToken.hpp	/^  KOKKOS_FUNCTION size_type value() const { return my_acquired_val; }$/;"	f	class:Kokkos::Experimental::AcquireUniqueToken	typeref:typename:KOKKOS_FUNCTION size_type
value	Kokkos_View.hpp	/^      std::conditional_t<!std::is_void<typename prop::array_layout>::value,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::array_layout>::
value	Kokkos_View.hpp	/^      std::conditional_t<!std::is_void<typename prop::execution_space>::value,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::execution_space>::
value	Kokkos_View.hpp	/^      std::conditional_t<!std::is_void<typename prop::hooks_policy>::value,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::hooks_policy>::
value	Kokkos_View.hpp	/^      std::conditional_t<!std::is_void<typename prop::memory_space>::value,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::memory_space>::
value	Kokkos_View.hpp	/^      std::conditional_t<!std::is_void<typename prop::memory_traits>::value,$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:std::conditional_t<!std::is_void<typename prop::memory_traits>::
value	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^  static constexpr Iterate value = Iterate::Left;$/;"	m	struct:Kokkos::default_inner_direction	typeref:typename:Iterate
value	SYCL/Kokkos_SYCL_MDRangePolicy.hpp	/^  static constexpr Iterate value = Iterate::Left;$/;"	m	struct:Kokkos::default_outer_direction	typeref:typename:Iterate
value	impl/KokkosExp_Host_IterateTile.hpp	/^    enum { value = (int)Rank };$/;"	e	enum:Kokkos::Impl::HostIterateTile::RankTag::__anon66fe5c330103
value	impl/KokkosExp_Host_IterateTile.hpp	/^    enum { value = (int)Rank };$/;"	e	enum:Kokkos::Impl::HostIterateTile::RankTag::__anon66fe5c330203
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	e	enum:DeduceFinalNoTag::__anona1ab5b322403
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	e	enum:Kokkos::DeduceInitNoTag::__anona1ab5b322203
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::DeduceJoinNoTag::__anona1ab5b321f03
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::detected_join_no_tag::__anona1ab5b321703
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::detected_join_tag::__anona1ab5b321b03
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::detected_volatile_join_no_tag::__anona1ab5b321903
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::detected_volatile_join_tag::__anona1ab5b321d03
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::has_execution_space::__anona1ab5b321303
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	e	enum:DeduceInit::__anona1ab5b322303
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	e	enum:Kokkos::DeduceJoin::__anona1ab5b322003
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	e	enum:Kokkos::DeduceJoin::__anona1ab5b322103
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::detected_join_no_tag::__anona1ab5b321803
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::detected_join_tag::__anona1ab5b321c03
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::detected_volatile_join_no_tag::__anona1ab5b321a03
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::detected_volatile_join_tag::__anona1ab5b321e03
value	impl/Kokkos_FunctorAnalysis.hpp	/^    enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::FunctorAnalysis::has_execution_space::__anona1ab5b321403
value	impl/Kokkos_Profiling.hpp	/^  uint32_t value;$/;"	m	struct:Kokkos::Tools::Experimental::Impl::DirectFenceIDHandle	typeref:typename:uint32_t
value	impl/Kokkos_Profiling_C_Interface.h	/^  union Kokkos_Tools_VariableValue_ValueUnion value;$/;"	m	struct:Kokkos_Tools_VariableValue	typeref:union:Kokkos_Tools_VariableValue_ValueUnion
value	impl/Kokkos_Traits.hpp	/^    value =$/;"	e	enum:Kokkos::Impl::are_integral::__anon1766c6640803
value	impl/Kokkos_Traits.hpp	/^  const T value;$/;"	m	struct:Kokkos::Impl::integral_nonzero_constant	typeref:typename:const T
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = Cond };$/;"	e	enum:Kokkos::Impl::if_c::__anon1766c6640903
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::has_condition::__anon1766c6640403
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::has_type::__anon1766c6640103
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = false };$/;"	e	enum:Kokkos::Impl::if_c::__anon1766c6640b03
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = self_value || next::value };$/;"	e	enum:Kokkos::Impl::has_condition::__anon1766c6640603
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = self_value || next::value };$/;"	e	enum:Kokkos::Impl::has_type::__anon1766c6640303
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::are_integral::__anon1766c6640703
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::if_c::__anon1766c6640a03
value	impl/Kokkos_Traits.hpp	/^  enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::if_c::__anon1766c6640c03
value	impl/Kokkos_Traits.hpp	/^  enum { value = T(v) };$/;"	e	enum:Kokkos::Impl::integral_nonzero_constant::__anon1766c6640d03
value	impl/Kokkos_ViewCtor.hpp	/^  type value = type();$/;"	m	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:type
value	impl/Kokkos_ViewCtor.hpp	/^  type value;$/;"	m	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:type
value	impl/Kokkos_ViewMapping.hpp	/^    value = (((CurrentArg == RankDest - 1) &&$/;"	e	enum:Kokkos::Impl::SubviewLegalArgsCompileTime::__anon421557341c03
value	impl/Kokkos_ViewMapping.hpp	/^    value = (((CurrentArg == RankSrc - RankDest) &&$/;"	e	enum:Kokkos::Impl::SubviewLegalArgsCompileTime::__anon421557341e03
value	impl/Kokkos_ViewMapping.hpp	/^    value = ((CurrentArg == RankDest - 1) || (std::is_integral<Arg>::value)) &&$/;"	e	enum:Kokkos::Impl::SubviewLegalArgsCompileTime::__anon421557341d03
value	impl/Kokkos_ViewMapping.hpp	/^    value = ((CurrentArg == RankSrc - 1) &&$/;"	e	enum:Kokkos::Impl::SubviewLegalArgsCompileTime::__anon421557341f03
value	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = is_integral_extent_type<type>::value };$/;"	e	enum:Kokkos::Impl::is_integral_extent::__anon421557341b03
value	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = std::is_same<T, Kokkos::Impl::ALL_t>::value ? 1 : 0 };$/;"	e	enum:Kokkos::Impl::is_integral_extent_type::__anon421557341a03
value	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::SubviewLegalArgsCompileTime::__anon421557342003
value	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::SubviewLegalArgsCompileTime::__anon421557342103
value	impl/Kokkos_ViewMapping.hpp	/^  enum : bool { value = true };$/;"	e	enum:Kokkos::Impl::SubviewLegalArgsCompileTime::__anon421557342203
value	impl/Kokkos_ViewMapping.hpp	/^  enum : size_t { value = KOKKOS_INVALID_INDEX };$/;"	e	enum:Kokkos::Impl::variadic_size_t::__anon421557341303
value	impl/Kokkos_ViewMapping.hpp	/^  enum : size_t { value = Val };$/;"	e	enum:Kokkos::Impl::variadic_size_t::__anon421557341403
value	impl/Kokkos_ViewMapping.hpp	/^  enum : size_t { value = variadic_size_t<I - 1, Args...>::value };$/;"	e	enum:Kokkos::Impl::variadic_size_t::__anon421557341503
value	impl/Kokkos_ViewMapping.hpp	/^  enum : unsigned { value = (Val == 0 ? 1 : 0) + rank_dynamic<Args...>::value };$/;"	e	enum:Kokkos::Impl::rank_dynamic::__anon421557341703
value	impl/Kokkos_ViewMapping.hpp	/^  enum : unsigned { value = 0 };$/;"	e	enum:Kokkos::Impl::rank_dynamic::__anon421557341603
value	traits/Kokkos_OccupancyControlTrait.hpp	/^  constexpr int value() const { return m_occ; }$/;"	f	struct:Kokkos::Experimental::DesiredOccupancy	typeref:typename:int
value	traits/Kokkos_WorkTagTrait.hpp	/^    static constexpr bool value = type::value;$/;"	m	struct:Kokkos::Impl::_trait_matches_spec_predicate::apply	typeref:typename:bool
valueQuantity	impl/Kokkos_Profiling_C_Interface.h	/^  enum Kokkos_Tools_VariableInfo_CandidateValueType valueQuantity;$/;"	m	struct:Kokkos_Tools_VariableInfo	typeref:enum:Kokkos_Tools_VariableInfo_CandidateValueType
value_count	impl/Kokkos_FunctorAnalysis.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION static constexpr unsigned value_count($/;"	f	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned
value_pointer	impl/Kokkos_TaskNode.hpp	/^  ResultType* value_pointer() {$/;"	f	class:Kokkos::Impl::TaskResultStorage	typeref:typename:KOKKOS_INLINE_FUNCTION ResultType *
value_pointer	impl/Kokkos_TaskNode.hpp	/^  void* value_pointer() noexcept { return nullptr; }$/;"	f	class:Kokkos::Impl::TaskResultStorage	typeref:typename:KOKKOS_INLINE_FUNCTION void *
value_reference	impl/Kokkos_TaskNode.hpp	/^  ResultType& value_reference() { return m_value; }$/;"	f	class:Kokkos::Impl::TaskResultStorage	typeref:typename:KOKKOS_INLINE_FUNCTION ResultType &
value_reference	impl/Kokkos_TaskNode.hpp	/^  void value_reference() noexcept {}$/;"	f	class:Kokkos::Impl::TaskResultStorage	typeref:typename:KOKKOS_INLINE_FUNCTION void
value_size	impl/Kokkos_FunctorAnalysis.hpp	/^  KOKKOS_FORCEINLINE_FUNCTION static constexpr unsigned value_size($/;"	f	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION unsigned
value_t	Kokkos_DetectionIdiom.hpp	/^  using value_t = std::false_type;$/;"	t	struct:Kokkos::Impl::detector	typeref:typename:std::false_type
value_too_large	impl/Kokkos_StringManipulation.hpp	/^  value_too_large = 75  \/\/ equivalent POSIX error is EOVERFLOW$/;"	e	enum:Kokkos::Impl::errc
value_type	Cuda/Kokkos_Cuda_Parallel_MDRange.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::value_type
value_type	Cuda/Kokkos_Cuda_Parallel_Range.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::value_type
value_type	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using value_type   = typename FunctorType::value_type;$/;"	t	function:Kokkos::Impl::cuda_inter_block_reduction	typeref:typename:FunctorType::value_type
value_type	Cuda/Kokkos_Cuda_ReduceScan.hpp	/^  using value_type   = typename FunctorType::value_type;$/;"	t	function:Kokkos::Impl::cuda_single_inter_block_reduce_scan2	typeref:typename:FunctorType::value_type
value_type	Cuda/Kokkos_Cuda_Task.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,Closure>::value_type
value_type	Cuda/Kokkos_Cuda_Team.hpp	/^  using value_type = Type;$/;"	t	struct:Kokkos::Impl::CudaJoinFunctor	typeref:typename:Type
value_type	Cuda/Kokkos_Cuda_Team.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,Closure>::value_type
value_type	Cuda/Kokkos_Cuda_Team.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,FunctorType>::value_type
value_type	HIP/Kokkos_HIP_Parallel_MDRange.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	HIP/Kokkos_HIP_Parallel_Range.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelScanHIPBase	typeref:typename:Analysis::value_type
value_type	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using value_type     = typename analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:analysis::value_type
value_type	HIP/Kokkos_HIP_ReduceScan.hpp	/^  using value_type   = typename FunctorType::value_type;$/;"	t	function:Kokkos::Impl::hip_single_inter_block_reduce_scan_impl	typeref:typename:FunctorType::value_type
value_type	HIP/Kokkos_HIP_Shuffle_Reduce.hpp	/^  using value_type   = typename FunctorType::value_type;$/;"	t	function:Kokkos::Impl::hip_inter_block_shuffle_reduction	typeref:typename:FunctorType::value_type
value_type	HIP/Kokkos_HIP_Team.hpp	/^  using value_type = Type;$/;"	t	struct:Kokkos::Impl::HIPJoinFunctor	typeref:typename:Type
value_type	HIP/Kokkos_HIP_Team.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,Closure>::value_type
value_type	HIP/Kokkos_HIP_Team.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,FunctorType>::value_type
value_type	HIP/Kokkos_HIP_Team.hpp	/^  using value_type = typename ReducerType::value_type;$/;"	t	function:Kokkos::parallel_scan	typeref:typename:ReducerType::value_type
value_type	Kokkos_Array.hpp	/^  using value_type      = T;$/;"	t	struct:Kokkos::Array	typeref:typename:T
value_type	Kokkos_Complex.hpp	/^  using value_type = RealType;$/;"	t	class:Kokkos::complex	typeref:typename:RealType
value_type	Kokkos_CopyViews.hpp	/^  using value_type       = typename dst_type::value_type;$/;"	t	function:Kokkos::deep_copy	typeref:typename:dst_type::value_type
value_type	Kokkos_CopyViews.hpp	/^  using value_type  = typename ViewTypeA::value_type;$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:ViewTypeA::value_type
value_type	Kokkos_CopyViews.hpp	/^  using value_type = typename ViewTypeA::value_type;$/;"	t	struct:Kokkos::Impl::ViewCopy	typeref:typename:ViewTypeA::value_type
value_type	Kokkos_Crs.hpp	/^  using value_type      = typename OutCrs::entries_type::value_type;$/;"	t	class:Kokkos::Impl::FillCrsTransposeEntries	typeref:typename:OutCrs::entries_type::value_type
value_type	Kokkos_Crs.hpp	/^  using value_type      = typename OutRowMap::value_type;$/;"	t	class:Kokkos::Impl::CrsRowMapFromCounts	typeref:typename:OutRowMap::value_type
value_type	Kokkos_Future.hpp	/^  using value_type      = ValueType;$/;"	t	class:Kokkos::BasicFuture	typeref:typename:ValueType
value_type	Kokkos_Future.hpp	/^  using value_type =$/;"	t	class:Kokkos::Impl::ResolveFutureArgOrder	typeref:typename:std::conditional_t<Arg1_is_value,Arg1,std::conditional_t<Arg2_is_value,Arg2,void>>
value_type	Kokkos_HPX.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	Kokkos_HPX.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::value_type
value_type	Kokkos_HPX.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:Analysis::value_type
value_type	Kokkos_HPX.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,FunctorType>::value_type
value_type	Kokkos_HPX.hpp	/^  using value_type =$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,TeamPolicy<Experimental::HPX>,FunctorType>::value_type
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type   = typename return_type::value_type;$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:return_type::value_type
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = ::Kokkos::MinMaxLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:::Kokkos::MinMaxLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = ::Kokkos::MinMaxLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:::Kokkos::MinMaxLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = ::Kokkos::ValLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MaxFirstLoc	typeref:typename:::Kokkos::ValLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = ::Kokkos::ValLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:::Kokkos::ValLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = ::Kokkos::ValLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MinFirstLoc	typeref:typename:::Kokkos::ValLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = ::Kokkos::ValLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:::Kokkos::ValLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = FirstLocScalar<index_type>;$/;"	t	struct:Kokkos::FirstLoc	typeref:typename:FirstLocScalar<index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = LastLocScalar<index_type>;$/;"	t	struct:Kokkos::LastLoc	typeref:typename:LastLocScalar<index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = MinMaxLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MinMaxLoc	typeref:typename:MinMaxLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = MinMaxScalar<scalar_type>;$/;"	t	struct:Kokkos::MinMax	typeref:typename:MinMaxScalar<scalar_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = StdIsPartScalar<index_type>;$/;"	t	struct:Kokkos::StdIsPartitioned	typeref:typename:StdIsPartScalar<index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = StdPartPointScalar<index_type>;$/;"	t	struct:Kokkos::StdPartitionPoint	typeref:typename:StdPartPointScalar<index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = ValLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MaxLoc	typeref:typename:ValLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = ValLocScalar<scalar_type, index_type>;$/;"	t	struct:Kokkos::MinLoc	typeref:typename:ValLocScalar<scalar_type,index_type>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::conditional_t<(FunctorAnalysis::StaticValueSize != 0),$/;"	t	function:Kokkos::parallel_reduce
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::conditional_t<return_type::rank == 0,$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:std::conditional_t<return_type::rank==0,value_type_scalar,value_type_array>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::BAnd	typeref:typename:std::remove_cv_t<Scalar>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::BOr	typeref:typename:std::remove_cv_t<Scalar>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::LAnd	typeref:typename:std::remove_cv_t<Scalar>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::LOr	typeref:typename:std::remove_cv_t<Scalar>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::Max	typeref:typename:std::remove_cv_t<Scalar>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::Min	typeref:typename:std::remove_cv_t<Scalar>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::Prod	typeref:typename:std::remove_cv_t<Scalar>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = std::remove_cv_t<Scalar>;$/;"	t	struct:Kokkos::Sum	typeref:typename:std::remove_cv_t<Scalar>
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = typename return_type::value_type;$/;"	t	struct:Kokkos::Impl::FunctorType	typeref:typename:return_type::value_type
value_type	Kokkos_Parallel_Reduce.hpp	/^  using value_type = typename return_type::value_type[];$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:return_type::value_type[]
value_type	Kokkos_TaskScheduler.hpp	/^    using value_type = typename FunctorType::value_type;$/;"	t	function:Kokkos::BasicTaskScheduler::respawn	typeref:typename:FunctorType::value_type
value_type	Kokkos_View.hpp	/^  using value_type           = typename data_analysis::value_type;$/;"	t	struct:Kokkos::ViewTraits	typeref:typename:data_analysis::value_type
value_type	Kokkos_View.hpp	/^  using value_type        = ValueType;$/;"	t	struct:Kokkos::Impl::CommonViewAllocProp	typeref:typename:ValueType
value_type	Kokkos_View.hpp	/^  using value_type = std::common_type_t<A, B>;$/;"	t	struct:Kokkos::Impl::CommonViewValueType	typeref:typename:std::common_type_t<A,B>
value_type	Kokkos_View.hpp	/^  using value_type = typename CommonViewValueType<specialize, first_value_type,$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:CommonViewValueType<specialize,first_value_type,next_value_type>::value_type
value_type	Kokkos_View.hpp	/^  using value_type = typename FirstView::traits::value_type;$/;"	t	struct:Kokkos::Impl::DeduceCommonViewAllocProp	typeref:typename:FirstView::traits::value_type
value_type	OpenMP/Kokkos_OpenMP_Parallel.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^    using value_type = ValueType;$/;"	t	function:Kokkos::Impl::OpenMPTargetExecTeamMember::team_reduce	typeref:typename:ValueType
value_type	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using value_type = typename Analysis::value_type;$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Analysis::value_type
value_type	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  using value_type = typename Reducer::value_type;$/;"	t	struct:Kokkos::Impl::OpenMPTargetReducerWrapper	typeref:typename:Reducer::value_type
value_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelScan	typeref:typename:Analysis::value_type
value_type	OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp	/^  using value_type = typename base_t::value_type;$/;"	t	class:Kokkos::Impl::ParallelScanWithTotal	typeref:typename:base_t::value_type
value_type	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^  using value_type      = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelScanSYCLBase	typeref:typename:Analysis::value_type
value_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^    using value_type      = typename Analysis::value_type;$/;"	t	function:Kokkos::Impl::TeamPolicyInternal::internal_team_size_max_reduce	typeref:typename:Analysis::value_type
value_type	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	SYCL/Kokkos_SYCL_Team.hpp	/^    using value_type = typename ReducerType::value_type;$/;"	t	function:Kokkos::Impl::SYCLTeamMember::team_reduce	typeref:typename:ReducerType::value_type
value_type	SYCL/Kokkos_SYCL_Team.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,Closure>::value_type
value_type	SYCL/Kokkos_SYCL_Team.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,FunctorType>::value_type
value_type	Serial/Kokkos_Serial_Parallel_MDRange.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	Threads/Kokkos_ThreadsTeam.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,FunctorType>::value_type
value_type	Threads/Kokkos_ThreadsTeam.hpp	/^  using value_type =$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,TeamPolicy<Threads>,FunctorType>::value_type
value_type	Threads/Kokkos_Threads_Parallel_MDRange.hpp	/^  using value_type     = typename Analysis::value_type;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Analysis::value_type
value_type	impl/KokkosExp_Host_IterateTile.hpp	/^  using value_type = ValueType;$/;"	t	struct:Kokkos::Impl::HostIterateTile	typeref:typename:ValueType
value_type	impl/KokkosExp_Host_IterateTile.hpp	/^  using value_type =$/;"	t	struct:Kokkos::Impl::HostIterateTile	typeref:typename:std::remove_extent_t<ValueType>
value_type	impl/KokkosExp_IterateTileGPU.hpp	/^  using value_type = T;$/;"	t	struct:Kokkos::Impl::Reduce::is_array_type	typeref:typename:T
value_type	impl/Kokkos_Atomic_View.hpp	/^  using value_type           = typename ViewTraits::value_type;$/;"	t	class:Kokkos::Impl::AtomicDataElement	typeref:typename:ViewTraits::value_type
value_type	impl/Kokkos_ChaseLev.hpp	/^  using value_type = T;$/;"	t	struct:Kokkos::Impl::ChaseLevDeque	typeref:typename:T
value_type	impl/Kokkos_Combined_Reducer.hpp	/^  using value_type = ValueType;$/;"	t	struct:Kokkos::Impl::CombinedReducerValueItemImpl	typeref:typename:ValueType
value_type	impl/Kokkos_Combined_Reducer.hpp	/^  using value_type = typename Reducer::value_type;$/;"	t	struct:Kokkos::Impl::CombinedReducerStorageImpl	typeref:typename:Reducer::value_type
value_type	impl/Kokkos_Combined_Reducer.hpp	/^  using value_type = typename reducer_type::value_type;$/;"	t	struct:Kokkos::Impl::CombinedReductionFunctorWrapperImpl	typeref:typename:reducer_type::value_type
value_type	impl/Kokkos_Combined_Reducer.hpp	/^  using value_type =$/;"	t	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:CombinedReducerValueImpl<std::integer_sequence<size_t,Idxs...>,typename Reducers::value_type...>
value_type	impl/Kokkos_FunctorAnalysis.hpp	/^  using value_type = std::remove_extent_t<candidate_type>;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis	typeref:typename:std::remove_extent_t<candidate_type>
value_type	impl/Kokkos_HostThreadTeam.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Impl::FunctorPatternInterface::SCAN,void,ClosureType>::value_type
value_type	impl/Kokkos_HostThreadTeam.hpp	/^  using value_type = typename Kokkos::Impl::FunctorAnalysis<$/;"	t	function:Kokkos::parallel_scan	typeref:typename:Kokkos::Impl::FunctorAnalysis<Kokkos::Impl::FunctorPatternInterface::SCAN,void,Closure>::value_type
value_type	impl/Kokkos_InitializationSettings.hpp	/^  using value_type   = bool;$/;"	t	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:bool
value_type	impl/Kokkos_InitializationSettings.hpp	/^  using value_type   = int;$/;"	t	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:int
value_type	impl/Kokkos_InitializationSettings.hpp	/^  using value_type   = std::string;$/;"	t	struct:Kokkos::Impl::InitializationSettingsHelper	typeref:typename:std::string
value_type	impl/Kokkos_LIFO.hpp	/^  using value_type               = typename base_t::value_type;  \/\/ = T$/;"	t	class:Kokkos::Impl::LockBasedLIFO	typeref:typename:base_t::value_type
value_type	impl/Kokkos_LIFO.hpp	/^  using value_type = T;$/;"	t	struct:Kokkos::Impl::LockBasedLIFOCommon	typeref:typename:T
value_type	impl/Kokkos_LIFO.hpp	/^  using value_type = typename base_t::value_type;  \/\/ = T$/;"	t	class:Kokkos::Impl::SingleConsumeOperationLIFO	typeref:typename:base_t::value_type
value_type	impl/Kokkos_MemoryPoolAllocator.hpp	/^  using value_type      = T;$/;"	t	class:Kokkos::Impl::MemoryPoolAllocator	typeref:typename:T
value_type	impl/Kokkos_OptionalRef.hpp	/^  using value_type = T;$/;"	t	struct:Kokkos::Impl::OptionalRef	typeref:typename:T
value_type	impl/Kokkos_TaskQueue.hpp	/^    using value_type = typename FunctorType::value_type;$/;"	t	function:Kokkos::Impl::TaskQueue::spawn_allocation_size	typeref:typename:FunctorType::value_type
value_type	impl/Kokkos_Tools_Generic.hpp	/^    using value_type = typename ReducerType::value_type;$/;"	t	function:Kokkos::Tools::Experimental::Impl::Impl::ComplexReducerSizeCalculator::get_max_team_size	typeref:typename:ReducerType::value_type
value_type	impl/Kokkos_Tools_Generic.hpp	/^    using value_type = typename ReducerType::value_type;$/;"	t	function:Kokkos::Tools::Experimental::Impl::Impl::ComplexReducerSizeCalculator::get_recommended_team_size	typeref:typename:ReducerType::value_type
value_type	impl/Kokkos_Traits.hpp	/^  using value_type = T;$/;"	t	struct:Kokkos::Impl::integral_nonzero_constant	typeref:typename:T
value_type	impl/Kokkos_Traits.hpp	/^  using value_type = std::remove_const_t<std::remove_reference_t<type>>;$/;"	t	struct:Kokkos::Impl::if_c	typeref:typename:std::remove_const_t<std::remove_reference_t<type>>
value_type	impl/Kokkos_Traits.hpp	/^  using value_type = void;$/;"	t	struct:Kokkos::Impl::if_c	typeref:typename:void
value_type_array	Kokkos_Parallel_Reduce.hpp	/^  using value_type_array  = typename return_type::value_type* const;$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:return_type::value_type * const
value_type_scalar	Kokkos_Parallel_Reduce.hpp	/^  using value_type_scalar = typename return_type::value_type;$/;"	t	struct:Kokkos::Impl::ParallelReduceReturnValue	typeref:typename:return_type::value_type
value_type_storage	impl/KokkosExp_IterateTileGPU.hpp	/^  using value_type_storage = value_type_storage_t<ValueType>;$/;"	t	struct:Kokkos::Impl::Reduce::DeviceIterateTile	typeref:typename:value_type_storage_t<ValueType>
value_type_storage_t	impl/KokkosExp_IterateTileGPU.hpp	/^using value_type_storage_t =$/;"	t	namespace:Kokkos::Impl::Reduce	typeref:typename:std::conditional_t<is_array_type<T>::value,std::decay<T>,std::add_lvalue_reference<T>>::type
value_type_wrapper	Kokkos_HPX.hpp	/^    value_type_wrapper() : m_value_size(0), m_value_buffer(nullptr) {}$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper
value_type_wrapper	Kokkos_HPX.hpp	/^    value_type_wrapper(const std::size_t value_size)$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper
value_type_wrapper	Kokkos_HPX.hpp	/^    value_type_wrapper(const value_type_wrapper &other)$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper
value_type_wrapper	Kokkos_HPX.hpp	/^    value_type_wrapper(value_type_wrapper &&other)$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper
value_type_wrapper	Kokkos_HPX.hpp	/^  class value_type_wrapper {$/;"	c	class:Kokkos::Impl::ParallelReduce
values	impl/Kokkos_Profiling_C_Interface.h	/^  union Kokkos_Tools_VariableValue_ValueUnionSet values;$/;"	m	struct:Kokkos_Tools_ValueSet	typeref:union:Kokkos_Tools_VariableValue_ValueUnionSet
var_execution_space	impl/Kokkos_ViewCtor.hpp	/^  using var_execution_space =$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:Kokkos::Impl::has_condition<void,Kokkos::is_execution_space,P...>
var_memory_space	impl/Kokkos_ViewCtor.hpp	/^  using var_memory_space =$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:Kokkos::Impl::has_condition<void,Kokkos::is_memory_space,P...>
var_pointer	impl/Kokkos_ViewCtor.hpp	/^  using var_pointer =$/;"	t	struct:Kokkos::Impl::ViewCtorProp	typeref:typename:Kokkos::Impl::has_condition<VOIDDUMMY,std::is_pointer,P...>
variable_ids	Kokkos_Tuners.hpp	/^  std::array<size_t, space_dimensionality> variable_ids;$/;"	m	class:Kokkos::Tools::Experimental::MultidimensionalSparseTuningProblem	typeref:typename:std::array<size_t,space_dimensionality>
variable_metadata	impl/Kokkos_Profiling.cpp	/^static std::unordered_map<size_t, VariableInfo> variable_metadata;$/;"	v	namespace:Kokkos::Tools::Experimental	typeref:typename:std::unordered_map<size_t,VariableInfo>	file:
variadic_size_t	impl/Kokkos_ViewMapping.hpp	/^struct variadic_size_t {$/;"	s	namespace:Kokkos::Impl
variadic_size_t	impl/Kokkos_ViewMapping.hpp	/^struct variadic_size_t<0, Val, Args...> {$/;"	s	namespace:Kokkos::Impl
variadic_size_t	impl/Kokkos_ViewMapping.hpp	/^struct variadic_size_t<I, Val, Args...> {$/;"	s	namespace:Kokkos::Impl
vector_length	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  KOKKOS_DEPRECATED inline int vector_length() const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:KOKKOS_DEPRECATED int
vector_length	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  KOKKOS_DEPRECATED int vector_length() const { return impl_vector_length(); }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:KOKKOS_DEPRECATED int
vector_length	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  KOKKOS_DEPRECATED inline int vector_length() const {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:KOKKOS_DEPRECATED int
vector_length	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  KOKKOS_DEPRECATED int vector_length() const { return impl_vector_length(); }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:KOKKOS_DEPRECATED int
vector_length_max	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline static int vector_length_max() { return Impl::CudaTraits::WarpSize; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
vector_length_max	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  static int vector_length_max() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
vector_length_max	Kokkos_HPX.hpp	/^  static int vector_length_max() { return 1; }$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
vector_length_max	OpenMP/Kokkos_OpenMP_Team.hpp	/^  inline static int vector_length_max() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
vector_length_max	OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp	/^  inline static size_t vector_length_max() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:size_t
vector_length_max	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  static int vector_length_max() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
vector_length_max	Serial/Kokkos_Serial_Parallel_Team.hpp	/^  inline static int vector_length_max() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
vector_length_max	Threads/Kokkos_ThreadsTeam.hpp	/^  inline static int vector_length_max() {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
vector_reduce	Cuda/Kokkos_Cuda_Team.hpp	/^  vector_reduce(ReducerType const& reducer) {$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
vector_reduce	Cuda/Kokkos_Cuda_Team.hpp	/^  vector_reduce(ReducerType const& reducer,$/;"	f	class:Kokkos::Impl::CudaTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
vector_reduce	HIP/Kokkos_HIP_Team.hpp	/^  vector_reduce(ReducerType const& reducer) {$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
vector_reduce	HIP/Kokkos_HIP_Team.hpp	/^  vector_reduce(ReducerType const& reducer,$/;"	f	class:Kokkos::Impl::HIPTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
vector_reduce	SYCL/Kokkos_SYCL_Team.hpp	/^  vector_reduce(ReducerType const& reducer) const {$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
vector_reduce	SYCL/Kokkos_SYCL_Team.hpp	/^  vector_reduce(ReducerType const& reducer,$/;"	f	class:Kokkos::Impl::SYCLTeamMember	typeref:typename:KOKKOS_INLINE_FUNCTION std::enable_if_t<is_reducer<ReducerType>::value>
verify	impl/Kokkos_TaskBase.hpp	/^        TaskBase)>::type verify = {};$/;"	v	namespace:Kokkos::Impl	typeref:typename:verify_task_base_size_is_48_note_actual_size_is_<sizeof (TaskBase)>::type
verify_initialized	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^void OpenMPTargetExec::verify_initialized(const char* const label) {$/;"	f	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void
verify_is_initialized	Cuda/Kokkos_Cuda_Instance.cpp	/^int CudaInternal::verify_is_initialized(const char *const label) const {$/;"	f	class:Kokkos::Impl::CudaInternal	typeref:typename:int
verify_is_initialized	HIP/Kokkos_HIP_Instance.cpp	/^int HIPInternal::verify_is_initialized(const char *const label) const {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:int
verify_is_initialized	OpenMP/Kokkos_OpenMP_Instance.cpp	/^bool OpenMPInternal::verify_is_initialized(const char *const label) const {$/;"	f	class:Kokkos::Impl::OpenMPInternal	typeref:typename:bool
verify_is_initialized	SYCL/Kokkos_SYCL_Instance.cpp	/^int SYCLInternal::verify_is_initialized(const char* const label) const {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:int
verify_is_process	OpenMPTarget/Kokkos_OpenMPTarget_Exec.cpp	/^void OpenMPTargetExec::verify_is_process(const char* const label) {$/;"	f	class:Kokkos::Impl::OpenMPTargetExec	typeref:typename:void
verify_is_process	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::verify_is_process(const std::string &name,$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
verify_requested_vector_length	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  inline static int verify_requested_vector_length($/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
verify_requested_vector_length	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  static int verify_requested_vector_length(int requested_vector_length) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
verify_requested_vector_length	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  static int verify_requested_vector_length(int requested_vector_length) {$/;"	f	class:Kokkos::Impl::TeamPolicyInternal	typeref:typename:int
verify_space	Kokkos_Core_fwd.hpp	/^struct verify_space {$/;"	s	namespace:Kokkos::Impl
verify_space	Kokkos_Core_fwd.hpp	/^struct verify_space<DstMemorySpace, SrcMemorySpace, false> {$/;"	s	namespace:Kokkos::Impl
verify_task_base_size_is_48_note_actual_size_is_	impl/Kokkos_TaskBase.hpp	/^struct verify_task_base_size_is_48_note_actual_size_is_ {};$/;"	s	namespace:Kokkos::Impl
verify_task_base_size_is_48_note_actual_size_is_	impl/Kokkos_TaskBase.hpp	/^struct verify_task_base_size_is_48_note_actual_size_is_<$/;"	s	namespace:Kokkos::Impl
version_string_from_int	impl/Kokkos_Core.cpp	/^std::string version_string_from_int(int version_number) {$/;"	f	namespace:__anon5875dff10210	typeref:typename:std::string
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::BAnd	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::BOr	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::FirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::LAnd	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::LOr	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::LastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::Max	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MaxFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MaxFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::Min	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MinFirstLoc	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MinFirstLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MinLoc	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MinMax	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MinMaxFirstLastLoc	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MinMaxFirstLastLocCustomComparator	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::MinMaxLoc	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::Prod	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::StdIsPartitioned	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::StdPartitionPoint	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	Kokkos_Parallel_Reduce.hpp	/^  result_view_type view() const { return value; }$/;"	f	struct:Kokkos::Sum	typeref:typename:KOKKOS_INLINE_FUNCTION result_view_type
view	impl/Kokkos_Combined_Reducer.hpp	/^  constexpr result_view_type const& view() const noexcept {$/;"	f	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:KOKKOS_FUNCTION result_view_type const &
view_alloc	Kokkos_View.hpp	/^view_alloc(Args const&... args) {$/;"	f	namespace:Kokkos	typeref:typename:Impl::ViewCtorProp<typename Impl::ViewCtorProp<void,Args>::type...>
view_copy	Kokkos_CopyViews.hpp	/^void view_copy(const DstType& dst, const SrcType& src) {$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
view_copy	Kokkos_CopyViews.hpp	/^void view_copy(const ExecutionSpace& space, const DstType& dst,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
view_ctor_prop_args	impl/Kokkos_ViewCtor.hpp	/^using view_ctor_prop_args = ViewCtorProp<Args...>;$/;"	t	namespace:Kokkos::Impl	typeref:typename:ViewCtorProp<Args...>
view_ctor_prop_base	impl/Kokkos_ViewCtor.hpp	/^using view_ctor_prop_base = ViewCtorProp<void, Arg>;$/;"	t	namespace:Kokkos::Impl	typeref:typename:ViewCtorProp<void,Arg>
view_tracker_type	Kokkos_View.hpp	/^  using view_tracker_type = Kokkos::Impl::ViewTracker<View>;$/;"	t	class:Kokkos::View	typeref:typename:Kokkos::Impl::ViewTracker<View>
view_traits	impl/Kokkos_ViewTracker.hpp	/^  using view_traits = typename ParentView::traits;$/;"	t	struct:Kokkos::Impl::ViewTracker	typeref:typename:ParentView::traits
view_type	Kokkos_CopyViews.hpp	/^  using view_type        = Kokkos::View<T, P...>;$/;"	t	function:Kokkos::impl_realloc	typeref:typename:Kokkos::View<T,P...>
view_type	Kokkos_CopyViews.hpp	/^  using view_type        = Kokkos::View<T, P...>;$/;"	t	function:Kokkos::impl_resize	typeref:typename:Kokkos::View<T,P...>
view_type	Kokkos_CopyViews.hpp	/^  using view_type = Kokkos::View<data_type, array_layout, Space>;$/;"	t	struct:Kokkos::Impl::MirrorType	typeref:typename:Kokkos::View<data_type,array_layout,Space>
view_type	Kokkos_CopyViews.hpp	/^  using view_type =$/;"	t	struct:Kokkos::Impl::MirrorViewType	typeref:typename:std::conditional_t<is_same_memspace,src_view_type,dest_view_type>
view_wrap	Kokkos_View.hpp	/^    view_wrap(Args const&... args) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_INLINE_FUNCTION Impl::ViewCtorProp<typename Impl::ViewCtorProp<void,Args>::type...>
vla_base_t	impl/Kokkos_TaskNode.hpp	/^  using vla_base_t =$/;"	t	class:Kokkos::Impl::AggregateTask	typeref:typename:ObjectWithVLAEmulation<AggregateTask<TaskQueueTraits,SchedulingInfo>,OwningRawPtr<TaskNode<TaskQueueTraits>>>
vla_emulation_base	impl/Kokkos_TaskQueueMemoryManager.hpp	/^    using vla_emulation_base = ObjectWithVLAEmulation<T, VLAValueType>;$/;"	t	function:Kokkos::Impl::TaskQueueMemoryManager::allocate_and_construct_with_vla_emulation	typeref:typename:ObjectWithVLAEmulation<T,VLAValueType>
vla_emulation_base_t	impl/Kokkos_MultipleTaskQueue.hpp	/^  using vla_emulation_base_t = ObjectWithVLAEmulation<$/;"	t	class:Kokkos::Impl::MultipleTaskQueue	typeref:typename:ObjectWithVLAEmulation<MultipleTaskQueue<ExecSpace,MemorySpace,TaskQueueTraits,MemoryPool>,MultipleTaskQueueTeamEntry<TaskQueueTraits>>
vla_entry_count_type	impl/Kokkos_VLAEmulation.hpp	/^  using vla_entry_count_type = EntryCountType;$/;"	t	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:EntryCountType
vla_value_at	impl/Kokkos_VLAEmulation.hpp	/^  vla_value_type const& vla_value_at(vla_entry_count_type n) const& {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION vla_value_type const &
vla_value_at	impl/Kokkos_VLAEmulation.hpp	/^  vla_value_type& vla_value_at(vla_entry_count_type n) & {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION vla_value_type &
vla_value_at	impl/Kokkos_VLAEmulation.hpp	/^  vla_value_type& vla_value_at(vla_entry_count_type n) && {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION vla_value_type &
vla_value_type	impl/Kokkos_VLAEmulation.hpp	/^  using vla_value_type       = VLAValueType;$/;"	t	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:VLAValueType
void_t	impl/Kokkos_Utilities.hpp	/^using void_t = void;$/;"	t	namespace:Kokkos::Impl	typeref:typename:void
void_tag	impl/Kokkos_FunctorAnalysis.hpp	/^  struct void_tag {};$/;"	s	struct:Kokkos::Impl::FunctorAnalysis
volatile_load	impl/Kokkos_Volatile_Load.hpp	/^KOKKOS_FORCEINLINE_FUNCTION T volatile_load(T const volatile* const src_ptr) {$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION T
volatile_store	impl/Kokkos_Volatile_Load.hpp	/^KOKKOS_FORCEINLINE_FUNCTION void volatile_store($/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
volatile_store	impl/Kokkos_Volatile_Load.hpp	/^KOKKOS_FORCEINLINE_FUNCTION void volatile_store(T volatile* const dst_ptr,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
volatile_store	impl/Kokkos_Volatile_Load.hpp	/^KOKKOS_FORCEINLINE_FUNCTION void volatile_store(T volatile* dst_ptr,$/;"	f	namespace:Kokkos	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION void
vref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using vref_type  = volatile ValueType&;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_no_tag_function	typeref:typename:volatile ValueType &
vref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using vref_type  = volatile ValueType&;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_tag_function	typeref:typename:volatile ValueType &
vref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using vref_type  = volatile ValueType*;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_no_tag_function	typeref:typename:volatile ValueType *
vref_type	impl/Kokkos_FunctorAnalysis.hpp	/^    using vref_type  = volatile ValueType*;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_volatile_join_tag_function	typeref:typename:volatile ValueType *
wait	Kokkos_TaskScheduler.hpp	/^inline void wait(BasicTaskScheduler<ExecSpace, QueueType> const& scheduler) {$/;"	f	namespace:Kokkos	typeref:typename:void
wait	impl/Kokkos_HostBarrier.hpp	/^  static void wait(int* buffer, const int size, const int step,$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
wait	impl/Kokkos_HostBarrier.hpp	/^  void wait() const noexcept { wait(m_buffer, m_size, m_step); }$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
wait	impl/Kokkos_SimpleTaskScheduler.hpp	/^inline void wait(SimpleTaskScheduler<ExecSpace, QueueType> const& scheduler) {$/;"	f	namespace:Kokkos	typeref:typename:void
wait_idx	impl/Kokkos_HostBarrier.hpp	/^  static constexpr int wait_idx   = 96 \/ sizeof(int);$/;"	m	class:Kokkos::Impl::HostBarrier	typeref:typename:int
wait_queue_is_consumed	impl/Kokkos_TaskNode.hpp	/^  bool wait_queue_is_consumed() const noexcept {$/;"	f	class:Kokkos::Impl::TaskNode	typeref:typename:KOKKOS_INLINE_FUNCTION bool
wait_until_equal	impl/Kokkos_HostBarrier.hpp	/^  static void wait_until_equal(int* ptr, const int v,$/;"	f	class:Kokkos::Impl::HostBarrier	typeref:typename:KOKKOS_INLINE_FUNCTION void
wait_yield	Threads/Kokkos_ThreadsExec.cpp	/^void ThreadsExec::wait_yield(volatile int &flag, const int value) {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:void
waiting_queue_type	impl/Kokkos_ChaseLev.hpp	/^  using waiting_queue_type = SingleConsumeOperationLIFO<Task>;$/;"	t	struct:Kokkos::Impl::TaskQueueTraitsChaseLev	typeref:typename:SingleConsumeOperationLIFO<Task>
waiting_queue_type	impl/Kokkos_LIFO.hpp	/^  using waiting_queue_type = SingleConsumeOperationLIFO<Task>;$/;"	t	struct:Kokkos::Impl::TaskQueueTraitsLockBased	typeref:typename:SingleConsumeOperationLIFO<Task>
waiting_queue_type	impl/Kokkos_TaskNode.hpp	/^  using waiting_queue_type =$/;"	t	class:Kokkos::Impl::TaskNode	typeref:typename:task_queue_traits::template waiting_queue_type<TaskNode>
wake	Threads/Kokkos_ThreadsExec.cpp	/^bool ThreadsExec::wake() {$/;"	f	class:Kokkos::Impl::ThreadsExec	typeref:typename:bool
warn_cmd_line_arg_ignored_when_kokkos_tools_disabled	impl/Kokkos_Profiling.cpp	/^void warn_cmd_line_arg_ignored_when_kokkos_tools_disabled(char const* arg) {$/;"	f	namespace:__anon67a5d9920110	typeref:typename:void
warn_deprecated_command_line_argument	impl/Kokkos_Command_Line_Parsing.cpp	/^void Kokkos::Impl::warn_deprecated_command_line_argument($/;"	f	class:Kokkos::Impl	typeref:typename:void
warn_deprecated_environment_variable	impl/Kokkos_Command_Line_Parsing.cpp	/^void Kokkos::Impl::warn_deprecated_environment_variable($/;"	f	class:Kokkos::Impl	typeref:typename:void
warn_env_var_ignored_when_kokkos_tools_disabled	impl/Kokkos_Profiling.cpp	/^void warn_env_var_ignored_when_kokkos_tools_disabled(char const* env_var,$/;"	f	namespace:__anon67a5d9920110	typeref:typename:void
warn_not_recognized_command_line_argument	impl/Kokkos_Command_Line_Parsing.cpp	/^void Kokkos::Impl::warn_not_recognized_command_line_argument($/;"	f	class:Kokkos::Impl	typeref:typename:void
warp_align	Cuda/Kokkos_Cuda_Instance.hpp	/^  KOKKOS_INLINE_FUNCTION static CudaSpace::size_type warp_align($/;"	f	struct:Kokkos::Impl::CudaTraits	typeref:typename:KOKKOS_INLINE_FUNCTION CudaSpace::size_type
warp_count	Cuda/Kokkos_Cuda_Instance.hpp	/^  KOKKOS_INLINE_FUNCTION static CudaSpace::size_type warp_count($/;"	f	struct:Kokkos::Impl::CudaTraits	typeref:typename:KOKKOS_INLINE_FUNCTION CudaSpace::size_type
was_finalized	Cuda/Kokkos_Cuda_Instance.hpp	/^  bool was_finalized   = false;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:bool
was_finalized	HIP/Kokkos_HIP_Instance.hpp	/^  bool was_finalized = false;$/;"	m	class:Kokkos::Experimental::Impl::HIPInternal	typeref:typename:bool
was_finalized	SYCL/Kokkos_SYCL_Instance.hpp	/^  bool was_finalized = false;$/;"	m	class:Kokkos::Experimental::Impl::SYCLInternal	typeref:typename:bool
was_initialized	Cuda/Kokkos_Cuda_Instance.hpp	/^  bool was_initialized = false;$/;"	m	class:Kokkos::Impl::CudaInternal	typeref:typename:bool
what	impl/Kokkos_Error.hpp	/^  const char *what() const noexcept override {$/;"	f	class:Kokkos::Experimental::RawMemoryAllocationFailure	typeref:typename:KOKKOS_ATTRIBUTE_NODISCARD const char *
when_all	Kokkos_Graph.hpp	/^auto when_all(PredecessorRefs&&... arg_pred_refs) {$/;"	f	namespace:Kokkos::Experimental	typeref:typename:auto
when_all	Kokkos_TaskScheduler.hpp	/^  KOKKOS_FUNCTION BasicFuture<void, scheduler_type> when_all($/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION BasicFuture<void,scheduler_type>
when_all	Kokkos_TaskScheduler.hpp	/^  KOKKOS_FUNCTION BasicFuture<void, scheduler_type> when_all(int narg,$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION BasicFuture<void,scheduler_type>
when_all	impl/Kokkos_SimpleTaskScheduler.hpp	/^  KOKKOS_FUNCTION future_type<void> when_all($/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_FUNCTION future_type<void>
when_all	impl/Kokkos_SimpleTaskScheduler.hpp	/^  KOKKOS_FUNCTION future_type<void> when_all(int n_calls, F&& func) {$/;"	f	class:Kokkos::SimpleTaskScheduler	typeref:typename:KOKKOS_FUNCTION future_type<void>
when_all_allocation_size	Kokkos_TaskScheduler.hpp	/^  size_t when_all_allocation_size(int narg) const {$/;"	f	class:Kokkos::BasicTaskScheduler	typeref:typename:KOKKOS_FUNCTION size_t
when_all_allocation_size	impl/Kokkos_TaskQueue.hpp	/^  size_t when_all_allocation_size(int narg) const {$/;"	f	class:Kokkos::Impl::TaskQueue	typeref:typename:KOKKOS_FUNCTION size_t
work_item_property	Kokkos_Concepts.hpp	/^    using work_item_property    = ImplWorkItemProperty<Property>;$/;"	t	struct:Kokkos::Experimental::WorkItemProperty::ImplWorkItemProperty	typeref:typename:ImplWorkItemProperty<Property>
work_item_property	traits/Kokkos_WorkItemPropertyTrait.hpp	/^    using work_item_property = Kokkos::Experimental::WorkItemProperty::None_t;$/;"	t	struct:Kokkos::Impl::WorkItemPropertyTrait::base_traits	typeref:typename:Kokkos::Experimental::WorkItemProperty::None_t
work_item_property	traits/Kokkos_WorkItemPropertyTrait.hpp	/^    using work_item_property = WorkItemProp;$/;"	t	struct:Kokkos::Impl::WorkItemPropertyTrait::mixin_matching_trait	typeref:typename:WorkItemProp
work_tag	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using work_tag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
work_tag	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using work_tag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Policy::work_tag
work_tag	KokkosExp_MDRangePolicy.hpp	/^  using work_tag          = typename traits::work_tag;$/;"	t	struct:Kokkos::MDRangePolicy	typeref:typename:traits::work_tag
work_tag	Kokkos_ExecPolicy.hpp	/^    using work_tag    = typename RangePolicy<Properties...>::work_tag;$/;"	t	struct:Kokkos::RangePolicy::WorkRange	typeref:typename:RangePolicy<Properties...>::work_tag
work_tag	SYCL/Kokkos_SYCL_Parallel_Team.hpp	/^  using work_tag      = typename Policy::work_tag;$/;"	t	class:Kokkos::Impl::ParallelFor	typeref:typename:Policy::work_tag
work_tag	impl/Kokkos_Tools_Generic.hpp	/^      using work_tag    = typename policy_type::work_tag;$/;"	t	function:Kokkos::Tools::Experimental::Impl::generic_report_results	typeref:typename:policy_type::work_tag
work_tag	impl/Kokkos_Tools_Generic.hpp	/^      using work_tag    = typename policy_type::work_tag;$/;"	t	function:Kokkos::Tools::Experimental::Impl::generic_tune_policy	typeref:typename:policy_type::work_tag
work_tag	traits/Kokkos_WorkTagTrait.hpp	/^    using work_tag = WorkTag;$/;"	t	struct:Kokkos::Impl::WorkTagTrait::mixin_matching_trait	typeref:typename:WorkTag
work_tag	traits/Kokkos_WorkTagTrait.hpp	/^    using work_tag = void;$/;"	t	struct:Kokkos::Impl::WorkTagTrait::base_traits	typeref:typename:void
work_tag_fwd	HIP/Kokkos_HIP_Parallel_Team.hpp	/^  using work_tag_fwd =$/;"	t	class:Kokkos::Impl::ParallelReduce	typeref:typename:Kokkos::Impl::if_c<std::is_same<InvalidType,ReducerType>::value,work_tag,void>::type
workgroup_reduction	SYCL/Kokkos_SYCL_Parallel_Reduce.hpp	/^std::enable_if_t<use_shuffle_based_algorithm<ReducerType>> workgroup_reduction($/;"	f	namespace:Kokkos::Impl::SYCLReduction	typeref:typename:std::enable_if_t<use_shuffle_based_algorithm<ReducerType>>
workgroup_scan	SYCL/Kokkos_SYCL_Parallel_Scan.hpp	/^void workgroup_scan(sycl::nd_item<dim> item, const FunctorType& final_reducer,$/;"	f	namespace:Kokkos::Impl	typeref:typename:void
write_one_value_back	impl/Kokkos_Combined_Reducer.hpp	/^  static void write_one_value_back($/;"	f	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:void
write_value_back_to_original_references	impl/Kokkos_Combined_Reducer.hpp	/^  static void write_value_back_to_original_references($/;"	f	struct:Kokkos::Impl::CombinedReducerImpl	typeref:typename:void
wtag	impl/Kokkos_FunctorAnalysis.hpp	/^    using wtag = typename P::work_tag;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_work_tag	typeref:typename:P::work_tag
wtag	impl/Kokkos_FunctorAnalysis.hpp	/^    using wtag = void_tag;$/;"	t	struct:Kokkos::Impl::FunctorAnalysis::has_work_tag	typeref:typename:void_tag
x	impl/KokkosExp_IterateTileGPU.hpp	/^  index_type x;$/;"	m	struct:Kokkos::Impl::EmulateCUDADim3	typeref:typename:index_type
y	impl/KokkosExp_IterateTileGPU.hpp	/^  index_type y;$/;"	m	struct:Kokkos::Impl::EmulateCUDADim3	typeref:typename:index_type
yes	Kokkos_Threads.hpp	/^enum class fence_is_static { yes, no };$/;"	e	enum:Kokkos::Impl::fence_is_static
yes	Kokkos_View.hpp	/^  enum class check_input_args : bool { yes = true, no = false };$/;"	e	enum:Kokkos::View::check_input_args
yes	OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp	/^enum class openmp_fence_is_static { yes, no };$/;"	e	enum:Kokkos::Experimental::Impl::openmp_fence_is_static
yield_until_equal	impl/Kokkos_Spinwait.hpp	/^std::enable_if_t<std::is_integral<T>::value, void> yield_until_equal($/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<std::is_integral<T>::value,void>
yield_while_equal	impl/Kokkos_Spinwait.hpp	/^std::enable_if_t<std::is_integral<T>::value, void> yield_while_equal($/;"	f	namespace:Kokkos::Impl	typeref:typename:std::enable_if_t<std::is_integral<T>::value,void>
z	impl/KokkosExp_IterateTileGPU.hpp	/^  index_type z;$/;"	m	struct:Kokkos::Impl::EmulateCUDADim3	typeref:typename:index_type
~AcquireTeamUniqueToken	Kokkos_AcquireUniqueTokenImpl.hpp	/^KOKKOS_FUNCTION AcquireTeamUniqueToken<TeamPolicy>::~AcquireTeamUniqueToken() {$/;"	f	class:Kokkos::Experimental::AcquireTeamUniqueToken	typeref:typename:KOKKOS_FUNCTION
~AcquireUniqueToken	Kokkos_UniqueToken.hpp	/^  KOKKOS_FUNCTION ~AcquireUniqueToken() { my_token.release(my_acquired_val); }$/;"	f	class:Kokkos::Experimental::AcquireUniqueToken	typeref:typename:KOKKOS_FUNCTION
~BasicFuture	Kokkos_Future.hpp	/^  ~BasicFuture() { clear(); }$/;"	f	class:Kokkos::BasicFuture	typeref:typename:KOKKOS_INLINE_FUNCTION
~CudaInternal	Cuda/Kokkos_Cuda_Instance.cpp	/^CudaInternal::~CudaInternal() {$/;"	f	class:Kokkos::Impl::CudaInternal
~GraphImpl	Cuda/Kokkos_Cuda_Graph_Impl.hpp	/^  ~GraphImpl() {$/;"	f	struct:Kokkos::Impl::GraphImpl
~GraphNodeKernelImpl	Cuda/Kokkos_Cuda_GraphNodeKernel.hpp	/^  ~GraphNodeKernelImpl() {$/;"	f	class:Kokkos::Impl::GraphNodeKernelImpl
~HIPInternal	HIP/Kokkos_HIP_Instance.cpp	/^HIPInternal::~HIPInternal() {$/;"	f	class:Kokkos::Experimental::Impl::HIPInternal
~HostSharedPtr	impl/Kokkos_HostSharedPtr.hpp	/^  KOKKOS_FUNCTION ~HostSharedPtr() { cleanup(); }$/;"	f	class:Kokkos::Impl::HostSharedPtr	typeref:typename:KOKKOS_FUNCTION
~HostThreadTeamDataSingleton	OpenMP/Kokkos_OpenMP_Task.cpp	/^HostThreadTeamDataSingleton::~HostThreadTeamDataSingleton() {$/;"	f	class:Kokkos::Impl::HostThreadTeamDataSingleton
~LeagueQueueCollection	impl/Kokkos_TaskQueueMultiple.hpp	/^  ~LeagueQueueCollection() {$/;"	f	class:Kokkos::Impl::LeagueQueueCollection
~MasterLock	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  ~MasterLock() { omp_destroy_lock(&m_lock); }$/;"	f	class:Kokkos::Experimental::MasterLock
~ObjectWithVLAEmulation	impl/Kokkos_VLAEmulation.hpp	/^  ~ObjectWithVLAEmulation() {$/;"	f	struct:Kokkos::Impl::ObjectWithVLAEmulation	typeref:typename:KOKKOS_INLINE_FUNCTION
~OpenMPInternal	OpenMP/Kokkos_OpenMP_Instance.hpp	/^  ~OpenMPInternal() { clear_thread_data(); }$/;"	f	class:Kokkos::Impl::OpenMPInternal
~ParallelFor	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  ~ParallelFor() {$/;"	f	class:Kokkos::Impl::ParallelFor
~ParallelReduce	Cuda/Kokkos_Cuda_Parallel_Team.hpp	/^  ~ParallelReduce() {$/;"	f	class:Kokkos::Impl::ParallelReduce
~ProfilingSection	Kokkos_Profiling_ProfileSection.hpp	/^  ~ProfilingSection() {$/;"	f	class:Kokkos::Profiling::ProfilingSection
~SYCLInternal	SYCL/Kokkos_SYCL_Instance.cpp	/^SYCLInternal::~SYCLInternal() {$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal
~ScopeGuard	Kokkos_Core.hpp	/^  ~ScopeGuard() {$/;"	f	class:Kokkos::ScopeGuard
~Sentinel	Threads/Kokkos_ThreadsExec.cpp	/^  ~Sentinel() {$/;"	f	struct:Kokkos::Impl::__anon54e346b10110::Sentinel	file:
~Sentinel	impl/Kokkos_hwloc.cpp	/^Sentinel::~Sentinel() {$/;"	f	class:Kokkos::hwloc::__anonec54cfc50110::Sentinel
~SharedAllocationRecord	Cuda/Kokkos_CudaSpace.cpp	/^                       void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::CudaHostPinnedSpace
~SharedAllocationRecord	Cuda/Kokkos_CudaSpace.cpp	/^SharedAllocationRecord<Kokkos::CudaSpace, void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::CudaSpace
~SharedAllocationRecord	Cuda/Kokkos_CudaSpace.cpp	/^SharedAllocationRecord<Kokkos::CudaUVMSpace, void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::CudaUVMSpace
~SharedAllocationRecord	HIP/Kokkos_HIP_Space.cpp	/^                       void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HIPHostPinnedSpace
~SharedAllocationRecord	HIP/Kokkos_HIP_Space.cpp	/^                       void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HIPManagedSpace
~SharedAllocationRecord	HIP/Kokkos_HIP_Space.cpp	/^                       void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HIPSpace
~SharedAllocationRecord	Kokkos_LogicalSpaces.hpp	/^  ~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord
~SharedAllocationRecord	OpenACC/Kokkos_OpenACCSpace.cpp	/^                                     void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::OpenACCSpace
~SharedAllocationRecord	OpenMPTarget/Kokkos_OpenMPTargetSpace.cpp	/^                       void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::OpenMPTargetSpace
~SharedAllocationRecord	SYCL/Kokkos_SYCL_Space.cpp	/^                       void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::SYCLDeviceUSMSpace
~SharedAllocationRecord	SYCL/Kokkos_SYCL_Space.cpp	/^                       void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::SYCLHostUSMSpace
~SharedAllocationRecord	SYCL/Kokkos_SYCL_Space.cpp	/^                       void>::~SharedAllocationRecord() {$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::SYCLSharedUSMSpace
~SharedAllocationRecord	impl/Kokkos_HBWSpace.cpp	/^                       void>::~SharedAllocationRecord()$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::Experimental::HBWSpace
~SharedAllocationRecord	impl/Kokkos_HostSpace.cpp	/^SharedAllocationRecord<Kokkos::HostSpace, void>::~SharedAllocationRecord()$/;"	f	class:Kokkos::Impl::SharedAllocationRecord::HostSpace
~SharedAllocationTracker	impl/Kokkos_SharedAlloc.hpp	/^  ~SharedAllocationTracker(){KOKKOS_IMPL_SHARED_ALLOCATION_TRACKER_DECREMENT}$/;"	f	union:Kokkos::Impl::SharedAllocationTracker	typeref:typename:KOKKOS_FORCEINLINE_FUNCTION
~SingleTaskQueue	impl/Kokkos_SingleTaskQueue.hpp	/^  ~SingleTaskQueue() {$/;"	f	class:Kokkos::Impl::SingleTaskQueue
~TaskQueue	impl/Kokkos_TaskQueue_impl.hpp	/^TaskQueue<ExecSpace, MemorySpace>::~TaskQueue() {$/;"	f	class:Kokkos::Impl::TaskQueue
~TaskQueueCommonMixin	impl/Kokkos_TaskQueueCommon.hpp	/^  ~TaskQueueCommonMixin() {$/;"	f	class:Kokkos::Impl::TaskQueueCommonMixin
~TaskQueueMultiple	impl/Kokkos_TaskQueueMultiple.hpp	/^  ~TaskQueueMultiple() {$/;"	f	class:Kokkos::Impl::TaskQueueMultiple
~ThreadsExec	Threads/Kokkos_ThreadsExec.cpp	/^ThreadsExec::~ThreadsExec() {$/;"	f	class:Kokkos::Impl::ThreadsExec
~TrivialWrapper	SYCL/Kokkos_SYCL_Instance.hpp	/^    ~TrivialWrapper(){};$/;"	f	union:Kokkos::Experimental::Impl::SYCLFunctionWrapper::TrivialWrapper
~USMObjectMem	SYCL/Kokkos_SYCL_Instance.hpp	/^    ~USMObjectMem() { reset(); };$/;"	f	class:Kokkos::Experimental::Impl::SYCLInternal::USMObjectMem
~optional_queue	impl/Kokkos_TaskQueueMultiple.hpp	/^    ~optional_queue() { uninitialized = 0; }$/;"	f	union:Kokkos::Impl::LeagueQueueCollection::optional_queue	typeref:typename:KOKKOS_INLINE_FUNCTION
~reset_count_on_exit_parallel	Kokkos_HPX.hpp	/^    ~reset_count_on_exit_parallel() {$/;"	f	struct:Kokkos::Experimental::HPX::reset_count_on_exit_parallel
~reset_count_on_exit_parallel	Kokkos_HPX.hpp	/^    ~reset_count_on_exit_parallel() {}$/;"	f	struct:Kokkos::Experimental::HPX::reset_count_on_exit_parallel
~reset_on_exit_parallel	Kokkos_HPX.hpp	/^    ~reset_on_exit_parallel() {$/;"	f	struct:Kokkos::Experimental::HPX::reset_on_exit_parallel
~reset_on_exit_parallel	Kokkos_HPX.hpp	/^    ~reset_on_exit_parallel() {}$/;"	f	struct:Kokkos::Experimental::HPX::reset_on_exit_parallel
~thread_buffer	Kokkos_HPX.hpp	/^  ~thread_buffer() { delete[] m_data; }$/;"	f	class:Kokkos::Impl::thread_buffer
~value_type_wrapper	Kokkos_HPX.hpp	/^    ~value_type_wrapper() { delete[] m_value_buffer; }$/;"	f	class:Kokkos::Impl::ParallelReduce::value_type_wrapper
